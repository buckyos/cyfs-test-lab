{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","universal_hash","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=4b1171dd098722aa","-C","extra-filename=-4b1171dd098722aa","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--extern","generic_array=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libgeneric_array-15e005804be76612.rmeta","--extern","subtle=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libsubtle-e8b797d05e61e9d6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libuniversal_hash-4b1171dd098722aa.rmeta"},"prelude":{"crate_id":{"name":"universal_hash","disambiguator":[3243468432756540675,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[12382488001316959323,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":5,"id":{"name":"typenum","disambiguator":[5371539035448183228,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":6,"id":{"name":"subtle","disambiguator":[7465084063849418202,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":7,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":8,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":9,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":10,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":11,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":12,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":14,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":15,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":16,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":0,"byte_end":5574,"line_start":1,"line_end":184,"column_start":1,"column_end":36}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1222,"byte_end":1235,"line_start":32,"line_end":32,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":2827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1253,"byte_end":1259,"line_start":32,"line_end":32,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":0,"byte_end":5574,"line_start":1,"line_end":184,"column_start":1,"column_end":36},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":62}],"decl_id":null,"docs":" Traits for [Universal Hash Functions].","sig":null,"attributes":[{"value":"/ Traits for [Universal Hash Functions].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":43,"byte_end":46,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # About universal hashes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":47,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Universal hash functions provide a \"universal family\" of possible","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":80,"byte_end":149,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ hash functions where a given member of a family is selected by a key.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":150,"byte_end":223,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":224,"byte_end":227,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ They are well suited to the purpose of \"one time authenticators\" for a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":228,"byte_end":302,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ sequence of bytestring inputs, as their construction has a number of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":303,"byte_end":375,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ desirable properties such as pairwise independence as well as amenability","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":376,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ to efficient implementations, particularly when implemented using SIMD","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":454,"byte_end":528,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ instructions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":529,"byte_end":546,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":547,"byte_end":550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When combined with a cipher, such as in Galois/Counter Mode (GCM) or the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":551,"byte_end":627,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ Salsa20 family AEAD constructions, they can provide the core functionality","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":628,"byte_end":706,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ for a Message Authentication Code (MAC).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":707,"byte_end":751,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":752,"byte_end":755,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [Universal Hash Functions]: https://en.wikipedia.org/wiki/Universal_hashing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":756,"byte_end":835,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":837,"byte_end":847,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":848,"byte_end":871,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1129,"byte_end":1169,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1430,"byte_end":1433,"line_start":39,"line_end":39,"column_start":10,"column_end":13},"name":"Key","qualname":"::Key","value":"GenericArray<u8, <U as NewUniversalHash>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Keys to a [`UniversalHash`].\n","sig":null,"attributes":[{"value":"/ Keys to a [`UniversalHash`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1388,"byte_end":1420,"line_start":38,"line_end":38,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1547,"byte_end":1552,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"name":"Block","qualname":"::Block","value":"GenericArray<u8, <U as UniversalHash>::BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Blocks are inputs to a [`UniversalHash`].\n","sig":null,"attributes":[{"value":"/ Blocks are inputs to a [`UniversalHash`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1492,"byte_end":1537,"line_start":41,"line_end":41,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1667,"byte_end":1683,"line_start":45,"line_end":45,"column_start":11,"column_end":27},"name":"NewUniversalHash","qualname":"::NewUniversalHash","value":"NewUniversalHash: Sized","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Instantiate a [`UniversalHash`] algorithm.\n","sig":null,"attributes":[{"value":"/ Instantiate a [`UniversalHash`] algorithm.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1610,"byte_end":1656,"line_start":44,"line_end":44,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1759,"byte_end":1766,"line_start":47,"line_end":47,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::NewUniversalHash::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Size of the key for the universal hash function.\n","sig":null,"attributes":[{"value":"/ Size of the key for the universal hash function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1697,"byte_end":1749,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1859,"byte_end":1862,"line_start":50,"line_end":50,"column_start":8,"column_end":11},"name":"new","qualname":"::NewUniversalHash::new","value":"pub fn new(&Key<Self>) -> Self","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Instantiate a universal hash function with the given key.\n","sig":null,"attributes":[{"value":"/ Instantiate a universal hash function with the given key.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1790,"byte_end":1851,"line_start":49,"line_end":49,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1996,"byte_end":2009,"line_start":55,"line_end":55,"column_start":11,"column_end":24},"name":"UniversalHash","qualname":"::UniversalHash","value":"UniversalHash: Clone","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" The [`UniversalHash`] trait defines a generic interface for universal hash\n functions.\n","sig":null,"attributes":[{"value":"/ The [`UniversalHash`] trait defines a generic interface for universal hash","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1892,"byte_end":1970,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1971,"byte_end":1985,"line_start":54,"line_end":54,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2103,"byte_end":2112,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::UniversalHash::BlockSize","value":"type BlockSize: ArrayLength<u8>;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Size of the inputs to and outputs from the universal hash function\n","sig":null,"attributes":[{"value":"/ Size of the inputs to and outputs from the universal hash function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2023,"byte_end":2093,"line_start":56,"line_end":56,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2194,"byte_end":2200,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"update","qualname":"::UniversalHash::update","value":"pub fn update(&mut Self, &Block<Self>)","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Input a block into the universal hash function\n","sig":null,"attributes":[{"value":"/ Input a block into the universal hash function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2136,"byte_end":2186,"line_start":59,"line_end":59,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2583,"byte_end":2596,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"update_padded","qualname":"::UniversalHash::update_padded","value":"pub fn update_padded(&mut Self, &[u8])","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Input data into the universal hash function. If the length of the\n data is not a multiple of the block size, the remaining data is\n padded with zeroes up to the `BlockSize`.","sig":null,"attributes":[{"value":"/ Input data into the universal hash function. If the length of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2239,"byte_end":2308,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ data is not a multiple of the block size, the remaining data is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2313,"byte_end":2380,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"/ padded with zeroes up to the `BlockSize`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2385,"byte_end":2430,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2435,"byte_end":2438,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This approach is frequently used by AEAD modes which use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2443,"byte_end":2503,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ Message Authentication Codes (MACs) based on universal hashing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2508,"byte_end":2575,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3095,"byte_end":3100,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"reset","qualname":"::UniversalHash::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Reset [`UniversalHash`] instance.\n","sig":null,"attributes":[{"value":"/ Reset [`UniversalHash`] instance.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3050,"byte_end":3087,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3199,"byte_end":3207,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"finalize","qualname":"::UniversalHash::finalize","value":"pub fn finalize(Self) -> Output<Self>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Obtain the [`Output`] of a [`UniversalHash`] function and consume it.\n","sig":null,"attributes":[{"value":"/ Obtain the [`Output`] of a [`UniversalHash`] function and consume it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3118,"byte_end":3191,"line_start":87,"line_end":87,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3352,"byte_end":3366,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"finalize_reset","qualname":"::UniversalHash::finalize_reset","value":"pub fn finalize_reset(&mut Self) -> Output<Self>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Obtain the [`Output`] of a [`UniversalHash`] computation and reset it back\n to its initial state.\n","sig":null,"attributes":[{"value":"/ Obtain the [`Output`] of a [`UniversalHash`] computation and reset it back","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3236,"byte_end":3314,"line_start":90,"line_end":90,"column_start":5,"column_end":83}},{"value":"/ to its initial state.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3319,"byte_end":3344,"line_start":91,"line_end":91,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3691,"byte_end":3697,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"verify","qualname":"::UniversalHash::verify","value":"pub fn verify(Self, &Block<Self>) -> Result<(), Error>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Verify the [`UniversalHash`] of the processed input matches a given [`Output`].\n This is useful when constructing Message Authentication Codes (MACs)\n from universal hash functions.\n","sig":null,"attributes":[{"value":"/ Verify the [`UniversalHash`] of the processed input matches a given [`Output`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3484,"byte_end":3567,"line_start":98,"line_end":98,"column_start":5,"column_end":88}},{"value":"/ This is useful when constructing Message Authentication Codes (MACs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3572,"byte_end":3644,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ from universal hash functions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3649,"byte_end":3683,"line_start":100,"line_end":100,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4160,"byte_end":4166,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Output","qualname":"::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":" Outputs of universal hash functions which are a thin wrapper around a\n byte array. Provides a safe [`Eq`] implementation that runs in constant time,\n which is useful for implementing Message Authentication Codes (MACs) based\n on universal hashing.\n","sig":null,"attributes":[{"value":"/ Outputs of universal hash functions which are a thin wrapper around a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3871,"byte_end":3944,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ byte array. Provides a safe [`Eq`] implementation that runs in constant time,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":3945,"byte_end":4026,"line_start":111,"line_end":111,"column_start":1,"column_end":82}},{"value":"/ which is useful for implementing Message Authentication Codes (MACs) based","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4027,"byte_end":4105,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/ on universal hashing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4106,"byte_end":4131,"line_start":113,"line_end":113,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4331,"byte_end":4334,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<Output<U>>::new","value":"pub fn new(Block<U>) -> Output<U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Output`] block.\n","sig":null,"attributes":[{"value":"/ Create a new [`Output`] block.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4285,"byte_end":4319,"line_start":123,"line_end":123,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4465,"byte_end":4475,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Output<U>>::into_bytes","value":"pub fn into_bytes(Self) -> Block<U>","parent":null,"children":[],"decl_id":null,"docs":" Get the inner [`GenericArray`] this type wraps\n","sig":null,"attributes":[{"value":"/ Get the inner [`GenericArray`] this type wraps","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4403,"byte_end":4453,"line_start":128,"line_end":128,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5344,"byte_end":5349,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for when the [`Output`] of a [`UniversalHash`]\n is not equal to the expected value.\n","sig":null,"attributes":[{"value":"/ Error type for when the [`Output`] of a [`UniversalHash`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5177,"byte_end":5238,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"/ is not equal to the expected value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5239,"byte_end":5278,"line_start":173,"line_end":173,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4241,"byte_end":4247,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4551,"byte_end":4557,"line_start":134,"line_end":134,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4699,"byte_end":4705,"line_start":143,"line_end":143,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4847,"byte_end":4853,"line_start":152,"line_end":152,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5003,"byte_end":5009,"line_start":161,"line_end":161,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5163,"byte_end":5169,"line_start":170,"line_end":170,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5380,"byte_end":5385,"line_start":177,"line_end":177,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":1685,"byte_end":1690,"line_start":45,"line_end":45,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":32}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":2011,"byte_end":2016,"line_start":55,"line_end":55,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":35}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4241,"byte_end":4247,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4551,"byte_end":4557,"line_start":134,"line_end":134,"column_start":28,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":64},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4699,"byte_end":4705,"line_start":143,"line_end":143,"column_start":36,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":4847,"byte_end":4853,"line_start":152,"line_end":152,"column_start":28,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":64},"to":{"krate":6,"index":58}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5003,"byte_end":5009,"line_start":161,"line_end":161,"column_start":23,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":64},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5163,"byte_end":5169,"line_start":170,"line_end":170,"column_start":31,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":64},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.4.1\\src\\lib.rs","byte_start":5380,"byte_end":5385,"line_start":177,"line_end":177,"column_start":29,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":70},"to":{"krate":1,"index":9692}}]}