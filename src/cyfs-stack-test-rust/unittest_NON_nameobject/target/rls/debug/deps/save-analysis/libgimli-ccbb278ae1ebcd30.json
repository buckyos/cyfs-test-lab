{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gimli","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"read\"","--cfg","feature=\"read-core\"","-C","metadata=ccbb278ae1ebcd30","-C","extra-filename=-ccbb278ae1ebcd30","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libgimli-ccbb278ae1ebcd30.rmeta"},"prelude":{"crate_id":{"name":"gimli","disambiguator":[10593244937273508381,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":0,"byte_end":2194,"line_start":1,"line_end":76,"column_start":1,"column_end":15}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1762,"byte_end":1763,"line_start":52,"line_end":52,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Format","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1797,"byte_end":1798,"line_start":55,"line_end":55,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1871,"byte_end":1872,"line_start":59,"line_end":59,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1917,"byte_end":1926,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1917,"byte_end":1926,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1928,"byte_end":1937,"line_start":62,"line_end":62,"column_start":39,"column_end":48},"alias_span":null,"name":"Endianity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6016},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1939,"byte_end":1951,"line_start":62,"line_end":62,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6017},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1939,"byte_end":1951,"line_start":62,"line_end":62,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1953,"byte_end":1965,"line_start":62,"line_end":62,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1953,"byte_end":1965,"line_start":62,"line_end":62,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1967,"byte_end":1980,"line_start":62,"line_end":62,"column_start":78,"column_end":91},"alias_span":null,"name":"RunTimeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100670,"byte_end":100671,"line_start":181,"line_end":181,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100704,"byte_end":100705,"line_start":184,"line_end":184,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugAddr","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100736,"byte_end":100737,"line_start":187,"line_end":187,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"UnwindOffset, CallFrameInstruction","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100822,"byte_end":100823,"line_start":192,"line_end":192,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100872,"byte_end":100873,"line_start":195,"line_end":195,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"EndianSlice","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101030,"byte_end":101031,"line_start":203,"line_end":203,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"ReaderOffset, ReaderOffsetId, Reader","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101118,"byte_end":101119,"line_start":208,"line_end":208,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Abbreviations, DebugAbbrev, AttributeSpecification, Abbreviation","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101158,"byte_end":101159,"line_start":211,"line_end":211,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"DebugAranges","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101194,"byte_end":101195,"line_start":214,"line_end":214,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"UnitIndex, DebugCuIndex, DebugTuIndex, UnitIndexSectionIterator","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101278,"byte_end":101279,"line_start":219,"line_end":219,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"IncompleteLineProgram, DebugLine","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101332,"byte_end":101333,"line_start":224,"line_end":224,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"DebugLoc, LocationLists, DebugLocLists, RawLocListIter, LocListIter","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101400,"byte_end":101401,"line_start":230,"line_end":230,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Expression","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101492,"byte_end":101493,"line_start":235,"line_end":235,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101584,"byte_end":101585,"line_start":240,"line_end":240,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101626,"byte_end":101627,"line_start":243,"line_end":243,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"RangeLists, DebugRngLists, RawRngListIter, RawRange, RngListIter, Range","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101658,"byte_end":101659,"line_start":246,"line_end":246,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"DebugStrOffsets, DebugStr, DebugLineStr","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101909,"byte_end":101910,"line_start":255,"line_end":255,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"EntriesCursor, DebugInfoUnitHeadersIter, DebugInfo, UnitHeader, UnitType, EntriesRaw, DebugTypesUnitHeadersIter, EntriesTree, DebuggingInformationEntry, AttributeValue, parse_debug_info_offset, DebugTypes","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101945,"byte_end":101946,"line_start":258,"line_end":258,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Value, ValueType","parent":{"krate":0,"index":145}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":2121,"byte_end":2122,"line_start":70,"line_end":70,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"CallFrameInstruction","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":0,"byte_end":2194,"line_start":1,"line_end":76,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":145},{"krate":0,"index":3014}],"decl_id":null,"docs":" `gimli` is a library for reading and writing the\n [DWARF debugging format](https://dwarfstd.org/).","sig":null,"attributes":[{"value":"/ `gimli` is a library for reading and writing the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/ [DWARF debugging format](https://dwarfstd.org/).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":53,"byte_end":105,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":106,"byte_end":109,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See the [read](./read/index.html) and [write](./write/index.html) modules","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":110,"byte_end":187,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ for examples and API documentation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":188,"byte_end":227,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":228,"byte_end":231,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Cargo Features","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":232,"byte_end":253,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":254,"byte_end":257,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Cargo features that can be enabled with `gimli`:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":258,"byte_end":310,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":311,"byte_end":314,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `std`: Enabled by default. Use the `std` library. Disabling this feature","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":315,"byte_end":393,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ allows using `gimli` in embedded environments that do not have access to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":394,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `std`. Note that even when `std` is disabled, `gimli` still requires an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":471,"byte_end":546,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ implementation of the `alloc` crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":547,"byte_end":587,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":588,"byte_end":591,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `read`: Enabled by default. Enables the `read` module. Use of `std` is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":592,"byte_end":668,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ optional.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":669,"byte_end":682,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":683,"byte_end":686,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `write`: Enabled by default. Enables the `write` module. Always uses","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":687,"byte_end":761,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ the `std` library.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":762,"byte_end":784,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":785,"byte_end":807,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":808,"byte_end":847,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"warn(bare_trait_objects)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":889,"byte_end":917,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"warn(unused_extern_crates)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":918,"byte_end":948,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"warn(ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":949,"byte_end":992,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"warn(explicit_outlives_requirements)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1031,"byte_end":1071,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1134,"byte_end":1158,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1204,"byte_end":1245,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"allow(clippy :: never_loop)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1292,"byte_end":1321,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"allow(clippy :: panic_params)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1394,"byte_end":1425,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1426,"byte_end":1436,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2353,"byte_end":2360,"line_start":5,"line_end":5,"column_start":5,"column_end":12},"name":"Dwarf64","qualname":"::common::Format::Dwarf64","value":"Format::Dwarf64","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" 64-bit DWARF\n","sig":null,"attributes":[{"value":"/ 64-bit DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2332,"byte_end":2348,"line_start":4,"line_end":4,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2391,"byte_end":2398,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"name":"Dwarf32","qualname":"::common::Format::Dwarf32","value":"Format::Dwarf32","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" 32-bit DWARF\n","sig":null,"attributes":[{"value":"/ 32-bit DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2370,"byte_end":2386,"line_start":6,"line_end":6,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2319,"byte_end":2325,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Format","qualname":"::common::Format","value":"pub enum Format { Dwarf64 = , Dwarf32 = , }","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3019}],"decl_id":null,"docs":" Whether the format of a compilation unit is 32- or 64-bit.\n","sig":null,"attributes":[{"value":"/ Whether the format of a compilation unit is 32- or 64-bit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2196,"byte_end":2258,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2524,"byte_end":2543,"line_start":13,"line_end":13,"column_start":12,"column_end":31},"name":"initial_length_size","qualname":"<Format>::initial_length_size","value":"pub fn initial_length_size(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of an initial length field for the format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of an initial length field for the format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2425,"byte_end":2498,"line_start":11,"line_end":11,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2503,"byte_end":2512,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2742,"byte_end":2751,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"word_size","qualname":"<Format>::word_size","value":"pub fn word_size(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the natural word size for the format\n","sig":null,"attributes":[{"value":"/ Return the natural word size for the format","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2669,"byte_end":2716,"line_start":20,"line_end":20,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2721,"byte_end":2730,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3175,"byte_end":3183,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::common::Encoding","value":"Encoding { address_size, format, version }","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039}],"decl_id":null,"docs":" Encoding parameters that are commonly used for multiple DWARF sections.","sig":null,"attributes":[{"value":"/ Encoding parameters that are commonly used for multiple DWARF sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2874,"byte_end":2949,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2950,"byte_end":2953,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This is intended to be small enough to pass by value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2954,"byte_end":3011,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3153,"byte_end":3163,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3226,"byte_end":3238,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"address_size","qualname":"::common::Encoding::address_size","value":"u8","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" The size of an address.\n","sig":null,"attributes":[{"value":"/ The size of an address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3190,"byte_end":3217,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3378,"byte_end":3384,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"format","qualname":"::common::Encoding::format","value":"common::Format","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" Whether the DWARF format is 32- or 64-bit.\n","sig":null,"attributes":[{"value":"/ Whether the DWARF format is 32- or 64-bit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3323,"byte_end":3369,"line_start":43,"line_end":43,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3444,"byte_end":3451,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"version","qualname":"::common::Encoding::version","value":"u16","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" The DWARF version of the header.\n","sig":null,"attributes":[{"value":"/ The DWARF version of the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3399,"byte_end":3435,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3574,"byte_end":3586,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"LineEncoding","qualname":"::common::LineEncoding","value":"LineEncoding { minimum_instruction_length, maximum_operations_per_instruction, default_is_stmt, line_base, line_range }","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060}],"decl_id":null,"docs":" Encoding parameters for a line number program.\n","sig":null,"attributes":[{"value":"/ Encoding parameters for a line number program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3461,"byte_end":3511,"line_start":50,"line_end":50,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3667,"byte_end":3693,"line_start":54,"line_end":54,"column_start":9,"column_end":35},"name":"minimum_instruction_length","qualname":"::common::LineEncoding::minimum_instruction_length","value":"u8","parent":{"krate":0,"index":3055},"children":[],"decl_id":null,"docs":" The size in bytes of the smallest target machine instruction.\n","sig":null,"attributes":[{"value":"/ The size in bytes of the smallest target machine instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3593,"byte_end":3658,"line_start":53,"line_end":53,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3807,"byte_end":3841,"line_start":58,"line_end":58,"column_start":9,"column_end":43},"name":"maximum_operations_per_instruction","qualname":"::common::LineEncoding::maximum_operations_per_instruction","value":"u8","parent":{"krate":0,"index":3055},"children":[],"decl_id":null,"docs":" The maximum number of individual operations that may be encoded in an\n instruction.\n","sig":null,"attributes":[{"value":"/ The maximum number of individual operations that may be encoded in an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3704,"byte_end":3777,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3782,"byte_end":3798,"line_start":57,"line_end":57,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3909,"byte_end":3924,"line_start":61,"line_end":61,"column_start":9,"column_end":24},"name":"default_is_stmt","qualname":"::common::LineEncoding::default_is_stmt","value":"bool","parent":{"krate":0,"index":3055},"children":[],"decl_id":null,"docs":" The initial value of the `is_stmt` register.\n","sig":null,"attributes":[{"value":"/ The initial value of the `is_stmt` register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3852,"byte_end":3900,"line_start":60,"line_end":60,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4020,"byte_end":4029,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"line_base","qualname":"::common::LineEncoding::line_base","value":"i8","parent":{"krate":0,"index":3055},"children":[],"decl_id":null,"docs":" The minimum value which a special opcode can add to the line register.\n","sig":null,"attributes":[{"value":"/ The minimum value which a special opcode can add to the line register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":3937,"byte_end":4011,"line_start":63,"line_end":63,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4125,"byte_end":4135,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"name":"line_range","qualname":"::common::LineEncoding::line_range","value":"u8","parent":{"krate":0,"index":3055},"children":[],"decl_id":null,"docs":" The range of values which a special opcode can add to the line register.\n","sig":null,"attributes":[{"value":"/ The range of values which a special opcode can add to the line register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4040,"byte_end":4116,"line_start":66,"line_end":66,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3076},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4712,"byte_end":4720,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"Register","qualname":"::common::Register","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DWARF register number.","sig":null,"attributes":[{"value":"/ A DWARF register number.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4458,"byte_end":4486,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4487,"byte_end":4490,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The meaning of this value is ABI dependent. This is generally encoded as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4491,"byte_end":4567,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ a ULEB128, but supported architectures need 16 bits at most.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4568,"byte_end":4632,"line_start":86,"line_end":86,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4721,"byte_end":4728,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"name":"0","qualname":"::common::Register::0","value":"u16","parent":{"krate":0,"index":3076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4842,"byte_end":4859,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"DebugAbbrevOffset","qualname":"::common::DebugAbbrevOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4732,"byte_end":4779,"line_start":90,"line_end":90,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4871,"byte_end":4876,"line_start":92,"line_end":92,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugAbbrevOffset::0","value":"T","parent":{"krate":0,"index":3098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5000,"byte_end":5013,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"DebugAddrBase","qualname":"::common::DebugAddrBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4880,"byte_end":4943,"line_start":94,"line_end":94,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5025,"byte_end":5030,"line_start":96,"line_end":96,"column_start":37,"column_end":42},"name":"0","qualname":"::common::DebugAddrBase::0","value":"T","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5157,"byte_end":5171,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"DebugAddrIndex","qualname":"::common::DebugAddrIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of addresses in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5034,"byte_end":5100,"line_start":98,"line_end":98,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5183,"byte_end":5188,"line_start":100,"line_end":100,"column_start":38,"column_end":43},"name":"0","qualname":"::common::DebugAddrIndex::0","value":"T","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5297,"byte_end":5315,"line_start":104,"line_end":104,"column_start":12,"column_end":30},"name":"DebugArangesOffset","qualname":"::common::DebugArangesOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5192,"byte_end":5240,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5327,"byte_end":5332,"line_start":104,"line_end":104,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugArangesOffset::0","value":"T","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5461,"byte_end":5476,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"DebugInfoOffset","qualname":"::common::DebugInfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5336,"byte_end":5381,"line_start":106,"line_end":106,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5488,"byte_end":5493,"line_start":108,"line_end":108,"column_start":39,"column_end":44},"name":"0","qualname":"::common::DebugInfoOffset::0","value":"T","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5599,"byte_end":5614,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"DebugLineOffset","qualname":"::common::DebugLineOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5497,"byte_end":5542,"line_start":110,"line_end":110,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5626,"byte_end":5631,"line_start":112,"line_end":112,"column_start":39,"column_end":44},"name":"0","qualname":"::common::DebugLineOffset::0","value":"T","parent":{"krate":0,"index":3227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5741,"byte_end":5759,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"DebugLineStrOffset","qualname":"::common::DebugLineStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5635,"byte_end":5684,"line_start":114,"line_end":114,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3253},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5771,"byte_end":5776,"line_start":116,"line_end":116,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugLineStrOffset::0","value":"T","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5997,"byte_end":6016,"line_start":121,"line_end":121,"column_start":12,"column_end":31},"name":"LocationListsOffset","qualname":"::common::LocationListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_loc` section or the `.debug_loclists` section,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5780,"byte_end":5864,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":5865,"byte_end":5934,"line_start":119,"line_end":119,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6028,"byte_end":6033,"line_start":121,"line_end":121,"column_start":43,"column_end":48},"name":"0","qualname":"::common::LocationListsOffset::0","value":"T","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6175,"byte_end":6192,"line_start":125,"line_end":125,"column_start":12,"column_end":29},"name":"DebugLocListsBase","qualname":"::common::DebugLocListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of location list offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6037,"byte_end":6118,"line_start":123,"line_end":123,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6204,"byte_end":6209,"line_start":125,"line_end":125,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugLocListsBase::0","value":"T","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6352,"byte_end":6370,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"DebugLocListsIndex","qualname":"::common::DebugLocListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of location list offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6213,"byte_end":6295,"line_start":127,"line_end":127,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6382,"byte_end":6387,"line_start":129,"line_end":129,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugLocListsIndex::0","value":"T","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6502,"byte_end":6520,"line_start":133,"line_end":133,"column_start":12,"column_end":30},"name":"DebugMacinfoOffset","qualname":"::common::DebugMacinfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6391,"byte_end":6439,"line_start":131,"line_end":131,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6532,"byte_end":6537,"line_start":133,"line_end":133,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugMacinfoOffset::0","value":"T","parent":{"krate":0,"index":3346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6650,"byte_end":6666,"line_start":137,"line_end":137,"column_start":12,"column_end":28},"name":"DebugMacroOffset","qualname":"::common::DebugMacroOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6541,"byte_end":6587,"line_start":135,"line_end":135,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6678,"byte_end":6683,"line_start":137,"line_end":137,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugMacroOffset::0","value":"T","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7088,"byte_end":7107,"line_start":145,"line_end":145,"column_start":12,"column_end":31},"name":"RawRangeListsOffset","qualname":"::common::RawRangeListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,\n depending on the version of the unit the offset was contained in.","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6687,"byte_end":6774,"line_start":139,"line_end":139,"column_start":1,"column_end":88}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6775,"byte_end":6844,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6845,"byte_end":6848,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ If this is from a DWARF 4 DWO file, then it must additionally be offset by the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6849,"byte_end":6931,"line_start":142,"line_end":142,"column_start":1,"column_end":83}},{"value":"/ value of `DW_AT_GNU_ranges_base`. You can use `Dwarf::ranges_offset_from_raw` to do this.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":6932,"byte_end":7025,"line_start":143,"line_end":143,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7119,"byte_end":7124,"line_start":145,"line_end":145,"column_start":43,"column_end":48},"name":"0","qualname":"::common::RawRangeListsOffset::0","value":"T","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7348,"byte_end":7364,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"RangeListsOffset","qualname":"::common::RangeListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7128,"byte_end":7215,"line_start":147,"line_end":147,"column_start":1,"column_end":88}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7216,"byte_end":7285,"line_start":148,"line_end":148,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3430},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7376,"byte_end":7381,"line_start":150,"line_end":150,"column_start":40,"column_end":45},"name":"0","qualname":"::common::RangeListsOffset::0","value":"T","parent":{"krate":0,"index":3427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7520,"byte_end":7537,"line_start":154,"line_end":154,"column_start":12,"column_end":29},"name":"DebugRngListsBase","qualname":"::common::DebugRngListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of range list offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7385,"byte_end":7463,"line_start":152,"line_end":152,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7549,"byte_end":7554,"line_start":154,"line_end":154,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugRngListsBase::0","value":"T","parent":{"krate":0,"index":3454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3477},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7694,"byte_end":7712,"line_start":158,"line_end":158,"column_start":12,"column_end":30},"name":"DebugRngListsIndex","qualname":"::common::DebugRngListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of range list offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7558,"byte_end":7637,"line_start":156,"line_end":156,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7724,"byte_end":7729,"line_start":158,"line_end":158,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugRngListsIndex::0","value":"T","parent":{"krate":0,"index":3477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7834,"byte_end":7848,"line_start":162,"line_end":162,"column_start":12,"column_end":26},"name":"DebugStrOffset","qualname":"::common::DebugStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7733,"byte_end":7777,"line_start":160,"line_end":160,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7860,"byte_end":7865,"line_start":162,"line_end":162,"column_start":38,"column_end":43},"name":"0","qualname":"::common::DebugStrOffset::0","value":"T","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7996,"byte_end":8015,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"DebugStrOffsetsBase","qualname":"::common::DebugStrOffsetsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":7869,"byte_end":7939,"line_start":164,"line_end":164,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8027,"byte_end":8032,"line_start":166,"line_end":166,"column_start":43,"column_end":48},"name":"0","qualname":"::common::DebugStrOffsetsBase::0","value":"T","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8164,"byte_end":8184,"line_start":170,"line_end":170,"column_start":12,"column_end":32},"name":"DebugStrOffsetsIndex","qualname":"::common::DebugStrOffsetsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8036,"byte_end":8107,"line_start":168,"line_end":168,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8196,"byte_end":8201,"line_start":170,"line_end":170,"column_start":44,"column_end":49},"name":"0","qualname":"::common::DebugStrOffsetsIndex::0","value":"T","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8331,"byte_end":8347,"line_start":174,"line_end":174,"column_start":12,"column_end":28},"name":"DebugTypesOffset","qualname":"::common::DebugTypesOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8205,"byte_end":8251,"line_start":172,"line_end":172,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8359,"byte_end":8364,"line_start":174,"line_end":174,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugTypesOffset::0","value":"T","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8490,"byte_end":8508,"line_start":178,"line_end":178,"column_start":12,"column_end":30},"name":"DebugTypeSignature","qualname":"::common::DebugTypeSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type signature as used in the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ A type signature as used in the `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8368,"byte_end":8427,"line_start":176,"line_end":176,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3604},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8509,"byte_end":8516,"line_start":178,"line_end":178,"column_start":31,"column_end":38},"name":"0","qualname":"::common::DebugTypeSignature::0","value":"u64","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8629,"byte_end":8645,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"DebugFrameOffset","qualname":"::common::DebugFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8520,"byte_end":8566,"line_start":180,"line_end":180,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8657,"byte_end":8662,"line_start":182,"line_end":182,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugFrameOffset::0","value":"T","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8893,"byte_end":8906,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"EhFrameOffset","qualname":"::common::EhFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8787,"byte_end":8830,"line_start":191,"line_end":191,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8918,"byte_end":8923,"line_start":193,"line_end":193,"column_start":37,"column_end":42},"name":"0","qualname":"::common::EhFrameOffset::0","value":"T","parent":{"krate":0,"index":3647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9269,"byte_end":9284,"line_start":206,"line_end":206,"column_start":5,"column_end":20},"name":"DebugInfoOffset","qualname":"::common::UnitSectionOffset::DebugInfoOffset","value":"UnitSectionOffset::DebugInfoOffset(DebugInfoOffset<T>)","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9219,"byte_end":9264,"line_start":205,"line_end":205,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9361,"byte_end":9377,"line_start":208,"line_end":208,"column_start":5,"column_end":21},"name":"DebugTypesOffset","qualname":"::common::UnitSectionOffset::DebugTypesOffset","value":"UnitSectionOffset::DebugTypesOffset(DebugTypesOffset<T>)","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9310,"byte_end":9356,"line_start":207,"line_end":207,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":3674},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9184,"byte_end":9201,"line_start":204,"line_end":204,"column_start":10,"column_end":27},"name":"UnitSectionOffset","qualname":"::common::UnitSectionOffset","value":"pub enum UnitSectionOffset<T = usize> {\n    DebugInfoOffset(DebugInfoOffset<T>),\n    DebugTypesOffset(DebugTypesOffset<T>),\n}","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3679}],"decl_id":null,"docs":" An offset into the `.debug_info` or `.debug_types` sections.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` or `.debug_types` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9042,"byte_end":9106,"line_start":202,"line_end":202,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9875,"byte_end":9895,"line_start":228,"line_end":228,"column_start":12,"column_end":32},"name":"as_debug_info_offset","qualname":"<UnitSectionOffset<T>>::as_debug_info_offset","value":"pub fn as_debug_info_offset(&Self) -> Option<DebugInfoOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DebugInfoOffset` inside, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns the `DebugInfoOffset` inside, or `None` otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9801,"byte_end":9863,"line_start":227,"line_end":227,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10191,"byte_end":10212,"line_start":235,"line_end":235,"column_start":12,"column_end":33},"name":"as_debug_types_offset","qualname":"<UnitSectionOffset<T>>::as_debug_types_offset","value":"pub fn as_debug_types_offset(&Self) -> Option<DebugTypesOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DebugTypesOffset` inside, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns the `DebugTypesOffset` inside, or `None` otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10116,"byte_end":10179,"line_start":234,"line_end":234,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10602,"byte_end":10613,"line_start":247,"line_end":247,"column_start":5,"column_end":16},"name":"DebugAbbrev","qualname":"::common::SectionId::DebugAbbrev","value":"SectionId::DebugAbbrev","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10565,"byte_end":10597,"line_start":246,"line_end":246,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10654,"byte_end":10663,"line_start":249,"line_end":249,"column_start":5,"column_end":14},"name":"DebugAddr","qualname":"::common::SectionId::DebugAddr","value":"SectionId::DebugAddr","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10619,"byte_end":10649,"line_start":248,"line_end":248,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10707,"byte_end":10719,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"name":"DebugAranges","qualname":"::common::SectionId::DebugAranges","value":"SectionId::DebugAranges","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10669,"byte_end":10702,"line_start":250,"line_end":250,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10764,"byte_end":10776,"line_start":253,"line_end":253,"column_start":5,"column_end":17},"name":"DebugCuIndex","qualname":"::common::SectionId::DebugCuIndex","value":"SectionId::DebugCuIndex","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_cu_index` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_cu_index` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10725,"byte_end":10759,"line_start":252,"line_end":252,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10818,"byte_end":10828,"line_start":255,"line_end":255,"column_start":5,"column_end":15},"name":"DebugFrame","qualname":"::common::SectionId::DebugFrame","value":"SectionId::DebugFrame","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10782,"byte_end":10813,"line_start":254,"line_end":254,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10867,"byte_end":10874,"line_start":257,"line_end":257,"column_start":5,"column_end":12},"name":"EhFrame","qualname":"::common::SectionId::EhFrame","value":"SectionId::EhFrame","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10834,"byte_end":10862,"line_start":256,"line_end":256,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10917,"byte_end":10927,"line_start":259,"line_end":259,"column_start":5,"column_end":15},"name":"EhFrameHdr","qualname":"::common::SectionId::EhFrameHdr","value":"SectionId::EhFrameHdr","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10880,"byte_end":10912,"line_start":258,"line_end":258,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10968,"byte_end":10977,"line_start":261,"line_end":261,"column_start":5,"column_end":14},"name":"DebugInfo","qualname":"::common::SectionId::DebugInfo","value":"SectionId::DebugInfo","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10933,"byte_end":10963,"line_start":260,"line_end":260,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11018,"byte_end":11027,"line_start":263,"line_end":263,"column_start":5,"column_end":14},"name":"DebugLine","qualname":"::common::SectionId::DebugLine","value":"SectionId::DebugLine","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10983,"byte_end":11013,"line_start":262,"line_end":262,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11072,"byte_end":11084,"line_start":265,"line_end":265,"column_start":5,"column_end":17},"name":"DebugLineStr","qualname":"::common::SectionId::DebugLineStr","value":"SectionId::DebugLineStr","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11033,"byte_end":11067,"line_start":264,"line_end":264,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11124,"byte_end":11132,"line_start":267,"line_end":267,"column_start":5,"column_end":13},"name":"DebugLoc","qualname":"::common::SectionId::DebugLoc","value":"SectionId::DebugLoc","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loc` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11090,"byte_end":11119,"line_start":266,"line_end":266,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11177,"byte_end":11190,"line_start":269,"line_end":269,"column_start":5,"column_end":18},"name":"DebugLocLists","qualname":"::common::SectionId::DebugLocLists","value":"SectionId::DebugLocLists","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11138,"byte_end":11172,"line_start":268,"line_end":268,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11234,"byte_end":11246,"line_start":271,"line_end":271,"column_start":5,"column_end":17},"name":"DebugMacinfo","qualname":"::common::SectionId::DebugMacinfo","value":"SectionId::DebugMacinfo","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11196,"byte_end":11229,"line_start":270,"line_end":270,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11288,"byte_end":11298,"line_start":273,"line_end":273,"column_start":5,"column_end":15},"name":"DebugMacro","qualname":"::common::SectionId::DebugMacro","value":"SectionId::DebugMacro","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_macro` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11252,"byte_end":11283,"line_start":272,"line_end":272,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11343,"byte_end":11356,"line_start":275,"line_end":275,"column_start":5,"column_end":18},"name":"DebugPubNames","qualname":"::common::SectionId::DebugPubNames","value":"SectionId::DebugPubNames","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_pubnames` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11304,"byte_end":11338,"line_start":274,"line_end":274,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11401,"byte_end":11414,"line_start":277,"line_end":277,"column_start":5,"column_end":18},"name":"DebugPubTypes","qualname":"::common::SectionId::DebugPubTypes","value":"SectionId::DebugPubTypes","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_pubtypes` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_pubtypes` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11362,"byte_end":11396,"line_start":276,"line_end":276,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11457,"byte_end":11468,"line_start":279,"line_end":279,"column_start":5,"column_end":16},"name":"DebugRanges","qualname":"::common::SectionId::DebugRanges","value":"SectionId::DebugRanges","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_ranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11420,"byte_end":11452,"line_start":278,"line_end":278,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11513,"byte_end":11526,"line_start":281,"line_end":281,"column_start":5,"column_end":18},"name":"DebugRngLists","qualname":"::common::SectionId::DebugRngLists","value":"SectionId::DebugRngLists","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11474,"byte_end":11508,"line_start":280,"line_end":280,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3748},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11566,"byte_end":11574,"line_start":283,"line_end":283,"column_start":5,"column_end":13},"name":"DebugStr","qualname":"::common::SectionId::DebugStr","value":"SectionId::DebugStr","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11532,"byte_end":11561,"line_start":282,"line_end":282,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11622,"byte_end":11637,"line_start":285,"line_end":285,"column_start":5,"column_end":20},"name":"DebugStrOffsets","qualname":"::common::SectionId::DebugStrOffsets","value":"SectionId::DebugStrOffsets","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11580,"byte_end":11617,"line_start":284,"line_end":284,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11682,"byte_end":11694,"line_start":287,"line_end":287,"column_start":5,"column_end":17},"name":"DebugTuIndex","qualname":"::common::SectionId::DebugTuIndex","value":"SectionId::DebugTuIndex","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_tu_index` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_tu_index` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11643,"byte_end":11677,"line_start":286,"line_end":286,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11736,"byte_end":11746,"line_start":289,"line_end":289,"column_start":5,"column_end":15},"name":"DebugTypes","qualname":"::common::SectionId::DebugTypes","value":"SectionId::DebugTypes","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11700,"byte_end":11731,"line_start":288,"line_end":288,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":3711},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10549,"byte_end":10558,"line_start":245,"line_end":245,"column_start":10,"column_end":19},"name":"SectionId","qualname":"::common::SectionId","value":"pub enum SectionId {\n    DebugAbbrev,\n    DebugAddr,\n    DebugAranges,\n    DebugCuIndex,\n    DebugFrame,\n    EhFrame,\n    EhFrameHdr,\n    DebugInfo,\n    DebugLine,\n    DebugLineStr,\n    DebugLoc,\n    DebugLocLists,\n    DebugMacinfo,\n    DebugMacro,\n    DebugPubNames,\n    DebugPubTypes,\n    DebugRanges,\n    DebugRngLists,\n    DebugStr,\n    DebugStrOffsets,\n    DebugTuIndex,\n    DebugTypes,\n}","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3726},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754}],"decl_id":null,"docs":" An identifier for a DWARF section.\n","sig":null,"attributes":[{"value":"/ An identifier for a DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":10433,"byte_end":10471,"line_start":243,"line_end":243,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11831,"byte_end":11835,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"name","qualname":"<SectionId>::name","value":"pub fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the ELF section name for this kind.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this kind.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11772,"byte_end":11819,"line_start":293,"line_end":293,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":13205,"byte_end":13213,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"dwo_name","qualname":"<SectionId>::dwo_name","value":"pub fn dwo_name(Self) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ELF section name for this kind, when found in a .dwo or .dwp file.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this kind, when found in a .dwo or .dwp file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":13111,"byte_end":13193,"line_start":321,"line_end":321,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14361,"byte_end":14366,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"DwoId","qualname":"::common::DwoId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An optionally-provided implementation-defined compilation unit ID to enable\n split DWARF and linking a split compilation unit back together.\n","sig":null,"attributes":[{"value":"/ An optionally-provided implementation-defined compilation unit ID to enable","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14151,"byte_end":14230,"line_start":343,"line_end":343,"column_start":1,"column_end":80}},{"value":"/ split DWARF and linking a split compilation unit back together.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14231,"byte_end":14298,"line_start":344,"line_end":344,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14367,"byte_end":14374,"line_start":346,"line_end":346,"column_start":18,"column_end":25},"name":"0","qualname":"::common::DwoId::0","value":"u64","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14644,"byte_end":14648,"line_start":353,"line_end":353,"column_start":5,"column_end":9},"name":"Main","qualname":"::common::DwarfFileType::Main","value":"DwarfFileType::Main","parent":{"krate":0,"index":3792},"children":[],"decl_id":null,"docs":" A normal executable or object file.\n","sig":null,"attributes":[{"value":"/ A normal executable or object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14600,"byte_end":14639,"line_start":352,"line_end":352,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14687,"byte_end":14690,"line_start":355,"line_end":355,"column_start":5,"column_end":8},"name":"Dwo","qualname":"::common::DwarfFileType::Dwo","value":"DwarfFileType::Dwo","parent":{"krate":0,"index":3792},"children":[],"decl_id":null,"docs":" A .dwo split DWARF file.\n","sig":null,"attributes":[{"value":"/ A .dwo split DWARF file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14654,"byte_end":14682,"line_start":354,"line_end":354,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14580,"byte_end":14593,"line_start":351,"line_end":351,"column_start":10,"column_end":23},"name":"DwarfFileType","qualname":"::common::DwarfFileType","value":"pub enum DwarfFileType { Main, Dwo, }","parent":null,"children":[{"krate":0,"index":3793},{"krate":0,"index":3795}],"decl_id":null,"docs":" The \"type\" of file with DWARF debugging information. This determines, among other things,\n which files DWARF sections should be loaded from.\n","sig":null,"attributes":[{"value":"/ The \"type\" of file with DWARF debugging information. This determines, among other things,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14378,"byte_end":14471,"line_start":348,"line_end":348,"column_start":1,"column_end":94}},{"value":"/ which files DWARF sections should be loaded from.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14472,"byte_end":14525,"line_start":349,"line_end":349,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16426,"byte_end":16429,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"Arm","qualname":"::arch::Arm","value":"","parent":null,"children":[],"decl_id":null,"docs":" ARM architecture specific definitions.","sig":null,"attributes":[{"value":"/ ARM architecture specific definitions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16244,"byte_end":16286,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16287,"byte_end":16290,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ See [DWARF for the ARM Architecture](https://developer.arm.com/documentation/ihi0040/c/).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16291,"byte_end":16384,"line_start":47,"line_end":47,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":3816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16454,"byte_end":16456,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"R0","qualname":"::arch::Arm::R0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16474,"byte_end":16476,"line_start":53,"line_end":53,"column_start":5,"column_end":7},"name":"R1","qualname":"::arch::Arm::R1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3818},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16494,"byte_end":16496,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"R2","qualname":"::arch::Arm::R2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16514,"byte_end":16516,"line_start":55,"line_end":55,"column_start":5,"column_end":7},"name":"R3","qualname":"::arch::Arm::R3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3820},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16534,"byte_end":16536,"line_start":56,"line_end":56,"column_start":5,"column_end":7},"name":"R4","qualname":"::arch::Arm::R4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3821},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16554,"byte_end":16556,"line_start":57,"line_end":57,"column_start":5,"column_end":7},"name":"R5","qualname":"::arch::Arm::R5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3822},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16574,"byte_end":16576,"line_start":58,"line_end":58,"column_start":5,"column_end":7},"name":"R6","qualname":"::arch::Arm::R6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3823},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16594,"byte_end":16596,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"R7","qualname":"::arch::Arm::R7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3824},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16614,"byte_end":16616,"line_start":60,"line_end":60,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::Arm::R8","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16634,"byte_end":16636,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::Arm::R9","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16654,"byte_end":16657,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::Arm::R10","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16677,"byte_end":16680,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::Arm::R11","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16700,"byte_end":16703,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::Arm::R12","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3829},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16723,"byte_end":16726,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::Arm::R13","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16746,"byte_end":16749,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::Arm::R14","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3831},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16769,"byte_end":16772,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::Arm::R15","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16793,"byte_end":16798,"line_start":69,"line_end":69,"column_start":5,"column_end":10},"name":"WCGR0","qualname":"::arch::Arm::WCGR0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3833},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16821,"byte_end":16826,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"WCGR1","qualname":"::arch::Arm::WCGR1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3834},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16849,"byte_end":16854,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"name":"WCGR2","qualname":"::arch::Arm::WCGR2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16877,"byte_end":16882,"line_start":72,"line_end":72,"column_start":5,"column_end":10},"name":"WCGR3","qualname":"::arch::Arm::WCGR3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16905,"byte_end":16910,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"WCGR4","qualname":"::arch::Arm::WCGR4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16933,"byte_end":16938,"line_start":74,"line_end":74,"column_start":5,"column_end":10},"name":"WCGR5","qualname":"::arch::Arm::WCGR5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16961,"byte_end":16966,"line_start":75,"line_end":75,"column_start":5,"column_end":10},"name":"WCGR6","qualname":"::arch::Arm::WCGR6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3839},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":16989,"byte_end":16994,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"WCGR7","qualname":"::arch::Arm::WCGR7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17018,"byte_end":17021,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"WR0","qualname":"::arch::Arm::WR0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17042,"byte_end":17045,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"WR1","qualname":"::arch::Arm::WR1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17066,"byte_end":17069,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"WR2","qualname":"::arch::Arm::WR2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17090,"byte_end":17093,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"WR3","qualname":"::arch::Arm::WR3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17114,"byte_end":17117,"line_start":82,"line_end":82,"column_start":5,"column_end":8},"name":"WR4","qualname":"::arch::Arm::WR4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17138,"byte_end":17141,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"WR5","qualname":"::arch::Arm::WR5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3846},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17162,"byte_end":17165,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"WR6","qualname":"::arch::Arm::WR6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17186,"byte_end":17189,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"WR7","qualname":"::arch::Arm::WR7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3848},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17210,"byte_end":17213,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"WR8","qualname":"::arch::Arm::WR8","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3849},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17234,"byte_end":17237,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"WR9","qualname":"::arch::Arm::WR9","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3850},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17258,"byte_end":17262,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"WR10","qualname":"::arch::Arm::WR10","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3851},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17284,"byte_end":17288,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"WR11","qualname":"::arch::Arm::WR11","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3852},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17310,"byte_end":17314,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"WR12","qualname":"::arch::Arm::WR12","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3853},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17336,"byte_end":17340,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"WR13","qualname":"::arch::Arm::WR13","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3854},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17362,"byte_end":17366,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"WR14","qualname":"::arch::Arm::WR14","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3855},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17388,"byte_end":17392,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"WR15","qualname":"::arch::Arm::WR15","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3856},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17415,"byte_end":17419,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"SPSR","qualname":"::arch::Arm::SPSR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3857},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17441,"byte_end":17449,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"SPSR_FIQ","qualname":"::arch::Arm::SPSR_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3858},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17475,"byte_end":17483,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"SPSR_IRQ","qualname":"::arch::Arm::SPSR_IRQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17509,"byte_end":17517,"line_start":98,"line_end":98,"column_start":5,"column_end":13},"name":"SPSR_ABT","qualname":"::arch::Arm::SPSR_ABT","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17543,"byte_end":17551,"line_start":99,"line_end":99,"column_start":5,"column_end":13},"name":"SPSR_UND","qualname":"::arch::Arm::SPSR_UND","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17577,"byte_end":17585,"line_start":100,"line_end":100,"column_start":5,"column_end":13},"name":"SPSR_SVC","qualname":"::arch::Arm::SPSR_SVC","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17612,"byte_end":17618,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"R8_USR","qualname":"::arch::Arm::R8_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17642,"byte_end":17648,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"R9_USR","qualname":"::arch::Arm::R9_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17672,"byte_end":17679,"line_start":104,"line_end":104,"column_start":5,"column_end":12},"name":"R10_USR","qualname":"::arch::Arm::R10_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3865},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17704,"byte_end":17711,"line_start":105,"line_end":105,"column_start":5,"column_end":12},"name":"R11_USR","qualname":"::arch::Arm::R11_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3866},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17736,"byte_end":17743,"line_start":106,"line_end":106,"column_start":5,"column_end":12},"name":"R12_USR","qualname":"::arch::Arm::R12_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3867},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17768,"byte_end":17775,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"R13_USR","qualname":"::arch::Arm::R13_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3868},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17800,"byte_end":17807,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"R14_USR","qualname":"::arch::Arm::R14_USR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17833,"byte_end":17839,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"R8_FIQ","qualname":"::arch::Arm::R8_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3870},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17863,"byte_end":17869,"line_start":111,"line_end":111,"column_start":5,"column_end":11},"name":"R9_FIQ","qualname":"::arch::Arm::R9_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17893,"byte_end":17900,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"R10_FIQ","qualname":"::arch::Arm::R10_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3872},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17925,"byte_end":17932,"line_start":113,"line_end":113,"column_start":5,"column_end":12},"name":"R11_FIQ","qualname":"::arch::Arm::R11_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3873},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17957,"byte_end":17964,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"R12_FIQ","qualname":"::arch::Arm::R12_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3874},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":17989,"byte_end":17996,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"R13_FIQ","qualname":"::arch::Arm::R13_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3875},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18021,"byte_end":18028,"line_start":116,"line_end":116,"column_start":5,"column_end":12},"name":"R14_FIQ","qualname":"::arch::Arm::R14_FIQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18054,"byte_end":18061,"line_start":118,"line_end":118,"column_start":5,"column_end":12},"name":"R13_IRQ","qualname":"::arch::Arm::R13_IRQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3877},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18086,"byte_end":18093,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"R14_IRQ","qualname":"::arch::Arm::R14_IRQ","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18119,"byte_end":18126,"line_start":121,"line_end":121,"column_start":5,"column_end":12},"name":"R13_ABT","qualname":"::arch::Arm::R13_ABT","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3879},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18151,"byte_end":18158,"line_start":122,"line_end":122,"column_start":5,"column_end":12},"name":"R14_ABT","qualname":"::arch::Arm::R14_ABT","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3880},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18184,"byte_end":18191,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"R13_UND","qualname":"::arch::Arm::R13_UND","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3881},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18216,"byte_end":18223,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"R14_UND","qualname":"::arch::Arm::R14_UND","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18249,"byte_end":18256,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"R13_SVC","qualname":"::arch::Arm::R13_SVC","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3883},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18281,"byte_end":18288,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"R14_SVC","qualname":"::arch::Arm::R14_SVC","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18314,"byte_end":18317,"line_start":130,"line_end":130,"column_start":5,"column_end":8},"name":"WC0","qualname":"::arch::Arm::WC0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3885},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18338,"byte_end":18341,"line_start":131,"line_end":131,"column_start":5,"column_end":8},"name":"WC1","qualname":"::arch::Arm::WC1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3886},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18362,"byte_end":18365,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"WC2","qualname":"::arch::Arm::WC2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18386,"byte_end":18389,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"WC3","qualname":"::arch::Arm::WC3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18410,"byte_end":18413,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"WC4","qualname":"::arch::Arm::WC4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3889},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18434,"byte_end":18437,"line_start":135,"line_end":135,"column_start":5,"column_end":8},"name":"WC5","qualname":"::arch::Arm::WC5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18458,"byte_end":18461,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"WC6","qualname":"::arch::Arm::WC6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18482,"byte_end":18485,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"WC7","qualname":"::arch::Arm::WC7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18507,"byte_end":18509,"line_start":139,"line_end":139,"column_start":5,"column_end":7},"name":"D0","qualname":"::arch::Arm::D0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18529,"byte_end":18531,"line_start":140,"line_end":140,"column_start":5,"column_end":7},"name":"D1","qualname":"::arch::Arm::D1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18551,"byte_end":18553,"line_start":141,"line_end":141,"column_start":5,"column_end":7},"name":"D2","qualname":"::arch::Arm::D2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18573,"byte_end":18575,"line_start":142,"line_end":142,"column_start":5,"column_end":7},"name":"D3","qualname":"::arch::Arm::D3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18595,"byte_end":18597,"line_start":143,"line_end":143,"column_start":5,"column_end":7},"name":"D4","qualname":"::arch::Arm::D4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18617,"byte_end":18619,"line_start":144,"line_end":144,"column_start":5,"column_end":7},"name":"D5","qualname":"::arch::Arm::D5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3898},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18639,"byte_end":18641,"line_start":145,"line_end":145,"column_start":5,"column_end":7},"name":"D6","qualname":"::arch::Arm::D6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3899},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18661,"byte_end":18663,"line_start":146,"line_end":146,"column_start":5,"column_end":7},"name":"D7","qualname":"::arch::Arm::D7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18683,"byte_end":18685,"line_start":147,"line_end":147,"column_start":5,"column_end":7},"name":"D8","qualname":"::arch::Arm::D8","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18705,"byte_end":18707,"line_start":148,"line_end":148,"column_start":5,"column_end":7},"name":"D9","qualname":"::arch::Arm::D9","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18727,"byte_end":18730,"line_start":149,"line_end":149,"column_start":5,"column_end":8},"name":"D10","qualname":"::arch::Arm::D10","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3903},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18751,"byte_end":18754,"line_start":150,"line_end":150,"column_start":5,"column_end":8},"name":"D11","qualname":"::arch::Arm::D11","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3904},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18775,"byte_end":18778,"line_start":151,"line_end":151,"column_start":5,"column_end":8},"name":"D12","qualname":"::arch::Arm::D12","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18799,"byte_end":18802,"line_start":152,"line_end":152,"column_start":5,"column_end":8},"name":"D13","qualname":"::arch::Arm::D13","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18823,"byte_end":18826,"line_start":153,"line_end":153,"column_start":5,"column_end":8},"name":"D14","qualname":"::arch::Arm::D14","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18847,"byte_end":18850,"line_start":154,"line_end":154,"column_start":5,"column_end":8},"name":"D15","qualname":"::arch::Arm::D15","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18871,"byte_end":18874,"line_start":155,"line_end":155,"column_start":5,"column_end":8},"name":"D16","qualname":"::arch::Arm::D16","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18895,"byte_end":18898,"line_start":156,"line_end":156,"column_start":5,"column_end":8},"name":"D17","qualname":"::arch::Arm::D17","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18919,"byte_end":18922,"line_start":157,"line_end":157,"column_start":5,"column_end":8},"name":"D18","qualname":"::arch::Arm::D18","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18943,"byte_end":18946,"line_start":158,"line_end":158,"column_start":5,"column_end":8},"name":"D19","qualname":"::arch::Arm::D19","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18967,"byte_end":18970,"line_start":159,"line_end":159,"column_start":5,"column_end":8},"name":"D20","qualname":"::arch::Arm::D20","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":18991,"byte_end":18994,"line_start":160,"line_end":160,"column_start":5,"column_end":8},"name":"D21","qualname":"::arch::Arm::D21","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19015,"byte_end":19018,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"D22","qualname":"::arch::Arm::D22","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19039,"byte_end":19042,"line_start":162,"line_end":162,"column_start":5,"column_end":8},"name":"D23","qualname":"::arch::Arm::D23","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19063,"byte_end":19066,"line_start":163,"line_end":163,"column_start":5,"column_end":8},"name":"D24","qualname":"::arch::Arm::D24","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19087,"byte_end":19090,"line_start":164,"line_end":164,"column_start":5,"column_end":8},"name":"D25","qualname":"::arch::Arm::D25","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3918},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19111,"byte_end":19114,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"D26","qualname":"::arch::Arm::D26","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19135,"byte_end":19138,"line_start":166,"line_end":166,"column_start":5,"column_end":8},"name":"D27","qualname":"::arch::Arm::D27","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19159,"byte_end":19162,"line_start":167,"line_end":167,"column_start":5,"column_end":8},"name":"D28","qualname":"::arch::Arm::D28","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19183,"byte_end":19186,"line_start":168,"line_end":168,"column_start":5,"column_end":8},"name":"D29","qualname":"::arch::Arm::D29","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3922},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19207,"byte_end":19210,"line_start":169,"line_end":169,"column_start":5,"column_end":8},"name":"D30","qualname":"::arch::Arm::D30","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19231,"byte_end":19234,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"D31","qualname":"::arch::Arm::D31","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3924},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19268,"byte_end":19270,"line_start":173,"line_end":173,"column_start":5,"column_end":7},"name":"SP","qualname":"::arch::Arm::SP","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3925},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19289,"byte_end":19291,"line_start":174,"line_end":174,"column_start":5,"column_end":7},"name":"LR","qualname":"::arch::Arm::LR","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19310,"byte_end":19312,"line_start":175,"line_end":175,"column_start":5,"column_end":7},"name":"PC","qualname":"::arch::Arm::PC","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19332,"byte_end":19336,"line_start":177,"line_end":177,"column_start":5,"column_end":9},"name":"ACC0","qualname":"::arch::Arm::ACC0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19358,"byte_end":19362,"line_start":178,"line_end":178,"column_start":5,"column_end":9},"name":"ACC1","qualname":"::arch::Arm::ACC1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19384,"byte_end":19388,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"ACC2","qualname":"::arch::Arm::ACC2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19410,"byte_end":19414,"line_start":180,"line_end":180,"column_start":5,"column_end":9},"name":"ACC3","qualname":"::arch::Arm::ACC3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3931},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19436,"byte_end":19440,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"ACC4","qualname":"::arch::Arm::ACC4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3932},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19462,"byte_end":19466,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"ACC5","qualname":"::arch::Arm::ACC5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19488,"byte_end":19492,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"ACC6","qualname":"::arch::Arm::ACC6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3934},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19514,"byte_end":19518,"line_start":184,"line_end":184,"column_start":5,"column_end":9},"name":"ACC7","qualname":"::arch::Arm::ACC7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19541,"byte_end":19543,"line_start":186,"line_end":186,"column_start":5,"column_end":7},"name":"S0","qualname":"::arch::Arm::S0","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19563,"byte_end":19565,"line_start":187,"line_end":187,"column_start":5,"column_end":7},"name":"S1","qualname":"::arch::Arm::S1","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19585,"byte_end":19587,"line_start":188,"line_end":188,"column_start":5,"column_end":7},"name":"S2","qualname":"::arch::Arm::S2","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3938},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19607,"byte_end":19609,"line_start":189,"line_end":189,"column_start":5,"column_end":7},"name":"S3","qualname":"::arch::Arm::S3","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19629,"byte_end":19631,"line_start":190,"line_end":190,"column_start":5,"column_end":7},"name":"S4","qualname":"::arch::Arm::S4","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3940},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19651,"byte_end":19653,"line_start":191,"line_end":191,"column_start":5,"column_end":7},"name":"S5","qualname":"::arch::Arm::S5","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19673,"byte_end":19675,"line_start":192,"line_end":192,"column_start":5,"column_end":7},"name":"S6","qualname":"::arch::Arm::S6","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19695,"byte_end":19697,"line_start":193,"line_end":193,"column_start":5,"column_end":7},"name":"S7","qualname":"::arch::Arm::S7","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19717,"byte_end":19719,"line_start":194,"line_end":194,"column_start":5,"column_end":7},"name":"S8","qualname":"::arch::Arm::S8","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3944},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19739,"byte_end":19741,"line_start":195,"line_end":195,"column_start":5,"column_end":7},"name":"S9","qualname":"::arch::Arm::S9","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19761,"byte_end":19764,"line_start":196,"line_end":196,"column_start":5,"column_end":8},"name":"S10","qualname":"::arch::Arm::S10","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19785,"byte_end":19788,"line_start":197,"line_end":197,"column_start":5,"column_end":8},"name":"S11","qualname":"::arch::Arm::S11","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3947},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19809,"byte_end":19812,"line_start":198,"line_end":198,"column_start":5,"column_end":8},"name":"S12","qualname":"::arch::Arm::S12","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3948},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19833,"byte_end":19836,"line_start":199,"line_end":199,"column_start":5,"column_end":8},"name":"S13","qualname":"::arch::Arm::S13","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19857,"byte_end":19860,"line_start":200,"line_end":200,"column_start":5,"column_end":8},"name":"S14","qualname":"::arch::Arm::S14","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19881,"byte_end":19884,"line_start":201,"line_end":201,"column_start":5,"column_end":8},"name":"S15","qualname":"::arch::Arm::S15","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19905,"byte_end":19908,"line_start":202,"line_end":202,"column_start":5,"column_end":8},"name":"S16","qualname":"::arch::Arm::S16","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19929,"byte_end":19932,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"S17","qualname":"::arch::Arm::S17","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19953,"byte_end":19956,"line_start":204,"line_end":204,"column_start":5,"column_end":8},"name":"S18","qualname":"::arch::Arm::S18","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":19977,"byte_end":19980,"line_start":205,"line_end":205,"column_start":5,"column_end":8},"name":"S19","qualname":"::arch::Arm::S19","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20001,"byte_end":20004,"line_start":206,"line_end":206,"column_start":5,"column_end":8},"name":"S20","qualname":"::arch::Arm::S20","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20025,"byte_end":20028,"line_start":207,"line_end":207,"column_start":5,"column_end":8},"name":"S21","qualname":"::arch::Arm::S21","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20049,"byte_end":20052,"line_start":208,"line_end":208,"column_start":5,"column_end":8},"name":"S22","qualname":"::arch::Arm::S22","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20073,"byte_end":20076,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"S23","qualname":"::arch::Arm::S23","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20097,"byte_end":20100,"line_start":210,"line_end":210,"column_start":5,"column_end":8},"name":"S24","qualname":"::arch::Arm::S24","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20121,"byte_end":20124,"line_start":211,"line_end":211,"column_start":5,"column_end":8},"name":"S25","qualname":"::arch::Arm::S25","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20145,"byte_end":20148,"line_start":212,"line_end":212,"column_start":5,"column_end":8},"name":"S26","qualname":"::arch::Arm::S26","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20169,"byte_end":20172,"line_start":213,"line_end":213,"column_start":5,"column_end":8},"name":"S27","qualname":"::arch::Arm::S27","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20193,"byte_end":20196,"line_start":214,"line_end":214,"column_start":5,"column_end":8},"name":"S28","qualname":"::arch::Arm::S28","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20217,"byte_end":20220,"line_start":215,"line_end":215,"column_start":5,"column_end":8},"name":"S29","qualname":"::arch::Arm::S29","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20241,"byte_end":20244,"line_start":216,"line_end":216,"column_start":5,"column_end":8},"name":"S30","qualname":"::arch::Arm::S30","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20265,"byte_end":20268,"line_start":217,"line_end":217,"column_start":5,"column_end":8},"name":"S31","qualname":"::arch::Arm::S31","value":"Register","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20496,"byte_end":20503,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"AArch64","qualname":"::arch::AArch64","value":"","parent":null,"children":[],"decl_id":null,"docs":" ARM 64-bit (AArch64) architecture specific definitions.","sig":null,"attributes":[{"value":"/ ARM 64-bit (AArch64) architecture specific definitions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20290,"byte_end":20349,"line_start":220,"line_end":220,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20350,"byte_end":20353,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ See [DWARF for the ARM 64-bit Architecture](https://developer.arm.com/documentation/ihi0057/b/).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20354,"byte_end":20454,"line_start":222,"line_end":222,"column_start":1,"column_end":101}}]},{"kind":"Const","id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20532,"byte_end":20534,"line_start":227,"line_end":227,"column_start":5,"column_end":7},"name":"X0","qualname":"::arch::AArch64::X0","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20552,"byte_end":20554,"line_start":228,"line_end":228,"column_start":5,"column_end":7},"name":"X1","qualname":"::arch::AArch64::X1","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3980},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20572,"byte_end":20574,"line_start":229,"line_end":229,"column_start":5,"column_end":7},"name":"X2","qualname":"::arch::AArch64::X2","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20592,"byte_end":20594,"line_start":230,"line_end":230,"column_start":5,"column_end":7},"name":"X3","qualname":"::arch::AArch64::X3","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20612,"byte_end":20614,"line_start":231,"line_end":231,"column_start":5,"column_end":7},"name":"X4","qualname":"::arch::AArch64::X4","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20632,"byte_end":20634,"line_start":232,"line_end":232,"column_start":5,"column_end":7},"name":"X5","qualname":"::arch::AArch64::X5","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3984},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20652,"byte_end":20654,"line_start":233,"line_end":233,"column_start":5,"column_end":7},"name":"X6","qualname":"::arch::AArch64::X6","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20672,"byte_end":20674,"line_start":234,"line_end":234,"column_start":5,"column_end":7},"name":"X7","qualname":"::arch::AArch64::X7","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20692,"byte_end":20694,"line_start":235,"line_end":235,"column_start":5,"column_end":7},"name":"X8","qualname":"::arch::AArch64::X8","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20712,"byte_end":20714,"line_start":236,"line_end":236,"column_start":5,"column_end":7},"name":"X9","qualname":"::arch::AArch64::X9","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20732,"byte_end":20735,"line_start":237,"line_end":237,"column_start":5,"column_end":8},"name":"X10","qualname":"::arch::AArch64::X10","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20755,"byte_end":20758,"line_start":238,"line_end":238,"column_start":5,"column_end":8},"name":"X11","qualname":"::arch::AArch64::X11","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20778,"byte_end":20781,"line_start":239,"line_end":239,"column_start":5,"column_end":8},"name":"X12","qualname":"::arch::AArch64::X12","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3991},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20801,"byte_end":20804,"line_start":240,"line_end":240,"column_start":5,"column_end":8},"name":"X13","qualname":"::arch::AArch64::X13","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20824,"byte_end":20827,"line_start":241,"line_end":241,"column_start":5,"column_end":8},"name":"X14","qualname":"::arch::AArch64::X14","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20847,"byte_end":20850,"line_start":242,"line_end":242,"column_start":5,"column_end":8},"name":"X15","qualname":"::arch::AArch64::X15","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3994},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20870,"byte_end":20873,"line_start":243,"line_end":243,"column_start":5,"column_end":8},"name":"X16","qualname":"::arch::AArch64::X16","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20893,"byte_end":20896,"line_start":244,"line_end":244,"column_start":5,"column_end":8},"name":"X17","qualname":"::arch::AArch64::X17","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20916,"byte_end":20919,"line_start":245,"line_end":245,"column_start":5,"column_end":8},"name":"X18","qualname":"::arch::AArch64::X18","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20939,"byte_end":20942,"line_start":246,"line_end":246,"column_start":5,"column_end":8},"name":"X19","qualname":"::arch::AArch64::X19","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3998},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20962,"byte_end":20965,"line_start":247,"line_end":247,"column_start":5,"column_end":8},"name":"X20","qualname":"::arch::AArch64::X20","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3999},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":20985,"byte_end":20988,"line_start":248,"line_end":248,"column_start":5,"column_end":8},"name":"X21","qualname":"::arch::AArch64::X21","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21008,"byte_end":21011,"line_start":249,"line_end":249,"column_start":5,"column_end":8},"name":"X22","qualname":"::arch::AArch64::X22","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4001},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21031,"byte_end":21034,"line_start":250,"line_end":250,"column_start":5,"column_end":8},"name":"X23","qualname":"::arch::AArch64::X23","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4002},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21054,"byte_end":21057,"line_start":251,"line_end":251,"column_start":5,"column_end":8},"name":"X24","qualname":"::arch::AArch64::X24","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21077,"byte_end":21080,"line_start":252,"line_end":252,"column_start":5,"column_end":8},"name":"X25","qualname":"::arch::AArch64::X25","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4004},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21100,"byte_end":21103,"line_start":253,"line_end":253,"column_start":5,"column_end":8},"name":"X26","qualname":"::arch::AArch64::X26","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4005},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21123,"byte_end":21126,"line_start":254,"line_end":254,"column_start":5,"column_end":8},"name":"X27","qualname":"::arch::AArch64::X27","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21146,"byte_end":21149,"line_start":255,"line_end":255,"column_start":5,"column_end":8},"name":"X28","qualname":"::arch::AArch64::X28","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21169,"byte_end":21172,"line_start":256,"line_end":256,"column_start":5,"column_end":8},"name":"X29","qualname":"::arch::AArch64::X29","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21192,"byte_end":21195,"line_start":257,"line_end":257,"column_start":5,"column_end":8},"name":"X30","qualname":"::arch::AArch64::X30","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21215,"byte_end":21217,"line_start":258,"line_end":258,"column_start":5,"column_end":7},"name":"SP","qualname":"::arch::AArch64::SP","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4010},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21237,"byte_end":21239,"line_start":260,"line_end":260,"column_start":5,"column_end":7},"name":"V0","qualname":"::arch::AArch64::V0","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21258,"byte_end":21260,"line_start":261,"line_end":261,"column_start":5,"column_end":7},"name":"V1","qualname":"::arch::AArch64::V1","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21279,"byte_end":21281,"line_start":262,"line_end":262,"column_start":5,"column_end":7},"name":"V2","qualname":"::arch::AArch64::V2","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21300,"byte_end":21302,"line_start":263,"line_end":263,"column_start":5,"column_end":7},"name":"V3","qualname":"::arch::AArch64::V3","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21321,"byte_end":21323,"line_start":264,"line_end":264,"column_start":5,"column_end":7},"name":"V4","qualname":"::arch::AArch64::V4","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4015},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21342,"byte_end":21344,"line_start":265,"line_end":265,"column_start":5,"column_end":7},"name":"V5","qualname":"::arch::AArch64::V5","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21363,"byte_end":21365,"line_start":266,"line_end":266,"column_start":5,"column_end":7},"name":"V6","qualname":"::arch::AArch64::V6","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21384,"byte_end":21386,"line_start":267,"line_end":267,"column_start":5,"column_end":7},"name":"V7","qualname":"::arch::AArch64::V7","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4018},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21405,"byte_end":21407,"line_start":268,"line_end":268,"column_start":5,"column_end":7},"name":"V8","qualname":"::arch::AArch64::V8","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21426,"byte_end":21428,"line_start":269,"line_end":269,"column_start":5,"column_end":7},"name":"V9","qualname":"::arch::AArch64::V9","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4020},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21447,"byte_end":21450,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"V10","qualname":"::arch::AArch64::V10","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4021},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21470,"byte_end":21473,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"V11","qualname":"::arch::AArch64::V11","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4022},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21493,"byte_end":21496,"line_start":272,"line_end":272,"column_start":5,"column_end":8},"name":"V12","qualname":"::arch::AArch64::V12","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21516,"byte_end":21519,"line_start":273,"line_end":273,"column_start":5,"column_end":8},"name":"V13","qualname":"::arch::AArch64::V13","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4024},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21539,"byte_end":21542,"line_start":274,"line_end":274,"column_start":5,"column_end":8},"name":"V14","qualname":"::arch::AArch64::V14","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4025},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21562,"byte_end":21565,"line_start":275,"line_end":275,"column_start":5,"column_end":8},"name":"V15","qualname":"::arch::AArch64::V15","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21585,"byte_end":21588,"line_start":276,"line_end":276,"column_start":5,"column_end":8},"name":"V16","qualname":"::arch::AArch64::V16","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21608,"byte_end":21611,"line_start":277,"line_end":277,"column_start":5,"column_end":8},"name":"V17","qualname":"::arch::AArch64::V17","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21631,"byte_end":21634,"line_start":278,"line_end":278,"column_start":5,"column_end":8},"name":"V18","qualname":"::arch::AArch64::V18","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4029},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21654,"byte_end":21657,"line_start":279,"line_end":279,"column_start":5,"column_end":8},"name":"V19","qualname":"::arch::AArch64::V19","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4030},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21677,"byte_end":21680,"line_start":280,"line_end":280,"column_start":5,"column_end":8},"name":"V20","qualname":"::arch::AArch64::V20","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4031},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21700,"byte_end":21703,"line_start":281,"line_end":281,"column_start":5,"column_end":8},"name":"V21","qualname":"::arch::AArch64::V21","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21723,"byte_end":21726,"line_start":282,"line_end":282,"column_start":5,"column_end":8},"name":"V22","qualname":"::arch::AArch64::V22","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21746,"byte_end":21749,"line_start":283,"line_end":283,"column_start":5,"column_end":8},"name":"V23","qualname":"::arch::AArch64::V23","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4034},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21769,"byte_end":21772,"line_start":284,"line_end":284,"column_start":5,"column_end":8},"name":"V24","qualname":"::arch::AArch64::V24","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4035},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21792,"byte_end":21795,"line_start":285,"line_end":285,"column_start":5,"column_end":8},"name":"V25","qualname":"::arch::AArch64::V25","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21815,"byte_end":21818,"line_start":286,"line_end":286,"column_start":5,"column_end":8},"name":"V26","qualname":"::arch::AArch64::V26","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4037},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21838,"byte_end":21841,"line_start":287,"line_end":287,"column_start":5,"column_end":8},"name":"V27","qualname":"::arch::AArch64::V27","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21861,"byte_end":21864,"line_start":288,"line_end":288,"column_start":5,"column_end":8},"name":"V28","qualname":"::arch::AArch64::V28","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21884,"byte_end":21887,"line_start":289,"line_end":289,"column_start":5,"column_end":8},"name":"V29","qualname":"::arch::AArch64::V29","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4040},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21907,"byte_end":21910,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"V30","qualname":"::arch::AArch64::V30","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4041},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21930,"byte_end":21933,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"V31","qualname":"::arch::AArch64::V31","value":"Register","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4045},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22133,"byte_end":22138,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"RiscV","qualname":"::arch::RiscV","value":"","parent":null,"children":[],"decl_id":null,"docs":" RISC-V architecture specific definitions.","sig":null,"attributes":[{"value":"/ RISC-V architecture specific definitions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":21954,"byte_end":21999,"line_start":294,"line_end":294,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22000,"byte_end":22003,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ See [RISC-V ELF psABI specification](https://github.com/riscv/riscv-elf-psabi-doc).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22004,"byte_end":22091,"line_start":296,"line_end":296,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22165,"byte_end":22167,"line_start":301,"line_end":301,"column_start":5,"column_end":7},"name":"X0","qualname":"::arch::RiscV::X0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4054},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22185,"byte_end":22187,"line_start":302,"line_end":302,"column_start":5,"column_end":7},"name":"X1","qualname":"::arch::RiscV::X1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22205,"byte_end":22207,"line_start":303,"line_end":303,"column_start":5,"column_end":7},"name":"X2","qualname":"::arch::RiscV::X2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22225,"byte_end":22227,"line_start":304,"line_end":304,"column_start":5,"column_end":7},"name":"X3","qualname":"::arch::RiscV::X3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22245,"byte_end":22247,"line_start":305,"line_end":305,"column_start":5,"column_end":7},"name":"X4","qualname":"::arch::RiscV::X4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22265,"byte_end":22267,"line_start":306,"line_end":306,"column_start":5,"column_end":7},"name":"X5","qualname":"::arch::RiscV::X5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22285,"byte_end":22287,"line_start":307,"line_end":307,"column_start":5,"column_end":7},"name":"X6","qualname":"::arch::RiscV::X6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22305,"byte_end":22307,"line_start":308,"line_end":308,"column_start":5,"column_end":7},"name":"X7","qualname":"::arch::RiscV::X7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4061},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22325,"byte_end":22327,"line_start":309,"line_end":309,"column_start":5,"column_end":7},"name":"X8","qualname":"::arch::RiscV::X8","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22345,"byte_end":22347,"line_start":310,"line_end":310,"column_start":5,"column_end":7},"name":"X9","qualname":"::arch::RiscV::X9","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22365,"byte_end":22368,"line_start":311,"line_end":311,"column_start":5,"column_end":8},"name":"X10","qualname":"::arch::RiscV::X10","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22388,"byte_end":22391,"line_start":312,"line_end":312,"column_start":5,"column_end":8},"name":"X11","qualname":"::arch::RiscV::X11","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22411,"byte_end":22414,"line_start":313,"line_end":313,"column_start":5,"column_end":8},"name":"X12","qualname":"::arch::RiscV::X12","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22434,"byte_end":22437,"line_start":314,"line_end":314,"column_start":5,"column_end":8},"name":"X13","qualname":"::arch::RiscV::X13","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22457,"byte_end":22460,"line_start":315,"line_end":315,"column_start":5,"column_end":8},"name":"X14","qualname":"::arch::RiscV::X14","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22480,"byte_end":22483,"line_start":316,"line_end":316,"column_start":5,"column_end":8},"name":"X15","qualname":"::arch::RiscV::X15","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22503,"byte_end":22506,"line_start":317,"line_end":317,"column_start":5,"column_end":8},"name":"X16","qualname":"::arch::RiscV::X16","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22526,"byte_end":22529,"line_start":318,"line_end":318,"column_start":5,"column_end":8},"name":"X17","qualname":"::arch::RiscV::X17","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4071},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22549,"byte_end":22552,"line_start":319,"line_end":319,"column_start":5,"column_end":8},"name":"X18","qualname":"::arch::RiscV::X18","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22572,"byte_end":22575,"line_start":320,"line_end":320,"column_start":5,"column_end":8},"name":"X19","qualname":"::arch::RiscV::X19","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4073},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22595,"byte_end":22598,"line_start":321,"line_end":321,"column_start":5,"column_end":8},"name":"X20","qualname":"::arch::RiscV::X20","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4074},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22618,"byte_end":22621,"line_start":322,"line_end":322,"column_start":5,"column_end":8},"name":"X21","qualname":"::arch::RiscV::X21","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22641,"byte_end":22644,"line_start":323,"line_end":323,"column_start":5,"column_end":8},"name":"X22","qualname":"::arch::RiscV::X22","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22664,"byte_end":22667,"line_start":324,"line_end":324,"column_start":5,"column_end":8},"name":"X23","qualname":"::arch::RiscV::X23","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22687,"byte_end":22690,"line_start":325,"line_end":325,"column_start":5,"column_end":8},"name":"X24","qualname":"::arch::RiscV::X24","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22710,"byte_end":22713,"line_start":326,"line_end":326,"column_start":5,"column_end":8},"name":"X25","qualname":"::arch::RiscV::X25","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4079},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22733,"byte_end":22736,"line_start":327,"line_end":327,"column_start":5,"column_end":8},"name":"X26","qualname":"::arch::RiscV::X26","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22756,"byte_end":22759,"line_start":328,"line_end":328,"column_start":5,"column_end":8},"name":"X27","qualname":"::arch::RiscV::X27","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22779,"byte_end":22782,"line_start":329,"line_end":329,"column_start":5,"column_end":8},"name":"X28","qualname":"::arch::RiscV::X28","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22802,"byte_end":22805,"line_start":330,"line_end":330,"column_start":5,"column_end":8},"name":"X29","qualname":"::arch::RiscV::X29","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22825,"byte_end":22828,"line_start":331,"line_end":331,"column_start":5,"column_end":8},"name":"X30","qualname":"::arch::RiscV::X30","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4084},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22848,"byte_end":22851,"line_start":332,"line_end":332,"column_start":5,"column_end":8},"name":"X31","qualname":"::arch::RiscV::X31","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4085},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22872,"byte_end":22874,"line_start":334,"line_end":334,"column_start":5,"column_end":7},"name":"F0","qualname":"::arch::RiscV::F0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22893,"byte_end":22895,"line_start":335,"line_end":335,"column_start":5,"column_end":7},"name":"F1","qualname":"::arch::RiscV::F1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22914,"byte_end":22916,"line_start":336,"line_end":336,"column_start":5,"column_end":7},"name":"F2","qualname":"::arch::RiscV::F2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22935,"byte_end":22937,"line_start":337,"line_end":337,"column_start":5,"column_end":7},"name":"F3","qualname":"::arch::RiscV::F3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4089},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22956,"byte_end":22958,"line_start":338,"line_end":338,"column_start":5,"column_end":7},"name":"F4","qualname":"::arch::RiscV::F4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22977,"byte_end":22979,"line_start":339,"line_end":339,"column_start":5,"column_end":7},"name":"F5","qualname":"::arch::RiscV::F5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":22998,"byte_end":23000,"line_start":340,"line_end":340,"column_start":5,"column_end":7},"name":"F6","qualname":"::arch::RiscV::F6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4092},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23019,"byte_end":23021,"line_start":341,"line_end":341,"column_start":5,"column_end":7},"name":"F7","qualname":"::arch::RiscV::F7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4093},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23040,"byte_end":23042,"line_start":342,"line_end":342,"column_start":5,"column_end":7},"name":"F8","qualname":"::arch::RiscV::F8","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23061,"byte_end":23063,"line_start":343,"line_end":343,"column_start":5,"column_end":7},"name":"F9","qualname":"::arch::RiscV::F9","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4095},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23082,"byte_end":23085,"line_start":344,"line_end":344,"column_start":5,"column_end":8},"name":"F10","qualname":"::arch::RiscV::F10","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4096},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23105,"byte_end":23108,"line_start":345,"line_end":345,"column_start":5,"column_end":8},"name":"F11","qualname":"::arch::RiscV::F11","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4097},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23128,"byte_end":23131,"line_start":346,"line_end":346,"column_start":5,"column_end":8},"name":"F12","qualname":"::arch::RiscV::F12","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4098},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23151,"byte_end":23154,"line_start":347,"line_end":347,"column_start":5,"column_end":8},"name":"F13","qualname":"::arch::RiscV::F13","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4099},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23174,"byte_end":23177,"line_start":348,"line_end":348,"column_start":5,"column_end":8},"name":"F14","qualname":"::arch::RiscV::F14","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4100},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23197,"byte_end":23200,"line_start":349,"line_end":349,"column_start":5,"column_end":8},"name":"F15","qualname":"::arch::RiscV::F15","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4101},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23220,"byte_end":23223,"line_start":350,"line_end":350,"column_start":5,"column_end":8},"name":"F16","qualname":"::arch::RiscV::F16","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23243,"byte_end":23246,"line_start":351,"line_end":351,"column_start":5,"column_end":8},"name":"F17","qualname":"::arch::RiscV::F17","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23266,"byte_end":23269,"line_start":352,"line_end":352,"column_start":5,"column_end":8},"name":"F18","qualname":"::arch::RiscV::F18","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23289,"byte_end":23292,"line_start":353,"line_end":353,"column_start":5,"column_end":8},"name":"F19","qualname":"::arch::RiscV::F19","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4105},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23312,"byte_end":23315,"line_start":354,"line_end":354,"column_start":5,"column_end":8},"name":"F20","qualname":"::arch::RiscV::F20","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4106},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23335,"byte_end":23338,"line_start":355,"line_end":355,"column_start":5,"column_end":8},"name":"F21","qualname":"::arch::RiscV::F21","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4107},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23358,"byte_end":23361,"line_start":356,"line_end":356,"column_start":5,"column_end":8},"name":"F22","qualname":"::arch::RiscV::F22","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23381,"byte_end":23384,"line_start":357,"line_end":357,"column_start":5,"column_end":8},"name":"F23","qualname":"::arch::RiscV::F23","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4109},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23404,"byte_end":23407,"line_start":358,"line_end":358,"column_start":5,"column_end":8},"name":"F24","qualname":"::arch::RiscV::F24","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23427,"byte_end":23430,"line_start":359,"line_end":359,"column_start":5,"column_end":8},"name":"F25","qualname":"::arch::RiscV::F25","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23450,"byte_end":23453,"line_start":360,"line_end":360,"column_start":5,"column_end":8},"name":"F26","qualname":"::arch::RiscV::F26","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23473,"byte_end":23476,"line_start":361,"line_end":361,"column_start":5,"column_end":8},"name":"F27","qualname":"::arch::RiscV::F27","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23496,"byte_end":23499,"line_start":362,"line_end":362,"column_start":5,"column_end":8},"name":"F28","qualname":"::arch::RiscV::F28","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23519,"byte_end":23522,"line_start":363,"line_end":363,"column_start":5,"column_end":8},"name":"F29","qualname":"::arch::RiscV::F29","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4115},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23542,"byte_end":23545,"line_start":364,"line_end":364,"column_start":5,"column_end":8},"name":"F30","qualname":"::arch::RiscV::F30","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23565,"byte_end":23568,"line_start":365,"line_end":365,"column_start":5,"column_end":8},"name":"F31","qualname":"::arch::RiscV::F31","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4117},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23601,"byte_end":23605,"line_start":368,"line_end":368,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::arch::RiscV::ZERO","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4118},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23625,"byte_end":23627,"line_start":369,"line_end":369,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::RiscV::RA","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23645,"byte_end":23647,"line_start":370,"line_end":370,"column_start":5,"column_end":7},"name":"SP","qualname":"::arch::RiscV::SP","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4120},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23665,"byte_end":23667,"line_start":371,"line_end":371,"column_start":5,"column_end":7},"name":"GP","qualname":"::arch::RiscV::GP","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23685,"byte_end":23687,"line_start":372,"line_end":372,"column_start":5,"column_end":7},"name":"TP","qualname":"::arch::RiscV::TP","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23705,"byte_end":23707,"line_start":373,"line_end":373,"column_start":5,"column_end":7},"name":"T0","qualname":"::arch::RiscV::T0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23725,"byte_end":23727,"line_start":374,"line_end":374,"column_start":5,"column_end":7},"name":"T1","qualname":"::arch::RiscV::T1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4124},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23745,"byte_end":23747,"line_start":375,"line_end":375,"column_start":5,"column_end":7},"name":"T2","qualname":"::arch::RiscV::T2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23765,"byte_end":23767,"line_start":376,"line_end":376,"column_start":5,"column_end":7},"name":"S0","qualname":"::arch::RiscV::S0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4126},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23785,"byte_end":23787,"line_start":377,"line_end":377,"column_start":5,"column_end":7},"name":"S1","qualname":"::arch::RiscV::S1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23805,"byte_end":23807,"line_start":378,"line_end":378,"column_start":5,"column_end":7},"name":"A0","qualname":"::arch::RiscV::A0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23826,"byte_end":23828,"line_start":379,"line_end":379,"column_start":5,"column_end":7},"name":"A1","qualname":"::arch::RiscV::A1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23847,"byte_end":23849,"line_start":380,"line_end":380,"column_start":5,"column_end":7},"name":"A2","qualname":"::arch::RiscV::A2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23868,"byte_end":23870,"line_start":381,"line_end":381,"column_start":5,"column_end":7},"name":"A3","qualname":"::arch::RiscV::A3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23889,"byte_end":23891,"line_start":382,"line_end":382,"column_start":5,"column_end":7},"name":"A4","qualname":"::arch::RiscV::A4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23910,"byte_end":23912,"line_start":383,"line_end":383,"column_start":5,"column_end":7},"name":"A5","qualname":"::arch::RiscV::A5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23931,"byte_end":23933,"line_start":384,"line_end":384,"column_start":5,"column_end":7},"name":"A6","qualname":"::arch::RiscV::A6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23952,"byte_end":23954,"line_start":385,"line_end":385,"column_start":5,"column_end":7},"name":"A7","qualname":"::arch::RiscV::A7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23973,"byte_end":23975,"line_start":386,"line_end":386,"column_start":5,"column_end":7},"name":"S2","qualname":"::arch::RiscV::S2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":23994,"byte_end":23996,"line_start":387,"line_end":387,"column_start":5,"column_end":7},"name":"S3","qualname":"::arch::RiscV::S3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4137},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24015,"byte_end":24017,"line_start":388,"line_end":388,"column_start":5,"column_end":7},"name":"S4","qualname":"::arch::RiscV::S4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4138},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24036,"byte_end":24038,"line_start":389,"line_end":389,"column_start":5,"column_end":7},"name":"S5","qualname":"::arch::RiscV::S5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4139},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24057,"byte_end":24059,"line_start":390,"line_end":390,"column_start":5,"column_end":7},"name":"S6","qualname":"::arch::RiscV::S6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24078,"byte_end":24080,"line_start":391,"line_end":391,"column_start":5,"column_end":7},"name":"S7","qualname":"::arch::RiscV::S7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24099,"byte_end":24101,"line_start":392,"line_end":392,"column_start":5,"column_end":7},"name":"S8","qualname":"::arch::RiscV::S8","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24120,"byte_end":24122,"line_start":393,"line_end":393,"column_start":5,"column_end":7},"name":"S9","qualname":"::arch::RiscV::S9","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24141,"byte_end":24144,"line_start":394,"line_end":394,"column_start":5,"column_end":8},"name":"S10","qualname":"::arch::RiscV::S10","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24164,"byte_end":24167,"line_start":395,"line_end":395,"column_start":5,"column_end":8},"name":"S11","qualname":"::arch::RiscV::S11","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24187,"byte_end":24189,"line_start":396,"line_end":396,"column_start":5,"column_end":7},"name":"T3","qualname":"::arch::RiscV::T3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4146},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24208,"byte_end":24210,"line_start":397,"line_end":397,"column_start":5,"column_end":7},"name":"T4","qualname":"::arch::RiscV::T4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24229,"byte_end":24231,"line_start":398,"line_end":398,"column_start":5,"column_end":7},"name":"T5","qualname":"::arch::RiscV::T5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24250,"byte_end":24252,"line_start":399,"line_end":399,"column_start":5,"column_end":7},"name":"T6","qualname":"::arch::RiscV::T6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4149},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24272,"byte_end":24275,"line_start":401,"line_end":401,"column_start":5,"column_end":8},"name":"FT0","qualname":"::arch::RiscV::FT0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24295,"byte_end":24298,"line_start":402,"line_end":402,"column_start":5,"column_end":8},"name":"FT1","qualname":"::arch::RiscV::FT1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24318,"byte_end":24321,"line_start":403,"line_end":403,"column_start":5,"column_end":8},"name":"FT2","qualname":"::arch::RiscV::FT2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4152},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24341,"byte_end":24344,"line_start":404,"line_end":404,"column_start":5,"column_end":8},"name":"FT3","qualname":"::arch::RiscV::FT3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24364,"byte_end":24367,"line_start":405,"line_end":405,"column_start":5,"column_end":8},"name":"FT4","qualname":"::arch::RiscV::FT4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4154},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24387,"byte_end":24390,"line_start":406,"line_end":406,"column_start":5,"column_end":8},"name":"FT5","qualname":"::arch::RiscV::FT5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4155},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24410,"byte_end":24413,"line_start":407,"line_end":407,"column_start":5,"column_end":8},"name":"FT6","qualname":"::arch::RiscV::FT6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4156},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24433,"byte_end":24436,"line_start":408,"line_end":408,"column_start":5,"column_end":8},"name":"FT7","qualname":"::arch::RiscV::FT7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4157},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24456,"byte_end":24459,"line_start":409,"line_end":409,"column_start":5,"column_end":8},"name":"FS0","qualname":"::arch::RiscV::FS0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4158},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24479,"byte_end":24482,"line_start":410,"line_end":410,"column_start":5,"column_end":8},"name":"FS1","qualname":"::arch::RiscV::FS1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24502,"byte_end":24505,"line_start":411,"line_end":411,"column_start":5,"column_end":8},"name":"FA0","qualname":"::arch::RiscV::FA0","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4160},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24525,"byte_end":24528,"line_start":412,"line_end":412,"column_start":5,"column_end":8},"name":"FA1","qualname":"::arch::RiscV::FA1","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4161},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24548,"byte_end":24551,"line_start":413,"line_end":413,"column_start":5,"column_end":8},"name":"FA2","qualname":"::arch::RiscV::FA2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24571,"byte_end":24574,"line_start":414,"line_end":414,"column_start":5,"column_end":8},"name":"FA3","qualname":"::arch::RiscV::FA3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4163},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24594,"byte_end":24597,"line_start":415,"line_end":415,"column_start":5,"column_end":8},"name":"FA4","qualname":"::arch::RiscV::FA4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4164},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24617,"byte_end":24620,"line_start":416,"line_end":416,"column_start":5,"column_end":8},"name":"FA5","qualname":"::arch::RiscV::FA5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4165},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24640,"byte_end":24643,"line_start":417,"line_end":417,"column_start":5,"column_end":8},"name":"FA6","qualname":"::arch::RiscV::FA6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4166},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24663,"byte_end":24666,"line_start":418,"line_end":418,"column_start":5,"column_end":8},"name":"FA7","qualname":"::arch::RiscV::FA7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4167},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24686,"byte_end":24689,"line_start":419,"line_end":419,"column_start":5,"column_end":8},"name":"FS2","qualname":"::arch::RiscV::FS2","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4168},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24709,"byte_end":24712,"line_start":420,"line_end":420,"column_start":5,"column_end":8},"name":"FS3","qualname":"::arch::RiscV::FS3","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4169},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24732,"byte_end":24735,"line_start":421,"line_end":421,"column_start":5,"column_end":8},"name":"FS4","qualname":"::arch::RiscV::FS4","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4170},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24755,"byte_end":24758,"line_start":422,"line_end":422,"column_start":5,"column_end":8},"name":"FS5","qualname":"::arch::RiscV::FS5","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4171},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24778,"byte_end":24781,"line_start":423,"line_end":423,"column_start":5,"column_end":8},"name":"FS6","qualname":"::arch::RiscV::FS6","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24801,"byte_end":24804,"line_start":424,"line_end":424,"column_start":5,"column_end":8},"name":"FS7","qualname":"::arch::RiscV::FS7","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4173},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24824,"byte_end":24827,"line_start":425,"line_end":425,"column_start":5,"column_end":8},"name":"FS8","qualname":"::arch::RiscV::FS8","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4174},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24847,"byte_end":24850,"line_start":426,"line_end":426,"column_start":5,"column_end":8},"name":"FS9","qualname":"::arch::RiscV::FS9","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24870,"byte_end":24874,"line_start":427,"line_end":427,"column_start":5,"column_end":9},"name":"FS10","qualname":"::arch::RiscV::FS10","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4176},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24895,"byte_end":24899,"line_start":428,"line_end":428,"column_start":5,"column_end":9},"name":"FS11","qualname":"::arch::RiscV::FS11","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4177},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24920,"byte_end":24923,"line_start":429,"line_end":429,"column_start":5,"column_end":8},"name":"FT8","qualname":"::arch::RiscV::FT8","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4178},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24943,"byte_end":24946,"line_start":430,"line_end":430,"column_start":5,"column_end":8},"name":"FT9","qualname":"::arch::RiscV::FT9","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4179},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24966,"byte_end":24970,"line_start":431,"line_end":431,"column_start":5,"column_end":9},"name":"FT10","qualname":"::arch::RiscV::FT10","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4180},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":24991,"byte_end":24995,"line_start":432,"line_end":432,"column_start":5,"column_end":9},"name":"FT11","qualname":"::arch::RiscV::FT11","value":"Register","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25227,"byte_end":25230,"line_start":439,"line_end":439,"column_start":12,"column_end":15},"name":"X86","qualname":"::arch::X86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Intel i386 architecture specific definitions.","sig":null,"attributes":[{"value":"/ Intel i386 architecture specific definitions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25017,"byte_end":25066,"line_start":435,"line_end":435,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25067,"byte_end":25070,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ See Intel386 psABi version 1.1 at the [X86 psABI wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25071,"byte_end":25185,"line_start":437,"line_end":437,"column_start":1,"column_end":115}}]},{"kind":"Const","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25255,"byte_end":25258,"line_start":442,"line_end":442,"column_start":5,"column_end":8},"name":"EAX","qualname":"::arch::X86::EAX","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25277,"byte_end":25280,"line_start":443,"line_end":443,"column_start":5,"column_end":8},"name":"ECX","qualname":"::arch::X86::ECX","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4194},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25299,"byte_end":25302,"line_start":444,"line_end":444,"column_start":5,"column_end":8},"name":"EDX","qualname":"::arch::X86::EDX","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25321,"byte_end":25324,"line_start":445,"line_end":445,"column_start":5,"column_end":8},"name":"EBX","qualname":"::arch::X86::EBX","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25343,"byte_end":25346,"line_start":446,"line_end":446,"column_start":5,"column_end":8},"name":"ESP","qualname":"::arch::X86::ESP","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25365,"byte_end":25368,"line_start":447,"line_end":447,"column_start":5,"column_end":8},"name":"EBP","qualname":"::arch::X86::EBP","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25387,"byte_end":25390,"line_start":448,"line_end":448,"column_start":5,"column_end":8},"name":"ESI","qualname":"::arch::X86::ESI","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25409,"byte_end":25412,"line_start":449,"line_end":449,"column_start":5,"column_end":8},"name":"EDI","qualname":"::arch::X86::EDI","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25528,"byte_end":25530,"line_start":452,"line_end":452,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86::RA","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25549,"byte_end":25552,"line_start":454,"line_end":454,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86::ST0","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25572,"byte_end":25575,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86::ST1","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25595,"byte_end":25598,"line_start":456,"line_end":456,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86::ST2","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25618,"byte_end":25621,"line_start":457,"line_end":457,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86::ST3","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25641,"byte_end":25644,"line_start":458,"line_end":458,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86::ST4","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25664,"byte_end":25667,"line_start":459,"line_end":459,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86::ST5","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25687,"byte_end":25690,"line_start":460,"line_end":460,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86::ST6","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25710,"byte_end":25713,"line_start":461,"line_end":461,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86::ST7","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25734,"byte_end":25738,"line_start":463,"line_end":463,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86::XMM0","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25759,"byte_end":25763,"line_start":464,"line_end":464,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86::XMM1","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25784,"byte_end":25788,"line_start":465,"line_end":465,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86::XMM2","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4212},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25809,"byte_end":25813,"line_start":466,"line_end":466,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86::XMM3","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25834,"byte_end":25838,"line_start":467,"line_end":467,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86::XMM4","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4214},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25859,"byte_end":25863,"line_start":468,"line_end":468,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86::XMM5","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25884,"byte_end":25888,"line_start":469,"line_end":469,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86::XMM6","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4216},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25909,"byte_end":25913,"line_start":470,"line_end":470,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86::XMM7","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25935,"byte_end":25938,"line_start":472,"line_end":472,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86::MM0","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25958,"byte_end":25961,"line_start":473,"line_end":473,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86::MM1","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4219},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":25981,"byte_end":25984,"line_start":474,"line_end":474,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86::MM2","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4220},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26004,"byte_end":26007,"line_start":475,"line_end":475,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86::MM3","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4221},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26027,"byte_end":26030,"line_start":476,"line_end":476,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86::MM4","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4222},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26050,"byte_end":26053,"line_start":477,"line_end":477,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86::MM5","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4223},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26073,"byte_end":26076,"line_start":478,"line_end":478,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86::MM6","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26096,"byte_end":26099,"line_start":479,"line_end":479,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86::MM7","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4225},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26120,"byte_end":26125,"line_start":481,"line_end":481,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86::MXCSR","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26148,"byte_end":26150,"line_start":483,"line_end":483,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86::ES","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26169,"byte_end":26171,"line_start":484,"line_end":484,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86::CS","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4228},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26190,"byte_end":26192,"line_start":485,"line_end":485,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86::SS","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4229},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26211,"byte_end":26213,"line_start":486,"line_end":486,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86::DS","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26232,"byte_end":26234,"line_start":487,"line_end":487,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86::FS","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26253,"byte_end":26255,"line_start":488,"line_end":488,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86::GS","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26275,"byte_end":26277,"line_start":490,"line_end":490,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86::TR","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26296,"byte_end":26300,"line_start":491,"line_end":491,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86::LDTR","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26322,"byte_end":26329,"line_start":493,"line_end":493,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86::FS_BASE","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26353,"byte_end":26360,"line_start":494,"line_end":494,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86::GS_BASE","value":"Register","parent":{"krate":0,"index":4191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26588,"byte_end":26594,"line_start":501,"line_end":501,"column_start":12,"column_end":18},"name":"X86_64","qualname":"::arch::X86_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" AMD64 architecture specific definitions.","sig":null,"attributes":[{"value":"/ AMD64 architecture specific definitions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26385,"byte_end":26429,"line_start":497,"line_end":497,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26430,"byte_end":26433,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ See x86-64 psABI version 1.0 at the [X86 psABI wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26434,"byte_end":26546,"line_start":499,"line_end":499,"column_start":1,"column_end":113}}]},{"kind":"Const","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26622,"byte_end":26625,"line_start":504,"line_end":504,"column_start":5,"column_end":8},"name":"RAX","qualname":"::arch::X86_64::RAX","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26644,"byte_end":26647,"line_start":505,"line_end":505,"column_start":5,"column_end":8},"name":"RDX","qualname":"::arch::X86_64::RDX","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26666,"byte_end":26669,"line_start":506,"line_end":506,"column_start":5,"column_end":8},"name":"RCX","qualname":"::arch::X86_64::RCX","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4250},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26688,"byte_end":26691,"line_start":507,"line_end":507,"column_start":5,"column_end":8},"name":"RBX","qualname":"::arch::X86_64::RBX","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26710,"byte_end":26713,"line_start":508,"line_end":508,"column_start":5,"column_end":8},"name":"RSI","qualname":"::arch::X86_64::RSI","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26732,"byte_end":26735,"line_start":509,"line_end":509,"column_start":5,"column_end":8},"name":"RDI","qualname":"::arch::X86_64::RDI","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26754,"byte_end":26757,"line_start":510,"line_end":510,"column_start":5,"column_end":8},"name":"RBP","qualname":"::arch::X86_64::RBP","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26776,"byte_end":26779,"line_start":511,"line_end":511,"column_start":5,"column_end":8},"name":"RSP","qualname":"::arch::X86_64::RSP","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26799,"byte_end":26801,"line_start":513,"line_end":513,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::X86_64::R8","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4256},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26819,"byte_end":26821,"line_start":514,"line_end":514,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::X86_64::R9","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26839,"byte_end":26842,"line_start":515,"line_end":515,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::X86_64::R10","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4258},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26862,"byte_end":26865,"line_start":516,"line_end":516,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::X86_64::R11","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4259},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26885,"byte_end":26888,"line_start":517,"line_end":517,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::X86_64::R12","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26908,"byte_end":26911,"line_start":518,"line_end":518,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::X86_64::R13","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4261},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26931,"byte_end":26934,"line_start":519,"line_end":519,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::X86_64::R14","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4262},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":26954,"byte_end":26957,"line_start":520,"line_end":520,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::X86_64::R15","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27074,"byte_end":27076,"line_start":523,"line_end":523,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86_64::RA","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4264},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27096,"byte_end":27100,"line_start":525,"line_end":525,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86_64::XMM0","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4265},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27121,"byte_end":27125,"line_start":526,"line_end":526,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86_64::XMM1","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4266},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27146,"byte_end":27150,"line_start":527,"line_end":527,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86_64::XMM2","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27171,"byte_end":27175,"line_start":528,"line_end":528,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86_64::XMM3","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4268},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27196,"byte_end":27200,"line_start":529,"line_end":529,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86_64::XMM4","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4269},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27221,"byte_end":27225,"line_start":530,"line_end":530,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86_64::XMM5","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4270},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27246,"byte_end":27250,"line_start":531,"line_end":531,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86_64::XMM6","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4271},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27271,"byte_end":27275,"line_start":532,"line_end":532,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86_64::XMM7","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27297,"byte_end":27301,"line_start":534,"line_end":534,"column_start":5,"column_end":9},"name":"XMM8","qualname":"::arch::X86_64::XMM8","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27322,"byte_end":27326,"line_start":535,"line_end":535,"column_start":5,"column_end":9},"name":"XMM9","qualname":"::arch::X86_64::XMM9","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27347,"byte_end":27352,"line_start":536,"line_end":536,"column_start":5,"column_end":10},"name":"XMM10","qualname":"::arch::X86_64::XMM10","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4275},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27374,"byte_end":27379,"line_start":537,"line_end":537,"column_start":5,"column_end":10},"name":"XMM11","qualname":"::arch::X86_64::XMM11","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27401,"byte_end":27406,"line_start":538,"line_end":538,"column_start":5,"column_end":10},"name":"XMM12","qualname":"::arch::X86_64::XMM12","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4277},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27428,"byte_end":27433,"line_start":539,"line_end":539,"column_start":5,"column_end":10},"name":"XMM13","qualname":"::arch::X86_64::XMM13","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27455,"byte_end":27460,"line_start":540,"line_end":540,"column_start":5,"column_end":10},"name":"XMM14","qualname":"::arch::X86_64::XMM14","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27482,"byte_end":27487,"line_start":541,"line_end":541,"column_start":5,"column_end":10},"name":"XMM15","qualname":"::arch::X86_64::XMM15","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27510,"byte_end":27513,"line_start":543,"line_end":543,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86_64::ST0","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27533,"byte_end":27536,"line_start":544,"line_end":544,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86_64::ST1","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27556,"byte_end":27559,"line_start":545,"line_end":545,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86_64::ST2","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27579,"byte_end":27582,"line_start":546,"line_end":546,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86_64::ST3","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27602,"byte_end":27605,"line_start":547,"line_end":547,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86_64::ST4","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27625,"byte_end":27628,"line_start":548,"line_end":548,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86_64::ST5","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27648,"byte_end":27651,"line_start":549,"line_end":549,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86_64::ST6","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4287},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27671,"byte_end":27674,"line_start":550,"line_end":550,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86_64::ST7","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27695,"byte_end":27698,"line_start":552,"line_end":552,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86_64::MM0","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4289},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27718,"byte_end":27721,"line_start":553,"line_end":553,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86_64::MM1","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4290},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27741,"byte_end":27744,"line_start":554,"line_end":554,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86_64::MM2","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27764,"byte_end":27767,"line_start":555,"line_end":555,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86_64::MM3","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4292},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27787,"byte_end":27790,"line_start":556,"line_end":556,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86_64::MM4","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27810,"byte_end":27813,"line_start":557,"line_end":557,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86_64::MM5","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4294},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27833,"byte_end":27836,"line_start":558,"line_end":558,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86_64::MM6","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27856,"byte_end":27859,"line_start":559,"line_end":559,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86_64::MM7","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27880,"byte_end":27886,"line_start":561,"line_end":561,"column_start":5,"column_end":11},"name":"RFLAGS","qualname":"::arch::X86_64::RFLAGS","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27909,"byte_end":27911,"line_start":562,"line_end":562,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86_64::ES","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27930,"byte_end":27932,"line_start":563,"line_end":563,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86_64::CS","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4299},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27951,"byte_end":27953,"line_start":564,"line_end":564,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86_64::SS","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27972,"byte_end":27974,"line_start":565,"line_end":565,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86_64::DS","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":27993,"byte_end":27995,"line_start":566,"line_end":566,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86_64::FS","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28014,"byte_end":28016,"line_start":567,"line_end":567,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86_64::GS","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4303},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28036,"byte_end":28043,"line_start":569,"line_end":569,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86_64::FS_BASE","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4304},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28067,"byte_end":28074,"line_start":570,"line_end":570,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86_64::GS_BASE","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28099,"byte_end":28101,"line_start":572,"line_end":572,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86_64::TR","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28120,"byte_end":28124,"line_start":573,"line_end":573,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86_64::LDTR","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4307},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28145,"byte_end":28150,"line_start":574,"line_end":574,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86_64::MXCSR","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28172,"byte_end":28175,"line_start":575,"line_end":575,"column_start":5,"column_end":8},"name":"FCW","qualname":"::arch::X86_64::FCW","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4309},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28195,"byte_end":28198,"line_start":576,"line_end":576,"column_start":5,"column_end":8},"name":"FSW","qualname":"::arch::X86_64::FSW","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28219,"byte_end":28224,"line_start":578,"line_end":578,"column_start":5,"column_end":10},"name":"XMM16","qualname":"::arch::X86_64::XMM16","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28246,"byte_end":28251,"line_start":579,"line_end":579,"column_start":5,"column_end":10},"name":"XMM17","qualname":"::arch::X86_64::XMM17","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28273,"byte_end":28278,"line_start":580,"line_end":580,"column_start":5,"column_end":10},"name":"XMM18","qualname":"::arch::X86_64::XMM18","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28300,"byte_end":28305,"line_start":581,"line_end":581,"column_start":5,"column_end":10},"name":"XMM19","qualname":"::arch::X86_64::XMM19","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28327,"byte_end":28332,"line_start":582,"line_end":582,"column_start":5,"column_end":10},"name":"XMM20","qualname":"::arch::X86_64::XMM20","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28354,"byte_end":28359,"line_start":583,"line_end":583,"column_start":5,"column_end":10},"name":"XMM21","qualname":"::arch::X86_64::XMM21","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28381,"byte_end":28386,"line_start":584,"line_end":584,"column_start":5,"column_end":10},"name":"XMM22","qualname":"::arch::X86_64::XMM22","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28408,"byte_end":28413,"line_start":585,"line_end":585,"column_start":5,"column_end":10},"name":"XMM23","qualname":"::arch::X86_64::XMM23","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28435,"byte_end":28440,"line_start":586,"line_end":586,"column_start":5,"column_end":10},"name":"XMM24","qualname":"::arch::X86_64::XMM24","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28462,"byte_end":28467,"line_start":587,"line_end":587,"column_start":5,"column_end":10},"name":"XMM25","qualname":"::arch::X86_64::XMM25","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28489,"byte_end":28494,"line_start":588,"line_end":588,"column_start":5,"column_end":10},"name":"XMM26","qualname":"::arch::X86_64::XMM26","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28516,"byte_end":28521,"line_start":589,"line_end":589,"column_start":5,"column_end":10},"name":"XMM27","qualname":"::arch::X86_64::XMM27","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28543,"byte_end":28548,"line_start":590,"line_end":590,"column_start":5,"column_end":10},"name":"XMM28","qualname":"::arch::X86_64::XMM28","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28570,"byte_end":28575,"line_start":591,"line_end":591,"column_start":5,"column_end":10},"name":"XMM29","qualname":"::arch::X86_64::XMM29","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28597,"byte_end":28602,"line_start":592,"line_end":592,"column_start":5,"column_end":10},"name":"XMM30","qualname":"::arch::X86_64::XMM30","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28624,"byte_end":28629,"line_start":593,"line_end":593,"column_start":5,"column_end":10},"name":"XMM31","qualname":"::arch::X86_64::XMM31","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4326},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28652,"byte_end":28654,"line_start":595,"line_end":595,"column_start":5,"column_end":7},"name":"K0","qualname":"::arch::X86_64::K0","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4327},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28674,"byte_end":28676,"line_start":596,"line_end":596,"column_start":5,"column_end":7},"name":"K1","qualname":"::arch::X86_64::K1","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4328},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28696,"byte_end":28698,"line_start":597,"line_end":597,"column_start":5,"column_end":7},"name":"K2","qualname":"::arch::X86_64::K2","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4329},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28718,"byte_end":28720,"line_start":598,"line_end":598,"column_start":5,"column_end":7},"name":"K3","qualname":"::arch::X86_64::K3","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4330},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28740,"byte_end":28742,"line_start":599,"line_end":599,"column_start":5,"column_end":7},"name":"K4","qualname":"::arch::X86_64::K4","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4331},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28762,"byte_end":28764,"line_start":600,"line_end":600,"column_start":5,"column_end":7},"name":"K5","qualname":"::arch::X86_64::K5","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4332},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28784,"byte_end":28786,"line_start":601,"line_end":601,"column_start":5,"column_end":7},"name":"K6","qualname":"::arch::X86_64::K6","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4333},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\arch.rs","byte_start":28806,"byte_end":28808,"line_start":602,"line_end":602,"column_start":5,"column_end":7},"name":"K7","qualname":"::arch::X86_64::K7","value":"Register","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4346},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4402},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4416},{"krate":0,"index":4419},{"krate":0,"index":4421},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4431},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4414},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4492},{"krate":0,"index":4494},{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4472},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4517},{"krate":0,"index":4520},{"krate":0,"index":4522},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4500},{"krate":0,"index":4641},{"krate":0,"index":4644},{"krate":0,"index":4646},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4661},{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4564},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4567},{"krate":0,"index":4568},{"krate":0,"index":4569},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4603},{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4639},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4937},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4947},{"krate":0,"index":4950},{"krate":0,"index":4952},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4819},{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4903},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4910},{"krate":0,"index":4911},{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4930},{"krate":0,"index":5006},{"krate":0,"index":5009},{"krate":0,"index":5011},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5024},{"krate":0,"index":5026},{"krate":0,"index":4954},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4960},{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4963},{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5004},{"krate":0,"index":5052},{"krate":0,"index":5055},{"krate":0,"index":5057},{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5067},{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5035},{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5050},{"krate":0,"index":5088},{"krate":0,"index":5091},{"krate":0,"index":5093},{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5103},{"krate":0,"index":5106},{"krate":0,"index":5108},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5086},{"krate":0,"index":5119},{"krate":0,"index":5122},{"krate":0,"index":5124},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5137},{"krate":0,"index":5139},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5117},{"krate":0,"index":5150},{"krate":0,"index":5153},{"krate":0,"index":5155},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5148},{"krate":0,"index":5179},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":5199},{"krate":0,"index":5172},{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5177},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":5213},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5223},{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5206},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":5257},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5235},{"krate":0,"index":5316},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5331},{"krate":0,"index":5334},{"krate":0,"index":5336},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5314},{"krate":0,"index":44},{"krate":0,"index":5343},{"krate":0,"index":5346},{"krate":0,"index":5348},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5358},{"krate":0,"index":5361},{"krate":0,"index":5363},{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5341},{"krate":0,"index":5373},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5391},{"krate":0,"index":5393},{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5371},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5411},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5426},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5404},{"krate":0,"index":5436},{"krate":0,"index":5439},{"krate":0,"index":5441},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5445},{"krate":0,"index":5448},{"krate":0,"index":5449},{"krate":0,"index":5451},{"krate":0,"index":5454},{"krate":0,"index":5456},{"krate":0,"index":5428},{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5432},{"krate":0,"index":5434},{"krate":0,"index":5464},{"krate":0,"index":5467},{"krate":0,"index":5469},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5479},{"krate":0,"index":5482},{"krate":0,"index":5484},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5462},{"krate":0,"index":5492},{"krate":0,"index":5495},{"krate":0,"index":5497},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5507},{"krate":0,"index":5510},{"krate":0,"index":5512},{"krate":0,"index":5486},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5490},{"krate":0,"index":5525},{"krate":0,"index":5528},{"krate":0,"index":5530},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5540},{"krate":0,"index":5543},{"krate":0,"index":5545},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5523},{"krate":0,"index":5554},{"krate":0,"index":5557},{"krate":0,"index":5559},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5563},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5569},{"krate":0,"index":5572},{"krate":0,"index":5574},{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5552},{"krate":0,"index":5592},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5590},{"krate":0,"index":5624},{"krate":0,"index":5627},{"krate":0,"index":5629},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5639},{"krate":0,"index":5642},{"krate":0,"index":5644},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5622},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5662},{"krate":0,"index":5664},{"krate":0,"index":5665},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5672},{"krate":0,"index":5675},{"krate":0,"index":5677},{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5655},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5712},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5695},{"krate":0,"index":5731},{"krate":0,"index":5734},{"krate":0,"index":5736},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5746},{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5729},{"krate":0,"index":5933},{"krate":0,"index":5936},{"krate":0,"index":5938},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5953},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5786},{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5795},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5844},{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5852},{"krate":0,"index":5853},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5931},{"krate":0,"index":5975},{"krate":0,"index":5978},{"krate":0,"index":5980},{"krate":0,"index":5982},{"krate":0,"index":5983},{"krate":0,"index":5984},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5990},{"krate":0,"index":5993},{"krate":0,"index":5995},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5973},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Constant definitions.","sig":null,"attributes":[{"value":"/ Constant definitions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29564,"byte_end":29589,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29590,"byte_end":29593,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The DWARF spec's `DW_AT_*` type is represented as `struct DwAt(u16)`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29594,"byte_end":29667,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ `DW_FORM_*` as `DwForm(u16)`, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29668,"byte_end":29706,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29707,"byte_end":29710,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ There are also exported const definitions for each constant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29711,"byte_end":29775,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29777,"byte_end":29810,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":29811,"byte_end":29834,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32006,"byte_end":32012,"line_start":104,"line_end":104,"column_start":1,"column_end":7},"name":"DwSect","qualname":"::constants::DwSect","value":"","parent":null,"children":[],"decl_id":null,"docs":" The section type field in a `.dwp` unit index.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4337},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32024,"byte_end":32036,"line_start":105,"line_end":105,"column_start":5,"column_end":17},"name":"DW_SECT_INFO","qualname":"::constants::DW_SECT_INFO","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4338},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32046,"byte_end":32060,"line_start":106,"line_end":106,"column_start":5,"column_end":19},"name":"DW_SECT_ABBREV","qualname":"::constants::DW_SECT_ABBREV","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32070,"byte_end":32082,"line_start":107,"line_end":107,"column_start":5,"column_end":17},"name":"DW_SECT_LINE","qualname":"::constants::DW_SECT_LINE","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4340},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32092,"byte_end":32108,"line_start":108,"line_end":108,"column_start":5,"column_end":21},"name":"DW_SECT_LOCLISTS","qualname":"::constants::DW_SECT_LOCLISTS","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4341},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32118,"byte_end":32137,"line_start":109,"line_end":109,"column_start":5,"column_end":24},"name":"DW_SECT_STR_OFFSETS","qualname":"::constants::DW_SECT_STR_OFFSETS","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4342},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32147,"byte_end":32160,"line_start":110,"line_end":110,"column_start":5,"column_end":18},"name":"DW_SECT_MACRO","qualname":"::constants::DW_SECT_MACRO","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4343},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32170,"byte_end":32186,"line_start":111,"line_end":111,"column_start":5,"column_end":21},"name":"DW_SECT_RNGLISTS","qualname":"::constants::DW_SECT_RNGLISTS","value":"DwSect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4382},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32268,"byte_end":32276,"line_start":116,"line_end":116,"column_start":1,"column_end":9},"name":"DwSectV2","qualname":"::constants::DwSectV2","value":"","parent":null,"children":[],"decl_id":null,"docs":" The section type field in a `.dwp` unit index with version 2.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4370},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32288,"byte_end":32303,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"DW_SECT_V2_INFO","qualname":"::constants::DW_SECT_V2_INFO","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4371},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32313,"byte_end":32329,"line_start":118,"line_end":118,"column_start":5,"column_end":21},"name":"DW_SECT_V2_TYPES","qualname":"::constants::DW_SECT_V2_TYPES","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4372},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32339,"byte_end":32356,"line_start":119,"line_end":119,"column_start":5,"column_end":22},"name":"DW_SECT_V2_ABBREV","qualname":"::constants::DW_SECT_V2_ABBREV","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4373},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32366,"byte_end":32381,"line_start":120,"line_end":120,"column_start":5,"column_end":20},"name":"DW_SECT_V2_LINE","qualname":"::constants::DW_SECT_V2_LINE","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4374},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32391,"byte_end":32405,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"DW_SECT_V2_LOC","qualname":"::constants::DW_SECT_V2_LOC","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4375},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32415,"byte_end":32437,"line_start":122,"line_end":122,"column_start":5,"column_end":27},"name":"DW_SECT_V2_STR_OFFSETS","qualname":"::constants::DW_SECT_V2_STR_OFFSETS","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4376},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32447,"byte_end":32465,"line_start":123,"line_end":123,"column_start":5,"column_end":23},"name":"DW_SECT_V2_MACINFO","qualname":"::constants::DW_SECT_V2_MACINFO","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4377},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32475,"byte_end":32491,"line_start":124,"line_end":124,"column_start":5,"column_end":21},"name":"DW_SECT_V2_MACRO","qualname":"::constants::DW_SECT_V2_MACRO","value":"DwSectV2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4416},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32587,"byte_end":32591,"line_start":131,"line_end":131,"column_start":1,"column_end":5},"name":"DwUt","qualname":"::constants::DwUt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The unit type field in a unit header.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4404},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32602,"byte_end":32615,"line_start":132,"line_end":132,"column_start":5,"column_end":18},"name":"DW_UT_compile","qualname":"::constants::DW_UT_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4405},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32628,"byte_end":32638,"line_start":133,"line_end":133,"column_start":5,"column_end":15},"name":"DW_UT_type","qualname":"::constants::DW_UT_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4406},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32651,"byte_end":32664,"line_start":134,"line_end":134,"column_start":5,"column_end":18},"name":"DW_UT_partial","qualname":"::constants::DW_UT_partial","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4407},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32677,"byte_end":32691,"line_start":135,"line_end":135,"column_start":5,"column_end":19},"name":"DW_UT_skeleton","qualname":"::constants::DW_UT_skeleton","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32704,"byte_end":32723,"line_start":136,"line_end":136,"column_start":5,"column_end":24},"name":"DW_UT_split_compile","qualname":"::constants::DW_UT_split_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32736,"byte_end":32752,"line_start":137,"line_end":137,"column_start":5,"column_end":21},"name":"DW_UT_split_type","qualname":"::constants::DW_UT_split_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4410},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32765,"byte_end":32778,"line_start":138,"line_end":138,"column_start":5,"column_end":18},"name":"DW_UT_lo_user","qualname":"::constants::DW_UT_lo_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":32791,"byte_end":32804,"line_start":139,"line_end":139,"column_start":5,"column_end":18},"name":"DW_UT_hi_user","qualname":"::constants::DW_UT_hi_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4474},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33201,"byte_end":33206,"line_start":150,"line_end":150,"column_start":1,"column_end":6},"name":"DwCfa","qualname":"::constants::DwCfa","value":"","parent":null,"children":[],"decl_id":null,"docs":" The opcode for a call frame instruction.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33217,"byte_end":33235,"line_start":151,"line_end":151,"column_start":5,"column_end":23},"name":"DW_CFA_advance_loc","qualname":"::constants::DW_CFA_advance_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4439},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33253,"byte_end":33266,"line_start":152,"line_end":152,"column_start":5,"column_end":18},"name":"DW_CFA_offset","qualname":"::constants::DW_CFA_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33284,"byte_end":33298,"line_start":153,"line_end":153,"column_start":5,"column_end":19},"name":"DW_CFA_restore","qualname":"::constants::DW_CFA_restore","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4441},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33316,"byte_end":33326,"line_start":154,"line_end":154,"column_start":5,"column_end":15},"name":"DW_CFA_nop","qualname":"::constants::DW_CFA_nop","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33336,"byte_end":33350,"line_start":155,"line_end":155,"column_start":5,"column_end":19},"name":"DW_CFA_set_loc","qualname":"::constants::DW_CFA_set_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4443},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33363,"byte_end":33382,"line_start":156,"line_end":156,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc1","qualname":"::constants::DW_CFA_advance_loc1","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33395,"byte_end":33414,"line_start":157,"line_end":157,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc2","qualname":"::constants::DW_CFA_advance_loc2","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4445},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33427,"byte_end":33446,"line_start":158,"line_end":158,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc4","qualname":"::constants::DW_CFA_advance_loc4","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4446},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33459,"byte_end":33481,"line_start":159,"line_end":159,"column_start":5,"column_end":27},"name":"DW_CFA_offset_extended","qualname":"::constants::DW_CFA_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4447},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33494,"byte_end":33517,"line_start":160,"line_end":160,"column_start":5,"column_end":28},"name":"DW_CFA_restore_extended","qualname":"::constants::DW_CFA_restore_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4448},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33530,"byte_end":33546,"line_start":161,"line_end":161,"column_start":5,"column_end":21},"name":"DW_CFA_undefined","qualname":"::constants::DW_CFA_undefined","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4449},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33559,"byte_end":33576,"line_start":162,"line_end":162,"column_start":5,"column_end":22},"name":"DW_CFA_same_value","qualname":"::constants::DW_CFA_same_value","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33589,"byte_end":33604,"line_start":163,"line_end":163,"column_start":5,"column_end":20},"name":"DW_CFA_register","qualname":"::constants::DW_CFA_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4451},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33617,"byte_end":33638,"line_start":164,"line_end":164,"column_start":5,"column_end":26},"name":"DW_CFA_remember_state","qualname":"::constants::DW_CFA_remember_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4452},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33651,"byte_end":33671,"line_start":165,"line_end":165,"column_start":5,"column_end":25},"name":"DW_CFA_restore_state","qualname":"::constants::DW_CFA_restore_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33684,"byte_end":33698,"line_start":166,"line_end":166,"column_start":5,"column_end":19},"name":"DW_CFA_def_cfa","qualname":"::constants::DW_CFA_def_cfa","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4454},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33711,"byte_end":33734,"line_start":167,"line_end":167,"column_start":5,"column_end":28},"name":"DW_CFA_def_cfa_register","qualname":"::constants::DW_CFA_def_cfa_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4455},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33747,"byte_end":33768,"line_start":168,"line_end":168,"column_start":5,"column_end":26},"name":"DW_CFA_def_cfa_offset","qualname":"::constants::DW_CFA_def_cfa_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4456},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33781,"byte_end":33806,"line_start":169,"line_end":169,"column_start":5,"column_end":30},"name":"DW_CFA_def_cfa_expression","qualname":"::constants::DW_CFA_def_cfa_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4457},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33819,"byte_end":33836,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"DW_CFA_expression","qualname":"::constants::DW_CFA_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33849,"byte_end":33874,"line_start":171,"line_end":171,"column_start":5,"column_end":30},"name":"DW_CFA_offset_extended_sf","qualname":"::constants::DW_CFA_offset_extended_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4459},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33887,"byte_end":33904,"line_start":172,"line_end":172,"column_start":5,"column_end":22},"name":"DW_CFA_def_cfa_sf","qualname":"::constants::DW_CFA_def_cfa_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4460},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33917,"byte_end":33941,"line_start":173,"line_end":173,"column_start":5,"column_end":29},"name":"DW_CFA_def_cfa_offset_sf","qualname":"::constants::DW_CFA_def_cfa_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33954,"byte_end":33971,"line_start":174,"line_end":174,"column_start":5,"column_end":22},"name":"DW_CFA_val_offset","qualname":"::constants::DW_CFA_val_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4462},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":33984,"byte_end":34004,"line_start":175,"line_end":175,"column_start":5,"column_end":25},"name":"DW_CFA_val_offset_sf","qualname":"::constants::DW_CFA_val_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4463},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34017,"byte_end":34038,"line_start":176,"line_end":176,"column_start":5,"column_end":26},"name":"DW_CFA_val_expression","qualname":"::constants::DW_CFA_val_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34052,"byte_end":34066,"line_start":178,"line_end":178,"column_start":5,"column_end":19},"name":"DW_CFA_lo_user","qualname":"::constants::DW_CFA_lo_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34079,"byte_end":34093,"line_start":179,"line_end":179,"column_start":5,"column_end":19},"name":"DW_CFA_hi_user","qualname":"::constants::DW_CFA_hi_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4466},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34107,"byte_end":34131,"line_start":181,"line_end":181,"column_start":5,"column_end":29},"name":"DW_CFA_MIPS_advance_loc8","qualname":"::constants::DW_CFA_MIPS_advance_loc8","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4467},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34144,"byte_end":34166,"line_start":182,"line_end":182,"column_start":5,"column_end":27},"name":"DW_CFA_GNU_window_save","qualname":"::constants::DW_CFA_GNU_window_save","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4468},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34179,"byte_end":34199,"line_start":183,"line_end":183,"column_start":5,"column_end":25},"name":"DW_CFA_GNU_args_size","qualname":"::constants::DW_CFA_GNU_args_size","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34212,"byte_end":34247,"line_start":184,"line_end":184,"column_start":5,"column_end":40},"name":"DW_CFA_GNU_negative_offset_extended","qualname":"::constants::DW_CFA_GNU_negative_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4502},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34362,"byte_end":34372,"line_start":191,"line_end":191,"column_start":1,"column_end":11},"name":"DwChildren","qualname":"::constants::DwChildren","value":"","parent":null,"children":[],"decl_id":null,"docs":" The child determination encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4496},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34383,"byte_end":34397,"line_start":192,"line_end":192,"column_start":5,"column_end":19},"name":"DW_CHILDREN_no","qualname":"::constants::DW_CHILDREN_no","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4497},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34407,"byte_end":34422,"line_start":193,"line_end":193,"column_start":5,"column_end":20},"name":"DW_CHILDREN_yes","qualname":"::constants::DW_CHILDREN_yes","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4641},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34518,"byte_end":34523,"line_start":200,"line_end":200,"column_start":1,"column_end":6},"name":"DwTag","qualname":"::constants::DwTag","value":"","parent":null,"children":[],"decl_id":null,"docs":" The tag encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4524},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34535,"byte_end":34546,"line_start":201,"line_end":201,"column_start":5,"column_end":16},"name":"DW_TAG_null","qualname":"::constants::DW_TAG_null","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4525},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34560,"byte_end":34577,"line_start":203,"line_end":203,"column_start":5,"column_end":22},"name":"DW_TAG_array_type","qualname":"::constants::DW_TAG_array_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4526},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34590,"byte_end":34607,"line_start":204,"line_end":204,"column_start":5,"column_end":22},"name":"DW_TAG_class_type","qualname":"::constants::DW_TAG_class_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4527},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34620,"byte_end":34638,"line_start":205,"line_end":205,"column_start":5,"column_end":23},"name":"DW_TAG_entry_point","qualname":"::constants::DW_TAG_entry_point","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4528},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34651,"byte_end":34674,"line_start":206,"line_end":206,"column_start":5,"column_end":28},"name":"DW_TAG_enumeration_type","qualname":"::constants::DW_TAG_enumeration_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4529},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34687,"byte_end":34710,"line_start":207,"line_end":207,"column_start":5,"column_end":28},"name":"DW_TAG_formal_parameter","qualname":"::constants::DW_TAG_formal_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4530},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34723,"byte_end":34750,"line_start":208,"line_end":208,"column_start":5,"column_end":32},"name":"DW_TAG_imported_declaration","qualname":"::constants::DW_TAG_imported_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34763,"byte_end":34775,"line_start":209,"line_end":209,"column_start":5,"column_end":17},"name":"DW_TAG_label","qualname":"::constants::DW_TAG_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4532},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34788,"byte_end":34808,"line_start":210,"line_end":210,"column_start":5,"column_end":25},"name":"DW_TAG_lexical_block","qualname":"::constants::DW_TAG_lexical_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4533},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34821,"byte_end":34834,"line_start":211,"line_end":211,"column_start":5,"column_end":18},"name":"DW_TAG_member","qualname":"::constants::DW_TAG_member","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4534},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34847,"byte_end":34866,"line_start":212,"line_end":212,"column_start":5,"column_end":24},"name":"DW_TAG_pointer_type","qualname":"::constants::DW_TAG_pointer_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4535},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34879,"byte_end":34900,"line_start":213,"line_end":213,"column_start":5,"column_end":26},"name":"DW_TAG_reference_type","qualname":"::constants::DW_TAG_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4536},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34913,"byte_end":34932,"line_start":214,"line_end":214,"column_start":5,"column_end":24},"name":"DW_TAG_compile_unit","qualname":"::constants::DW_TAG_compile_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34945,"byte_end":34963,"line_start":215,"line_end":215,"column_start":5,"column_end":23},"name":"DW_TAG_string_type","qualname":"::constants::DW_TAG_string_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4538},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":34976,"byte_end":34997,"line_start":216,"line_end":216,"column_start":5,"column_end":26},"name":"DW_TAG_structure_type","qualname":"::constants::DW_TAG_structure_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35010,"byte_end":35032,"line_start":217,"line_end":217,"column_start":5,"column_end":27},"name":"DW_TAG_subroutine_type","qualname":"::constants::DW_TAG_subroutine_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4540},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35045,"byte_end":35059,"line_start":218,"line_end":218,"column_start":5,"column_end":19},"name":"DW_TAG_typedef","qualname":"::constants::DW_TAG_typedef","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35072,"byte_end":35089,"line_start":219,"line_end":219,"column_start":5,"column_end":22},"name":"DW_TAG_union_type","qualname":"::constants::DW_TAG_union_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4542},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35102,"byte_end":35131,"line_start":220,"line_end":220,"column_start":5,"column_end":34},"name":"DW_TAG_unspecified_parameters","qualname":"::constants::DW_TAG_unspecified_parameters","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4543},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35144,"byte_end":35158,"line_start":221,"line_end":221,"column_start":5,"column_end":19},"name":"DW_TAG_variant","qualname":"::constants::DW_TAG_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4544},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35171,"byte_end":35190,"line_start":222,"line_end":222,"column_start":5,"column_end":24},"name":"DW_TAG_common_block","qualname":"::constants::DW_TAG_common_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35203,"byte_end":35226,"line_start":223,"line_end":223,"column_start":5,"column_end":28},"name":"DW_TAG_common_inclusion","qualname":"::constants::DW_TAG_common_inclusion","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35239,"byte_end":35257,"line_start":224,"line_end":224,"column_start":5,"column_end":23},"name":"DW_TAG_inheritance","qualname":"::constants::DW_TAG_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4547},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35270,"byte_end":35295,"line_start":225,"line_end":225,"column_start":5,"column_end":30},"name":"DW_TAG_inlined_subroutine","qualname":"::constants::DW_TAG_inlined_subroutine","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4548},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35308,"byte_end":35321,"line_start":226,"line_end":226,"column_start":5,"column_end":18},"name":"DW_TAG_module","qualname":"::constants::DW_TAG_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35334,"byte_end":35359,"line_start":227,"line_end":227,"column_start":5,"column_end":30},"name":"DW_TAG_ptr_to_member_type","qualname":"::constants::DW_TAG_ptr_to_member_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4550},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35372,"byte_end":35387,"line_start":228,"line_end":228,"column_start":5,"column_end":20},"name":"DW_TAG_set_type","qualname":"::constants::DW_TAG_set_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4551},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35400,"byte_end":35420,"line_start":229,"line_end":229,"column_start":5,"column_end":25},"name":"DW_TAG_subrange_type","qualname":"::constants::DW_TAG_subrange_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4552},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35433,"byte_end":35449,"line_start":230,"line_end":230,"column_start":5,"column_end":21},"name":"DW_TAG_with_stmt","qualname":"::constants::DW_TAG_with_stmt","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35462,"byte_end":35487,"line_start":231,"line_end":231,"column_start":5,"column_end":30},"name":"DW_TAG_access_declaration","qualname":"::constants::DW_TAG_access_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4554},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35500,"byte_end":35516,"line_start":232,"line_end":232,"column_start":5,"column_end":21},"name":"DW_TAG_base_type","qualname":"::constants::DW_TAG_base_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4555},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35529,"byte_end":35547,"line_start":233,"line_end":233,"column_start":5,"column_end":23},"name":"DW_TAG_catch_block","qualname":"::constants::DW_TAG_catch_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4556},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35560,"byte_end":35577,"line_start":234,"line_end":234,"column_start":5,"column_end":22},"name":"DW_TAG_const_type","qualname":"::constants::DW_TAG_const_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4557},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35590,"byte_end":35605,"line_start":235,"line_end":235,"column_start":5,"column_end":20},"name":"DW_TAG_constant","qualname":"::constants::DW_TAG_constant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4558},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35618,"byte_end":35635,"line_start":236,"line_end":236,"column_start":5,"column_end":22},"name":"DW_TAG_enumerator","qualname":"::constants::DW_TAG_enumerator","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4559},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35648,"byte_end":35664,"line_start":237,"line_end":237,"column_start":5,"column_end":21},"name":"DW_TAG_file_type","qualname":"::constants::DW_TAG_file_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4560},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35677,"byte_end":35690,"line_start":238,"line_end":238,"column_start":5,"column_end":18},"name":"DW_TAG_friend","qualname":"::constants::DW_TAG_friend","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35703,"byte_end":35718,"line_start":239,"line_end":239,"column_start":5,"column_end":20},"name":"DW_TAG_namelist","qualname":"::constants::DW_TAG_namelist","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35731,"byte_end":35751,"line_start":240,"line_end":240,"column_start":5,"column_end":25},"name":"DW_TAG_namelist_item","qualname":"::constants::DW_TAG_namelist_item","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35764,"byte_end":35782,"line_start":241,"line_end":241,"column_start":5,"column_end":23},"name":"DW_TAG_packed_type","qualname":"::constants::DW_TAG_packed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4564},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35795,"byte_end":35812,"line_start":242,"line_end":242,"column_start":5,"column_end":22},"name":"DW_TAG_subprogram","qualname":"::constants::DW_TAG_subprogram","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4565},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35825,"byte_end":35855,"line_start":243,"line_end":243,"column_start":5,"column_end":35},"name":"DW_TAG_template_type_parameter","qualname":"::constants::DW_TAG_template_type_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35868,"byte_end":35899,"line_start":244,"line_end":244,"column_start":5,"column_end":36},"name":"DW_TAG_template_value_parameter","qualname":"::constants::DW_TAG_template_value_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4567},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35912,"byte_end":35930,"line_start":245,"line_end":245,"column_start":5,"column_end":23},"name":"DW_TAG_thrown_type","qualname":"::constants::DW_TAG_thrown_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4568},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35943,"byte_end":35959,"line_start":246,"line_end":246,"column_start":5,"column_end":21},"name":"DW_TAG_try_block","qualname":"::constants::DW_TAG_try_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4569},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":35972,"byte_end":35991,"line_start":247,"line_end":247,"column_start":5,"column_end":24},"name":"DW_TAG_variant_part","qualname":"::constants::DW_TAG_variant_part","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4570},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36004,"byte_end":36019,"line_start":248,"line_end":248,"column_start":5,"column_end":20},"name":"DW_TAG_variable","qualname":"::constants::DW_TAG_variable","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4571},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36032,"byte_end":36052,"line_start":249,"line_end":249,"column_start":5,"column_end":25},"name":"DW_TAG_volatile_type","qualname":"::constants::DW_TAG_volatile_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4572},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36078,"byte_end":36100,"line_start":252,"line_end":252,"column_start":5,"column_end":27},"name":"DW_TAG_dwarf_procedure","qualname":"::constants::DW_TAG_dwarf_procedure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4573},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36113,"byte_end":36133,"line_start":253,"line_end":253,"column_start":5,"column_end":25},"name":"DW_TAG_restrict_type","qualname":"::constants::DW_TAG_restrict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4574},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36146,"byte_end":36167,"line_start":254,"line_end":254,"column_start":5,"column_end":26},"name":"DW_TAG_interface_type","qualname":"::constants::DW_TAG_interface_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4575},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36180,"byte_end":36196,"line_start":255,"line_end":255,"column_start":5,"column_end":21},"name":"DW_TAG_namespace","qualname":"::constants::DW_TAG_namespace","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4576},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36209,"byte_end":36231,"line_start":256,"line_end":256,"column_start":5,"column_end":27},"name":"DW_TAG_imported_module","qualname":"::constants::DW_TAG_imported_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4577},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36244,"byte_end":36267,"line_start":257,"line_end":257,"column_start":5,"column_end":28},"name":"DW_TAG_unspecified_type","qualname":"::constants::DW_TAG_unspecified_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4578},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36280,"byte_end":36299,"line_start":258,"line_end":258,"column_start":5,"column_end":24},"name":"DW_TAG_partial_unit","qualname":"::constants::DW_TAG_partial_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4579},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36312,"byte_end":36332,"line_start":259,"line_end":259,"column_start":5,"column_end":25},"name":"DW_TAG_imported_unit","qualname":"::constants::DW_TAG_imported_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4580},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36345,"byte_end":36361,"line_start":260,"line_end":260,"column_start":5,"column_end":21},"name":"DW_TAG_condition","qualname":"::constants::DW_TAG_condition","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4581},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36374,"byte_end":36392,"line_start":261,"line_end":261,"column_start":5,"column_end":23},"name":"DW_TAG_shared_type","qualname":"::constants::DW_TAG_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4582},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36418,"byte_end":36434,"line_start":264,"line_end":264,"column_start":5,"column_end":21},"name":"DW_TAG_type_unit","qualname":"::constants::DW_TAG_type_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4583},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36447,"byte_end":36475,"line_start":265,"line_end":265,"column_start":5,"column_end":33},"name":"DW_TAG_rvalue_reference_type","qualname":"::constants::DW_TAG_rvalue_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4584},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36488,"byte_end":36509,"line_start":266,"line_end":266,"column_start":5,"column_end":26},"name":"DW_TAG_template_alias","qualname":"::constants::DW_TAG_template_alias","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4585},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36535,"byte_end":36554,"line_start":269,"line_end":269,"column_start":5,"column_end":24},"name":"DW_TAG_coarray_type","qualname":"::constants::DW_TAG_coarray_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4586},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36567,"byte_end":36590,"line_start":270,"line_end":270,"column_start":5,"column_end":28},"name":"DW_TAG_generic_subrange","qualname":"::constants::DW_TAG_generic_subrange","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4587},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36603,"byte_end":36622,"line_start":271,"line_end":271,"column_start":5,"column_end":24},"name":"DW_TAG_dynamic_type","qualname":"::constants::DW_TAG_dynamic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36635,"byte_end":36653,"line_start":272,"line_end":272,"column_start":5,"column_end":23},"name":"DW_TAG_atomic_type","qualname":"::constants::DW_TAG_atomic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4589},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36666,"byte_end":36682,"line_start":273,"line_end":273,"column_start":5,"column_end":21},"name":"DW_TAG_call_site","qualname":"::constants::DW_TAG_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4590},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36695,"byte_end":36721,"line_start":274,"line_end":274,"column_start":5,"column_end":31},"name":"DW_TAG_call_site_parameter","qualname":"::constants::DW_TAG_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4591},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36734,"byte_end":36754,"line_start":275,"line_end":275,"column_start":5,"column_end":25},"name":"DW_TAG_skeleton_unit","qualname":"::constants::DW_TAG_skeleton_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4592},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36767,"byte_end":36788,"line_start":276,"line_end":276,"column_start":5,"column_end":26},"name":"DW_TAG_immutable_type","qualname":"::constants::DW_TAG_immutable_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4593},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36802,"byte_end":36816,"line_start":278,"line_end":278,"column_start":5,"column_end":19},"name":"DW_TAG_lo_user","qualname":"::constants::DW_TAG_lo_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4594},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36831,"byte_end":36845,"line_start":279,"line_end":279,"column_start":5,"column_end":19},"name":"DW_TAG_hi_user","qualname":"::constants::DW_TAG_hi_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4595},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36885,"byte_end":36901,"line_start":282,"line_end":282,"column_start":5,"column_end":21},"name":"DW_TAG_MIPS_loop","qualname":"::constants::DW_TAG_MIPS_loop","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36935,"byte_end":36961,"line_start":285,"line_end":285,"column_start":5,"column_end":31},"name":"DW_TAG_HP_array_descriptor","qualname":"::constants::DW_TAG_HP_array_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":36976,"byte_end":36997,"line_start":286,"line_end":286,"column_start":5,"column_end":26},"name":"DW_TAG_HP_Bliss_field","qualname":"::constants::DW_TAG_HP_Bliss_field","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37012,"byte_end":37037,"line_start":287,"line_end":287,"column_start":5,"column_end":30},"name":"DW_TAG_HP_Bliss_field_set","qualname":"::constants::DW_TAG_HP_Bliss_field_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4599},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37072,"byte_end":37091,"line_start":290,"line_end":290,"column_start":5,"column_end":24},"name":"DW_TAG_format_label","qualname":"::constants::DW_TAG_format_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4600},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37106,"byte_end":37130,"line_start":291,"line_end":291,"column_start":5,"column_end":29},"name":"DW_TAG_function_template","qualname":"::constants::DW_TAG_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37145,"byte_end":37166,"line_start":292,"line_end":292,"column_start":5,"column_end":26},"name":"DW_TAG_class_template","qualname":"::constants::DW_TAG_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4602},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37181,"byte_end":37197,"line_start":293,"line_end":293,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_BINCL","qualname":"::constants::DW_TAG_GNU_BINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4603},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37212,"byte_end":37228,"line_start":294,"line_end":294,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_EINCL","qualname":"::constants::DW_TAG_GNU_EINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4604},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37243,"byte_end":37277,"line_start":295,"line_end":295,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_template_param","qualname":"::constants::DW_TAG_GNU_template_template_param","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4605},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37292,"byte_end":37326,"line_start":296,"line_end":296,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_parameter_pack","qualname":"::constants::DW_TAG_GNU_template_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4606},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37341,"byte_end":37373,"line_start":297,"line_end":297,"column_start":5,"column_end":37},"name":"DW_TAG_GNU_formal_parameter_pack","qualname":"::constants::DW_TAG_GNU_formal_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4607},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37388,"byte_end":37408,"line_start":298,"line_end":298,"column_start":5,"column_end":25},"name":"DW_TAG_GNU_call_site","qualname":"::constants::DW_TAG_GNU_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37423,"byte_end":37453,"line_start":299,"line_end":299,"column_start":5,"column_end":35},"name":"DW_TAG_GNU_call_site_parameter","qualname":"::constants::DW_TAG_GNU_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4609},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37469,"byte_end":37490,"line_start":301,"line_end":301,"column_start":5,"column_end":26},"name":"DW_TAG_APPLE_property","qualname":"::constants::DW_TAG_APPLE_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4610},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37525,"byte_end":37553,"line_start":304,"line_end":304,"column_start":5,"column_end":33},"name":"DW_TAG_SUN_function_template","qualname":"::constants::DW_TAG_SUN_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4611},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37568,"byte_end":37593,"line_start":305,"line_end":305,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_class_template","qualname":"::constants::DW_TAG_SUN_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4612},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37608,"byte_end":37634,"line_start":306,"line_end":306,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_struct_template","qualname":"::constants::DW_TAG_SUN_struct_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4613},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37649,"byte_end":37674,"line_start":307,"line_end":307,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_union_template","qualname":"::constants::DW_TAG_SUN_union_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4614},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37689,"byte_end":37720,"line_start":308,"line_end":308,"column_start":5,"column_end":36},"name":"DW_TAG_SUN_indirect_inheritance","qualname":"::constants::DW_TAG_SUN_indirect_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4615},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37735,"byte_end":37755,"line_start":309,"line_end":309,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_codeflags","qualname":"::constants::DW_TAG_SUN_codeflags","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37770,"byte_end":37791,"line_start":310,"line_end":310,"column_start":5,"column_end":26},"name":"DW_TAG_SUN_memop_info","qualname":"::constants::DW_TAG_SUN_memop_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4617},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37806,"byte_end":37831,"line_start":311,"line_end":311,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_omp_child_func","qualname":"::constants::DW_TAG_SUN_omp_child_func","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4618},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37846,"byte_end":37872,"line_start":312,"line_end":312,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_rtti_descriptor","qualname":"::constants::DW_TAG_SUN_rtti_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4619},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37887,"byte_end":37907,"line_start":313,"line_end":313,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_dtor_info","qualname":"::constants::DW_TAG_SUN_dtor_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4620},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37922,"byte_end":37937,"line_start":314,"line_end":314,"column_start":5,"column_end":20},"name":"DW_TAG_SUN_dtor","qualname":"::constants::DW_TAG_SUN_dtor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4621},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37952,"byte_end":37976,"line_start":315,"line_end":315,"column_start":5,"column_end":29},"name":"DW_TAG_SUN_f90_interface","qualname":"::constants::DW_TAG_SUN_f90_interface","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":37991,"byte_end":38023,"line_start":316,"line_end":316,"column_start":5,"column_end":37},"name":"DW_TAG_SUN_fortran_vax_structure","qualname":"::constants::DW_TAG_SUN_fortran_vax_structure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4623},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38061,"byte_end":38084,"line_start":319,"line_end":319,"column_start":5,"column_end":28},"name":"DW_TAG_ALTIUM_circ_type","qualname":"::constants::DW_TAG_ALTIUM_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4624},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38099,"byte_end":38126,"line_start":320,"line_end":320,"column_start":5,"column_end":32},"name":"DW_TAG_ALTIUM_mwa_circ_type","qualname":"::constants::DW_TAG_ALTIUM_mwa_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4625},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38141,"byte_end":38169,"line_start":321,"line_end":321,"column_start":5,"column_end":33},"name":"DW_TAG_ALTIUM_rev_carry_type","qualname":"::constants::DW_TAG_ALTIUM_rev_carry_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38184,"byte_end":38201,"line_start":322,"line_end":322,"column_start":5,"column_end":22},"name":"DW_TAG_ALTIUM_rom","qualname":"::constants::DW_TAG_ALTIUM_rom","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4627},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38240,"byte_end":38262,"line_start":325,"line_end":325,"column_start":5,"column_end":27},"name":"DW_TAG_upc_shared_type","qualname":"::constants::DW_TAG_upc_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4628},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38277,"byte_end":38299,"line_start":326,"line_end":326,"column_start":5,"column_end":27},"name":"DW_TAG_upc_strict_type","qualname":"::constants::DW_TAG_upc_strict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38314,"byte_end":38337,"line_start":327,"line_end":327,"column_start":5,"column_end":28},"name":"DW_TAG_upc_relaxed_type","qualname":"::constants::DW_TAG_upc_relaxed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38393,"byte_end":38414,"line_start":330,"line_end":330,"column_start":5,"column_end":26},"name":"DW_TAG_PGI_kanji_type","qualname":"::constants::DW_TAG_PGI_kanji_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4631},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38429,"byte_end":38455,"line_start":331,"line_end":331,"column_start":5,"column_end":31},"name":"DW_TAG_PGI_interface_block","qualname":"::constants::DW_TAG_PGI_interface_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4632},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38494,"byte_end":38517,"line_start":334,"line_end":334,"column_start":5,"column_end":28},"name":"DW_TAG_BORLAND_property","qualname":"::constants::DW_TAG_BORLAND_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38532,"byte_end":38560,"line_start":335,"line_end":335,"column_start":5,"column_end":33},"name":"DW_TAG_BORLAND_Delphi_string","qualname":"::constants::DW_TAG_BORLAND_Delphi_string","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38575,"byte_end":38610,"line_start":336,"line_end":336,"column_start":5,"column_end":40},"name":"DW_TAG_BORLAND_Delphi_dynamic_array","qualname":"::constants::DW_TAG_BORLAND_Delphi_dynamic_array","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38625,"byte_end":38650,"line_start":337,"line_end":337,"column_start":5,"column_end":30},"name":"DW_TAG_BORLAND_Delphi_set","qualname":"::constants::DW_TAG_BORLAND_Delphi_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38665,"byte_end":38694,"line_start":338,"line_end":338,"column_start":5,"column_end":34},"name":"DW_TAG_BORLAND_Delphi_variant","qualname":"::constants::DW_TAG_BORLAND_Delphi_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38801,"byte_end":38805,"line_start":345,"line_end":345,"column_start":1,"column_end":5},"name":"DwAt","qualname":"::constants::DwAt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4663},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38817,"byte_end":38827,"line_start":346,"line_end":346,"column_start":5,"column_end":15},"name":"DW_AT_null","qualname":"::constants::DW_AT_null","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38841,"byte_end":38854,"line_start":348,"line_end":348,"column_start":5,"column_end":18},"name":"DW_AT_sibling","qualname":"::constants::DW_AT_sibling","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4665},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38867,"byte_end":38881,"line_start":349,"line_end":349,"column_start":5,"column_end":19},"name":"DW_AT_location","qualname":"::constants::DW_AT_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38894,"byte_end":38904,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"DW_AT_name","qualname":"::constants::DW_AT_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38917,"byte_end":38931,"line_start":351,"line_end":351,"column_start":5,"column_end":19},"name":"DW_AT_ordering","qualname":"::constants::DW_AT_ordering","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38944,"byte_end":38959,"line_start":352,"line_end":352,"column_start":5,"column_end":20},"name":"DW_AT_byte_size","qualname":"::constants::DW_AT_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":38972,"byte_end":38988,"line_start":353,"line_end":353,"column_start":5,"column_end":21},"name":"DW_AT_bit_offset","qualname":"::constants::DW_AT_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4670},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39001,"byte_end":39015,"line_start":354,"line_end":354,"column_start":5,"column_end":19},"name":"DW_AT_bit_size","qualname":"::constants::DW_AT_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39028,"byte_end":39043,"line_start":355,"line_end":355,"column_start":5,"column_end":20},"name":"DW_AT_stmt_list","qualname":"::constants::DW_AT_stmt_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4672},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39056,"byte_end":39068,"line_start":356,"line_end":356,"column_start":5,"column_end":17},"name":"DW_AT_low_pc","qualname":"::constants::DW_AT_low_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39081,"byte_end":39094,"line_start":357,"line_end":357,"column_start":5,"column_end":18},"name":"DW_AT_high_pc","qualname":"::constants::DW_AT_high_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39107,"byte_end":39121,"line_start":358,"line_end":358,"column_start":5,"column_end":19},"name":"DW_AT_language","qualname":"::constants::DW_AT_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39134,"byte_end":39145,"line_start":359,"line_end":359,"column_start":5,"column_end":16},"name":"DW_AT_discr","qualname":"::constants::DW_AT_discr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39158,"byte_end":39175,"line_start":360,"line_end":360,"column_start":5,"column_end":22},"name":"DW_AT_discr_value","qualname":"::constants::DW_AT_discr_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39188,"byte_end":39204,"line_start":361,"line_end":361,"column_start":5,"column_end":21},"name":"DW_AT_visibility","qualname":"::constants::DW_AT_visibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39217,"byte_end":39229,"line_start":362,"line_end":362,"column_start":5,"column_end":17},"name":"DW_AT_import","qualname":"::constants::DW_AT_import","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39242,"byte_end":39261,"line_start":363,"line_end":363,"column_start":5,"column_end":24},"name":"DW_AT_string_length","qualname":"::constants::DW_AT_string_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39274,"byte_end":39296,"line_start":364,"line_end":364,"column_start":5,"column_end":27},"name":"DW_AT_common_reference","qualname":"::constants::DW_AT_common_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39309,"byte_end":39323,"line_start":365,"line_end":365,"column_start":5,"column_end":19},"name":"DW_AT_comp_dir","qualname":"::constants::DW_AT_comp_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39336,"byte_end":39353,"line_start":366,"line_end":366,"column_start":5,"column_end":22},"name":"DW_AT_const_value","qualname":"::constants::DW_AT_const_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4683},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39366,"byte_end":39387,"line_start":367,"line_end":367,"column_start":5,"column_end":26},"name":"DW_AT_containing_type","qualname":"::constants::DW_AT_containing_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39400,"byte_end":39419,"line_start":368,"line_end":368,"column_start":5,"column_end":24},"name":"DW_AT_default_value","qualname":"::constants::DW_AT_default_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39432,"byte_end":39444,"line_start":369,"line_end":369,"column_start":5,"column_end":17},"name":"DW_AT_inline","qualname":"::constants::DW_AT_inline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4686},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39457,"byte_end":39474,"line_start":370,"line_end":370,"column_start":5,"column_end":22},"name":"DW_AT_is_optional","qualname":"::constants::DW_AT_is_optional","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4687},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39487,"byte_end":39504,"line_start":371,"line_end":371,"column_start":5,"column_end":22},"name":"DW_AT_lower_bound","qualname":"::constants::DW_AT_lower_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39517,"byte_end":39531,"line_start":372,"line_end":372,"column_start":5,"column_end":19},"name":"DW_AT_producer","qualname":"::constants::DW_AT_producer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4689},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39544,"byte_end":39560,"line_start":373,"line_end":373,"column_start":5,"column_end":21},"name":"DW_AT_prototyped","qualname":"::constants::DW_AT_prototyped","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4690},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39573,"byte_end":39590,"line_start":374,"line_end":374,"column_start":5,"column_end":22},"name":"DW_AT_return_addr","qualname":"::constants::DW_AT_return_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4691},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39603,"byte_end":39620,"line_start":375,"line_end":375,"column_start":5,"column_end":22},"name":"DW_AT_start_scope","qualname":"::constants::DW_AT_start_scope","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39633,"byte_end":39649,"line_start":376,"line_end":376,"column_start":5,"column_end":21},"name":"DW_AT_bit_stride","qualname":"::constants::DW_AT_bit_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4693},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39662,"byte_end":39679,"line_start":377,"line_end":377,"column_start":5,"column_end":22},"name":"DW_AT_upper_bound","qualname":"::constants::DW_AT_upper_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4694},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39692,"byte_end":39713,"line_start":378,"line_end":378,"column_start":5,"column_end":26},"name":"DW_AT_abstract_origin","qualname":"::constants::DW_AT_abstract_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4695},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39726,"byte_end":39745,"line_start":379,"line_end":379,"column_start":5,"column_end":24},"name":"DW_AT_accessibility","qualname":"::constants::DW_AT_accessibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39758,"byte_end":39777,"line_start":380,"line_end":380,"column_start":5,"column_end":24},"name":"DW_AT_address_class","qualname":"::constants::DW_AT_address_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4697},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39790,"byte_end":39806,"line_start":381,"line_end":381,"column_start":5,"column_end":21},"name":"DW_AT_artificial","qualname":"::constants::DW_AT_artificial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4698},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39819,"byte_end":39835,"line_start":382,"line_end":382,"column_start":5,"column_end":21},"name":"DW_AT_base_types","qualname":"::constants::DW_AT_base_types","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4699},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39848,"byte_end":39872,"line_start":383,"line_end":383,"column_start":5,"column_end":29},"name":"DW_AT_calling_convention","qualname":"::constants::DW_AT_calling_convention","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4700},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39885,"byte_end":39896,"line_start":384,"line_end":384,"column_start":5,"column_end":16},"name":"DW_AT_count","qualname":"::constants::DW_AT_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39909,"byte_end":39935,"line_start":385,"line_end":385,"column_start":5,"column_end":31},"name":"DW_AT_data_member_location","qualname":"::constants::DW_AT_data_member_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39948,"byte_end":39965,"line_start":386,"line_end":386,"column_start":5,"column_end":22},"name":"DW_AT_decl_column","qualname":"::constants::DW_AT_decl_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":39978,"byte_end":39993,"line_start":387,"line_end":387,"column_start":5,"column_end":20},"name":"DW_AT_decl_file","qualname":"::constants::DW_AT_decl_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4704},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40006,"byte_end":40021,"line_start":388,"line_end":388,"column_start":5,"column_end":20},"name":"DW_AT_decl_line","qualname":"::constants::DW_AT_decl_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4705},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40034,"byte_end":40051,"line_start":389,"line_end":389,"column_start":5,"column_end":22},"name":"DW_AT_declaration","qualname":"::constants::DW_AT_declaration","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4706},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40064,"byte_end":40080,"line_start":390,"line_end":390,"column_start":5,"column_end":21},"name":"DW_AT_discr_list","qualname":"::constants::DW_AT_discr_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4707},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40093,"byte_end":40107,"line_start":391,"line_end":391,"column_start":5,"column_end":19},"name":"DW_AT_encoding","qualname":"::constants::DW_AT_encoding","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4708},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40120,"byte_end":40134,"line_start":392,"line_end":392,"column_start":5,"column_end":19},"name":"DW_AT_external","qualname":"::constants::DW_AT_external","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40147,"byte_end":40163,"line_start":393,"line_end":393,"column_start":5,"column_end":21},"name":"DW_AT_frame_base","qualname":"::constants::DW_AT_frame_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4710},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40176,"byte_end":40188,"line_start":394,"line_end":394,"column_start":5,"column_end":17},"name":"DW_AT_friend","qualname":"::constants::DW_AT_friend","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4711},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40201,"byte_end":40222,"line_start":395,"line_end":395,"column_start":5,"column_end":26},"name":"DW_AT_identifier_case","qualname":"::constants::DW_AT_identifier_case","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4712},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40235,"byte_end":40251,"line_start":396,"line_end":396,"column_start":5,"column_end":21},"name":"DW_AT_macro_info","qualname":"::constants::DW_AT_macro_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4713},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40264,"byte_end":40283,"line_start":397,"line_end":397,"column_start":5,"column_end":24},"name":"DW_AT_namelist_item","qualname":"::constants::DW_AT_namelist_item","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40296,"byte_end":40310,"line_start":398,"line_end":398,"column_start":5,"column_end":19},"name":"DW_AT_priority","qualname":"::constants::DW_AT_priority","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4715},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40323,"byte_end":40336,"line_start":399,"line_end":399,"column_start":5,"column_end":18},"name":"DW_AT_segment","qualname":"::constants::DW_AT_segment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4716},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40349,"byte_end":40368,"line_start":400,"line_end":400,"column_start":5,"column_end":24},"name":"DW_AT_specification","qualname":"::constants::DW_AT_specification","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4717},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40381,"byte_end":40398,"line_start":401,"line_end":401,"column_start":5,"column_end":22},"name":"DW_AT_static_link","qualname":"::constants::DW_AT_static_link","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4718},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40411,"byte_end":40421,"line_start":402,"line_end":402,"column_start":5,"column_end":15},"name":"DW_AT_type","qualname":"::constants::DW_AT_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40434,"byte_end":40452,"line_start":403,"line_end":403,"column_start":5,"column_end":23},"name":"DW_AT_use_location","qualname":"::constants::DW_AT_use_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4720},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40465,"byte_end":40489,"line_start":404,"line_end":404,"column_start":5,"column_end":29},"name":"DW_AT_variable_parameter","qualname":"::constants::DW_AT_variable_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40502,"byte_end":40518,"line_start":405,"line_end":405,"column_start":5,"column_end":21},"name":"DW_AT_virtuality","qualname":"::constants::DW_AT_virtuality","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4722},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40531,"byte_end":40557,"line_start":406,"line_end":406,"column_start":5,"column_end":31},"name":"DW_AT_vtable_elem_location","qualname":"::constants::DW_AT_vtable_elem_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4723},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40583,"byte_end":40598,"line_start":409,"line_end":409,"column_start":5,"column_end":20},"name":"DW_AT_allocated","qualname":"::constants::DW_AT_allocated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4724},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40611,"byte_end":40627,"line_start":410,"line_end":410,"column_start":5,"column_end":21},"name":"DW_AT_associated","qualname":"::constants::DW_AT_associated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4725},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40640,"byte_end":40659,"line_start":411,"line_end":411,"column_start":5,"column_end":24},"name":"DW_AT_data_location","qualname":"::constants::DW_AT_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4726},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40672,"byte_end":40689,"line_start":412,"line_end":412,"column_start":5,"column_end":22},"name":"DW_AT_byte_stride","qualname":"::constants::DW_AT_byte_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4727},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40702,"byte_end":40716,"line_start":413,"line_end":413,"column_start":5,"column_end":19},"name":"DW_AT_entry_pc","qualname":"::constants::DW_AT_entry_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40729,"byte_end":40743,"line_start":414,"line_end":414,"column_start":5,"column_end":19},"name":"DW_AT_use_UTF8","qualname":"::constants::DW_AT_use_UTF8","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4729},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40756,"byte_end":40771,"line_start":415,"line_end":415,"column_start":5,"column_end":20},"name":"DW_AT_extension","qualname":"::constants::DW_AT_extension","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4730},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40784,"byte_end":40796,"line_start":416,"line_end":416,"column_start":5,"column_end":17},"name":"DW_AT_ranges","qualname":"::constants::DW_AT_ranges","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4731},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40809,"byte_end":40825,"line_start":417,"line_end":417,"column_start":5,"column_end":21},"name":"DW_AT_trampoline","qualname":"::constants::DW_AT_trampoline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4732},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40838,"byte_end":40855,"line_start":418,"line_end":418,"column_start":5,"column_end":22},"name":"DW_AT_call_column","qualname":"::constants::DW_AT_call_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4733},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40868,"byte_end":40883,"line_start":419,"line_end":419,"column_start":5,"column_end":20},"name":"DW_AT_call_file","qualname":"::constants::DW_AT_call_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4734},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40896,"byte_end":40911,"line_start":420,"line_end":420,"column_start":5,"column_end":20},"name":"DW_AT_call_line","qualname":"::constants::DW_AT_call_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4735},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40924,"byte_end":40941,"line_start":421,"line_end":421,"column_start":5,"column_end":22},"name":"DW_AT_description","qualname":"::constants::DW_AT_description","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4736},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40954,"byte_end":40972,"line_start":422,"line_end":422,"column_start":5,"column_end":23},"name":"DW_AT_binary_scale","qualname":"::constants::DW_AT_binary_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4737},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":40985,"byte_end":41004,"line_start":423,"line_end":423,"column_start":5,"column_end":24},"name":"DW_AT_decimal_scale","qualname":"::constants::DW_AT_decimal_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4738},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41017,"byte_end":41028,"line_start":424,"line_end":424,"column_start":5,"column_end":16},"name":"DW_AT_small","qualname":"::constants::DW_AT_small","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4739},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41041,"byte_end":41059,"line_start":425,"line_end":425,"column_start":5,"column_end":23},"name":"DW_AT_decimal_sign","qualname":"::constants::DW_AT_decimal_sign","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4740},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41072,"byte_end":41089,"line_start":426,"line_end":426,"column_start":5,"column_end":22},"name":"DW_AT_digit_count","qualname":"::constants::DW_AT_digit_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41102,"byte_end":41122,"line_start":427,"line_end":427,"column_start":5,"column_end":25},"name":"DW_AT_picture_string","qualname":"::constants::DW_AT_picture_string","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4742},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41135,"byte_end":41148,"line_start":428,"line_end":428,"column_start":5,"column_end":18},"name":"DW_AT_mutable","qualname":"::constants::DW_AT_mutable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4743},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41161,"byte_end":41181,"line_start":429,"line_end":429,"column_start":5,"column_end":25},"name":"DW_AT_threads_scaled","qualname":"::constants::DW_AT_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4744},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41194,"byte_end":41208,"line_start":430,"line_end":430,"column_start":5,"column_end":19},"name":"DW_AT_explicit","qualname":"::constants::DW_AT_explicit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4745},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41221,"byte_end":41241,"line_start":431,"line_end":431,"column_start":5,"column_end":25},"name":"DW_AT_object_pointer","qualname":"::constants::DW_AT_object_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4746},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41254,"byte_end":41269,"line_start":432,"line_end":432,"column_start":5,"column_end":20},"name":"DW_AT_endianity","qualname":"::constants::DW_AT_endianity","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4747},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41282,"byte_end":41297,"line_start":433,"line_end":433,"column_start":5,"column_end":20},"name":"DW_AT_elemental","qualname":"::constants::DW_AT_elemental","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4748},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41310,"byte_end":41320,"line_start":434,"line_end":434,"column_start":5,"column_end":15},"name":"DW_AT_pure","qualname":"::constants::DW_AT_pure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4749},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41333,"byte_end":41348,"line_start":435,"line_end":435,"column_start":5,"column_end":20},"name":"DW_AT_recursive","qualname":"::constants::DW_AT_recursive","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4750},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41374,"byte_end":41389,"line_start":438,"line_end":438,"column_start":5,"column_end":20},"name":"DW_AT_signature","qualname":"::constants::DW_AT_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4751},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41402,"byte_end":41423,"line_start":439,"line_end":439,"column_start":5,"column_end":26},"name":"DW_AT_main_subprogram","qualname":"::constants::DW_AT_main_subprogram","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4752},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41436,"byte_end":41457,"line_start":440,"line_end":440,"column_start":5,"column_end":26},"name":"DW_AT_data_bit_offset","qualname":"::constants::DW_AT_data_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4753},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41470,"byte_end":41486,"line_start":441,"line_end":441,"column_start":5,"column_end":21},"name":"DW_AT_const_expr","qualname":"::constants::DW_AT_const_expr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4754},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41499,"byte_end":41515,"line_start":442,"line_end":442,"column_start":5,"column_end":21},"name":"DW_AT_enum_class","qualname":"::constants::DW_AT_enum_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4755},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41528,"byte_end":41546,"line_start":443,"line_end":443,"column_start":5,"column_end":23},"name":"DW_AT_linkage_name","qualname":"::constants::DW_AT_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41572,"byte_end":41600,"line_start":446,"line_end":446,"column_start":5,"column_end":33},"name":"DW_AT_string_length_bit_size","qualname":"::constants::DW_AT_string_length_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4757},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41613,"byte_end":41642,"line_start":447,"line_end":447,"column_start":5,"column_end":34},"name":"DW_AT_string_length_byte_size","qualname":"::constants::DW_AT_string_length_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4758},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41655,"byte_end":41665,"line_start":448,"line_end":448,"column_start":5,"column_end":15},"name":"DW_AT_rank","qualname":"::constants::DW_AT_rank","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4759},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41678,"byte_end":41700,"line_start":449,"line_end":449,"column_start":5,"column_end":27},"name":"DW_AT_str_offsets_base","qualname":"::constants::DW_AT_str_offsets_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41713,"byte_end":41728,"line_start":450,"line_end":450,"column_start":5,"column_end":20},"name":"DW_AT_addr_base","qualname":"::constants::DW_AT_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41741,"byte_end":41760,"line_start":451,"line_end":451,"column_start":5,"column_end":24},"name":"DW_AT_rnglists_base","qualname":"::constants::DW_AT_rnglists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4762},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41773,"byte_end":41787,"line_start":452,"line_end":452,"column_start":5,"column_end":19},"name":"DW_AT_dwo_name","qualname":"::constants::DW_AT_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4763},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41800,"byte_end":41815,"line_start":453,"line_end":453,"column_start":5,"column_end":20},"name":"DW_AT_reference","qualname":"::constants::DW_AT_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4764},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41828,"byte_end":41850,"line_start":454,"line_end":454,"column_start":5,"column_end":27},"name":"DW_AT_rvalue_reference","qualname":"::constants::DW_AT_rvalue_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4765},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41863,"byte_end":41875,"line_start":455,"line_end":455,"column_start":5,"column_end":17},"name":"DW_AT_macros","qualname":"::constants::DW_AT_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4766},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41888,"byte_end":41908,"line_start":456,"line_end":456,"column_start":5,"column_end":25},"name":"DW_AT_call_all_calls","qualname":"::constants::DW_AT_call_all_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4767},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41921,"byte_end":41948,"line_start":457,"line_end":457,"column_start":5,"column_end":32},"name":"DW_AT_call_all_source_calls","qualname":"::constants::DW_AT_call_all_source_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4768},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41961,"byte_end":41986,"line_start":458,"line_end":458,"column_start":5,"column_end":30},"name":"DW_AT_call_all_tail_calls","qualname":"::constants::DW_AT_call_all_tail_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4769},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":41999,"byte_end":42019,"line_start":459,"line_end":459,"column_start":5,"column_end":25},"name":"DW_AT_call_return_pc","qualname":"::constants::DW_AT_call_return_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42032,"byte_end":42048,"line_start":460,"line_end":460,"column_start":5,"column_end":21},"name":"DW_AT_call_value","qualname":"::constants::DW_AT_call_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4771},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42061,"byte_end":42078,"line_start":461,"line_end":461,"column_start":5,"column_end":22},"name":"DW_AT_call_origin","qualname":"::constants::DW_AT_call_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4772},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42091,"byte_end":42111,"line_start":462,"line_end":462,"column_start":5,"column_end":25},"name":"DW_AT_call_parameter","qualname":"::constants::DW_AT_call_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42124,"byte_end":42137,"line_start":463,"line_end":463,"column_start":5,"column_end":18},"name":"DW_AT_call_pc","qualname":"::constants::DW_AT_call_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4774},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42150,"byte_end":42170,"line_start":464,"line_end":464,"column_start":5,"column_end":25},"name":"DW_AT_call_tail_call","qualname":"::constants::DW_AT_call_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4775},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42183,"byte_end":42200,"line_start":465,"line_end":465,"column_start":5,"column_end":22},"name":"DW_AT_call_target","qualname":"::constants::DW_AT_call_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4776},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42213,"byte_end":42240,"line_start":466,"line_end":466,"column_start":5,"column_end":32},"name":"DW_AT_call_target_clobbered","qualname":"::constants::DW_AT_call_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4777},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42253,"byte_end":42277,"line_start":467,"line_end":467,"column_start":5,"column_end":29},"name":"DW_AT_call_data_location","qualname":"::constants::DW_AT_call_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42290,"byte_end":42311,"line_start":468,"line_end":468,"column_start":5,"column_end":26},"name":"DW_AT_call_data_value","qualname":"::constants::DW_AT_call_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4779},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42324,"byte_end":42338,"line_start":469,"line_end":469,"column_start":5,"column_end":19},"name":"DW_AT_noreturn","qualname":"::constants::DW_AT_noreturn","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42351,"byte_end":42366,"line_start":470,"line_end":470,"column_start":5,"column_end":20},"name":"DW_AT_alignment","qualname":"::constants::DW_AT_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4781},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42379,"byte_end":42399,"line_start":471,"line_end":471,"column_start":5,"column_end":25},"name":"DW_AT_export_symbols","qualname":"::constants::DW_AT_export_symbols","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42412,"byte_end":42425,"line_start":472,"line_end":472,"column_start":5,"column_end":18},"name":"DW_AT_deleted","qualname":"::constants::DW_AT_deleted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42438,"byte_end":42453,"line_start":473,"line_end":473,"column_start":5,"column_end":20},"name":"DW_AT_defaulted","qualname":"::constants::DW_AT_defaulted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4784},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42466,"byte_end":42485,"line_start":474,"line_end":474,"column_start":5,"column_end":24},"name":"DW_AT_loclists_base","qualname":"::constants::DW_AT_loclists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4785},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42499,"byte_end":42512,"line_start":476,"line_end":476,"column_start":5,"column_end":18},"name":"DW_AT_lo_user","qualname":"::constants::DW_AT_lo_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42527,"byte_end":42540,"line_start":477,"line_end":477,"column_start":5,"column_end":18},"name":"DW_AT_hi_user","qualname":"::constants::DW_AT_hi_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4787},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42580,"byte_end":42594,"line_start":480,"line_end":480,"column_start":5,"column_end":19},"name":"DW_AT_MIPS_fde","qualname":"::constants::DW_AT_MIPS_fde","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4788},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42609,"byte_end":42630,"line_start":481,"line_end":481,"column_start":5,"column_end":26},"name":"DW_AT_MIPS_loop_begin","qualname":"::constants::DW_AT_MIPS_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4789},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42645,"byte_end":42671,"line_start":482,"line_end":482,"column_start":5,"column_end":31},"name":"DW_AT_MIPS_tail_loop_begin","qualname":"::constants::DW_AT_MIPS_tail_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42686,"byte_end":42709,"line_start":483,"line_end":483,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_epilog_begin","qualname":"::constants::DW_AT_MIPS_epilog_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42724,"byte_end":42753,"line_start":484,"line_end":484,"column_start":5,"column_end":34},"name":"DW_AT_MIPS_loop_unroll_factor","qualname":"::constants::DW_AT_MIPS_loop_unroll_factor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42768,"byte_end":42802,"line_start":485,"line_end":485,"column_start":5,"column_end":39},"name":"DW_AT_MIPS_software_pipeline_depth","qualname":"::constants::DW_AT_MIPS_software_pipeline_depth","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42817,"byte_end":42840,"line_start":486,"line_end":486,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_linkage_name","qualname":"::constants::DW_AT_MIPS_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42855,"byte_end":42872,"line_start":487,"line_end":487,"column_start":5,"column_end":22},"name":"DW_AT_MIPS_stride","qualname":"::constants::DW_AT_MIPS_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42887,"byte_end":42911,"line_start":488,"line_end":488,"column_start":5,"column_end":29},"name":"DW_AT_MIPS_abstract_name","qualname":"::constants::DW_AT_MIPS_abstract_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42926,"byte_end":42949,"line_start":489,"line_end":489,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_clone_origin","qualname":"::constants::DW_AT_MIPS_clone_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4797},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":42964,"byte_end":42986,"line_start":490,"line_end":490,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_has_inlines","qualname":"::constants::DW_AT_MIPS_has_inlines","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4798},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43001,"byte_end":43023,"line_start":491,"line_end":491,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_byte","qualname":"::constants::DW_AT_MIPS_stride_byte","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4799},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43038,"byte_end":43060,"line_start":492,"line_end":492,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_elem","qualname":"::constants::DW_AT_MIPS_stride_elem","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4800},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43075,"byte_end":43098,"line_start":493,"line_end":493,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_ptr_dopetype","qualname":"::constants::DW_AT_MIPS_ptr_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4801},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43113,"byte_end":43144,"line_start":494,"line_end":494,"column_start":5,"column_end":36},"name":"DW_AT_MIPS_allocatable_dopetype","qualname":"::constants::DW_AT_MIPS_allocatable_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43159,"byte_end":43192,"line_start":495,"line_end":495,"column_start":5,"column_end":38},"name":"DW_AT_MIPS_assumed_shape_dopetype","qualname":"::constants::DW_AT_MIPS_assumed_shape_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43323,"byte_end":43346,"line_start":499,"line_end":499,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_assumed_size","qualname":"::constants::DW_AT_MIPS_assumed_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43435,"byte_end":43459,"line_start":504,"line_end":504,"column_start":5,"column_end":29},"name":"DW_AT_INTEL_other_endian","qualname":"::constants::DW_AT_INTEL_other_endian","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43493,"byte_end":43507,"line_start":507,"line_end":507,"column_start":5,"column_end":19},"name":"DW_AT_sf_names","qualname":"::constants::DW_AT_sf_names","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43522,"byte_end":43536,"line_start":508,"line_end":508,"column_start":5,"column_end":19},"name":"DW_AT_src_info","qualname":"::constants::DW_AT_src_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43551,"byte_end":43565,"line_start":509,"line_end":509,"column_start":5,"column_end":19},"name":"DW_AT_mac_info","qualname":"::constants::DW_AT_mac_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4808},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43580,"byte_end":43596,"line_start":510,"line_end":510,"column_start":5,"column_end":21},"name":"DW_AT_src_coords","qualname":"::constants::DW_AT_src_coords","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4809},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43611,"byte_end":43627,"line_start":511,"line_end":511,"column_start":5,"column_end":21},"name":"DW_AT_body_begin","qualname":"::constants::DW_AT_body_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43642,"byte_end":43656,"line_start":512,"line_end":512,"column_start":5,"column_end":19},"name":"DW_AT_body_end","qualname":"::constants::DW_AT_body_end","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4811},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43671,"byte_end":43687,"line_start":513,"line_end":513,"column_start":5,"column_end":21},"name":"DW_AT_GNU_vector","qualname":"::constants::DW_AT_GNU_vector","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43702,"byte_end":43722,"line_start":514,"line_end":514,"column_start":5,"column_end":25},"name":"DW_AT_GNU_guarded_by","qualname":"::constants::DW_AT_GNU_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4813},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43737,"byte_end":43760,"line_start":515,"line_end":515,"column_start":5,"column_end":28},"name":"DW_AT_GNU_pt_guarded_by","qualname":"::constants::DW_AT_GNU_pt_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4814},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43775,"byte_end":43792,"line_start":516,"line_end":516,"column_start":5,"column_end":22},"name":"DW_AT_GNU_guarded","qualname":"::constants::DW_AT_GNU_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4815},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43807,"byte_end":43827,"line_start":517,"line_end":517,"column_start":5,"column_end":25},"name":"DW_AT_GNU_pt_guarded","qualname":"::constants::DW_AT_GNU_pt_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43842,"byte_end":43866,"line_start":518,"line_end":518,"column_start":5,"column_end":29},"name":"DW_AT_GNU_locks_excluded","qualname":"::constants::DW_AT_GNU_locks_excluded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43881,"byte_end":43915,"line_start":519,"line_end":519,"column_start":5,"column_end":39},"name":"DW_AT_GNU_exclusive_locks_required","qualname":"::constants::DW_AT_GNU_exclusive_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4818},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43930,"byte_end":43961,"line_start":520,"line_end":520,"column_start":5,"column_end":36},"name":"DW_AT_GNU_shared_locks_required","qualname":"::constants::DW_AT_GNU_shared_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4819},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":43976,"byte_end":43999,"line_start":521,"line_end":521,"column_start":5,"column_end":28},"name":"DW_AT_GNU_odr_signature","qualname":"::constants::DW_AT_GNU_odr_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4820},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44014,"byte_end":44037,"line_start":522,"line_end":522,"column_start":5,"column_end":28},"name":"DW_AT_GNU_template_name","qualname":"::constants::DW_AT_GNU_template_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4821},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44052,"byte_end":44077,"line_start":523,"line_end":523,"column_start":5,"column_end":30},"name":"DW_AT_GNU_call_site_value","qualname":"::constants::DW_AT_GNU_call_site_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4822},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44092,"byte_end":44122,"line_start":524,"line_end":524,"column_start":5,"column_end":35},"name":"DW_AT_GNU_call_site_data_value","qualname":"::constants::DW_AT_GNU_call_site_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4823},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44137,"byte_end":44163,"line_start":525,"line_end":525,"column_start":5,"column_end":31},"name":"DW_AT_GNU_call_site_target","qualname":"::constants::DW_AT_GNU_call_site_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4824},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44178,"byte_end":44214,"line_start":526,"line_end":526,"column_start":5,"column_end":41},"name":"DW_AT_GNU_call_site_target_clobbered","qualname":"::constants::DW_AT_GNU_call_site_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4825},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44229,"byte_end":44248,"line_start":527,"line_end":527,"column_start":5,"column_end":24},"name":"DW_AT_GNU_tail_call","qualname":"::constants::DW_AT_GNU_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44263,"byte_end":44292,"line_start":528,"line_end":528,"column_start":5,"column_end":34},"name":"DW_AT_GNU_all_tail_call_sites","qualname":"::constants::DW_AT_GNU_all_tail_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44307,"byte_end":44331,"line_start":529,"line_end":529,"column_start":5,"column_end":29},"name":"DW_AT_GNU_all_call_sites","qualname":"::constants::DW_AT_GNU_all_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44346,"byte_end":44377,"line_start":530,"line_end":530,"column_start":5,"column_end":36},"name":"DW_AT_GNU_all_source_call_sites","qualname":"::constants::DW_AT_GNU_all_source_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4829},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44392,"byte_end":44408,"line_start":531,"line_end":531,"column_start":5,"column_end":21},"name":"DW_AT_GNU_macros","qualname":"::constants::DW_AT_GNU_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44460,"byte_end":44478,"line_start":534,"line_end":534,"column_start":5,"column_end":23},"name":"DW_AT_GNU_dwo_name","qualname":"::constants::DW_AT_GNU_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4831},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44493,"byte_end":44509,"line_start":535,"line_end":535,"column_start":5,"column_end":21},"name":"DW_AT_GNU_dwo_id","qualname":"::constants::DW_AT_GNU_dwo_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44524,"byte_end":44545,"line_start":536,"line_end":536,"column_start":5,"column_end":26},"name":"DW_AT_GNU_ranges_base","qualname":"::constants::DW_AT_GNU_ranges_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44560,"byte_end":44579,"line_start":537,"line_end":537,"column_start":5,"column_end":24},"name":"DW_AT_GNU_addr_base","qualname":"::constants::DW_AT_GNU_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4834},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44594,"byte_end":44612,"line_start":538,"line_end":538,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubnames","qualname":"::constants::DW_AT_GNU_pubnames","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44627,"byte_end":44645,"line_start":539,"line_end":539,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubtypes","qualname":"::constants::DW_AT_GNU_pubtypes","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4836},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44660,"byte_end":44683,"line_start":540,"line_end":540,"column_start":5,"column_end":28},"name":"DW_AT_GNU_discriminator","qualname":"::constants::DW_AT_GNU_discriminator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44698,"byte_end":44716,"line_start":541,"line_end":541,"column_start":5,"column_end":23},"name":"DW_AT_GNU_locviews","qualname":"::constants::DW_AT_GNU_locviews","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4838},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44731,"byte_end":44751,"line_start":542,"line_end":542,"column_start":5,"column_end":25},"name":"DW_AT_GNU_entry_view","qualname":"::constants::DW_AT_GNU_entry_view","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4839},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44850,"byte_end":44868,"line_start":548,"line_end":548,"column_start":5,"column_end":23},"name":"DW_AT_SUN_template","qualname":"::constants::DW_AT_SUN_template","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44883,"byte_end":44902,"line_start":549,"line_end":549,"column_start":5,"column_end":24},"name":"DW_AT_SUN_alignment","qualname":"::constants::DW_AT_SUN_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44917,"byte_end":44933,"line_start":550,"line_end":550,"column_start":5,"column_end":21},"name":"DW_AT_SUN_vtable","qualname":"::constants::DW_AT_SUN_vtable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4842},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44948,"byte_end":44973,"line_start":551,"line_end":551,"column_start":5,"column_end":30},"name":"DW_AT_SUN_count_guarantee","qualname":"::constants::DW_AT_SUN_count_guarantee","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":44988,"byte_end":45010,"line_start":552,"line_end":552,"column_start":5,"column_end":27},"name":"DW_AT_SUN_command_line","qualname":"::constants::DW_AT_SUN_command_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45025,"byte_end":45040,"line_start":553,"line_end":553,"column_start":5,"column_end":20},"name":"DW_AT_SUN_vbase","qualname":"::constants::DW_AT_SUN_vbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4845},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45055,"byte_end":45080,"line_start":554,"line_end":554,"column_start":5,"column_end":30},"name":"DW_AT_SUN_compile_options","qualname":"::constants::DW_AT_SUN_compile_options","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4846},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45095,"byte_end":45113,"line_start":555,"line_end":555,"column_start":5,"column_end":23},"name":"DW_AT_SUN_language","qualname":"::constants::DW_AT_SUN_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45128,"byte_end":45150,"line_start":556,"line_end":556,"column_start":5,"column_end":27},"name":"DW_AT_SUN_browser_file","qualname":"::constants::DW_AT_SUN_browser_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4848},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45165,"byte_end":45185,"line_start":557,"line_end":557,"column_start":5,"column_end":25},"name":"DW_AT_SUN_vtable_abi","qualname":"::constants::DW_AT_SUN_vtable_abi","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4849},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45200,"byte_end":45222,"line_start":558,"line_end":558,"column_start":5,"column_end":27},"name":"DW_AT_SUN_func_offsets","qualname":"::constants::DW_AT_SUN_func_offsets","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45237,"byte_end":45254,"line_start":559,"line_end":559,"column_start":5,"column_end":22},"name":"DW_AT_SUN_cf_kind","qualname":"::constants::DW_AT_SUN_cf_kind","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45269,"byte_end":45291,"line_start":560,"line_end":560,"column_start":5,"column_end":27},"name":"DW_AT_SUN_vtable_index","qualname":"::constants::DW_AT_SUN_vtable_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45306,"byte_end":45330,"line_start":561,"line_end":561,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_tpriv_addr","qualname":"::constants::DW_AT_SUN_omp_tpriv_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4853},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45345,"byte_end":45369,"line_start":562,"line_end":562,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_child_func","qualname":"::constants::DW_AT_SUN_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4854},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45384,"byte_end":45405,"line_start":563,"line_end":563,"column_start":5,"column_end":26},"name":"DW_AT_SUN_func_offset","qualname":"::constants::DW_AT_SUN_func_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45420,"byte_end":45444,"line_start":564,"line_end":564,"column_start":5,"column_end":29},"name":"DW_AT_SUN_memop_type_ref","qualname":"::constants::DW_AT_SUN_memop_type_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4856},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45459,"byte_end":45479,"line_start":565,"line_end":565,"column_start":5,"column_end":25},"name":"DW_AT_SUN_profile_id","qualname":"::constants::DW_AT_SUN_profile_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4857},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45494,"byte_end":45519,"line_start":566,"line_end":566,"column_start":5,"column_end":30},"name":"DW_AT_SUN_memop_signature","qualname":"::constants::DW_AT_SUN_memop_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45534,"byte_end":45551,"line_start":567,"line_end":567,"column_start":5,"column_end":22},"name":"DW_AT_SUN_obj_dir","qualname":"::constants::DW_AT_SUN_obj_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45566,"byte_end":45584,"line_start":568,"line_end":568,"column_start":5,"column_end":23},"name":"DW_AT_SUN_obj_file","qualname":"::constants::DW_AT_SUN_obj_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4860},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45599,"byte_end":45622,"line_start":569,"line_end":569,"column_start":5,"column_end":28},"name":"DW_AT_SUN_original_name","qualname":"::constants::DW_AT_SUN_original_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4861},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45637,"byte_end":45664,"line_start":570,"line_end":570,"column_start":5,"column_end":32},"name":"DW_AT_SUN_hwcprof_signature","qualname":"::constants::DW_AT_SUN_hwcprof_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45679,"byte_end":45703,"line_start":571,"line_end":571,"column_start":5,"column_end":29},"name":"DW_AT_SUN_amd64_parmdump","qualname":"::constants::DW_AT_SUN_amd64_parmdump","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4863},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45718,"byte_end":45742,"line_start":572,"line_end":572,"column_start":5,"column_end":29},"name":"DW_AT_SUN_part_link_name","qualname":"::constants::DW_AT_SUN_part_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45757,"byte_end":45776,"line_start":573,"line_end":573,"column_start":5,"column_end":24},"name":"DW_AT_SUN_link_name","qualname":"::constants::DW_AT_SUN_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4865},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45791,"byte_end":45816,"line_start":574,"line_end":574,"column_start":5,"column_end":30},"name":"DW_AT_SUN_pass_with_const","qualname":"::constants::DW_AT_SUN_pass_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45831,"byte_end":45858,"line_start":575,"line_end":575,"column_start":5,"column_end":32},"name":"DW_AT_SUN_return_with_const","qualname":"::constants::DW_AT_SUN_return_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4867},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45873,"byte_end":45897,"line_start":576,"line_end":576,"column_start":5,"column_end":29},"name":"DW_AT_SUN_import_by_name","qualname":"::constants::DW_AT_SUN_import_by_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45912,"byte_end":45933,"line_start":577,"line_end":577,"column_start":5,"column_end":26},"name":"DW_AT_SUN_f90_pointer","qualname":"::constants::DW_AT_SUN_f90_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45948,"byte_end":45969,"line_start":578,"line_end":578,"column_start":5,"column_end":26},"name":"DW_AT_SUN_pass_by_ref","qualname":"::constants::DW_AT_SUN_pass_by_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4870},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":45984,"byte_end":46009,"line_start":579,"line_end":579,"column_start":5,"column_end":30},"name":"DW_AT_SUN_f90_allocatable","qualname":"::constants::DW_AT_SUN_f90_allocatable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46024,"byte_end":46057,"line_start":580,"line_end":580,"column_start":5,"column_end":38},"name":"DW_AT_SUN_f90_assumed_shape_array","qualname":"::constants::DW_AT_SUN_f90_assumed_shape_array","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46072,"byte_end":46087,"line_start":581,"line_end":581,"column_start":5,"column_end":20},"name":"DW_AT_SUN_c_vla","qualname":"::constants::DW_AT_SUN_c_vla","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4873},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46102,"byte_end":46128,"line_start":582,"line_end":582,"column_start":5,"column_end":31},"name":"DW_AT_SUN_return_value_ptr","qualname":"::constants::DW_AT_SUN_return_value_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4874},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46143,"byte_end":46163,"line_start":583,"line_end":583,"column_start":5,"column_end":25},"name":"DW_AT_SUN_dtor_start","qualname":"::constants::DW_AT_SUN_dtor_start","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46178,"byte_end":46199,"line_start":584,"line_end":584,"column_start":5,"column_end":26},"name":"DW_AT_SUN_dtor_length","qualname":"::constants::DW_AT_SUN_dtor_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46214,"byte_end":46242,"line_start":585,"line_end":585,"column_start":5,"column_end":33},"name":"DW_AT_SUN_dtor_state_initial","qualname":"::constants::DW_AT_SUN_dtor_state_initial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4877},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46257,"byte_end":46283,"line_start":586,"line_end":586,"column_start":5,"column_end":31},"name":"DW_AT_SUN_dtor_state_final","qualname":"::constants::DW_AT_SUN_dtor_state_final","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46298,"byte_end":46325,"line_start":587,"line_end":587,"column_start":5,"column_end":32},"name":"DW_AT_SUN_dtor_state_deltas","qualname":"::constants::DW_AT_SUN_dtor_state_deltas","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46340,"byte_end":46365,"line_start":588,"line_end":588,"column_start":5,"column_end":30},"name":"DW_AT_SUN_import_by_lname","qualname":"::constants::DW_AT_SUN_import_by_lname","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4880},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46380,"byte_end":46402,"line_start":589,"line_end":589,"column_start":5,"column_end":27},"name":"DW_AT_SUN_f90_use_only","qualname":"::constants::DW_AT_SUN_f90_use_only","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4881},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46417,"byte_end":46440,"line_start":590,"line_end":590,"column_start":5,"column_end":28},"name":"DW_AT_SUN_namelist_spec","qualname":"::constants::DW_AT_SUN_namelist_spec","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46455,"byte_end":46482,"line_start":591,"line_end":591,"column_start":5,"column_end":32},"name":"DW_AT_SUN_is_omp_child_func","qualname":"::constants::DW_AT_SUN_is_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46497,"byte_end":46525,"line_start":592,"line_end":592,"column_start":5,"column_end":33},"name":"DW_AT_SUN_fortran_main_alias","qualname":"::constants::DW_AT_SUN_fortran_main_alias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46540,"byte_end":46563,"line_start":593,"line_end":593,"column_start":5,"column_end":28},"name":"DW_AT_SUN_fortran_based","qualname":"::constants::DW_AT_SUN_fortran_based","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4885},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46579,"byte_end":46599,"line_start":595,"line_end":595,"column_start":5,"column_end":25},"name":"DW_AT_ALTIUM_loclist","qualname":"::constants::DW_AT_ALTIUM_loclist","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46615,"byte_end":46646,"line_start":597,"line_end":597,"column_start":5,"column_end":36},"name":"DW_AT_use_GNAT_descriptive_type","qualname":"::constants::DW_AT_use_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4887},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46661,"byte_end":46688,"line_start":598,"line_end":598,"column_start":5,"column_end":32},"name":"DW_AT_GNAT_descriptive_type","qualname":"::constants::DW_AT_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4888},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46703,"byte_end":46722,"line_start":599,"line_end":599,"column_start":5,"column_end":24},"name":"DW_AT_GNU_numerator","qualname":"::constants::DW_AT_GNU_numerator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46737,"byte_end":46758,"line_start":600,"line_end":600,"column_start":5,"column_end":26},"name":"DW_AT_GNU_denominator","qualname":"::constants::DW_AT_GNU_denominator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46773,"byte_end":46787,"line_start":601,"line_end":601,"column_start":5,"column_end":19},"name":"DW_AT_GNU_bias","qualname":"::constants::DW_AT_GNU_bias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46803,"byte_end":46827,"line_start":603,"line_end":603,"column_start":5,"column_end":29},"name":"DW_AT_upc_threads_scaled","qualname":"::constants::DW_AT_upc_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4892},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46883,"byte_end":46898,"line_start":606,"line_end":606,"column_start":5,"column_end":20},"name":"DW_AT_PGI_lbase","qualname":"::constants::DW_AT_PGI_lbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46913,"byte_end":46930,"line_start":607,"line_end":607,"column_start":5,"column_end":22},"name":"DW_AT_PGI_soffset","qualname":"::constants::DW_AT_PGI_soffset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":46945,"byte_end":46962,"line_start":608,"line_end":608,"column_start":5,"column_end":22},"name":"DW_AT_PGI_lstride","qualname":"::constants::DW_AT_PGI_lstride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47001,"byte_end":47028,"line_start":611,"line_end":611,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_property_read","qualname":"::constants::DW_AT_BORLAND_property_read","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47043,"byte_end":47071,"line_start":612,"line_end":612,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_write","qualname":"::constants::DW_AT_BORLAND_property_write","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4897},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47086,"byte_end":47119,"line_start":613,"line_end":613,"column_start":5,"column_end":38},"name":"DW_AT_BORLAND_property_implements","qualname":"::constants::DW_AT_BORLAND_property_implements","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4898},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47134,"byte_end":47162,"line_start":614,"line_end":614,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_index","qualname":"::constants::DW_AT_BORLAND_property_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47177,"byte_end":47207,"line_start":615,"line_end":615,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_property_default","qualname":"::constants::DW_AT_BORLAND_property_default","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47222,"byte_end":47247,"line_start":616,"line_end":616,"column_start":5,"column_end":30},"name":"DW_AT_BORLAND_Delphi_unit","qualname":"::constants::DW_AT_BORLAND_Delphi_unit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47262,"byte_end":47288,"line_start":617,"line_end":617,"column_start":5,"column_end":31},"name":"DW_AT_BORLAND_Delphi_class","qualname":"::constants::DW_AT_BORLAND_Delphi_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47303,"byte_end":47330,"line_start":618,"line_end":618,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_record","qualname":"::constants::DW_AT_BORLAND_Delphi_record","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4903},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47345,"byte_end":47375,"line_start":619,"line_end":619,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_metaclass","qualname":"::constants::DW_AT_BORLAND_Delphi_metaclass","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47390,"byte_end":47422,"line_start":620,"line_end":620,"column_start":5,"column_end":37},"name":"DW_AT_BORLAND_Delphi_constructor","qualname":"::constants::DW_AT_BORLAND_Delphi_constructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4905},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47437,"byte_end":47468,"line_start":621,"line_end":621,"column_start":5,"column_end":36},"name":"DW_AT_BORLAND_Delphi_destructor","qualname":"::constants::DW_AT_BORLAND_Delphi_destructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4906},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47483,"byte_end":47520,"line_start":622,"line_end":622,"column_start":5,"column_end":42},"name":"DW_AT_BORLAND_Delphi_anonymous_method","qualname":"::constants::DW_AT_BORLAND_Delphi_anonymous_method","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47535,"byte_end":47565,"line_start":623,"line_end":623,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_interface","qualname":"::constants::DW_AT_BORLAND_Delphi_interface","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4908},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47580,"byte_end":47604,"line_start":624,"line_end":624,"column_start":5,"column_end":29},"name":"DW_AT_BORLAND_Delphi_ABI","qualname":"::constants::DW_AT_BORLAND_Delphi_ABI","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4909},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47619,"byte_end":47646,"line_start":625,"line_end":625,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_return","qualname":"::constants::DW_AT_BORLAND_Delphi_return","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4910},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47661,"byte_end":47690,"line_start":626,"line_end":626,"column_start":5,"column_end":34},"name":"DW_AT_BORLAND_Delphi_frameptr","qualname":"::constants::DW_AT_BORLAND_Delphi_frameptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47705,"byte_end":47726,"line_start":627,"line_end":627,"column_start":5,"column_end":26},"name":"DW_AT_BORLAND_closure","qualname":"::constants::DW_AT_BORLAND_closure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47770,"byte_end":47793,"line_start":630,"line_end":630,"column_start":5,"column_end":28},"name":"DW_AT_LLVM_include_path","qualname":"::constants::DW_AT_LLVM_include_path","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47808,"byte_end":47832,"line_start":631,"line_end":631,"column_start":5,"column_end":29},"name":"DW_AT_LLVM_config_macros","qualname":"::constants::DW_AT_LLVM_config_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4914},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47847,"byte_end":47866,"line_start":632,"line_end":632,"column_start":5,"column_end":24},"name":"DW_AT_LLVM_isysroot","qualname":"::constants::DW_AT_LLVM_isysroot","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4915},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47903,"byte_end":47924,"line_start":635,"line_end":635,"column_start":5,"column_end":26},"name":"DW_AT_APPLE_optimized","qualname":"::constants::DW_AT_APPLE_optimized","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4916},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47939,"byte_end":47956,"line_start":636,"line_end":636,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_flags","qualname":"::constants::DW_AT_APPLE_flags","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4917},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":47971,"byte_end":47986,"line_start":637,"line_end":637,"column_start":5,"column_end":20},"name":"DW_AT_APPLE_isa","qualname":"::constants::DW_AT_APPLE_isa","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4918},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48001,"byte_end":48018,"line_start":638,"line_end":638,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_block","qualname":"::constants::DW_AT_APPLE_block","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4919},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48033,"byte_end":48063,"line_start":639,"line_end":639,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_major_runtime_vers","qualname":"::constants::DW_AT_APPLE_major_runtime_vers","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4920},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48078,"byte_end":48103,"line_start":640,"line_end":640,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_runtime_class","qualname":"::constants::DW_AT_APPLE_runtime_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48118,"byte_end":48144,"line_start":641,"line_end":641,"column_start":5,"column_end":31},"name":"DW_AT_APPLE_omit_frame_ptr","qualname":"::constants::DW_AT_APPLE_omit_frame_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48159,"byte_end":48184,"line_start":642,"line_end":642,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_property_name","qualname":"::constants::DW_AT_APPLE_property_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48199,"byte_end":48226,"line_start":643,"line_end":643,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_getter","qualname":"::constants::DW_AT_APPLE_property_getter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48241,"byte_end":48268,"line_start":644,"line_end":644,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_setter","qualname":"::constants::DW_AT_APPLE_property_setter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48283,"byte_end":48313,"line_start":645,"line_end":645,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_property_attribute","qualname":"::constants::DW_AT_APPLE_property_attribute","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4926},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48328,"byte_end":48358,"line_start":646,"line_end":646,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_objc_complete_type","qualname":"::constants::DW_AT_APPLE_objc_complete_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4927},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48373,"byte_end":48393,"line_start":647,"line_end":647,"column_start":5,"column_end":25},"name":"DW_AT_APPLE_property","qualname":"::constants::DW_AT_APPLE_property","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48504,"byte_end":48510,"line_start":654,"line_end":654,"column_start":1,"column_end":7},"name":"DwForm","qualname":"::constants::DwForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute form encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48522,"byte_end":48534,"line_start":655,"line_end":655,"column_start":5,"column_end":17},"name":"DW_FORM_null","qualname":"::constants::DW_FORM_null","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48548,"byte_end":48560,"line_start":657,"line_end":657,"column_start":5,"column_end":17},"name":"DW_FORM_addr","qualname":"::constants::DW_FORM_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48573,"byte_end":48587,"line_start":658,"line_end":658,"column_start":5,"column_end":19},"name":"DW_FORM_block2","qualname":"::constants::DW_FORM_block2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48600,"byte_end":48614,"line_start":659,"line_end":659,"column_start":5,"column_end":19},"name":"DW_FORM_block4","qualname":"::constants::DW_FORM_block4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48627,"byte_end":48640,"line_start":660,"line_end":660,"column_start":5,"column_end":18},"name":"DW_FORM_data2","qualname":"::constants::DW_FORM_data2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48653,"byte_end":48666,"line_start":661,"line_end":661,"column_start":5,"column_end":18},"name":"DW_FORM_data4","qualname":"::constants::DW_FORM_data4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4960},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48679,"byte_end":48692,"line_start":662,"line_end":662,"column_start":5,"column_end":18},"name":"DW_FORM_data8","qualname":"::constants::DW_FORM_data8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48705,"byte_end":48719,"line_start":663,"line_end":663,"column_start":5,"column_end":19},"name":"DW_FORM_string","qualname":"::constants::DW_FORM_string","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48732,"byte_end":48745,"line_start":664,"line_end":664,"column_start":5,"column_end":18},"name":"DW_FORM_block","qualname":"::constants::DW_FORM_block","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48758,"byte_end":48772,"line_start":665,"line_end":665,"column_start":5,"column_end":19},"name":"DW_FORM_block1","qualname":"::constants::DW_FORM_block1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4964},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48785,"byte_end":48798,"line_start":666,"line_end":666,"column_start":5,"column_end":18},"name":"DW_FORM_data1","qualname":"::constants::DW_FORM_data1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4965},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48811,"byte_end":48823,"line_start":667,"line_end":667,"column_start":5,"column_end":17},"name":"DW_FORM_flag","qualname":"::constants::DW_FORM_flag","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4966},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48836,"byte_end":48849,"line_start":668,"line_end":668,"column_start":5,"column_end":18},"name":"DW_FORM_sdata","qualname":"::constants::DW_FORM_sdata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4967},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48862,"byte_end":48874,"line_start":669,"line_end":669,"column_start":5,"column_end":17},"name":"DW_FORM_strp","qualname":"::constants::DW_FORM_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48887,"byte_end":48900,"line_start":670,"line_end":670,"column_start":5,"column_end":18},"name":"DW_FORM_udata","qualname":"::constants::DW_FORM_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48913,"byte_end":48929,"line_start":671,"line_end":671,"column_start":5,"column_end":21},"name":"DW_FORM_ref_addr","qualname":"::constants::DW_FORM_ref_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48942,"byte_end":48954,"line_start":672,"line_end":672,"column_start":5,"column_end":17},"name":"DW_FORM_ref1","qualname":"::constants::DW_FORM_ref1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48967,"byte_end":48979,"line_start":673,"line_end":673,"column_start":5,"column_end":17},"name":"DW_FORM_ref2","qualname":"::constants::DW_FORM_ref2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4972},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":48992,"byte_end":49004,"line_start":674,"line_end":674,"column_start":5,"column_end":17},"name":"DW_FORM_ref4","qualname":"::constants::DW_FORM_ref4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4973},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49017,"byte_end":49029,"line_start":675,"line_end":675,"column_start":5,"column_end":17},"name":"DW_FORM_ref8","qualname":"::constants::DW_FORM_ref8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49042,"byte_end":49059,"line_start":676,"line_end":676,"column_start":5,"column_end":22},"name":"DW_FORM_ref_udata","qualname":"::constants::DW_FORM_ref_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49072,"byte_end":49088,"line_start":677,"line_end":677,"column_start":5,"column_end":21},"name":"DW_FORM_indirect","qualname":"::constants::DW_FORM_indirect","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49114,"byte_end":49132,"line_start":680,"line_end":680,"column_start":5,"column_end":23},"name":"DW_FORM_sec_offset","qualname":"::constants::DW_FORM_sec_offset","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4977},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49145,"byte_end":49160,"line_start":681,"line_end":681,"column_start":5,"column_end":20},"name":"DW_FORM_exprloc","qualname":"::constants::DW_FORM_exprloc","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49173,"byte_end":49193,"line_start":682,"line_end":682,"column_start":5,"column_end":25},"name":"DW_FORM_flag_present","qualname":"::constants::DW_FORM_flag_present","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4979},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49206,"byte_end":49222,"line_start":683,"line_end":683,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sig8","qualname":"::constants::DW_FORM_ref_sig8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4980},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49248,"byte_end":49260,"line_start":686,"line_end":686,"column_start":5,"column_end":17},"name":"DW_FORM_strx","qualname":"::constants::DW_FORM_strx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49273,"byte_end":49286,"line_start":687,"line_end":687,"column_start":5,"column_end":18},"name":"DW_FORM_addrx","qualname":"::constants::DW_FORM_addrx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49299,"byte_end":49315,"line_start":688,"line_end":688,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup4","qualname":"::constants::DW_FORM_ref_sup4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49328,"byte_end":49344,"line_start":689,"line_end":689,"column_start":5,"column_end":21},"name":"DW_FORM_strp_sup","qualname":"::constants::DW_FORM_strp_sup","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49357,"byte_end":49371,"line_start":690,"line_end":690,"column_start":5,"column_end":19},"name":"DW_FORM_data16","qualname":"::constants::DW_FORM_data16","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4985},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49384,"byte_end":49401,"line_start":691,"line_end":691,"column_start":5,"column_end":22},"name":"DW_FORM_line_strp","qualname":"::constants::DW_FORM_line_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4986},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49414,"byte_end":49436,"line_start":692,"line_end":692,"column_start":5,"column_end":27},"name":"DW_FORM_implicit_const","qualname":"::constants::DW_FORM_implicit_const","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49449,"byte_end":49465,"line_start":693,"line_end":693,"column_start":5,"column_end":21},"name":"DW_FORM_loclistx","qualname":"::constants::DW_FORM_loclistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4988},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49478,"byte_end":49494,"line_start":694,"line_end":694,"column_start":5,"column_end":21},"name":"DW_FORM_rnglistx","qualname":"::constants::DW_FORM_rnglistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49507,"byte_end":49523,"line_start":695,"line_end":695,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup8","qualname":"::constants::DW_FORM_ref_sup8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4990},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49536,"byte_end":49549,"line_start":696,"line_end":696,"column_start":5,"column_end":18},"name":"DW_FORM_strx1","qualname":"::constants::DW_FORM_strx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49562,"byte_end":49575,"line_start":697,"line_end":697,"column_start":5,"column_end":18},"name":"DW_FORM_strx2","qualname":"::constants::DW_FORM_strx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4992},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49588,"byte_end":49601,"line_start":698,"line_end":698,"column_start":5,"column_end":18},"name":"DW_FORM_strx3","qualname":"::constants::DW_FORM_strx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4993},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49614,"byte_end":49627,"line_start":699,"line_end":699,"column_start":5,"column_end":18},"name":"DW_FORM_strx4","qualname":"::constants::DW_FORM_strx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49640,"byte_end":49654,"line_start":700,"line_end":700,"column_start":5,"column_end":19},"name":"DW_FORM_addrx1","qualname":"::constants::DW_FORM_addrx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49667,"byte_end":49681,"line_start":701,"line_end":701,"column_start":5,"column_end":19},"name":"DW_FORM_addrx2","qualname":"::constants::DW_FORM_addrx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4996},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49694,"byte_end":49708,"line_start":702,"line_end":702,"column_start":5,"column_end":19},"name":"DW_FORM_addrx3","qualname":"::constants::DW_FORM_addrx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49721,"byte_end":49735,"line_start":703,"line_end":703,"column_start":5,"column_end":19},"name":"DW_FORM_addrx4","qualname":"::constants::DW_FORM_addrx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4998},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49784,"byte_end":49806,"line_start":706,"line_end":706,"column_start":5,"column_end":27},"name":"DW_FORM_GNU_addr_index","qualname":"::constants::DW_FORM_GNU_addr_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4999},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49821,"byte_end":49842,"line_start":707,"line_end":707,"column_start":5,"column_end":26},"name":"DW_FORM_GNU_str_index","qualname":"::constants::DW_FORM_GNU_str_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49919,"byte_end":49938,"line_start":710,"line_end":710,"column_start":5,"column_end":24},"name":"DW_FORM_GNU_ref_alt","qualname":"::constants::DW_FORM_GNU_ref_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":49953,"byte_end":49973,"line_start":711,"line_end":711,"column_start":5,"column_end":25},"name":"DW_FORM_GNU_strp_alt","qualname":"::constants::DW_FORM_GNU_strp_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5052},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50105,"byte_end":50110,"line_start":718,"line_end":718,"column_start":1,"column_end":6},"name":"DwAte","qualname":"::constants::DwAte","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_encoding` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5028},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50121,"byte_end":50135,"line_start":719,"line_end":719,"column_start":5,"column_end":19},"name":"DW_ATE_address","qualname":"::constants::DW_ATE_address","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5029},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50148,"byte_end":50162,"line_start":720,"line_end":720,"column_start":5,"column_end":19},"name":"DW_ATE_boolean","qualname":"::constants::DW_ATE_boolean","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5030},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50175,"byte_end":50195,"line_start":721,"line_end":721,"column_start":5,"column_end":25},"name":"DW_ATE_complex_float","qualname":"::constants::DW_ATE_complex_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5031},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50208,"byte_end":50220,"line_start":722,"line_end":722,"column_start":5,"column_end":17},"name":"DW_ATE_float","qualname":"::constants::DW_ATE_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50233,"byte_end":50246,"line_start":723,"line_end":723,"column_start":5,"column_end":18},"name":"DW_ATE_signed","qualname":"::constants::DW_ATE_signed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5033},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50259,"byte_end":50277,"line_start":724,"line_end":724,"column_start":5,"column_end":23},"name":"DW_ATE_signed_char","qualname":"::constants::DW_ATE_signed_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5034},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50290,"byte_end":50305,"line_start":725,"line_end":725,"column_start":5,"column_end":20},"name":"DW_ATE_unsigned","qualname":"::constants::DW_ATE_unsigned","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5035},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50318,"byte_end":50338,"line_start":726,"line_end":726,"column_start":5,"column_end":25},"name":"DW_ATE_unsigned_char","qualname":"::constants::DW_ATE_unsigned_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5036},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50364,"byte_end":50386,"line_start":729,"line_end":729,"column_start":5,"column_end":27},"name":"DW_ATE_imaginary_float","qualname":"::constants::DW_ATE_imaginary_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5037},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50399,"byte_end":50420,"line_start":730,"line_end":730,"column_start":5,"column_end":26},"name":"DW_ATE_packed_decimal","qualname":"::constants::DW_ATE_packed_decimal","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5038},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50433,"byte_end":50454,"line_start":731,"line_end":731,"column_start":5,"column_end":26},"name":"DW_ATE_numeric_string","qualname":"::constants::DW_ATE_numeric_string","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5039},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50467,"byte_end":50480,"line_start":732,"line_end":732,"column_start":5,"column_end":18},"name":"DW_ATE_edited","qualname":"::constants::DW_ATE_edited","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5040},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50493,"byte_end":50512,"line_start":733,"line_end":733,"column_start":5,"column_end":24},"name":"DW_ATE_signed_fixed","qualname":"::constants::DW_ATE_signed_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5041},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50525,"byte_end":50546,"line_start":734,"line_end":734,"column_start":5,"column_end":26},"name":"DW_ATE_unsigned_fixed","qualname":"::constants::DW_ATE_unsigned_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5042},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50559,"byte_end":50579,"line_start":735,"line_end":735,"column_start":5,"column_end":25},"name":"DW_ATE_decimal_float","qualname":"::constants::DW_ATE_decimal_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5043},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50606,"byte_end":50616,"line_start":738,"line_end":738,"column_start":5,"column_end":15},"name":"DW_ATE_UTF","qualname":"::constants::DW_ATE_UTF","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5044},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50629,"byte_end":50639,"line_start":739,"line_end":739,"column_start":5,"column_end":15},"name":"DW_ATE_UCS","qualname":"::constants::DW_ATE_UCS","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50652,"byte_end":50664,"line_start":740,"line_end":740,"column_start":5,"column_end":17},"name":"DW_ATE_ASCII","qualname":"::constants::DW_ATE_ASCII","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5046},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50678,"byte_end":50692,"line_start":742,"line_end":742,"column_start":5,"column_end":19},"name":"DW_ATE_lo_user","qualname":"::constants::DW_ATE_lo_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5047},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50705,"byte_end":50719,"line_start":743,"line_end":743,"column_start":5,"column_end":19},"name":"DW_ATE_hi_user","qualname":"::constants::DW_ATE_hi_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5088},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50843,"byte_end":50848,"line_start":750,"line_end":750,"column_start":1,"column_end":6},"name":"DwLle","qualname":"::constants::DwLle","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in location list entries.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50859,"byte_end":50877,"line_start":751,"line_end":751,"column_start":5,"column_end":23},"name":"DW_LLE_end_of_list","qualname":"::constants::DW_LLE_end_of_list","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50890,"byte_end":50910,"line_start":752,"line_end":752,"column_start":5,"column_end":25},"name":"DW_LLE_base_addressx","qualname":"::constants::DW_LLE_base_addressx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5076},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50923,"byte_end":50941,"line_start":753,"line_end":753,"column_start":5,"column_end":23},"name":"DW_LLE_startx_endx","qualname":"::constants::DW_LLE_startx_endx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50954,"byte_end":50974,"line_start":754,"line_end":754,"column_start":5,"column_end":25},"name":"DW_LLE_startx_length","qualname":"::constants::DW_LLE_startx_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5078},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":50987,"byte_end":51005,"line_start":755,"line_end":755,"column_start":5,"column_end":23},"name":"DW_LLE_offset_pair","qualname":"::constants::DW_LLE_offset_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51018,"byte_end":51041,"line_start":756,"line_end":756,"column_start":5,"column_end":28},"name":"DW_LLE_default_location","qualname":"::constants::DW_LLE_default_location","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5080},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51054,"byte_end":51073,"line_start":757,"line_end":757,"column_start":5,"column_end":24},"name":"DW_LLE_base_address","qualname":"::constants::DW_LLE_base_address","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5081},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51086,"byte_end":51102,"line_start":758,"line_end":758,"column_start":5,"column_end":21},"name":"DW_LLE_start_end","qualname":"::constants::DW_LLE_start_end","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5082},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51115,"byte_end":51134,"line_start":759,"line_end":759,"column_start":5,"column_end":24},"name":"DW_LLE_start_length","qualname":"::constants::DW_LLE_start_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5083},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51147,"byte_end":51167,"line_start":760,"line_end":760,"column_start":5,"column_end":25},"name":"DW_LLE_GNU_view_pair","qualname":"::constants::DW_LLE_GNU_view_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5119},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51302,"byte_end":51306,"line_start":767,"line_end":767,"column_start":1,"column_end":5},"name":"DwDs","qualname":"::constants::DwDs","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_decimal_sign` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5110},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51317,"byte_end":51331,"line_start":768,"line_end":768,"column_start":5,"column_end":19},"name":"DW_DS_unsigned","qualname":"::constants::DW_DS_unsigned","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5111},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51344,"byte_end":51367,"line_start":769,"line_end":769,"column_start":5,"column_end":28},"name":"DW_DS_leading_overpunch","qualname":"::constants::DW_DS_leading_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5112},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51380,"byte_end":51404,"line_start":770,"line_end":770,"column_start":5,"column_end":29},"name":"DW_DS_trailing_overpunch","qualname":"::constants::DW_DS_trailing_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5113},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51417,"byte_end":51439,"line_start":771,"line_end":771,"column_start":5,"column_end":27},"name":"DW_DS_leading_separate","qualname":"::constants::DW_DS_leading_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5114},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51452,"byte_end":51475,"line_start":772,"line_end":772,"column_start":5,"column_end":28},"name":"DW_DS_trailing_separate","qualname":"::constants::DW_DS_trailing_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51607,"byte_end":51612,"line_start":779,"line_end":779,"column_start":1,"column_end":6},"name":"DwEnd","qualname":"::constants::DwEnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_endianity` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51623,"byte_end":51637,"line_start":780,"line_end":780,"column_start":5,"column_end":19},"name":"DW_END_default","qualname":"::constants::DW_END_default","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5142},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51650,"byte_end":51660,"line_start":781,"line_end":781,"column_start":5,"column_end":15},"name":"DW_END_big","qualname":"::constants::DW_END_big","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51673,"byte_end":51686,"line_start":782,"line_end":782,"column_start":5,"column_end":18},"name":"DW_END_little","qualname":"::constants::DW_END_little","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5144},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51699,"byte_end":51713,"line_start":783,"line_end":783,"column_start":5,"column_end":19},"name":"DW_END_lo_user","qualname":"::constants::DW_END_lo_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51726,"byte_end":51740,"line_start":784,"line_end":784,"column_start":5,"column_end":19},"name":"DW_END_hi_user","qualname":"::constants::DW_END_hi_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5179},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51876,"byte_end":51884,"line_start":791,"line_end":791,"column_start":1,"column_end":9},"name":"DwAccess","qualname":"::constants::DwAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_accessibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5172},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51895,"byte_end":51911,"line_start":792,"line_end":792,"column_start":5,"column_end":21},"name":"DW_ACCESS_public","qualname":"::constants::DW_ACCESS_public","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5173},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51924,"byte_end":51943,"line_start":793,"line_end":793,"column_start":5,"column_end":24},"name":"DW_ACCESS_protected","qualname":"::constants::DW_ACCESS_protected","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5174},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":51956,"byte_end":51973,"line_start":794,"line_end":794,"column_start":5,"column_end":22},"name":"DW_ACCESS_private","qualname":"::constants::DW_ACCESS_private","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52107,"byte_end":52112,"line_start":801,"line_end":801,"column_start":1,"column_end":6},"name":"DwVis","qualname":"::constants::DwVis","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_visibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52123,"byte_end":52135,"line_start":802,"line_end":802,"column_start":5,"column_end":17},"name":"DW_VIS_local","qualname":"::constants::DW_VIS_local","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5202},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52148,"byte_end":52163,"line_start":803,"line_end":803,"column_start":5,"column_end":20},"name":"DW_VIS_exported","qualname":"::constants::DW_VIS_exported","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5203},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52176,"byte_end":52192,"line_start":804,"line_end":804,"column_start":5,"column_end":21},"name":"DW_VIS_qualified","qualname":"::constants::DW_VIS_qualified","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5237},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52326,"byte_end":52338,"line_start":811,"line_end":811,"column_start":1,"column_end":13},"name":"DwVirtuality","qualname":"::constants::DwVirtuality","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_virtuality` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52349,"byte_end":52367,"line_start":812,"line_end":812,"column_start":5,"column_end":23},"name":"DW_VIRTUALITY_none","qualname":"::constants::DW_VIRTUALITY_none","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52380,"byte_end":52401,"line_start":813,"line_end":813,"column_start":5,"column_end":26},"name":"DW_VIRTUALITY_virtual","qualname":"::constants::DW_VIRTUALITY_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5232},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52414,"byte_end":52440,"line_start":814,"line_end":814,"column_start":5,"column_end":31},"name":"DW_VIRTUALITY_pure_virtual","qualname":"::constants::DW_VIRTUALITY_pure_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52572,"byte_end":52578,"line_start":821,"line_end":821,"column_start":1,"column_end":7},"name":"DwLang","qualname":"::constants::DwLang","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_language` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52590,"byte_end":52601,"line_start":822,"line_end":822,"column_start":5,"column_end":16},"name":"DW_LANG_C89","qualname":"::constants::DW_LANG_C89","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52616,"byte_end":52625,"line_start":823,"line_end":823,"column_start":5,"column_end":14},"name":"DW_LANG_C","qualname":"::constants::DW_LANG_C","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5261},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52640,"byte_end":52653,"line_start":824,"line_end":824,"column_start":5,"column_end":18},"name":"DW_LANG_Ada83","qualname":"::constants::DW_LANG_Ada83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52668,"byte_end":52687,"line_start":825,"line_end":825,"column_start":5,"column_end":24},"name":"DW_LANG_C_plus_plus","qualname":"::constants::DW_LANG_C_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52702,"byte_end":52717,"line_start":826,"line_end":826,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol74","qualname":"::constants::DW_LANG_Cobol74","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5264},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52732,"byte_end":52747,"line_start":827,"line_end":827,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol85","qualname":"::constants::DW_LANG_Cobol85","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52762,"byte_end":52779,"line_start":828,"line_end":828,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran77","qualname":"::constants::DW_LANG_Fortran77","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5266},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52794,"byte_end":52811,"line_start":829,"line_end":829,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran90","qualname":"::constants::DW_LANG_Fortran90","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5267},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52826,"byte_end":52842,"line_start":830,"line_end":830,"column_start":5,"column_end":21},"name":"DW_LANG_Pascal83","qualname":"::constants::DW_LANG_Pascal83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5268},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52857,"byte_end":52872,"line_start":831,"line_end":831,"column_start":5,"column_end":20},"name":"DW_LANG_Modula2","qualname":"::constants::DW_LANG_Modula2","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52887,"byte_end":52899,"line_start":832,"line_end":832,"column_start":5,"column_end":17},"name":"DW_LANG_Java","qualname":"::constants::DW_LANG_Java","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52914,"byte_end":52925,"line_start":833,"line_end":833,"column_start":5,"column_end":16},"name":"DW_LANG_C99","qualname":"::constants::DW_LANG_C99","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52940,"byte_end":52953,"line_start":834,"line_end":834,"column_start":5,"column_end":18},"name":"DW_LANG_Ada95","qualname":"::constants::DW_LANG_Ada95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":52968,"byte_end":52985,"line_start":835,"line_end":835,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran95","qualname":"::constants::DW_LANG_Fortran95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5273},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53000,"byte_end":53011,"line_start":836,"line_end":836,"column_start":5,"column_end":16},"name":"DW_LANG_PLI","qualname":"::constants::DW_LANG_PLI","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53026,"byte_end":53038,"line_start":837,"line_end":837,"column_start":5,"column_end":17},"name":"DW_LANG_ObjC","qualname":"::constants::DW_LANG_ObjC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53053,"byte_end":53075,"line_start":838,"line_end":838,"column_start":5,"column_end":27},"name":"DW_LANG_ObjC_plus_plus","qualname":"::constants::DW_LANG_ObjC_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53090,"byte_end":53101,"line_start":839,"line_end":839,"column_start":5,"column_end":16},"name":"DW_LANG_UPC","qualname":"::constants::DW_LANG_UPC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5277},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53116,"byte_end":53125,"line_start":840,"line_end":840,"column_start":5,"column_end":14},"name":"DW_LANG_D","qualname":"::constants::DW_LANG_D","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53140,"byte_end":53154,"line_start":841,"line_end":841,"column_start":5,"column_end":19},"name":"DW_LANG_Python","qualname":"::constants::DW_LANG_Python","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5279},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53169,"byte_end":53183,"line_start":842,"line_end":842,"column_start":5,"column_end":19},"name":"DW_LANG_OpenCL","qualname":"::constants::DW_LANG_OpenCL","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53198,"byte_end":53208,"line_start":843,"line_end":843,"column_start":5,"column_end":15},"name":"DW_LANG_Go","qualname":"::constants::DW_LANG_Go","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53223,"byte_end":53238,"line_start":844,"line_end":844,"column_start":5,"column_end":20},"name":"DW_LANG_Modula3","qualname":"::constants::DW_LANG_Modula3","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53253,"byte_end":53268,"line_start":845,"line_end":845,"column_start":5,"column_end":20},"name":"DW_LANG_Haskell","qualname":"::constants::DW_LANG_Haskell","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5283},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53283,"byte_end":53305,"line_start":846,"line_end":846,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_03","qualname":"::constants::DW_LANG_C_plus_plus_03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53320,"byte_end":53342,"line_start":847,"line_end":847,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_11","qualname":"::constants::DW_LANG_C_plus_plus_11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53357,"byte_end":53370,"line_start":848,"line_end":848,"column_start":5,"column_end":18},"name":"DW_LANG_OCaml","qualname":"::constants::DW_LANG_OCaml","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53385,"byte_end":53397,"line_start":849,"line_end":849,"column_start":5,"column_end":17},"name":"DW_LANG_Rust","qualname":"::constants::DW_LANG_Rust","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5287},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53412,"byte_end":53423,"line_start":850,"line_end":850,"column_start":5,"column_end":16},"name":"DW_LANG_C11","qualname":"::constants::DW_LANG_C11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5288},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53438,"byte_end":53451,"line_start":851,"line_end":851,"column_start":5,"column_end":18},"name":"DW_LANG_Swift","qualname":"::constants::DW_LANG_Swift","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53466,"byte_end":53479,"line_start":852,"line_end":852,"column_start":5,"column_end":18},"name":"DW_LANG_Julia","qualname":"::constants::DW_LANG_Julia","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5290},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53494,"byte_end":53507,"line_start":853,"line_end":853,"column_start":5,"column_end":18},"name":"DW_LANG_Dylan","qualname":"::constants::DW_LANG_Dylan","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53522,"byte_end":53544,"line_start":854,"line_end":854,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_14","qualname":"::constants::DW_LANG_C_plus_plus_14","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5292},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53559,"byte_end":53576,"line_start":855,"line_end":855,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran03","qualname":"::constants::DW_LANG_Fortran03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53591,"byte_end":53608,"line_start":856,"line_end":856,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran08","qualname":"::constants::DW_LANG_Fortran08","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5294},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53623,"byte_end":53643,"line_start":857,"line_end":857,"column_start":5,"column_end":25},"name":"DW_LANG_RenderScript","qualname":"::constants::DW_LANG_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53658,"byte_end":53671,"line_start":858,"line_end":858,"column_start":5,"column_end":18},"name":"DW_LANG_BLISS","qualname":"::constants::DW_LANG_BLISS","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5296},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53686,"byte_end":53700,"line_start":859,"line_end":859,"column_start":5,"column_end":19},"name":"DW_LANG_Kotlin","qualname":"::constants::DW_LANG_Kotlin","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53715,"byte_end":53726,"line_start":860,"line_end":860,"column_start":5,"column_end":16},"name":"DW_LANG_Zig","qualname":"::constants::DW_LANG_Zig","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5298},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53741,"byte_end":53756,"line_start":861,"line_end":861,"column_start":5,"column_end":20},"name":"DW_LANG_Crystal","qualname":"::constants::DW_LANG_Crystal","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5299},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53771,"byte_end":53793,"line_start":862,"line_end":862,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_17","qualname":"::constants::DW_LANG_C_plus_plus_17","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5300},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53808,"byte_end":53830,"line_start":863,"line_end":863,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_20","qualname":"::constants::DW_LANG_C_plus_plus_20","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53845,"byte_end":53856,"line_start":864,"line_end":864,"column_start":5,"column_end":16},"name":"DW_LANG_C17","qualname":"::constants::DW_LANG_C17","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5302},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53871,"byte_end":53888,"line_start":865,"line_end":865,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran18","qualname":"::constants::DW_LANG_Fortran18","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53903,"byte_end":53918,"line_start":866,"line_end":866,"column_start":5,"column_end":20},"name":"DW_LANG_Ada2005","qualname":"::constants::DW_LANG_Ada2005","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53933,"byte_end":53948,"line_start":867,"line_end":867,"column_start":5,"column_end":20},"name":"DW_LANG_Ada2012","qualname":"::constants::DW_LANG_Ada2012","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5305},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53964,"byte_end":53979,"line_start":869,"line_end":869,"column_start":5,"column_end":20},"name":"DW_LANG_lo_user","qualname":"::constants::DW_LANG_lo_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5306},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":53994,"byte_end":54009,"line_start":870,"line_end":870,"column_start":5,"column_end":20},"name":"DW_LANG_hi_user","qualname":"::constants::DW_LANG_hi_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5307},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54025,"byte_end":54047,"line_start":872,"line_end":872,"column_start":5,"column_end":27},"name":"DW_LANG_Mips_Assembler","qualname":"::constants::DW_LANG_Mips_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54062,"byte_end":54089,"line_start":873,"line_end":873,"column_start":5,"column_end":32},"name":"DW_LANG_GOOGLE_RenderScript","qualname":"::constants::DW_LANG_GOOGLE_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5309},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54104,"byte_end":54125,"line_start":874,"line_end":874,"column_start":5,"column_end":26},"name":"DW_LANG_SUN_Assembler","qualname":"::constants::DW_LANG_SUN_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54140,"byte_end":54164,"line_start":875,"line_end":875,"column_start":5,"column_end":29},"name":"DW_LANG_ALTIUM_Assembler","qualname":"::constants::DW_LANG_ALTIUM_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54179,"byte_end":54201,"line_start":876,"line_end":876,"column_start":5,"column_end":27},"name":"DW_LANG_BORLAND_Delphi","qualname":"::constants::DW_LANG_BORLAND_Delphi","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54303,"byte_end":54322,"line_start":881,"line_end":881,"column_start":12,"column_end":31},"name":"default_lower_bound","qualname":"<DwLang>::default_lower_bound","value":"pub fn default_lower_bound(Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the default DW_AT_lower_bound for this language.\n","sig":null,"attributes":[{"value":"/ Get the default DW_AT_lower_bound for this language.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54235,"byte_end":54291,"line_start":880,"line_end":880,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5343},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55590,"byte_end":55596,"line_start":920,"line_end":920,"column_start":1,"column_end":7},"name":"DwAddr","qualname":"::constants::DwAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_address_class` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5338},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55608,"byte_end":55620,"line_start":921,"line_end":921,"column_start":5,"column_end":17},"name":"DW_ADDR_none","qualname":"::constants::DW_ADDR_none","value":"DwAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5373},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55759,"byte_end":55763,"line_start":928,"line_end":928,"column_start":1,"column_end":5},"name":"DwId","qualname":"::constants::DwId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_identifier_case` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5365},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55774,"byte_end":55794,"line_start":929,"line_end":929,"column_start":5,"column_end":25},"name":"DW_ID_case_sensitive","qualname":"::constants::DW_ID_case_sensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5366},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55807,"byte_end":55820,"line_start":930,"line_end":930,"column_start":5,"column_end":18},"name":"DW_ID_up_case","qualname":"::constants::DW_ID_up_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55833,"byte_end":55848,"line_start":931,"line_end":931,"column_start":5,"column_end":20},"name":"DW_ID_down_case","qualname":"::constants::DW_ID_down_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5368},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":55861,"byte_end":55883,"line_start":932,"line_end":932,"column_start":5,"column_end":27},"name":"DW_ID_case_insensitive","qualname":"::constants::DW_ID_case_insensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5406},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56025,"byte_end":56029,"line_start":939,"line_end":939,"column_start":1,"column_end":5},"name":"DwCc","qualname":"::constants::DwCc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_calling_convention` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5395},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56040,"byte_end":56052,"line_start":940,"line_end":940,"column_start":5,"column_end":17},"name":"DW_CC_normal","qualname":"::constants::DW_CC_normal","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5396},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56065,"byte_end":56078,"line_start":941,"line_end":941,"column_start":5,"column_end":18},"name":"DW_CC_program","qualname":"::constants::DW_CC_program","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5397},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56091,"byte_end":56103,"line_start":942,"line_end":942,"column_start":5,"column_end":17},"name":"DW_CC_nocall","qualname":"::constants::DW_CC_nocall","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5398},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56116,"byte_end":56139,"line_start":943,"line_end":943,"column_start":5,"column_end":28},"name":"DW_CC_pass_by_reference","qualname":"::constants::DW_CC_pass_by_reference","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5399},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56152,"byte_end":56171,"line_start":944,"line_end":944,"column_start":5,"column_end":24},"name":"DW_CC_pass_by_value","qualname":"::constants::DW_CC_pass_by_value","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5400},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56184,"byte_end":56197,"line_start":945,"line_end":945,"column_start":5,"column_end":18},"name":"DW_CC_lo_user","qualname":"::constants::DW_CC_lo_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5401},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56210,"byte_end":56223,"line_start":946,"line_end":946,"column_start":5,"column_end":18},"name":"DW_CC_hi_user","qualname":"::constants::DW_CC_hi_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5436},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56353,"byte_end":56358,"line_start":953,"line_end":953,"column_start":1,"column_end":6},"name":"DwInl","qualname":"::constants::DwInl","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_inline` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56369,"byte_end":56387,"line_start":954,"line_end":954,"column_start":5,"column_end":23},"name":"DW_INL_not_inlined","qualname":"::constants::DW_INL_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5429},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56400,"byte_end":56414,"line_start":955,"line_end":955,"column_start":5,"column_end":19},"name":"DW_INL_inlined","qualname":"::constants::DW_INL_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56427,"byte_end":56454,"line_start":956,"line_end":956,"column_start":5,"column_end":32},"name":"DW_INL_declared_not_inlined","qualname":"::constants::DW_INL_declared_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56467,"byte_end":56490,"line_start":957,"line_end":957,"column_start":5,"column_end":28},"name":"DW_INL_declared_inlined","qualname":"::constants::DW_INL_declared_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5464},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56622,"byte_end":56627,"line_start":964,"line_end":964,"column_start":1,"column_end":6},"name":"DwOrd","qualname":"::constants::DwOrd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_ordering` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5458},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56638,"byte_end":56654,"line_start":965,"line_end":965,"column_start":5,"column_end":21},"name":"DW_ORD_row_major","qualname":"::constants::DW_ORD_row_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5459},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56667,"byte_end":56683,"line_start":966,"line_end":966,"column_start":5,"column_end":21},"name":"DW_ORD_col_major","qualname":"::constants::DW_ORD_col_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56817,"byte_end":56822,"line_start":973,"line_end":973,"column_start":1,"column_end":6},"name":"DwDsc","qualname":"::constants::DwDsc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_discr_list` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56833,"byte_end":56845,"line_start":974,"line_end":974,"column_start":5,"column_end":17},"name":"DW_DSC_label","qualname":"::constants::DW_DSC_label","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5487},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56858,"byte_end":56870,"line_start":975,"line_end":975,"column_start":5,"column_end":17},"name":"DW_DSC_range","qualname":"::constants::DW_DSC_range","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56963,"byte_end":56968,"line_start":982,"line_end":982,"column_start":1,"column_end":6},"name":"DwIdx","qualname":"::constants::DwIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" Name index attribute encodings.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5514},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":56980,"byte_end":56999,"line_start":983,"line_end":983,"column_start":5,"column_end":24},"name":"DW_IDX_compile_unit","qualname":"::constants::DW_IDX_compile_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5515},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57009,"byte_end":57025,"line_start":984,"line_end":984,"column_start":5,"column_end":21},"name":"DW_IDX_type_unit","qualname":"::constants::DW_IDX_type_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5516},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57035,"byte_end":57052,"line_start":985,"line_end":985,"column_start":5,"column_end":22},"name":"DW_IDX_die_offset","qualname":"::constants::DW_IDX_die_offset","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57062,"byte_end":57075,"line_start":986,"line_end":986,"column_start":5,"column_end":18},"name":"DW_IDX_parent","qualname":"::constants::DW_IDX_parent","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5518},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57085,"byte_end":57101,"line_start":987,"line_end":987,"column_start":5,"column_end":21},"name":"DW_IDX_type_hash","qualname":"::constants::DW_IDX_type_hash","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5519},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57111,"byte_end":57125,"line_start":988,"line_end":988,"column_start":5,"column_end":19},"name":"DW_IDX_lo_user","qualname":"::constants::DW_IDX_lo_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5520},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57140,"byte_end":57154,"line_start":989,"line_end":989,"column_start":5,"column_end":19},"name":"DW_IDX_hi_user","qualname":"::constants::DW_IDX_hi_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5554},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57289,"byte_end":57300,"line_start":996,"line_end":996,"column_start":1,"column_end":12},"name":"DwDefaulted","qualname":"::constants::DwDefaulted","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_defaulted` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5547},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57311,"byte_end":57326,"line_start":997,"line_end":997,"column_start":5,"column_end":20},"name":"DW_DEFAULTED_no","qualname":"::constants::DW_DEFAULTED_no","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5548},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57339,"byte_end":57360,"line_start":998,"line_end":998,"column_start":5,"column_end":26},"name":"DW_DEFAULTED_in_class","qualname":"::constants::DW_DEFAULTED_in_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5549},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57373,"byte_end":57398,"line_start":999,"line_end":999,"column_start":5,"column_end":30},"name":"DW_DEFAULTED_out_of_class","qualname":"::constants::DW_DEFAULTED_out_of_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57527,"byte_end":57532,"line_start":1006,"line_end":1006,"column_start":1,"column_end":6},"name":"DwLns","qualname":"::constants::DwLns","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the standard opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5576},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57543,"byte_end":57554,"line_start":1007,"line_end":1007,"column_start":5,"column_end":16},"name":"DW_LNS_copy","qualname":"::constants::DW_LNS_copy","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5577},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57567,"byte_end":57584,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22},"name":"DW_LNS_advance_pc","qualname":"::constants::DW_LNS_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57597,"byte_end":57616,"line_start":1009,"line_end":1009,"column_start":5,"column_end":24},"name":"DW_LNS_advance_line","qualname":"::constants::DW_LNS_advance_line","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5579},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57629,"byte_end":57644,"line_start":1010,"line_end":1010,"column_start":5,"column_end":20},"name":"DW_LNS_set_file","qualname":"::constants::DW_LNS_set_file","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57657,"byte_end":57674,"line_start":1011,"line_end":1011,"column_start":5,"column_end":22},"name":"DW_LNS_set_column","qualname":"::constants::DW_LNS_set_column","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5581},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57687,"byte_end":57705,"line_start":1012,"line_end":1012,"column_start":5,"column_end":23},"name":"DW_LNS_negate_stmt","qualname":"::constants::DW_LNS_negate_stmt","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5582},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57718,"byte_end":57740,"line_start":1013,"line_end":1013,"column_start":5,"column_end":27},"name":"DW_LNS_set_basic_block","qualname":"::constants::DW_LNS_set_basic_block","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57753,"byte_end":57772,"line_start":1014,"line_end":1014,"column_start":5,"column_end":24},"name":"DW_LNS_const_add_pc","qualname":"::constants::DW_LNS_const_add_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5584},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57785,"byte_end":57808,"line_start":1015,"line_end":1015,"column_start":5,"column_end":28},"name":"DW_LNS_fixed_advance_pc","qualname":"::constants::DW_LNS_fixed_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5585},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57821,"byte_end":57844,"line_start":1016,"line_end":1016,"column_start":5,"column_end":28},"name":"DW_LNS_set_prologue_end","qualname":"::constants::DW_LNS_set_prologue_end","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5586},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57857,"byte_end":57882,"line_start":1017,"line_end":1017,"column_start":5,"column_end":30},"name":"DW_LNS_set_epilogue_begin","qualname":"::constants::DW_LNS_set_epilogue_begin","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5587},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":57895,"byte_end":57909,"line_start":1018,"line_end":1018,"column_start":5,"column_end":19},"name":"DW_LNS_set_isa","qualname":"::constants::DW_LNS_set_isa","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58038,"byte_end":58043,"line_start":1025,"line_end":1025,"column_start":1,"column_end":6},"name":"DwLne","qualname":"::constants::DwLne","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the extended opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5614},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58054,"byte_end":58073,"line_start":1026,"line_end":1026,"column_start":5,"column_end":24},"name":"DW_LNE_end_sequence","qualname":"::constants::DW_LNE_end_sequence","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5615},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58086,"byte_end":58104,"line_start":1027,"line_end":1027,"column_start":5,"column_end":23},"name":"DW_LNE_set_address","qualname":"::constants::DW_LNE_set_address","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58117,"byte_end":58135,"line_start":1028,"line_end":1028,"column_start":5,"column_end":23},"name":"DW_LNE_define_file","qualname":"::constants::DW_LNE_define_file","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58148,"byte_end":58172,"line_start":1029,"line_end":1029,"column_start":5,"column_end":29},"name":"DW_LNE_set_discriminator","qualname":"::constants::DW_LNE_set_discriminator","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5618},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58186,"byte_end":58200,"line_start":1031,"line_end":1031,"column_start":5,"column_end":19},"name":"DW_LNE_lo_user","qualname":"::constants::DW_LNE_lo_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58213,"byte_end":58227,"line_start":1032,"line_end":1032,"column_start":5,"column_end":19},"name":"DW_LNE_hi_user","qualname":"::constants::DW_LNE_hi_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5657},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58344,"byte_end":58350,"line_start":1039,"line_end":1039,"column_start":1,"column_end":7},"name":"DwLnct","qualname":"::constants::DwLnct","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the line number header entry formats.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5646},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58362,"byte_end":58374,"line_start":1040,"line_end":1040,"column_start":5,"column_end":17},"name":"DW_LNCT_path","qualname":"::constants::DW_LNCT_path","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5647},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58386,"byte_end":58409,"line_start":1041,"line_end":1041,"column_start":5,"column_end":28},"name":"DW_LNCT_directory_index","qualname":"::constants::DW_LNCT_directory_index","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58421,"byte_end":58438,"line_start":1042,"line_end":1042,"column_start":5,"column_end":22},"name":"DW_LNCT_timestamp","qualname":"::constants::DW_LNCT_timestamp","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5649},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58450,"byte_end":58462,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17},"name":"DW_LNCT_size","qualname":"::constants::DW_LNCT_size","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5650},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58474,"byte_end":58485,"line_start":1044,"line_end":1044,"column_start":5,"column_end":16},"name":"DW_LNCT_MD5","qualname":"::constants::DW_LNCT_MD5","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5651},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58497,"byte_end":58512,"line_start":1045,"line_end":1045,"column_start":5,"column_end":20},"name":"DW_LNCT_lo_user","qualname":"::constants::DW_LNCT_lo_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5652},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58527,"byte_end":58542,"line_start":1046,"line_end":1046,"column_start":5,"column_end":20},"name":"DW_LNCT_hi_user","qualname":"::constants::DW_LNCT_hi_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5697},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58654,"byte_end":58661,"line_start":1053,"line_end":1053,"column_start":1,"column_end":8},"name":"DwMacro","qualname":"::constants::DwMacro","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for macro information entry types.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58672,"byte_end":58687,"line_start":1054,"line_end":1054,"column_start":5,"column_end":20},"name":"DW_MACRO_define","qualname":"::constants::DW_MACRO_define","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5680},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58700,"byte_end":58714,"line_start":1055,"line_end":1055,"column_start":5,"column_end":19},"name":"DW_MACRO_undef","qualname":"::constants::DW_MACRO_undef","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5681},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58727,"byte_end":58746,"line_start":1056,"line_end":1056,"column_start":5,"column_end":24},"name":"DW_MACRO_start_file","qualname":"::constants::DW_MACRO_start_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58759,"byte_end":58776,"line_start":1057,"line_end":1057,"column_start":5,"column_end":22},"name":"DW_MACRO_end_file","qualname":"::constants::DW_MACRO_end_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5683},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58789,"byte_end":58809,"line_start":1058,"line_end":1058,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strp","qualname":"::constants::DW_MACRO_define_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58822,"byte_end":58841,"line_start":1059,"line_end":1059,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strp","qualname":"::constants::DW_MACRO_undef_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5685},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58854,"byte_end":58869,"line_start":1060,"line_end":1060,"column_start":5,"column_end":20},"name":"DW_MACRO_import","qualname":"::constants::DW_MACRO_import","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58882,"byte_end":58901,"line_start":1061,"line_end":1061,"column_start":5,"column_end":24},"name":"DW_MACRO_define_sup","qualname":"::constants::DW_MACRO_define_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58914,"byte_end":58932,"line_start":1062,"line_end":1062,"column_start":5,"column_end":23},"name":"DW_MACRO_undef_sup","qualname":"::constants::DW_MACRO_undef_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58945,"byte_end":58964,"line_start":1063,"line_end":1063,"column_start":5,"column_end":24},"name":"DW_MACRO_import_sup","qualname":"::constants::DW_MACRO_import_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5689},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":58977,"byte_end":58997,"line_start":1064,"line_end":1064,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strx","qualname":"::constants::DW_MACRO_define_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59010,"byte_end":59029,"line_start":1065,"line_end":1065,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strx","qualname":"::constants::DW_MACRO_undef_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5691},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59042,"byte_end":59058,"line_start":1066,"line_end":1066,"column_start":5,"column_end":21},"name":"DW_MACRO_lo_user","qualname":"::constants::DW_MACRO_lo_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59071,"byte_end":59087,"line_start":1067,"line_end":1067,"column_start":5,"column_end":21},"name":"DW_MACRO_hi_user","qualname":"::constants::DW_MACRO_hi_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5731},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59182,"byte_end":59187,"line_start":1074,"line_end":1074,"column_start":1,"column_end":6},"name":"DwRle","qualname":"::constants::DwRle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Range list entry encoding values.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59198,"byte_end":59216,"line_start":1075,"line_end":1075,"column_start":5,"column_end":23},"name":"DW_RLE_end_of_list","qualname":"::constants::DW_RLE_end_of_list","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5720},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59229,"byte_end":59249,"line_start":1076,"line_end":1076,"column_start":5,"column_end":25},"name":"DW_RLE_base_addressx","qualname":"::constants::DW_RLE_base_addressx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59262,"byte_end":59280,"line_start":1077,"line_end":1077,"column_start":5,"column_end":23},"name":"DW_RLE_startx_endx","qualname":"::constants::DW_RLE_startx_endx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5722},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59293,"byte_end":59313,"line_start":1078,"line_end":1078,"column_start":5,"column_end":25},"name":"DW_RLE_startx_length","qualname":"::constants::DW_RLE_startx_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5723},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59326,"byte_end":59344,"line_start":1079,"line_end":1079,"column_start":5,"column_end":23},"name":"DW_RLE_offset_pair","qualname":"::constants::DW_RLE_offset_pair","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59357,"byte_end":59376,"line_start":1080,"line_end":1080,"column_start":5,"column_end":24},"name":"DW_RLE_base_address","qualname":"::constants::DW_RLE_base_address","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59389,"byte_end":59405,"line_start":1081,"line_end":1081,"column_start":5,"column_end":21},"name":"DW_RLE_start_end","qualname":"::constants::DW_RLE_start_end","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5726},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59418,"byte_end":59437,"line_start":1082,"line_end":1082,"column_start":5,"column_end":24},"name":"DW_RLE_start_length","qualname":"::constants::DW_RLE_start_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5933},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59545,"byte_end":59549,"line_start":1089,"line_end":1089,"column_start":1,"column_end":5},"name":"DwOp","qualname":"::constants::DwOp","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for DWARF expression operations.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5753},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59560,"byte_end":59570,"line_start":1090,"line_end":1090,"column_start":5,"column_end":15},"name":"DW_OP_addr","qualname":"::constants::DW_OP_addr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59583,"byte_end":59594,"line_start":1091,"line_end":1091,"column_start":5,"column_end":16},"name":"DW_OP_deref","qualname":"::constants::DW_OP_deref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5755},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59607,"byte_end":59620,"line_start":1092,"line_end":1092,"column_start":5,"column_end":18},"name":"DW_OP_const1u","qualname":"::constants::DW_OP_const1u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5756},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59633,"byte_end":59646,"line_start":1093,"line_end":1093,"column_start":5,"column_end":18},"name":"DW_OP_const1s","qualname":"::constants::DW_OP_const1s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59659,"byte_end":59672,"line_start":1094,"line_end":1094,"column_start":5,"column_end":18},"name":"DW_OP_const2u","qualname":"::constants::DW_OP_const2u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5758},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59685,"byte_end":59698,"line_start":1095,"line_end":1095,"column_start":5,"column_end":18},"name":"DW_OP_const2s","qualname":"::constants::DW_OP_const2s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59711,"byte_end":59724,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18},"name":"DW_OP_const4u","qualname":"::constants::DW_OP_const4u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59737,"byte_end":59750,"line_start":1097,"line_end":1097,"column_start":5,"column_end":18},"name":"DW_OP_const4s","qualname":"::constants::DW_OP_const4s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5761},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59763,"byte_end":59776,"line_start":1098,"line_end":1098,"column_start":5,"column_end":18},"name":"DW_OP_const8u","qualname":"::constants::DW_OP_const8u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5762},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59789,"byte_end":59802,"line_start":1099,"line_end":1099,"column_start":5,"column_end":18},"name":"DW_OP_const8s","qualname":"::constants::DW_OP_const8s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5763},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59815,"byte_end":59827,"line_start":1100,"line_end":1100,"column_start":5,"column_end":17},"name":"DW_OP_constu","qualname":"::constants::DW_OP_constu","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5764},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59840,"byte_end":59852,"line_start":1101,"line_end":1101,"column_start":5,"column_end":17},"name":"DW_OP_consts","qualname":"::constants::DW_OP_consts","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5765},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59865,"byte_end":59874,"line_start":1102,"line_end":1102,"column_start":5,"column_end":14},"name":"DW_OP_dup","qualname":"::constants::DW_OP_dup","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5766},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59887,"byte_end":59897,"line_start":1103,"line_end":1103,"column_start":5,"column_end":15},"name":"DW_OP_drop","qualname":"::constants::DW_OP_drop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59910,"byte_end":59920,"line_start":1104,"line_end":1104,"column_start":5,"column_end":15},"name":"DW_OP_over","qualname":"::constants::DW_OP_over","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5768},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59933,"byte_end":59943,"line_start":1105,"line_end":1105,"column_start":5,"column_end":15},"name":"DW_OP_pick","qualname":"::constants::DW_OP_pick","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59956,"byte_end":59966,"line_start":1106,"line_end":1106,"column_start":5,"column_end":15},"name":"DW_OP_swap","qualname":"::constants::DW_OP_swap","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":59979,"byte_end":59988,"line_start":1107,"line_end":1107,"column_start":5,"column_end":14},"name":"DW_OP_rot","qualname":"::constants::DW_OP_rot","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5771},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60001,"byte_end":60013,"line_start":1108,"line_end":1108,"column_start":5,"column_end":17},"name":"DW_OP_xderef","qualname":"::constants::DW_OP_xderef","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5772},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60026,"byte_end":60035,"line_start":1109,"line_end":1109,"column_start":5,"column_end":14},"name":"DW_OP_abs","qualname":"::constants::DW_OP_abs","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5773},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60048,"byte_end":60057,"line_start":1110,"line_end":1110,"column_start":5,"column_end":14},"name":"DW_OP_and","qualname":"::constants::DW_OP_and","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5774},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60070,"byte_end":60079,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14},"name":"DW_OP_div","qualname":"::constants::DW_OP_div","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5775},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60092,"byte_end":60103,"line_start":1112,"line_end":1112,"column_start":5,"column_end":16},"name":"DW_OP_minus","qualname":"::constants::DW_OP_minus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60116,"byte_end":60125,"line_start":1113,"line_end":1113,"column_start":5,"column_end":14},"name":"DW_OP_mod","qualname":"::constants::DW_OP_mod","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60138,"byte_end":60147,"line_start":1114,"line_end":1114,"column_start":5,"column_end":14},"name":"DW_OP_mul","qualname":"::constants::DW_OP_mul","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60160,"byte_end":60169,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14},"name":"DW_OP_neg","qualname":"::constants::DW_OP_neg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60182,"byte_end":60191,"line_start":1116,"line_end":1116,"column_start":5,"column_end":14},"name":"DW_OP_not","qualname":"::constants::DW_OP_not","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5780},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60204,"byte_end":60212,"line_start":1117,"line_end":1117,"column_start":5,"column_end":13},"name":"DW_OP_or","qualname":"::constants::DW_OP_or","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60225,"byte_end":60235,"line_start":1118,"line_end":1118,"column_start":5,"column_end":15},"name":"DW_OP_plus","qualname":"::constants::DW_OP_plus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5782},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60248,"byte_end":60265,"line_start":1119,"line_end":1119,"column_start":5,"column_end":22},"name":"DW_OP_plus_uconst","qualname":"::constants::DW_OP_plus_uconst","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5783},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60278,"byte_end":60287,"line_start":1120,"line_end":1120,"column_start":5,"column_end":14},"name":"DW_OP_shl","qualname":"::constants::DW_OP_shl","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60300,"byte_end":60309,"line_start":1121,"line_end":1121,"column_start":5,"column_end":14},"name":"DW_OP_shr","qualname":"::constants::DW_OP_shr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60322,"byte_end":60332,"line_start":1122,"line_end":1122,"column_start":5,"column_end":15},"name":"DW_OP_shra","qualname":"::constants::DW_OP_shra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60345,"byte_end":60354,"line_start":1123,"line_end":1123,"column_start":5,"column_end":14},"name":"DW_OP_xor","qualname":"::constants::DW_OP_xor","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5787},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60367,"byte_end":60376,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14},"name":"DW_OP_bra","qualname":"::constants::DW_OP_bra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5788},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60389,"byte_end":60397,"line_start":1125,"line_end":1125,"column_start":5,"column_end":13},"name":"DW_OP_eq","qualname":"::constants::DW_OP_eq","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60410,"byte_end":60418,"line_start":1126,"line_end":1126,"column_start":5,"column_end":13},"name":"DW_OP_ge","qualname":"::constants::DW_OP_ge","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60431,"byte_end":60439,"line_start":1127,"line_end":1127,"column_start":5,"column_end":13},"name":"DW_OP_gt","qualname":"::constants::DW_OP_gt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5791},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60452,"byte_end":60460,"line_start":1128,"line_end":1128,"column_start":5,"column_end":13},"name":"DW_OP_le","qualname":"::constants::DW_OP_le","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60473,"byte_end":60481,"line_start":1129,"line_end":1129,"column_start":5,"column_end":13},"name":"DW_OP_lt","qualname":"::constants::DW_OP_lt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60494,"byte_end":60502,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13},"name":"DW_OP_ne","qualname":"::constants::DW_OP_ne","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5794},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60515,"byte_end":60525,"line_start":1131,"line_end":1131,"column_start":5,"column_end":15},"name":"DW_OP_skip","qualname":"::constants::DW_OP_skip","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60538,"byte_end":60548,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15},"name":"DW_OP_lit0","qualname":"::constants::DW_OP_lit0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60561,"byte_end":60571,"line_start":1133,"line_end":1133,"column_start":5,"column_end":15},"name":"DW_OP_lit1","qualname":"::constants::DW_OP_lit1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5797},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60584,"byte_end":60594,"line_start":1134,"line_end":1134,"column_start":5,"column_end":15},"name":"DW_OP_lit2","qualname":"::constants::DW_OP_lit2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60607,"byte_end":60617,"line_start":1135,"line_end":1135,"column_start":5,"column_end":15},"name":"DW_OP_lit3","qualname":"::constants::DW_OP_lit3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5799},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60630,"byte_end":60640,"line_start":1136,"line_end":1136,"column_start":5,"column_end":15},"name":"DW_OP_lit4","qualname":"::constants::DW_OP_lit4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5800},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60653,"byte_end":60663,"line_start":1137,"line_end":1137,"column_start":5,"column_end":15},"name":"DW_OP_lit5","qualname":"::constants::DW_OP_lit5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60676,"byte_end":60686,"line_start":1138,"line_end":1138,"column_start":5,"column_end":15},"name":"DW_OP_lit6","qualname":"::constants::DW_OP_lit6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60699,"byte_end":60709,"line_start":1139,"line_end":1139,"column_start":5,"column_end":15},"name":"DW_OP_lit7","qualname":"::constants::DW_OP_lit7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5803},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60722,"byte_end":60732,"line_start":1140,"line_end":1140,"column_start":5,"column_end":15},"name":"DW_OP_lit8","qualname":"::constants::DW_OP_lit8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60745,"byte_end":60755,"line_start":1141,"line_end":1141,"column_start":5,"column_end":15},"name":"DW_OP_lit9","qualname":"::constants::DW_OP_lit9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5805},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60768,"byte_end":60779,"line_start":1142,"line_end":1142,"column_start":5,"column_end":16},"name":"DW_OP_lit10","qualname":"::constants::DW_OP_lit10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5806},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60792,"byte_end":60803,"line_start":1143,"line_end":1143,"column_start":5,"column_end":16},"name":"DW_OP_lit11","qualname":"::constants::DW_OP_lit11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5807},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60816,"byte_end":60827,"line_start":1144,"line_end":1144,"column_start":5,"column_end":16},"name":"DW_OP_lit12","qualname":"::constants::DW_OP_lit12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5808},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60840,"byte_end":60851,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16},"name":"DW_OP_lit13","qualname":"::constants::DW_OP_lit13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5809},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60864,"byte_end":60875,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16},"name":"DW_OP_lit14","qualname":"::constants::DW_OP_lit14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5810},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60888,"byte_end":60899,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16},"name":"DW_OP_lit15","qualname":"::constants::DW_OP_lit15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60912,"byte_end":60923,"line_start":1148,"line_end":1148,"column_start":5,"column_end":16},"name":"DW_OP_lit16","qualname":"::constants::DW_OP_lit16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5812},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60936,"byte_end":60947,"line_start":1149,"line_end":1149,"column_start":5,"column_end":16},"name":"DW_OP_lit17","qualname":"::constants::DW_OP_lit17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60960,"byte_end":60971,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16},"name":"DW_OP_lit18","qualname":"::constants::DW_OP_lit18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5814},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":60984,"byte_end":60995,"line_start":1151,"line_end":1151,"column_start":5,"column_end":16},"name":"DW_OP_lit19","qualname":"::constants::DW_OP_lit19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5815},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61008,"byte_end":61019,"line_start":1152,"line_end":1152,"column_start":5,"column_end":16},"name":"DW_OP_lit20","qualname":"::constants::DW_OP_lit20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61032,"byte_end":61043,"line_start":1153,"line_end":1153,"column_start":5,"column_end":16},"name":"DW_OP_lit21","qualname":"::constants::DW_OP_lit21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61056,"byte_end":61067,"line_start":1154,"line_end":1154,"column_start":5,"column_end":16},"name":"DW_OP_lit22","qualname":"::constants::DW_OP_lit22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61080,"byte_end":61091,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16},"name":"DW_OP_lit23","qualname":"::constants::DW_OP_lit23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5819},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61104,"byte_end":61115,"line_start":1156,"line_end":1156,"column_start":5,"column_end":16},"name":"DW_OP_lit24","qualname":"::constants::DW_OP_lit24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5820},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61128,"byte_end":61139,"line_start":1157,"line_end":1157,"column_start":5,"column_end":16},"name":"DW_OP_lit25","qualname":"::constants::DW_OP_lit25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5821},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61152,"byte_end":61163,"line_start":1158,"line_end":1158,"column_start":5,"column_end":16},"name":"DW_OP_lit26","qualname":"::constants::DW_OP_lit26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61176,"byte_end":61187,"line_start":1159,"line_end":1159,"column_start":5,"column_end":16},"name":"DW_OP_lit27","qualname":"::constants::DW_OP_lit27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5823},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61200,"byte_end":61211,"line_start":1160,"line_end":1160,"column_start":5,"column_end":16},"name":"DW_OP_lit28","qualname":"::constants::DW_OP_lit28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5824},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61224,"byte_end":61235,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16},"name":"DW_OP_lit29","qualname":"::constants::DW_OP_lit29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5825},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61248,"byte_end":61259,"line_start":1162,"line_end":1162,"column_start":5,"column_end":16},"name":"DW_OP_lit30","qualname":"::constants::DW_OP_lit30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61272,"byte_end":61283,"line_start":1163,"line_end":1163,"column_start":5,"column_end":16},"name":"DW_OP_lit31","qualname":"::constants::DW_OP_lit31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61296,"byte_end":61306,"line_start":1164,"line_end":1164,"column_start":5,"column_end":15},"name":"DW_OP_reg0","qualname":"::constants::DW_OP_reg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61319,"byte_end":61329,"line_start":1165,"line_end":1165,"column_start":5,"column_end":15},"name":"DW_OP_reg1","qualname":"::constants::DW_OP_reg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5829},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61342,"byte_end":61352,"line_start":1166,"line_end":1166,"column_start":5,"column_end":15},"name":"DW_OP_reg2","qualname":"::constants::DW_OP_reg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61365,"byte_end":61375,"line_start":1167,"line_end":1167,"column_start":5,"column_end":15},"name":"DW_OP_reg3","qualname":"::constants::DW_OP_reg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5831},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61388,"byte_end":61398,"line_start":1168,"line_end":1168,"column_start":5,"column_end":15},"name":"DW_OP_reg4","qualname":"::constants::DW_OP_reg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61411,"byte_end":61421,"line_start":1169,"line_end":1169,"column_start":5,"column_end":15},"name":"DW_OP_reg5","qualname":"::constants::DW_OP_reg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5833},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61434,"byte_end":61444,"line_start":1170,"line_end":1170,"column_start":5,"column_end":15},"name":"DW_OP_reg6","qualname":"::constants::DW_OP_reg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5834},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61457,"byte_end":61467,"line_start":1171,"line_end":1171,"column_start":5,"column_end":15},"name":"DW_OP_reg7","qualname":"::constants::DW_OP_reg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61480,"byte_end":61490,"line_start":1172,"line_end":1172,"column_start":5,"column_end":15},"name":"DW_OP_reg8","qualname":"::constants::DW_OP_reg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5836},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61503,"byte_end":61513,"line_start":1173,"line_end":1173,"column_start":5,"column_end":15},"name":"DW_OP_reg9","qualname":"::constants::DW_OP_reg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61526,"byte_end":61537,"line_start":1174,"line_end":1174,"column_start":5,"column_end":16},"name":"DW_OP_reg10","qualname":"::constants::DW_OP_reg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5838},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61550,"byte_end":61561,"line_start":1175,"line_end":1175,"column_start":5,"column_end":16},"name":"DW_OP_reg11","qualname":"::constants::DW_OP_reg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61574,"byte_end":61585,"line_start":1176,"line_end":1176,"column_start":5,"column_end":16},"name":"DW_OP_reg12","qualname":"::constants::DW_OP_reg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61598,"byte_end":61609,"line_start":1177,"line_end":1177,"column_start":5,"column_end":16},"name":"DW_OP_reg13","qualname":"::constants::DW_OP_reg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5841},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61622,"byte_end":61633,"line_start":1178,"line_end":1178,"column_start":5,"column_end":16},"name":"DW_OP_reg14","qualname":"::constants::DW_OP_reg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5842},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61646,"byte_end":61657,"line_start":1179,"line_end":1179,"column_start":5,"column_end":16},"name":"DW_OP_reg15","qualname":"::constants::DW_OP_reg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5843},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61670,"byte_end":61681,"line_start":1180,"line_end":1180,"column_start":5,"column_end":16},"name":"DW_OP_reg16","qualname":"::constants::DW_OP_reg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5844},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61694,"byte_end":61705,"line_start":1181,"line_end":1181,"column_start":5,"column_end":16},"name":"DW_OP_reg17","qualname":"::constants::DW_OP_reg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61718,"byte_end":61729,"line_start":1182,"line_end":1182,"column_start":5,"column_end":16},"name":"DW_OP_reg18","qualname":"::constants::DW_OP_reg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5846},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61742,"byte_end":61753,"line_start":1183,"line_end":1183,"column_start":5,"column_end":16},"name":"DW_OP_reg19","qualname":"::constants::DW_OP_reg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5847},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61766,"byte_end":61777,"line_start":1184,"line_end":1184,"column_start":5,"column_end":16},"name":"DW_OP_reg20","qualname":"::constants::DW_OP_reg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5848},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61790,"byte_end":61801,"line_start":1185,"line_end":1185,"column_start":5,"column_end":16},"name":"DW_OP_reg21","qualname":"::constants::DW_OP_reg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5849},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61814,"byte_end":61825,"line_start":1186,"line_end":1186,"column_start":5,"column_end":16},"name":"DW_OP_reg22","qualname":"::constants::DW_OP_reg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5850},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61838,"byte_end":61849,"line_start":1187,"line_end":1187,"column_start":5,"column_end":16},"name":"DW_OP_reg23","qualname":"::constants::DW_OP_reg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5851},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61862,"byte_end":61873,"line_start":1188,"line_end":1188,"column_start":5,"column_end":16},"name":"DW_OP_reg24","qualname":"::constants::DW_OP_reg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5852},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61886,"byte_end":61897,"line_start":1189,"line_end":1189,"column_start":5,"column_end":16},"name":"DW_OP_reg25","qualname":"::constants::DW_OP_reg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5853},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61910,"byte_end":61921,"line_start":1190,"line_end":1190,"column_start":5,"column_end":16},"name":"DW_OP_reg26","qualname":"::constants::DW_OP_reg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61934,"byte_end":61945,"line_start":1191,"line_end":1191,"column_start":5,"column_end":16},"name":"DW_OP_reg27","qualname":"::constants::DW_OP_reg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5855},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61958,"byte_end":61969,"line_start":1192,"line_end":1192,"column_start":5,"column_end":16},"name":"DW_OP_reg28","qualname":"::constants::DW_OP_reg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5856},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":61982,"byte_end":61993,"line_start":1193,"line_end":1193,"column_start":5,"column_end":16},"name":"DW_OP_reg29","qualname":"::constants::DW_OP_reg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5857},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62006,"byte_end":62017,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16},"name":"DW_OP_reg30","qualname":"::constants::DW_OP_reg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5858},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62030,"byte_end":62041,"line_start":1195,"line_end":1195,"column_start":5,"column_end":16},"name":"DW_OP_reg31","qualname":"::constants::DW_OP_reg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62054,"byte_end":62065,"line_start":1196,"line_end":1196,"column_start":5,"column_end":16},"name":"DW_OP_breg0","qualname":"::constants::DW_OP_breg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5860},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62078,"byte_end":62089,"line_start":1197,"line_end":1197,"column_start":5,"column_end":16},"name":"DW_OP_breg1","qualname":"::constants::DW_OP_breg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5861},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62102,"byte_end":62113,"line_start":1198,"line_end":1198,"column_start":5,"column_end":16},"name":"DW_OP_breg2","qualname":"::constants::DW_OP_breg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5862},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62126,"byte_end":62137,"line_start":1199,"line_end":1199,"column_start":5,"column_end":16},"name":"DW_OP_breg3","qualname":"::constants::DW_OP_breg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5863},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62150,"byte_end":62161,"line_start":1200,"line_end":1200,"column_start":5,"column_end":16},"name":"DW_OP_breg4","qualname":"::constants::DW_OP_breg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62174,"byte_end":62185,"line_start":1201,"line_end":1201,"column_start":5,"column_end":16},"name":"DW_OP_breg5","qualname":"::constants::DW_OP_breg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5865},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62198,"byte_end":62209,"line_start":1202,"line_end":1202,"column_start":5,"column_end":16},"name":"DW_OP_breg6","qualname":"::constants::DW_OP_breg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5866},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62222,"byte_end":62233,"line_start":1203,"line_end":1203,"column_start":5,"column_end":16},"name":"DW_OP_breg7","qualname":"::constants::DW_OP_breg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5867},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62246,"byte_end":62257,"line_start":1204,"line_end":1204,"column_start":5,"column_end":16},"name":"DW_OP_breg8","qualname":"::constants::DW_OP_breg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5868},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62270,"byte_end":62281,"line_start":1205,"line_end":1205,"column_start":5,"column_end":16},"name":"DW_OP_breg9","qualname":"::constants::DW_OP_breg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5869},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62294,"byte_end":62306,"line_start":1206,"line_end":1206,"column_start":5,"column_end":17},"name":"DW_OP_breg10","qualname":"::constants::DW_OP_breg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62319,"byte_end":62331,"line_start":1207,"line_end":1207,"column_start":5,"column_end":17},"name":"DW_OP_breg11","qualname":"::constants::DW_OP_breg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5871},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62344,"byte_end":62356,"line_start":1208,"line_end":1208,"column_start":5,"column_end":17},"name":"DW_OP_breg12","qualname":"::constants::DW_OP_breg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5872},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62369,"byte_end":62381,"line_start":1209,"line_end":1209,"column_start":5,"column_end":17},"name":"DW_OP_breg13","qualname":"::constants::DW_OP_breg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5873},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62394,"byte_end":62406,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17},"name":"DW_OP_breg14","qualname":"::constants::DW_OP_breg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5874},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62419,"byte_end":62431,"line_start":1211,"line_end":1211,"column_start":5,"column_end":17},"name":"DW_OP_breg15","qualname":"::constants::DW_OP_breg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5875},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62444,"byte_end":62456,"line_start":1212,"line_end":1212,"column_start":5,"column_end":17},"name":"DW_OP_breg16","qualname":"::constants::DW_OP_breg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5876},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62469,"byte_end":62481,"line_start":1213,"line_end":1213,"column_start":5,"column_end":17},"name":"DW_OP_breg17","qualname":"::constants::DW_OP_breg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5877},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62494,"byte_end":62506,"line_start":1214,"line_end":1214,"column_start":5,"column_end":17},"name":"DW_OP_breg18","qualname":"::constants::DW_OP_breg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5878},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62519,"byte_end":62531,"line_start":1215,"line_end":1215,"column_start":5,"column_end":17},"name":"DW_OP_breg19","qualname":"::constants::DW_OP_breg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62544,"byte_end":62556,"line_start":1216,"line_end":1216,"column_start":5,"column_end":17},"name":"DW_OP_breg20","qualname":"::constants::DW_OP_breg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62569,"byte_end":62581,"line_start":1217,"line_end":1217,"column_start":5,"column_end":17},"name":"DW_OP_breg21","qualname":"::constants::DW_OP_breg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5881},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62594,"byte_end":62606,"line_start":1218,"line_end":1218,"column_start":5,"column_end":17},"name":"DW_OP_breg22","qualname":"::constants::DW_OP_breg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62619,"byte_end":62631,"line_start":1219,"line_end":1219,"column_start":5,"column_end":17},"name":"DW_OP_breg23","qualname":"::constants::DW_OP_breg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5883},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62644,"byte_end":62656,"line_start":1220,"line_end":1220,"column_start":5,"column_end":17},"name":"DW_OP_breg24","qualname":"::constants::DW_OP_breg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62669,"byte_end":62681,"line_start":1221,"line_end":1221,"column_start":5,"column_end":17},"name":"DW_OP_breg25","qualname":"::constants::DW_OP_breg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5885},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62694,"byte_end":62706,"line_start":1222,"line_end":1222,"column_start":5,"column_end":17},"name":"DW_OP_breg26","qualname":"::constants::DW_OP_breg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5886},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62719,"byte_end":62731,"line_start":1223,"line_end":1223,"column_start":5,"column_end":17},"name":"DW_OP_breg27","qualname":"::constants::DW_OP_breg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5887},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62744,"byte_end":62756,"line_start":1224,"line_end":1224,"column_start":5,"column_end":17},"name":"DW_OP_breg28","qualname":"::constants::DW_OP_breg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5888},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62769,"byte_end":62781,"line_start":1225,"line_end":1225,"column_start":5,"column_end":17},"name":"DW_OP_breg29","qualname":"::constants::DW_OP_breg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5889},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62794,"byte_end":62806,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17},"name":"DW_OP_breg30","qualname":"::constants::DW_OP_breg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62819,"byte_end":62831,"line_start":1227,"line_end":1227,"column_start":5,"column_end":17},"name":"DW_OP_breg31","qualname":"::constants::DW_OP_breg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62844,"byte_end":62854,"line_start":1228,"line_end":1228,"column_start":5,"column_end":15},"name":"DW_OP_regx","qualname":"::constants::DW_OP_regx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5892},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62867,"byte_end":62878,"line_start":1229,"line_end":1229,"column_start":5,"column_end":16},"name":"DW_OP_fbreg","qualname":"::constants::DW_OP_fbreg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5893},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62891,"byte_end":62902,"line_start":1230,"line_end":1230,"column_start":5,"column_end":16},"name":"DW_OP_bregx","qualname":"::constants::DW_OP_bregx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5894},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62915,"byte_end":62926,"line_start":1231,"line_end":1231,"column_start":5,"column_end":16},"name":"DW_OP_piece","qualname":"::constants::DW_OP_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5895},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62939,"byte_end":62955,"line_start":1232,"line_end":1232,"column_start":5,"column_end":21},"name":"DW_OP_deref_size","qualname":"::constants::DW_OP_deref_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5896},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62968,"byte_end":62985,"line_start":1233,"line_end":1233,"column_start":5,"column_end":22},"name":"DW_OP_xderef_size","qualname":"::constants::DW_OP_xderef_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":62998,"byte_end":63007,"line_start":1234,"line_end":1234,"column_start":5,"column_end":14},"name":"DW_OP_nop","qualname":"::constants::DW_OP_nop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63020,"byte_end":63045,"line_start":1235,"line_end":1235,"column_start":5,"column_end":30},"name":"DW_OP_push_object_address","qualname":"::constants::DW_OP_push_object_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5899},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63058,"byte_end":63069,"line_start":1236,"line_end":1236,"column_start":5,"column_end":16},"name":"DW_OP_call2","qualname":"::constants::DW_OP_call2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5900},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63082,"byte_end":63093,"line_start":1237,"line_end":1237,"column_start":5,"column_end":16},"name":"DW_OP_call4","qualname":"::constants::DW_OP_call4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63106,"byte_end":63120,"line_start":1238,"line_end":1238,"column_start":5,"column_end":19},"name":"DW_OP_call_ref","qualname":"::constants::DW_OP_call_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5902},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63133,"byte_end":63155,"line_start":1239,"line_end":1239,"column_start":5,"column_end":27},"name":"DW_OP_form_tls_address","qualname":"::constants::DW_OP_form_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5903},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63168,"byte_end":63188,"line_start":1240,"line_end":1240,"column_start":5,"column_end":25},"name":"DW_OP_call_frame_cfa","qualname":"::constants::DW_OP_call_frame_cfa","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5904},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63201,"byte_end":63216,"line_start":1241,"line_end":1241,"column_start":5,"column_end":20},"name":"DW_OP_bit_piece","qualname":"::constants::DW_OP_bit_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5905},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63229,"byte_end":63249,"line_start":1242,"line_end":1242,"column_start":5,"column_end":25},"name":"DW_OP_implicit_value","qualname":"::constants::DW_OP_implicit_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5906},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63262,"byte_end":63279,"line_start":1243,"line_end":1243,"column_start":5,"column_end":22},"name":"DW_OP_stack_value","qualname":"::constants::DW_OP_stack_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5907},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63292,"byte_end":63314,"line_start":1244,"line_end":1244,"column_start":5,"column_end":27},"name":"DW_OP_implicit_pointer","qualname":"::constants::DW_OP_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5908},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63327,"byte_end":63338,"line_start":1245,"line_end":1245,"column_start":5,"column_end":16},"name":"DW_OP_addrx","qualname":"::constants::DW_OP_addrx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5909},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63351,"byte_end":63363,"line_start":1246,"line_end":1246,"column_start":5,"column_end":17},"name":"DW_OP_constx","qualname":"::constants::DW_OP_constx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5910},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63376,"byte_end":63393,"line_start":1247,"line_end":1247,"column_start":5,"column_end":22},"name":"DW_OP_entry_value","qualname":"::constants::DW_OP_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5911},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63406,"byte_end":63422,"line_start":1248,"line_end":1248,"column_start":5,"column_end":21},"name":"DW_OP_const_type","qualname":"::constants::DW_OP_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5912},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63435,"byte_end":63452,"line_start":1249,"line_end":1249,"column_start":5,"column_end":22},"name":"DW_OP_regval_type","qualname":"::constants::DW_OP_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5913},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63465,"byte_end":63481,"line_start":1250,"line_end":1250,"column_start":5,"column_end":21},"name":"DW_OP_deref_type","qualname":"::constants::DW_OP_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63494,"byte_end":63511,"line_start":1251,"line_end":1251,"column_start":5,"column_end":22},"name":"DW_OP_xderef_type","qualname":"::constants::DW_OP_xderef_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63524,"byte_end":63537,"line_start":1252,"line_end":1252,"column_start":5,"column_end":18},"name":"DW_OP_convert","qualname":"::constants::DW_OP_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5916},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63550,"byte_end":63567,"line_start":1253,"line_end":1253,"column_start":5,"column_end":22},"name":"DW_OP_reinterpret","qualname":"::constants::DW_OP_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5917},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63603,"byte_end":63629,"line_start":1256,"line_end":1256,"column_start":5,"column_end":31},"name":"DW_OP_GNU_push_tls_address","qualname":"::constants::DW_OP_GNU_push_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5918},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63642,"byte_end":63668,"line_start":1257,"line_end":1257,"column_start":5,"column_end":31},"name":"DW_OP_GNU_implicit_pointer","qualname":"::constants::DW_OP_GNU_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5919},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63681,"byte_end":63702,"line_start":1258,"line_end":1258,"column_start":5,"column_end":26},"name":"DW_OP_GNU_entry_value","qualname":"::constants::DW_OP_GNU_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5920},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63715,"byte_end":63735,"line_start":1259,"line_end":1259,"column_start":5,"column_end":25},"name":"DW_OP_GNU_const_type","qualname":"::constants::DW_OP_GNU_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5921},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63748,"byte_end":63769,"line_start":1260,"line_end":1260,"column_start":5,"column_end":26},"name":"DW_OP_GNU_regval_type","qualname":"::constants::DW_OP_GNU_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5922},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63782,"byte_end":63802,"line_start":1261,"line_end":1261,"column_start":5,"column_end":25},"name":"DW_OP_GNU_deref_type","qualname":"::constants::DW_OP_GNU_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5923},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63815,"byte_end":63832,"line_start":1262,"line_end":1262,"column_start":5,"column_end":22},"name":"DW_OP_GNU_convert","qualname":"::constants::DW_OP_GNU_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5924},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63845,"byte_end":63866,"line_start":1263,"line_end":1263,"column_start":5,"column_end":26},"name":"DW_OP_GNU_reinterpret","qualname":"::constants::DW_OP_GNU_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63879,"byte_end":63902,"line_start":1264,"line_end":1264,"column_start":5,"column_end":28},"name":"DW_OP_GNU_parameter_ref","qualname":"::constants::DW_OP_GNU_parameter_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63915,"byte_end":63935,"line_start":1265,"line_end":1265,"column_start":5,"column_end":25},"name":"DW_OP_GNU_addr_index","qualname":"::constants::DW_OP_GNU_addr_index","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5927},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":63948,"byte_end":63969,"line_start":1266,"line_end":1266,"column_start":5,"column_end":26},"name":"DW_OP_GNU_const_index","qualname":"::constants::DW_OP_GNU_const_index","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64006,"byte_end":64025,"line_start":1269,"line_end":1269,"column_start":5,"column_end":24},"name":"DW_OP_WASM_location","qualname":"::constants::DW_OP_WASM_location","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5975},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64337,"byte_end":64343,"line_start":1280,"line_end":1280,"column_start":1,"column_end":7},"name":"DwEhPe","qualname":"::constants::DwEhPe","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pointer encoding used by `.eh_frame`.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64450,"byte_end":64466,"line_start":1284,"line_end":1284,"column_start":5,"column_end":21},"name":"DW_EH_PE_uleb128","qualname":"::constants::DW_EH_PE_uleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5956},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64509,"byte_end":64524,"line_start":1286,"line_end":1286,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata2","qualname":"::constants::DW_EH_PE_udata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5957},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64567,"byte_end":64582,"line_start":1288,"line_end":1288,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata4","qualname":"::constants::DW_EH_PE_udata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64626,"byte_end":64641,"line_start":1290,"line_end":1290,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata8","qualname":"::constants::DW_EH_PE_udata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64715,"byte_end":64731,"line_start":1292,"line_end":1292,"column_start":5,"column_end":21},"name":"DW_EH_PE_sleb128","qualname":"::constants::DW_EH_PE_sleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5960},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64772,"byte_end":64787,"line_start":1294,"line_end":1294,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata2","qualname":"::constants::DW_EH_PE_sdata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64829,"byte_end":64844,"line_start":1296,"line_end":1296,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata4","qualname":"::constants::DW_EH_PE_sdata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5962},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":64887,"byte_end":64902,"line_start":1298,"line_end":1298,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata8","qualname":"::constants::DW_EH_PE_sdata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65029,"byte_end":65043,"line_start":1303,"line_end":1303,"column_start":5,"column_end":19},"name":"DW_EH_PE_pcrel","qualname":"::constants::DW_EH_PE_pcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5964},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65118,"byte_end":65134,"line_start":1305,"line_end":1305,"column_start":5,"column_end":21},"name":"DW_EH_PE_textrel","qualname":"::constants::DW_EH_PE_textrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5965},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65225,"byte_end":65241,"line_start":1307,"line_end":1307,"column_start":5,"column_end":21},"name":"DW_EH_PE_datarel","qualname":"::constants::DW_EH_PE_datarel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5966},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65311,"byte_end":65327,"line_start":1309,"line_end":1309,"column_start":5,"column_end":21},"name":"DW_EH_PE_funcrel","qualname":"::constants::DW_EH_PE_funcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5967},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65397,"byte_end":65413,"line_start":1311,"line_end":1311,"column_start":5,"column_end":21},"name":"DW_EH_PE_aligned","qualname":"::constants::DW_EH_PE_aligned","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5968},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65727,"byte_end":65744,"line_start":1319,"line_end":1319,"column_start":5,"column_end":22},"name":"DW_EH_PE_indirect","qualname":"::constants::DW_EH_PE_indirect","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65903,"byte_end":65918,"line_start":1325,"line_end":1325,"column_start":5,"column_end":20},"name":"DW_EH_PE_absptr","qualname":"::constants::DW_EH_PE_absptr","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":65972,"byte_end":65985,"line_start":1327,"line_end":1327,"column_start":5,"column_end":18},"name":"DW_EH_PE_omit","qualname":"::constants::DW_EH_PE_omit","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66208,"byte_end":66214,"line_start":1338,"line_end":1338,"column_start":12,"column_end":18},"name":"format","qualname":"<DwEhPe>::format","value":"pub fn format(Self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's format.\n","sig":null,"attributes":[{"value":"/ Get the pointer encoding's format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66144,"byte_end":66182,"line_start":1336,"line_end":1336,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66187,"byte_end":66196,"line_start":1337,"line_end":1337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66359,"byte_end":66370,"line_start":1344,"line_end":1344,"column_start":12,"column_end":23},"name":"application","qualname":"<DwEhPe>::application","value":"pub fn application(Self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's application.\n","sig":null,"attributes":[{"value":"/ Get the pointer encoding's application.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66290,"byte_end":66333,"line_start":1342,"line_end":1342,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66338,"byte_end":66347,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66526,"byte_end":66535,"line_start":1350,"line_end":1350,"column_start":12,"column_end":21},"name":"is_absent","qualname":"<DwEhPe>::is_absent","value":"pub fn is_absent(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this encoding the absent pointer encoding?\n","sig":null,"attributes":[{"value":"/ Is this encoding the absent pointer encoding?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66451,"byte_end":66500,"line_start":1348,"line_end":1348,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66505,"byte_end":66514,"line_start":1349,"line_end":1349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66754,"byte_end":66765,"line_start":1357,"line_end":1357,"column_start":12,"column_end":23},"name":"is_indirect","qualname":"<DwEhPe>::is_indirect","value":"pub fn is_indirect(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this coding indirect? If so, its encoded value is the address of the\n real pointer result, not the pointer result itself.\n","sig":null,"attributes":[{"value":"/ Is this coding indirect? If so, its encoded value is the address of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66593,"byte_end":66668,"line_start":1354,"line_end":1354,"column_start":5,"column_end":80}},{"value":"/ real pointer result, not the pointer result itself.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66673,"byte_end":66728,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66733,"byte_end":66742,"line_start":1356,"line_end":1356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66891,"byte_end":66908,"line_start":1362,"line_end":1362,"column_start":12,"column_end":29},"name":"is_valid_encoding","qualname":"<DwEhPe>::is_valid_encoding","value":"pub fn is_valid_encoding(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a known, valid pointer encoding?\n","sig":null,"attributes":[{"value":"/ Is this a known, valid pointer encoding?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66835,"byte_end":66879,"line_start":1361,"line_end":1361,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68949,"byte_end":68958,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Endianity","qualname":"::endianity::Endianity","value":"Endianity: Debug + Default + Clone + Copy + PartialEq + Eq","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" A trait describing the endianity of some buffer.\n","sig":null,"attributes":[{"value":"/ A trait describing the endianity of some buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68886,"byte_end":68938,"line_start":6,"line_end":6,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69064,"byte_end":69077,"line_start":9,"line_end":9,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"::endianity::Endianity::is_big_endian","value":"pub fn is_big_endian(Self) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Return true for big endian byte order.\n","sig":null,"attributes":[{"value":"/ Return true for big endian byte order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69014,"byte_end":69056,"line_start":8,"line_end":8,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69165,"byte_end":69181,"line_start":13,"line_end":13,"column_start":8,"column_end":24},"name":"is_little_endian","qualname":"::endianity::Endianity::is_little_endian","value":"pub fn is_little_endian(Self) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Return true for little endian byte order.\n","sig":null,"attributes":[{"value":"/ Return true for little endian byte order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69098,"byte_end":69143,"line_start":11,"line_end":11,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69148,"byte_end":69157,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69379,"byte_end":69387,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::endianity::Endianity::read_u16","value":"pub fn read_u16(Self, &[u8]) -> u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads an unsigned 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 16 bit integer from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69239,"byte_end":69287,"line_start":17,"line_end":17,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69292,"byte_end":69295,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69300,"byte_end":69312,"line_start":19,"line_end":19,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69317,"byte_end":69320,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69325,"byte_end":69357,"line_start":21,"line_end":21,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69362,"byte_end":69371,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69765,"byte_end":69773,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::endianity::Endianity::read_u32","value":"pub fn read_u32(Self, &[u8]) -> u32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads an unsigned 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 32 bit integer from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69625,"byte_end":69673,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69678,"byte_end":69681,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69686,"byte_end":69698,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69703,"byte_end":69706,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69711,"byte_end":69743,"line_start":36,"line_end":36,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69748,"byte_end":69757,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70151,"byte_end":70159,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::endianity::Endianity::read_u64","value":"pub fn read_u64(Self, &[u8]) -> u64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads an unsigned 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 64 bit integer from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70011,"byte_end":70059,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70064,"byte_end":70067,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70072,"byte_end":70084,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70089,"byte_end":70092,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70097,"byte_end":70129,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70134,"byte_end":70143,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70549,"byte_end":70558,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::endianity::Endianity::read_uint","value":"pub fn read_uint(&mut Self, &[u8]) -> u64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"/ Read an unsigned n-bytes integer u64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70397,"byte_end":70438,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70443,"byte_end":70446,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70451,"byte_end":70463,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70468,"byte_end":70471,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 1` or `buf.len() > 8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70476,"byte_end":70527,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70532,"byte_end":70541,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70964,"byte_end":70972,"line_start":84,"line_end":84,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::endianity::Endianity::read_i16","value":"pub fn read_i16(Self, &[u8]) -> i16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a signed 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 16 bit integer from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70827,"byte_end":70872,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70877,"byte_end":70880,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70885,"byte_end":70897,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70902,"byte_end":70905,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70910,"byte_end":70942,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":70947,"byte_end":70956,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71182,"byte_end":71190,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::endianity::Endianity::read_i32","value":"pub fn read_i32(Self, &[u8]) -> i32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a signed 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 32 bit integer from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71045,"byte_end":71090,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71095,"byte_end":71098,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71103,"byte_end":71115,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71120,"byte_end":71123,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71128,"byte_end":71160,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71165,"byte_end":71174,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71400,"byte_end":71408,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::endianity::Endianity::read_i64","value":"pub fn read_i64(Self, &[u8]) -> i64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a signed 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 64 bit integer from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71263,"byte_end":71308,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71313,"byte_end":71316,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71321,"byte_end":71333,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71338,"byte_end":71341,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71346,"byte_end":71378,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71383,"byte_end":71392,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71625,"byte_end":71633,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::endianity::Endianity::read_f32","value":"pub fn read_f32(Self, &[u8]) -> f32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"/ Reads a 32 bit floating point number from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71481,"byte_end":71533,"line_start":108,"line_end":108,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71538,"byte_end":71541,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71546,"byte_end":71558,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71563,"byte_end":71566,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71571,"byte_end":71603,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71608,"byte_end":71617,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71859,"byte_end":71867,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::endianity::Endianity::read_f64","value":"pub fn read_f64(Self, &[u8]) -> f64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"/ Reads a 32 bit floating point number from `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71715,"byte_end":71767,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71772,"byte_end":71775,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71780,"byte_end":71792,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71797,"byte_end":71800,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71805,"byte_end":71837,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71842,"byte_end":71851,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72092,"byte_end":72101,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::endianity::Endianity::write_u16","value":"pub fn write_u16(Self, &mut [u8], u16)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer `n` to `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":71949,"byte_end":72000,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72005,"byte_end":72008,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72013,"byte_end":72025,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72030,"byte_end":72033,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72038,"byte_end":72070,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72075,"byte_end":72084,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72460,"byte_end":72469,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::endianity::Endianity::write_u32","value":"pub fn write_u32(Self, &mut [u8], u32)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer `n` to `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72317,"byte_end":72368,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72373,"byte_end":72376,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72381,"byte_end":72393,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72398,"byte_end":72401,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72406,"byte_end":72438,"line_start":147,"line_end":147,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72443,"byte_end":72452,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72828,"byte_end":72837,"line_start":164,"line_end":164,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::endianity::Endianity::write_u64","value":"pub fn write_u64(Self, &mut [u8], u64)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer `n` to `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72685,"byte_end":72736,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72741,"byte_end":72744,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72749,"byte_end":72761,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72766,"byte_end":72769,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72774,"byte_end":72806,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":72811,"byte_end":72820,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5998},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73211,"byte_end":73217,"line_start":178,"line_end":178,"column_start":5,"column_end":11},"name":"Little","qualname":"::endianity::RunTimeEndian::Little","value":"RunTimeEndian::Little","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[{"value":"/ Little endian byte order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73177,"byte_end":73206,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73254,"byte_end":73257,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"Big","qualname":"::endianity::RunTimeEndian::Big","value":"RunTimeEndian::Big","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[{"value":"/ Big endian byte order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73223,"byte_end":73249,"line_start":179,"line_end":179,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":5997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73157,"byte_end":73170,"line_start":176,"line_end":176,"column_start":10,"column_end":23},"name":"RunTimeEndian","qualname":"::endianity::RunTimeEndian","value":"pub enum RunTimeEndian { Little, Big, }","parent":null,"children":[{"krate":0,"index":5998},{"krate":0,"index":6000}],"decl_id":null,"docs":" Byte order that is selectable at runtime.\n","sig":null,"attributes":[{"value":"/ Byte order that is selectable at runtime.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73051,"byte_end":73096,"line_start":174,"line_end":174,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6016},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73764,"byte_end":73776,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"LittleEndian","qualname":"::endianity::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[{"value":"/ Little endian byte order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73672,"byte_end":73701,"line_start":204,"line_end":204,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74087,"byte_end":74096,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"BigEndian","qualname":"::endianity::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[{"value":"/ Big endian byte order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73998,"byte_end":74024,"line_start":222,"line_end":222,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74397,"byte_end":74409,"line_start":242,"line_end":242,"column_start":10,"column_end":22},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":" The native endianity for the target platform.\n","sig":null,"attributes":[{"value":"/ The native endianity for the target platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74305,"byte_end":74354,"line_start":240,"line_end":240,"column_start":1,"column_end":50}},{"value":"cfg(target_endian = \"little\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74355,"byte_end":74387,"line_start":241,"line_end":241,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74518,"byte_end":74530,"line_start":247,"line_end":247,"column_start":11,"column_end":23},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_endian = \"little\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74427,"byte_end":74459,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74460,"byte_end":74492,"line_start":245,"line_end":245,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"leb128","qualname":"::leb128","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length\n integer encoding.","sig":null,"attributes":[{"value":"/ Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":74804,"byte_end":74880,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ integer encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":74881,"byte_end":74902,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":74903,"byte_end":74906,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The implementation is a direct translation of the psuedocode in the DWARF 4","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":74907,"byte_end":74986,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ standard's appendix C.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":74987,"byte_end":75013,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75014,"byte_end":75017,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Read and write signed integers:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75018,"byte_end":75053,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75054,"byte_end":75057,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75058,"byte_end":75065,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"read\", feature = \"write\"))] {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75066,"byte_end":75122,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ use gimli::{EndianSlice, NativeEndian, leb128};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75123,"byte_end":75174,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75175,"byte_end":75178,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75179,"byte_end":75207,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75208,"byte_end":75211,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Write to anything that implements `std::io::Write`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75212,"byte_end":75270,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75271,"byte_end":75276,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/     let mut writable = &mut buf[..];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75277,"byte_end":75317,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/     leb128::write::signed(&mut writable, -12345).expect(\"Should write number\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75318,"byte_end":75401,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75402,"byte_end":75407,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75408,"byte_end":75411,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Read from anything that implements `gimli::Reader`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75412,"byte_end":75470,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/ let mut readable = EndianSlice::new(&buf[..], NativeEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75471,"byte_end":75535,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ let val = leb128::read::signed(&mut readable).expect(\"Should read number\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75536,"byte_end":75615,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(val, -12345);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75616,"byte_end":75644,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75645,"byte_end":75652,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75653,"byte_end":75660,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75661,"byte_end":75664,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Or read and write unsigned integers:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75665,"byte_end":75705,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75706,"byte_end":75709,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75710,"byte_end":75717,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"read\", feature = \"write\"))] {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75718,"byte_end":75774,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use gimli::{EndianSlice, NativeEndian, leb128};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75775,"byte_end":75826,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75827,"byte_end":75830,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75831,"byte_end":75859,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75860,"byte_end":75863,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75864,"byte_end":75869,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/     let mut writable = &mut buf[..];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75870,"byte_end":75910,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/     leb128::write::unsigned(&mut writable, 98765).expect(\"Should write number\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75911,"byte_end":75995,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":75996,"byte_end":76001,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76002,"byte_end":76005,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut readable = EndianSlice::new(&buf[..], NativeEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76006,"byte_end":76070,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ let val = leb128::read::unsigned(&mut readable).expect(\"Should read number\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76071,"byte_end":76152,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(val, 98765);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76153,"byte_end":76180,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76181,"byte_end":76188,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76189,"byte_end":76196,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76652,"byte_end":76656,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"read","qualname":"::leb128::read","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143}],"decl_id":null,"docs":" A module for reading signed and unsigned integers that have been LEB128\n encoded.\n","sig":null,"attributes":[{"value":"/ A module for reading signed and unsigned integers that have been LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76525,"byte_end":76600,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ encoded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76601,"byte_end":76613,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"cfg(feature = \"read-core\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76614,"byte_end":76643,"line_start":65,"line_end":65,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76845,"byte_end":76849,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"skip","qualname":"::leb128::read::skip","value":"pub fn skip<R: Reader>(&mut R) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Read bytes until the LEB128 continuation bit is not set.\n","sig":null,"attributes":[{"value":"/ Read bytes until the LEB128 continuation bit is not set.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":76773,"byte_end":76833,"line_start":70,"line_end":70,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":77175,"byte_end":77183,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"unsigned","qualname":"::leb128::read::unsigned","value":"pub fn unsigned<R: Reader>(&mut R) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 number from the given `Reader` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":77052,"byte_end":77114,"line_start":80,"line_end":80,"column_start":5,"column_end":67}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":77119,"byte_end":77163,"line_start":81,"line_end":81,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":77817,"byte_end":77820,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"u16","qualname":"::leb128::read::u16","value":"pub fn u16<R: Reader>(&mut R) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Read an LEB128 u16 from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read an LEB128 u16 from the given `Reader` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":77706,"byte_end":77756,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":77761,"byte_end":77805,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":78521,"byte_end":78527,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"signed","qualname":"::leb128::read::signed","value":"pub fn signed<R: Reader>(&mut R) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Read a signed LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read a signed LEB128 number from the given `Reader` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":78401,"byte_end":78460,"line_start":126,"line_end":126,"column_start":5,"column_end":64}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\leb128.rs","byte_start":78465,"byte_end":78509,"line_start":127,"line_end":127,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1870},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2058},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2542},{"krate":0,"index":8366},{"krate":0,"index":8370},{"krate":0,"index":8373},{"krate":0,"index":8376},{"krate":0,"index":8378},{"krate":0,"index":8380},{"krate":0,"index":8384},{"krate":0,"index":8386},{"krate":0,"index":8389},{"krate":0,"index":8392},{"krate":0,"index":8395},{"krate":0,"index":2543},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2990},{"krate":0,"index":8917},{"krate":0,"index":8919},{"krate":0,"index":8921},{"krate":0,"index":8923},{"krate":0,"index":8924},{"krate":0,"index":8925},{"krate":0,"index":8927},{"krate":0,"index":8928},{"krate":0,"index":2991},{"krate":0,"index":8930},{"krate":0,"index":9093},{"krate":0,"index":9095},{"krate":0,"index":9097},{"krate":0,"index":9098},{"krate":0,"index":9099},{"krate":0,"index":9102},{"krate":0,"index":9103},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3012}],"decl_id":null,"docs":" Read DWARF debugging information.","sig":null,"attributes":[{"value":"cfg(feature = \"read-core\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":2001,"byte_end":2030,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/ Read DWARF debugging information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93206,"byte_end":93243,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93244,"byte_end":93247,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [Example Usage](#example-usage)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93248,"byte_end":93285,"line_start":3,"line_end":3,"column_start":1,"column_end":38}},{"value":"/ * [API Structure](#api-structure)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93286,"byte_end":93323,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/ * [Using with `FallibleIterator`](#using-with-fallibleiterator)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93324,"byte_end":93391,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93392,"byte_end":93395,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93396,"byte_end":93416,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93417,"byte_end":93420,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Print out all of the functions in the debuggee program:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93421,"byte_end":93480,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93481,"byte_end":93484,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93485,"byte_end":93503,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93504,"byte_end":93552,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ # type R = gimli::EndianSlice<'static, gimli::LittleEndian>;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93553,"byte_end":93617,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ # let get_file_section_reader = |name| -> Result<R, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93618,"byte_end":93709,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ # let get_sup_file_section_reader = |name| -> Result<R, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93710,"byte_end":93805,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ // Read the DWARF sections with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93806,"byte_end":93878,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ // These closures should return a `Reader` instance (e.g. `EndianSlice`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93879,"byte_end":93956,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ let loader = |section: gimli::SectionId| { get_file_section_reader(section.name()) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":93957,"byte_end":94046,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ let sup_loader = |section: gimli::SectionId| { get_sup_file_section_reader(section.name()) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94047,"byte_end":94144,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ let mut dwarf = gimli::Dwarf::load(loader)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94145,"byte_end":94193,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/ dwarf.load_sup(sup_loader)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94194,"byte_end":94226,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94227,"byte_end":94230,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Iterate over all compilation units.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94231,"byte_end":94273,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ let mut iter = dwarf.units();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94274,"byte_end":94307,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ while let Some(header) = iter.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94308,"byte_end":94351,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/     // Parse the abbreviations and other information for this compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94352,"byte_end":94435,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/     let unit = dwarf.unit(header)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94436,"byte_end":94475,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94476,"byte_end":94479,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Iterate over all of this compilation unit's entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94480,"byte_end":94543,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/     let mut entries = unit.entries();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94544,"byte_end":94585,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/     while let Some((_, entry)) = entries.next_dfs()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94586,"byte_end":94644,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/         // If we find an entry for a function, print it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94645,"byte_end":94705,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/         if entry.tag() == gimli::DW_TAG_subprogram {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94706,"byte_end":94762,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/             println!(\"Found a function: {:?}\", entry);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94763,"byte_end":94821,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94822,"byte_end":94835,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94836,"byte_end":94845,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94846,"byte_end":94851,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94852,"byte_end":94872,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94873,"byte_end":94880,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94881,"byte_end":94888,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94889,"byte_end":94892,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Full example programs:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94893,"byte_end":94919,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94920,"byte_end":94923,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/   * [A simple parser](https://github.com/gimli-rs/gimli/blob/master/examples/simple.rs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":94924,"byte_end":95015,"line_start":44,"line_end":44,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95016,"byte_end":95019,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/   * [A `dwarfdump`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95020,"byte_end":95042,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/     clone](https://github.com/gimli-rs/gimli/blob/master/examples/dwarfdump.rs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95043,"byte_end":95126,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95127,"byte_end":95130,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/   * [An `addr2line` clone](https://github.com/gimli-rs/addr2line)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95131,"byte_end":95200,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95201,"byte_end":95204,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/   * [`ddbug`](https://github.com/gimli-rs/ddbug), a utility giving insight into","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95205,"byte_end":95288,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/     code generation by making debugging information readable","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95289,"byte_end":95353,"line_start":52,"line_end":52,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95354,"byte_end":95357,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/   * [`dwprod`](https://github.com/fitzgen/dwprod), a tiny utility to list the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95358,"byte_end":95439,"line_start":54,"line_end":54,"column_start":1,"column_end":82}},{"value":"/     compilers used to create each compilation unit within a shared library or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95440,"byte_end":95521,"line_start":55,"line_end":55,"column_start":1,"column_end":82}},{"value":"/     executable (via `DW_AT_producer`)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95522,"byte_end":95563,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95564,"byte_end":95567,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/   * [`dwarf-validate`](https://github.com/gimli-rs/gimli/blob/master/examples/dwarf-validate.rs),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95568,"byte_end":95669,"line_start":58,"line_end":58,"column_start":1,"column_end":102}},{"value":"/     a program to validate the integrity of some DWARF and its references","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95670,"byte_end":95746,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/     between sections and compilation units.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95747,"byte_end":95794,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95795,"byte_end":95798,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## API Structure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95799,"byte_end":95819,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95820,"byte_end":95823,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * Basic familiarity with DWARF is assumed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95824,"byte_end":95870,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95871,"byte_end":95874,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ * The [`Dwarf`](./struct.Dwarf.html) type contains the commonly used DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95875,"byte_end":95953,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ sections. It has methods that simplify access to debugging data that spans","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":95954,"byte_end":96032,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ multiple sections. Use of this type is optional, but recommended.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96033,"byte_end":96102,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96103,"byte_end":96106,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * Each section gets its own type. Consider these types the entry points to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96107,"byte_end":96185,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ the library:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96186,"byte_end":96202,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96203,"byte_end":96206,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAbbrev`](./struct.DebugAbbrev.html): The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96207,"byte_end":96287,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96288,"byte_end":96291,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAddr`](./struct.DebugAddr.html): The `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96292,"byte_end":96366,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96367,"byte_end":96370,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAranges`](./struct.DebugAranges.html): The `.debug_aranges`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96371,"byte_end":96445,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/   section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96446,"byte_end":96460,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96461,"byte_end":96464,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/   * [`DebugFrame`](./struct.DebugFrame.html): The `.debug_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96465,"byte_end":96542,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96543,"byte_end":96546,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/   * [`DebugInfo`](./struct.DebugInfo.html): The `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96547,"byte_end":96621,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96622,"byte_end":96625,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLine`](./struct.DebugLine.html): The `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96626,"byte_end":96700,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96701,"byte_end":96704,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLineStr`](./struct.DebugLineStr.html): The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96705,"byte_end":96789,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96790,"byte_end":96793,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLoc`](./struct.DebugLoc.html): The `.debug_loc` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96794,"byte_end":96865,"line_start":88,"line_end":88,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96866,"byte_end":96869,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLocLists`](./struct.DebugLocLists.html): The `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96870,"byte_end":96956,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96957,"byte_end":96960,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   * [`DebugPubNames`](./struct.DebugPubNames.html): The `.debug_pubnames`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":96961,"byte_end":97038,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/   section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97039,"byte_end":97053,"line_start":93,"line_end":93,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97054,"byte_end":97057,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/   * [`DebugPubTypes`](./struct.DebugPubTypes.html): The `.debug_pubtypes`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97058,"byte_end":97135,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/   section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97136,"byte_end":97150,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97151,"byte_end":97154,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/   * [`DebugRanges`](./struct.DebugRanges.html): The `.debug_ranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97155,"byte_end":97235,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97236,"byte_end":97239,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/   * [`DebugRngLists`](./struct.DebugRngLists.html): The `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97240,"byte_end":97326,"line_start":100,"line_end":100,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97327,"byte_end":97330,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/   * [`DebugStr`](./struct.DebugStr.html): The `.debug_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97331,"byte_end":97402,"line_start":102,"line_end":102,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97403,"byte_end":97406,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/   * [`DebugStrOffsets`](./struct.DebugStrOffsets.html): The `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97407,"byte_end":97500,"line_start":104,"line_end":104,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97501,"byte_end":97504,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/   * [`DebugTypes`](./struct.DebugTypes.html): The `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97505,"byte_end":97582,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97583,"byte_end":97586,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/   * [`DebugCuIndex`](./struct.DebugCuIndex.html): The `.debug_cu_index` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97587,"byte_end":97671,"line_start":108,"line_end":108,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97672,"byte_end":97675,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/   * [`DebugTuIndex`](./struct.DebugTuIndex.html): The `.debug_tu_index` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97676,"byte_end":97760,"line_start":110,"line_end":110,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97761,"byte_end":97764,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/   * [`EhFrame`](./struct.EhFrame.html): The `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97765,"byte_end":97833,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97834,"byte_end":97837,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/   * [`EhFrameHdr`](./struct.EhFrameHdr.html): The `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97838,"byte_end":97916,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97917,"byte_end":97920,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * Each section type exposes methods for accessing the debugging data encoded","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":97921,"byte_end":98001,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ in that section. For example, the [`DebugInfo`](./struct.DebugInfo.html)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98002,"byte_end":98078,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ struct has the [`units`](./struct.DebugInfo.html#method.units) method for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98079,"byte_end":98156,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ iterating over the compilation units defined within it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98157,"byte_end":98216,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98217,"byte_end":98220,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ * Offsets into a section are strongly typed: an offset into `.debug_info` is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98221,"byte_end":98301,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ the [`DebugInfoOffset`](./struct.DebugInfoOffset.html) type. It cannot be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98302,"byte_end":98379,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ used to index into the [`DebugLine`](./struct.DebugLine.html) type because","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98380,"byte_end":98458,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ `DebugLine` represents the `.debug_line` section. There are similar types","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98459,"byte_end":98536,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ for offsets relative to a compilation unit rather than a section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98537,"byte_end":98606,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98607,"byte_end":98610,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Using with `FallibleIterator`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98611,"byte_end":98647,"line_start":127,"line_end":127,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98648,"byte_end":98651,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The standard library's `Iterator` trait and related APIs do not play well","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98652,"byte_end":98729,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ with iterators where the `next` operation is fallible. One can make the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98730,"byte_end":98805,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ `Iterator`'s associated `Item` type be a `Result<T, E>`, however the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98806,"byte_end":98878,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/ provided methods cannot gracefully handle the case when an `Err` is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98879,"byte_end":98950,"line_start":132,"line_end":132,"column_start":1,"column_end":72}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98951,"byte_end":98964,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98965,"byte_end":98968,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This situation led to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98969,"byte_end":98998,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/ [`fallible-iterator`](https://crates.io/crates/fallible-iterator) crate's","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":98999,"byte_end":99076,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/ existence. You can read more of the rationale for its existence in its","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99077,"byte_end":99151,"line_start":137,"line_end":137,"column_start":1,"column_end":75}},{"value":"/ docs. The crate provides the helpers you have come to expect (eg `map`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99152,"byte_end":99227,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/ `filter`, etc) for iterators that can fail.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99228,"byte_end":99275,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99276,"byte_end":99279,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ `gimli`'s many lazy parsing iterators are a perfect match for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99280,"byte_end":99349,"line_start":141,"line_end":141,"column_start":1,"column_end":70}},{"value":"/ `fallible-iterator` crate's `FallibleIterator` trait because parsing is not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99350,"byte_end":99429,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ done eagerly. Parse errors later in the input might only be discovered after","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99430,"byte_end":99510,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/ having iterated through many items.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99511,"byte_end":99550,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99551,"byte_end":99554,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ To use `gimli` iterators with `FallibleIterator`, import the crate and trait","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99555,"byte_end":99635,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ into your code:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99636,"byte_end":99655,"line_start":147,"line_end":147,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99656,"byte_end":99659,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99660,"byte_end":99667,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"fallible-iterator\")]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99668,"byte_end":99711,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99712,"byte_end":99728,"line_start":151,"line_end":151,"column_start":1,"column_end":17}},{"value":"/ // Use the `FallibleIterator` trait so its methods are in scope!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99729,"byte_end":99797,"line_start":152,"line_end":152,"column_start":1,"column_end":69}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99798,"byte_end":99842,"line_start":153,"line_end":153,"column_start":1,"column_end":45}},{"value":"/ use gimli::{DebugAranges, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99843,"byte_end":99900,"line_start":154,"line_end":154,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99901,"byte_end":99904,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ fn find_sum_of_address_range_lengths(aranges: DebugAranges<EndianSlice<LittleEndian>>)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99905,"byte_end":99995,"line_start":156,"line_end":156,"column_start":1,"column_end":91}},{"value":"/     -> gimli::Result<u64>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":99996,"byte_end":100025,"line_start":157,"line_end":157,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100026,"byte_end":100031,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/     // `DebugAranges::headers` returns a `FallibleIterator`!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100032,"byte_end":100096,"line_start":159,"line_end":159,"column_start":1,"column_end":65}},{"value":"/     aranges.headers()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100097,"byte_end":100122,"line_start":160,"line_end":160,"column_start":1,"column_end":26}},{"value":"/         // `flat_map` is provided by `FallibleIterator`!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100123,"byte_end":100183,"line_start":161,"line_end":161,"column_start":1,"column_end":61}},{"value":"/         .flat_map(|header| Ok(header.entries()))","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100184,"byte_end":100236,"line_start":162,"line_end":162,"column_start":1,"column_end":53}},{"value":"/         // `map` is provided by `FallibleIterator`!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100237,"byte_end":100292,"line_start":163,"line_end":163,"column_start":1,"column_end":56}},{"value":"/         .map(|arange| Ok(arange.length()))","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100293,"byte_end":100339,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/         // `fold` is provided by `FallibleIterator`!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100340,"byte_end":100396,"line_start":165,"line_end":165,"column_start":1,"column_end":57}},{"value":"/         .fold(0, |sum, len| Ok(sum + len))","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100397,"byte_end":100443,"line_start":166,"line_end":166,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100444,"byte_end":100449,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100450,"byte_end":100457,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100458,"byte_end":100476,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":100477,"byte_end":100484,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":125861,"byte_end":125867,"line_start":13,"line_end":13,"column_start":22,"column_end":28},"name":"Sealed","qualname":"::read::util::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":125883,"byte_end":125890,"line_start":14,"line_end":14,"column_start":14,"column_end":21},"name":"Storage","qualname":"::read::util::sealed::Sealed::Storage","value":"type Storage;","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":125904,"byte_end":125915,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"new_storage","qualname":"::read::util::sealed::Sealed::new_storage","value":"pub fn new_storage() -> Self::Storage","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":125948,"byte_end":125952,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"grow","qualname":"::read::util::sealed::Sealed::grow","value":"pub fn grow(&mut Self::Storage, usize) -> Result<(), CapacityFull>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6048},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126129,"byte_end":126141,"line_start":24,"line_end":24,"column_start":16,"column_end":28},"name":"CapacityFull","qualname":"::read::util::sealed::CapacityFull","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126358,"byte_end":126367,"line_start":32,"line_end":32,"column_start":11,"column_end":20},"name":"ArrayLike","qualname":"::read::util::ArrayLike","value":"ArrayLike: Sealed","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"decl_id":null,"docs":" Marker trait for types that can be used as backing storage when a growable array type is needed.","sig":null,"attributes":[{"value":"/ Marker trait for types that can be used as backing storage when a growable array type is needed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126162,"byte_end":126262,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126263,"byte_end":126266,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126267,"byte_end":126347,"line_start":31,"line_end":31,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126430,"byte_end":126434,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"name":"Item","qualname":"::read::util::ArrayLike::Item","value":"type Item;","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Type of the elements being stored.\n","sig":null,"attributes":[{"value":"/ Type of the elements being stored.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126382,"byte_end":126420,"line_start":33,"line_end":33,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126463,"byte_end":126471,"line_start":37,"line_end":37,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::read::util::ArrayLike::as_slice","value":"pub fn as_slice(&Self::Storage) -> &[MaybeUninit<Self::Item>]","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126555,"byte_end":126567,"line_start":40,"line_end":40,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::read::util::ArrayLike::as_mut_slice","value":"pub fn as_mut_slice(&mut Self::Storage) -> &mut [MaybeUninit<Self::Item>]","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6187},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132647,"byte_end":132656,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DebugAddr","qualname":"::read::addr::DebugAddr","value":"DebugAddr {  }","parent":null,"children":[{"krate":0,"index":6189}],"decl_id":null,"docs":" The raw contents of the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132546,"byte_end":132596,"line_start":4,"line_end":4,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133599,"byte_end":133610,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"get_address","qualname":"<DebugAddr<R>>::get_address","value":"pub fn get_address(&Self, u8, DebugAddrBase<R::Offset>,\nDebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the address at the given `base` and `index`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132855,"byte_end":132911,"line_start":14,"line_end":14,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132916,"byte_end":132919,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ A set of addresses in the `.debug_addr` section consists of a header","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132924,"byte_end":132996,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/ followed by a series of addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133001,"byte_end":133039,"line_start":17,"line_end":17,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133044,"byte_end":133047,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_addr_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133052,"byte_end":133133,"line_start":19,"line_end":19,"column_start":5,"column_end":86}},{"value":"/ This is an offset that points to the first address following the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133138,"byte_end":133214,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133219,"byte_end":133222,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_addrx` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133227,"byte_end":133287,"line_start":22,"line_end":22,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133292,"byte_end":133295,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The `address_size` must be the size of the address for the compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133300,"byte_end":133380,"line_start":24,"line_end":24,"column_start":5,"column_end":85}},{"value":"/ This value must also match the header. However, note that we do not parse the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133385,"byte_end":133466,"line_start":25,"line_end":25,"column_start":5,"column_end":86}},{"value":"/ header to validate this, since locating the header is unreliable, and the GNU","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133471,"byte_end":133552,"line_start":26,"line_end":26,"column_start":5,"column_end":86}},{"value":"/ extensions do not emit it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":133557,"byte_end":133587,"line_start":27,"line_end":27,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134653,"byte_end":134659,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAddr<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugAddr<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAddr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAddr` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134023,"byte_end":134091,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134096,"byte_end":134099,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134104,"byte_end":134169,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134174,"byte_end":134177,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134182,"byte_end":134202,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134207,"byte_end":134210,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134215,"byte_end":134233,"line_start":50,"line_end":50,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134238,"byte_end":134283,"line_start":51,"line_end":51,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134288,"byte_end":134372,"line_start":52,"line_end":52,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAddr<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134377,"byte_end":134443,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134448,"byte_end":134495,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134500,"byte_end":134550,"line_start":55,"line_end":55,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134555,"byte_end":134617,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134622,"byte_end":134629,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134634,"byte_end":134641,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6201},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138048,"byte_end":138058,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"DebugFrame","qualname":"::read::cfi::DebugFrame","value":"DebugFrame {  }","parent":null,"children":[{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205}],"decl_id":null,"docs":" `DebugFrame` contains the `.debug_frame` section's frame unwinding\n information required to unwind to and recover registers from older frames on\n the stack. For example, this is useful for a debugger that wants to print\n locals in a backtrace.","sig":null,"attributes":[{"value":"/ `DebugFrame` contains the `.debug_frame` section's frame unwinding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137243,"byte_end":137313,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ information required to unwind to and recover registers from older frames on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137314,"byte_end":137394,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ the stack. For example, this is useful for a debugger that wants to print","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137395,"byte_end":137472,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ locals in a backtrace.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137473,"byte_end":137499,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137500,"byte_end":137503,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Most interesting methods are defined in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137504,"byte_end":137551,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ [`UnwindSection`](trait.UnwindSection.html) trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137552,"byte_end":137606,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137607,"byte_end":137610,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ### Differences between `.debug_frame` and `.eh_frame`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137611,"byte_end":137669,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137670,"byte_end":137673,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ While the `.debug_frame` section's information has a lot of overlap with the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137674,"byte_end":137754,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ `.eh_frame` section's information, the `.eh_frame` information tends to only","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137755,"byte_end":137835,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ encode the subset of information needed for exception handling. Often, only","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137836,"byte_end":137915,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ one of `.eh_frame` or `.debug_frame` will be present in an object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":137916,"byte_end":137991,"line_start":31,"line_end":31,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138345,"byte_end":138361,"line_start":44,"line_end":44,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<DebugFrame<R>>::set_address_size","value":"pub fn set_address_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a target address in bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138171,"byte_end":138217,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138222,"byte_end":138225,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This defaults to the native word size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138230,"byte_end":138272,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/ This is only used if the CIE version is less than 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138277,"byte_end":138333,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138602,"byte_end":138618,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"set_segment_size","qualname":"<DebugFrame<R>>::set_segment_size","value":"pub fn set_segment_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a segment selector in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a segment selector in bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138445,"byte_end":138493,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138498,"byte_end":138501,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This defaults to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138506,"byte_end":138529,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ This is only used if the CIE version is less than 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138534,"byte_end":138590,"line_start":51,"line_end":51,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139416,"byte_end":139419,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugFrame<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugFrame` instance from the data in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138796,"byte_end":138858,"line_start":61,"line_end":61,"column_start":5,"column_end":67}},{"value":"/ `.debug_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138863,"byte_end":138890,"line_start":62,"line_end":62,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138895,"byte_end":138898,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the section and present it as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138903,"byte_end":138978,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ a `&[u8]` slice. That means using some ELF loader on Linux, a Mach-O","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138983,"byte_end":139055,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139060,"byte_end":139085,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139090,"byte_end":139093,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139098,"byte_end":139105,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugFrame, NativeEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139110,"byte_end":139152,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139157,"byte_end":139160,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // Use with `.debug_frame`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139165,"byte_end":139195,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139200,"byte_end":139241,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_frame_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139246,"byte_end":139299,"line_start":73,"line_end":73,"column_start":5,"column_end":58}},{"value":"/ let debug_frame = DebugFrame::new(read_debug_frame_section_somehow(), NativeEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139304,"byte_end":139392,"line_start":74,"line_end":74,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139397,"byte_end":139404,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6225},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140286,"byte_end":140296,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"EhFrameHdr","qualname":"::read::cfi::EhFrameHdr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","sig":null,"attributes":[{"value":"/ `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139984,"byte_end":140060,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140061,"byte_end":140064,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ A pointer to the start of the `.eh_frame` data, and optionally, a binary","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140065,"byte_end":140141,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ search table of pointers to the `.eh_frame` records that are found in this section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140142,"byte_end":140229,"line_start":105,"line_end":105,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":6248},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140437,"byte_end":140453,"line_start":111,"line_end":111,"column_start":12,"column_end":28},"name":"ParsedEhFrameHdr","qualname":"::read::cfi::ParsedEhFrameHdr","value":"ParsedEhFrameHdr {  }","parent":null,"children":[{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255}],"decl_id":null,"docs":" `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140313,"byte_end":140401,"line_start":109,"line_end":109,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140789,"byte_end":140792,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrameHdr<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140689,"byte_end":140777,"line_start":125,"line_end":125,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":141006,"byte_end":141011,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"parse","qualname":"<EhFrameHdr<R>>::parse","value":"pub fn parse(&Self, &BaseAddresses, u8) -> Result<ParsedEhFrameHdr<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.\n","sig":null,"attributes":[{"value":"/ Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140941,"byte_end":140994,"line_start":132,"line_end":132,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":143033,"byte_end":143045,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"eh_frame_ptr","qualname":"<ParsedEhFrameHdr<R>>::eh_frame_ptr","value":"pub fn eh_frame_ptr(&Self) -> Pointer","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the binary's `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ Returns the address of the binary's `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142961,"byte_end":143021,"line_start":197,"line_end":197,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":143174,"byte_end":143179,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"table","qualname":"<ParsedEhFrameHdr<R>>::table","value":"pub fn table(&Self) -> Option<EhHdrTable<, R>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the CFI binary search table, if there is one.\n","sig":null,"attributes":[{"value":"/ Retrieves the CFI binary search table, if there is one.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":143103,"byte_end":143162,"line_start":202,"line_end":202,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6262},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144522,"byte_end":144536,"line_start":228,"line_end":228,"column_start":12,"column_end":26},"name":"EhHdrTableIter","qualname":"::read::cfi::EhHdrTableIter","value":"EhHdrTableIter {  }","parent":null,"children":[{"krate":0,"index":6266},{"krate":0,"index":6267},{"krate":0,"index":6268},{"krate":0,"index":6269}],"decl_id":null,"docs":" An iterator for `.eh_frame_hdr` section's binary search table.","sig":null,"attributes":[{"value":"/ An iterator for `.eh_frame_hdr` section's binary search table.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144050,"byte_end":144116,"line_start":221,"line_end":221,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144117,"byte_end":144120,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ Each table entry consists of a tuple containing an  `initial_location` and `address`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144121,"byte_end":144210,"line_start":223,"line_end":223,"column_start":1,"column_end":90}},{"value":"/ The `initial location` represents the first address that the targeted FDE","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144211,"byte_end":144288,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/ is able to decode. The `address` is the address of the FDE in the `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144289,"byte_end":144379,"line_start":225,"line_end":225,"column_start":1,"column_end":91}},{"value":"/ The `address` can be converted with `EhHdrTable::pointer_to_offset` and `EhFrame::fde_from_offset` to an FDE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144380,"byte_end":144493,"line_start":226,"line_end":226,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144789,"byte_end":144793,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"next","qualname":"<EhHdrTableIter>::next","value":"pub fn next(&mut Self) -> Result<Option<(Pointer, Pointer)>>","parent":null,"children":[],"decl_id":null,"docs":" Yield the next entry in the `EhHdrTableIter`.\n","sig":null,"attributes":[{"value":"/ Yield the next entry in the `EhHdrTableIter`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144728,"byte_end":144777,"line_start":236,"line_end":236,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":145451,"byte_end":145454,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"nth","qualname":"<EhHdrTableIter>::nth","value":"pub fn nth(&mut Self, usize) -> Result<Option<(Pointer, Pointer)>>","parent":null,"children":[],"decl_id":null,"docs":" Yield the nth entry in the `EhHdrTableIter`\n","sig":null,"attributes":[{"value":"/ Yield the nth entry in the `EhHdrTableIter`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":145392,"byte_end":145439,"line_start":254,"line_end":254,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6275},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147036,"byte_end":147046,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"EhHdrTable","qualname":"::read::cfi::EhHdrTable","value":"EhHdrTable {  }","parent":null,"children":[{"krate":0,"index":6278}],"decl_id":null,"docs":" The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":146912,"byte_end":147000,"line_start":296,"line_end":296,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147621,"byte_end":147625,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"iter","qualname":"<EhHdrTable>::iter","value":"pub fn iter<'bases>(&Self, &'bases BaseAddresses) -> EhHdrTableIter","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that can walk the `.eh_frame_hdr` table.","sig":null,"attributes":[{"value":"/ Return an iterator that can walk the `.eh_frame_hdr` table.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147150,"byte_end":147213,"line_start":303,"line_end":303,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147218,"byte_end":147221,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Each table entry consists of a tuple containing an `initial_location` and `address`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147226,"byte_end":147314,"line_start":305,"line_end":305,"column_start":5,"column_end":93}},{"value":"/ The `initial location` represents the first address that the targeted FDE","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147319,"byte_end":147396,"line_start":306,"line_end":306,"column_start":5,"column_end":82}},{"value":"/ is able to decode. The `address` is the address of the FDE in the `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147401,"byte_end":147491,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/ The `address` can be converted with `EhHdrTable::pointer_to_offset` and `EhFrame::fde_from_offset` to an FDE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147496,"byte_end":147609,"line_start":308,"line_end":308,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":148201,"byte_end":148207,"line_start":323,"line_end":323,"column_start":12,"column_end":18},"name":"lookup","qualname":"<EhHdrTable>::lookup","value":"pub fn lookup(&Self, u64, &BaseAddresses) -> Result<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" *Probably* returns a pointer to the FDE for the given address.","sig":null,"attributes":[{"value":"/ *Probably* returns a pointer to the FDE for the given address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147880,"byte_end":147946,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147951,"byte_end":147954,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This performs a binary search, so if there is no FDE for the given address,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147959,"byte_end":148038,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/ this function **will** return a pointer to any other FDE that's close by.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":148043,"byte_end":148120,"line_start":320,"line_end":320,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":148125,"byte_end":148128,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ To be sure, you **must** call `contains` on the FDE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":148133,"byte_end":148189,"line_start":322,"line_end":322,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150232,"byte_end":150249,"line_start":381,"line_end":381,"column_start":12,"column_end":29},"name":"pointer_to_offset","qualname":"<EhHdrTable>::pointer_to_offset","value":"pub fn pointer_to_offset(&Self, Pointer) -> Result<EhFrameOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Pointer` to a section offset.","sig":null,"attributes":[{"value":"/ Convert a `Pointer` to a section offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150119,"byte_end":150163,"line_start":378,"line_end":378,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150168,"byte_end":150171,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This does not support indirect pointers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150176,"byte_end":150220,"line_start":380,"line_end":380,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151634,"byte_end":151649,"line_start":416,"line_end":416,"column_start":12,"column_end":27},"name":"fde_for_address","qualname":"<EhHdrTable>::fde_for_address","value":"pub fn fde_for_address<F>(&Self, &EhFrame<R>, &BaseAddresses, u64, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`\n if there are none.","sig":null,"attributes":[{"value":"/ Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150757,"byte_end":150832,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/ if there are none.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150837,"byte_end":150859,"line_start":397,"line_end":397,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150864,"byte_end":150867,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get its associated CIE. See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150872,"byte_end":150934,"line_start":399,"line_end":399,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":150939,"byte_end":151002,"line_start":400,"line_end":400,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151007,"byte_end":151010,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151015,"byte_end":151028,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151033,"byte_end":151036,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151041,"byte_end":151048,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{BaseAddresses, EhFrame, ParsedEhFrameHdr, EndianSlice, NativeEndian, Error, UnwindSection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151053,"byte_end":151162,"line_start":405,"line_end":405,"column_start":5,"column_end":114}},{"value":"/ # fn foo() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151167,"byte_end":151204,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/ # let eh_frame: EhFrame<EndianSlice<NativeEndian>> = unreachable!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151209,"byte_end":151281,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ # let eh_frame_hdr: ParsedEhFrameHdr<EndianSlice<NativeEndian>> = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151286,"byte_end":151373,"line_start":408,"line_end":408,"column_start":5,"column_end":92}},{"value":"/ # let addr = 0;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151378,"byte_end":151397,"line_start":409,"line_end":409,"column_start":5,"column_end":24}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151402,"byte_end":151437,"line_start":410,"line_end":410,"column_start":5,"column_end":40}},{"value":"/ let table = eh_frame_hdr.table().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151442,"byte_end":151488,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/ let fde = table.fde_for_address(&eh_frame, &bases, addr, EhFrame::cie_from_offset)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151493,"byte_end":151581,"line_start":412,"line_end":412,"column_start":5,"column_end":93}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151586,"byte_end":151598,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151603,"byte_end":151610,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":151615,"byte_end":151622,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152423,"byte_end":152439,"line_start":443,"line_end":443,"column_start":12,"column_end":28},"name":"lookup_and_parse","qualname":"<EhHdrTable>::lookup_and_parse","value":"pub fn lookup_and_parse<F>(&Self, u64, &BaseAddresses, EhFrame<R>, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152302,"byte_end":152311,"line_start":440,"line_end":440,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Method renamed to fde_for_address; use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152335,"byte_end":152411,"line_start":442,"line_end":442,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153120,"byte_end":153143,"line_start":465,"line_end":465,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<EhHdrTable>::unwind_info_for_address","value":"pub fn unwind_info_for_address<'ctx, F,\nA: UnwindContextStorage<R>>(&Self, &EhFrame<R>, &BaseAddresses,\n&'ctx mut UnwindContext<R, A>, u64, F) -> Result<&'ctx UnwindTableRow<R, A>>\nwhere F: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame unwind information for the given address,\n or `NoUnwindInfoForAddress` if there are none.","sig":null,"attributes":[{"value":"/ Returns the frame unwind information for the given address,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152847,"byte_end":152910,"line_start":460,"line_end":460,"column_start":5,"column_end":68}},{"value":"/ or `NoUnwindInfoForAddress` if there are none.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152915,"byte_end":152965,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152970,"byte_end":152973,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get the associated CIE. See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":152978,"byte_end":153040,"line_start":463,"line_end":463,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153045,"byte_end":153108,"line_start":464,"line_end":464,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154183,"byte_end":154190,"line_start":496,"line_end":496,"column_start":12,"column_end":19},"name":"EhFrame","qualname":"::read::cfi::EhFrame","value":"EhFrame {  }","parent":null,"children":[{"krate":0,"index":6289},{"krate":0,"index":6290}],"decl_id":null,"docs":" `EhFrame` contains the frame unwinding information needed during exception\n handling found in the `.eh_frame` section.","sig":null,"attributes":[{"value":"/ `EhFrame` contains the frame unwinding information needed during exception","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153705,"byte_end":153783,"line_start":485,"line_end":485,"column_start":1,"column_end":79}},{"value":"/ handling found in the `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153784,"byte_end":153830,"line_start":486,"line_end":486,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153831,"byte_end":153834,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ Most interesting methods are defined in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153835,"byte_end":153882,"line_start":488,"line_end":488,"column_start":1,"column_end":48}},{"value":"/ [`UnwindSection`](trait.UnwindSection.html) trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153883,"byte_end":153937,"line_start":489,"line_end":489,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153938,"byte_end":153941,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153942,"byte_end":153949,"line_start":491,"line_end":491,"column_start":1,"column_end":8}},{"value":"/ [`DebugFrame`](./struct.DebugFrame.html#differences-between-debug_frame-and-eh_frame)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":153950,"byte_end":154039,"line_start":492,"line_end":492,"column_start":1,"column_end":90}},{"value":"/ for some discussion on the differences between `.debug_frame` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154040,"byte_end":154109,"line_start":493,"line_end":493,"column_start":1,"column_end":70}},{"value":"/ `.eh_frame`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154110,"byte_end":154126,"line_start":494,"line_end":494,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154391,"byte_end":154407,"line_start":505,"line_end":505,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<EhFrame<R>>::set_address_size","value":"pub fn set_address_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a target address in bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154278,"byte_end":154324,"line_start":502,"line_end":502,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154329,"byte_end":154332,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This defaults to the native word size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154337,"byte_end":154379,"line_start":504,"line_end":504,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155191,"byte_end":155194,"line_start":529,"line_end":529,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrame<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EhFrame` instance from the data in the\n `.eh_frame` section.","sig":null,"attributes":[{"value":"/ Construct a new `EhFrame` instance from the data in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154582,"byte_end":154641,"line_start":514,"line_end":514,"column_start":5,"column_end":64}},{"value":"/ `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154646,"byte_end":154670,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154675,"byte_end":154678,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the section and present it as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154683,"byte_end":154758,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ a `&[u8]` slice. That means using some ELF loader on Linux, a Mach-O","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154763,"byte_end":154835,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154840,"byte_end":154865,"line_start":519,"line_end":519,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154870,"byte_end":154873,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154878,"byte_end":154885,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EhFrame, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154890,"byte_end":154942,"line_start":522,"line_end":522,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154947,"byte_end":154950,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ // Use with `.eh_frame`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154955,"byte_end":154982,"line_start":524,"line_end":524,"column_start":5,"column_end":32}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154987,"byte_end":155028,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/ # let read_eh_frame_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155033,"byte_end":155083,"line_start":526,"line_end":526,"column_start":5,"column_end":55}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_section_somehow(), NativeEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155088,"byte_end":155167,"line_start":527,"line_end":527,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155172,"byte_end":155179,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6311},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155968,"byte_end":155971,"line_start":560,"line_end":560,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::cfi::CieOffsetEncoding::U32","value":"CieOffsetEncoding::U32","parent":{"krate":0,"index":6310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155977,"byte_end":155980,"line_start":561,"line_end":561,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::cfi::CieOffsetEncoding::U64","value":"CieOffsetEncoding::U64","parent":{"krate":0,"index":6310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6310},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155944,"byte_end":155961,"line_start":559,"line_end":559,"column_start":10,"column_end":27},"name":"CieOffsetEncoding","qualname":"::read::cfi::CieOffsetEncoding","value":"pub enum CieOffsetEncoding { U32, U64, }","parent":null,"children":[{"krate":0,"index":6311},{"krate":0,"index":6313}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155867,"byte_end":155889,"line_start":557,"line_end":557,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156098,"byte_end":156110,"line_start":567,"line_end":567,"column_start":11,"column_end":23},"name":"UnwindOffset","qualname":"::read::cfi::UnwindOffset","value":"UnwindOffset<T = usize>: Copy + Debug + Eq + From<T>","parent":null,"children":[{"krate":0,"index":452}],"decl_id":null,"docs":" An offset into an `UnwindSection`.\n","sig":null,"attributes":[{"value":"/ An offset into an `UnwindSection`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155985,"byte_end":156023,"line_start":564,"line_end":564,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156236,"byte_end":156240,"line_start":572,"line_end":572,"column_start":8,"column_end":12},"name":"into","qualname":"::read::cfi::UnwindOffset::into","value":"pub fn into(Self) -> T","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Convert an `UnwindOffset<T>` into a `T`.\n","sig":null,"attributes":[{"value":"/ Convert an `UnwindOffset<T>` into a `T`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156184,"byte_end":156228,"line_start":571,"line_end":571,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156738,"byte_end":156759,"line_start":599,"line_end":599,"column_start":11,"column_end":32},"name":"_UnwindSectionPrivate","qualname":"::read::cfi::_UnwindSectionPrivate","value":"_UnwindSectionPrivate<R: Reader>","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"decl_id":null,"docs":" This trait completely encapsulates everything that is different between\n `.eh_frame` and `.debug_frame`, as well as all the bits that can change\n between DWARF versions.\n","sig":null,"attributes":[{"value":"/ This trait completely encapsulates everything that is different between","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156533,"byte_end":156608,"line_start":595,"line_end":595,"column_start":1,"column_end":76}},{"value":"/ `.eh_frame` and `.debug_frame`, as well as all the bits that can change","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156609,"byte_end":156684,"line_start":596,"line_end":596,"column_start":1,"column_end":76}},{"value":"/ between DWARF versions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156685,"byte_end":156712,"line_start":597,"line_end":597,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156821,"byte_end":156828,"line_start":601,"line_end":601,"column_start":8,"column_end":15},"name":"section","qualname":"::read::cfi::_UnwindSectionPrivate::section","value":"pub fn section(&Self) -> &R","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" Get the underlying section data.\n","sig":null,"attributes":[{"value":"/ Get the underlying section data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156777,"byte_end":156813,"line_start":600,"line_end":600,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156955,"byte_end":156985,"line_start":605,"line_end":605,"column_start":8,"column_end":38},"name":"length_value_is_end_of_entries","qualname":"::read::cfi::_UnwindSectionPrivate::length_value_is_end_of_entries","value":"pub fn length_value_is_end_of_entries(R::Offset) -> bool","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" Returns true if the given length value should be considered an\n end-of-entries sentinel.\n","sig":null,"attributes":[{"value":"/ Returns true if the given length value should be considered an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156848,"byte_end":156914,"line_start":603,"line_end":603,"column_start":5,"column_end":71}},{"value":"/ end-of-entries sentinel.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156919,"byte_end":156947,"line_start":604,"line_end":604,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157100,"byte_end":157106,"line_start":608,"line_end":608,"column_start":8,"column_end":14},"name":"is_cie","qualname":"::read::cfi::_UnwindSectionPrivate::is_cie","value":"pub fn is_cie(Format, u64) -> bool","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" Return true if the given offset if the CIE sentinel, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if the given offset if the CIE sentinel, false otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157019,"byte_end":157092,"line_start":607,"line_end":607,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157256,"byte_end":157275,"line_start":612,"line_end":612,"column_start":8,"column_end":27},"name":"cie_offset_encoding","qualname":"::read::cfi::_UnwindSectionPrivate::cie_offset_encoding","value":"pub fn cie_offset_encoding(Format) -> CieOffsetEncoding","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" Return the CIE offset/ID encoding used by this unwind section with the\n given DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the CIE offset/ID encoding used by this unwind section with the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157146,"byte_end":157220,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ given DWARF format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157225,"byte_end":157248,"line_start":611,"line_end":611,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157678,"byte_end":157696,"line_start":619,"line_end":619,"column_start":8,"column_end":26},"name":"resolve_cie_offset","qualname":"::read::cfi::_UnwindSectionPrivate::resolve_cie_offset","value":"pub fn resolve_cie_offset(&Self, R::Offset, R::Offset) -> Option<R::Offset>","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" For `.eh_frame`, CIE offsets are relative to the current position. For\n `.debug_frame`, they are relative to the start of the section. We always\n internally store them relative to the section, so we handle translating\n `.eh_frame`'s relative offsets in this method. If the offset calculation\n underflows, return `None`.\n","sig":null,"attributes":[{"value":"/ For `.eh_frame`, CIE offsets are relative to the current position. For","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157319,"byte_end":157393,"line_start":614,"line_end":614,"column_start":5,"column_end":79}},{"value":"/ `.debug_frame`, they are relative to the start of the section. We always","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157398,"byte_end":157474,"line_start":615,"line_end":615,"column_start":5,"column_end":81}},{"value":"/ internally store them relative to the section, so we handle translating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157479,"byte_end":157554,"line_start":616,"line_end":616,"column_start":5,"column_end":80}},{"value":"/ `.eh_frame`'s relative offsets in this method. If the offset calculation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157559,"byte_end":157635,"line_start":617,"line_end":617,"column_start":5,"column_end":81}},{"value":"/ underflows, return `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157640,"byte_end":157670,"line_start":618,"line_end":618,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157873,"byte_end":157902,"line_start":623,"line_end":623,"column_start":8,"column_end":37},"name":"has_address_and_segment_sizes","qualname":"::read::cfi::_UnwindSectionPrivate::has_address_and_segment_sizes","value":"pub fn has_address_and_segment_sizes(u8) -> bool","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" Does this version of this unwind section encode address and segment\n sizes in its CIEs?\n","sig":null,"attributes":[{"value":"/ Does this version of this unwind section encode address and segment","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157767,"byte_end":157838,"line_start":621,"line_end":621,"column_start":5,"column_end":76}},{"value":"/ sizes in its CIEs?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157843,"byte_end":157865,"line_start":622,"line_end":622,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158015,"byte_end":158027,"line_start":626,"line_end":626,"column_start":8,"column_end":20},"name":"address_size","qualname":"::read::cfi::_UnwindSectionPrivate::address_size","value":"pub fn address_size(&Self) -> u8","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" The address size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[{"value":"/ The address size to use if `has_address_and_segment_sizes` returns false.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":157930,"byte_end":158007,"line_start":625,"line_end":625,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158132,"byte_end":158144,"line_start":629,"line_end":629,"column_start":8,"column_end":20},"name":"segment_size","qualname":"::read::cfi::_UnwindSectionPrivate::segment_size","value":"pub fn segment_size(&Self) -> u8","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":" The segment size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[{"value":"/ The segment size to use if `has_address_and_segment_sizes` returns false.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158047,"byte_end":158124,"line_start":628,"line_end":628,"column_start":5,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158358,"byte_end":158371,"line_start":635,"line_end":635,"column_start":11,"column_end":24},"name":"UnwindSection","qualname":"::read::cfi::UnwindSection","value":"UnwindSection<R: Reader>: Clone + Debug + _UnwindSectionPrivate<R>","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481}],"decl_id":null,"docs":" A section holding unwind information: either `.debug_frame` or\n `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and\n [`EhFrame`](./struct.EhFrame.html) respectively.\n","sig":null,"attributes":[{"value":"/ A section holding unwind information: either `.debug_frame` or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158162,"byte_end":158228,"line_start":632,"line_end":632,"column_start":1,"column_end":67}},{"value":"/ `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158229,"byte_end":158294,"line_start":633,"line_end":633,"column_start":1,"column_end":66}},{"value":"/ [`EhFrame`](./struct.EhFrame.html) respectively.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158295,"byte_end":158347,"line_start":634,"line_end":634,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158548,"byte_end":158554,"line_start":638,"line_end":638,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::cfi::UnwindSection::Offset","value":"type Offset: UnwindOffset<R::Offset>;","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" The offset type associated with this CFI section. Either\n `DebugFrameOffset` or `EhFrameOffset`.\n","sig":null,"attributes":[{"value":"/ The offset type associated with this CFI section. Either","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158431,"byte_end":158491,"line_start":636,"line_end":636,"column_start":5,"column_end":65}},{"value":"/ `DebugFrameOffset` or `EhFrameOffset`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158496,"byte_end":158538,"line_start":637,"line_end":637,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158814,"byte_end":158821,"line_start":645,"line_end":645,"column_start":8,"column_end":15},"name":"entries","qualname":"::read::cfi::UnwindSection::entries","value":"pub fn entries<'bases>(&Self, &'bases BaseAddresses) -> CfiEntriesIter","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s\n in this `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158586,"byte_end":158661,"line_start":640,"line_end":640,"column_start":5,"column_end":80}},{"value":"/ in this `.debug_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158666,"byte_end":158701,"line_start":641,"line_end":641,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158706,"byte_end":158709,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158714,"byte_end":158735,"line_start":643,"line_end":643,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158740,"byte_end":158806,"line_start":644,"line_end":644,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":159114,"byte_end":159129,"line_start":654,"line_end":654,"column_start":8,"column_end":23},"name":"cie_from_offset","qualname":"::read::cfi::UnwindSection::cie_from_offset","value":"pub fn cie_from_offset(&Self, &BaseAddresses, Self::Offset)\n-> Result<CommonInformationEntry<R>>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Parse the `CommonInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `CommonInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":159047,"byte_end":159106,"line_start":653,"line_end":653,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":159521,"byte_end":159544,"line_start":666,"line_end":666,"column_start":8,"column_end":31},"name":"partial_fde_from_offset","qualname":"::read::cfi::UnwindSection::partial_fde_from_offset","value":"pub fn partial_fde_from_offset<'bases>(&Self, &'bases BaseAddresses,\nSelf::Offset) -> Result<PartialFrameDescriptionEntry>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Parse the `PartialFrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `PartialFrameDescriptionEntry` at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":159448,"byte_end":159513,"line_start":665,"line_end":665,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":159978,"byte_end":159993,"line_start":678,"line_end":678,"column_start":8,"column_end":23},"name":"fde_from_offset","qualname":"::read::cfi::UnwindSection::fde_from_offset","value":"pub fn fde_from_offset<F>(&Self, &BaseAddresses, Self::Offset, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Parse the `FrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `FrameDescriptionEntry` at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":159912,"byte_end":159970,"line_start":677,"line_end":677,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160894,"byte_end":160909,"line_start":702,"line_end":702,"column_start":8,"column_end":23},"name":"fde_for_address","qualname":"::read::cfi::UnwindSection::fde_for_address","value":"pub fn fde_for_address<F>(&Self, &BaseAddresses, u64, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Find the `FrameDescriptionEntry` for the given address.","sig":null,"attributes":[{"value":"/ Find the `FrameDescriptionEntry` for the given address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160354,"byte_end":160413,"line_start":691,"line_end":691,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160418,"byte_end":160421,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ If found, the FDE is returned.  If not found,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160426,"byte_end":160475,"line_start":693,"line_end":693,"column_start":5,"column_end":54}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160480,"byte_end":160540,"line_start":694,"line_end":694,"column_start":5,"column_end":65}},{"value":"/ If parsing fails, the error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160545,"byte_end":160589,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160594,"byte_end":160597,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get its associated CIE. See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160602,"byte_end":160664,"line_start":697,"line_end":697,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160669,"byte_end":160732,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160737,"byte_end":160740,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Note: this iterates over all FDEs. If available, it is possible","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160745,"byte_end":160812,"line_start":700,"line_end":700,"column_start":5,"column_end":72}},{"value":"/ to do a binary search with `EhFrameHdr::fde_for_address` instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":160817,"byte_end":160886,"line_start":701,"line_end":701,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163533,"byte_end":163556,"line_start":772,"line_end":772,"column_start":8,"column_end":31},"name":"unwind_info_for_address","qualname":"::read::cfi::UnwindSection::unwind_info_for_address","value":"pub fn unwind_info_for_address<'ctx, F,\nA: UnwindContextStorage<R>>(&Self, &BaseAddresses,\n&'ctx mut UnwindContext<R, A>, u64, F) -> Result<&'ctx UnwindTableRow<R, A>>\nwhere F: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"/ Find the frame unwind information for the given address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161627,"byte_end":161687,"line_start":726,"line_end":726,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161692,"byte_end":161695,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ If found, the unwind information is returned.  If not found,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161700,"byte_end":161764,"line_start":728,"line_end":728,"column_start":5,"column_end":69}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned. If parsing or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161769,"byte_end":161843,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/ CFI evaluation fails, the error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161848,"byte_end":161896,"line_start":730,"line_end":730,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161901,"byte_end":161904,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161909,"byte_end":161916,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ use gimli::{BaseAddresses, EhFrame, EndianSlice, NativeEndian, UnwindContext,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":161921,"byte_end":162002,"line_start":733,"line_end":733,"column_start":5,"column_end":86}},{"value":"/             UnwindSection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162007,"byte_end":162038,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162043,"byte_end":162046,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # fn foo() -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162051,"byte_end":162088,"line_start":736,"line_end":736,"column_start":5,"column_end":42}},{"value":"/ # let read_eh_frame_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162093,"byte_end":162147,"line_start":737,"line_end":737,"column_start":5,"column_end":59}},{"value":"/ // Get the `.eh_frame` section from the object file. Alternatively,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162152,"byte_end":162223,"line_start":738,"line_end":738,"column_start":5,"column_end":76}},{"value":"/ // use `EhFrame` with the `.eh_frame` section of the object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162228,"byte_end":162297,"line_start":739,"line_end":739,"column_start":5,"column_end":74}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_section(), NativeEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162302,"byte_end":162373,"line_start":740,"line_end":740,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162378,"byte_end":162381,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # let get_frame_pc = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162386,"byte_end":162431,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/ // Get the address of the PC for a frame you'd like to unwind.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162436,"byte_end":162502,"line_start":743,"line_end":743,"column_start":5,"column_end":71}},{"value":"/ let address = get_frame_pc();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162507,"byte_end":162540,"line_start":744,"line_end":744,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162545,"byte_end":162548,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ // This context is reusable, which cuts down on heap allocations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162553,"byte_end":162622,"line_start":746,"line_end":746,"column_start":5,"column_end":74}},{"value":"/ let ctx = UnwindContext::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162627,"byte_end":162662,"line_start":747,"line_end":747,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162667,"byte_end":162670,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ // Optionally provide base addresses for any relative pointers. If a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162675,"byte_end":162747,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ // base address isn't provided and a pointer is found that is relative to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162752,"byte_end":162829,"line_start":750,"line_end":750,"column_start":5,"column_end":82}},{"value":"/ // it, we will return an `Err`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162834,"byte_end":162869,"line_start":751,"line_end":751,"column_start":5,"column_end":40}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162874,"byte_end":162937,"line_start":752,"line_end":752,"column_start":5,"column_end":68}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":162942,"byte_end":163004,"line_start":753,"line_end":753,"column_start":5,"column_end":67}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163009,"byte_end":163049,"line_start":754,"line_end":754,"column_start":5,"column_end":45}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163054,"byte_end":163106,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163111,"byte_end":163162,"line_start":756,"line_end":756,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163167,"byte_end":163170,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let unwind_info = eh_frame.unwind_info_for_address(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163175,"byte_end":163230,"line_start":758,"line_end":758,"column_start":5,"column_end":60}},{"value":"/     &bases,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163235,"byte_end":163250,"line_start":759,"line_end":759,"column_start":5,"column_end":20}},{"value":"/     &mut ctx,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163255,"byte_end":163272,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/     address,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163277,"byte_end":163293,"line_start":761,"line_end":761,"column_start":5,"column_end":21}},{"value":"/     EhFrame::cie_from_offset,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163298,"byte_end":163331,"line_start":762,"line_end":762,"column_start":5,"column_end":38}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163336,"byte_end":163343,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163348,"byte_end":163351,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # let do_stuff_with = |_| unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163356,"byte_end":163403,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/ do_stuff_with(unwind_info);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163408,"byte_end":163439,"line_start":766,"line_end":766,"column_start":5,"column_end":36}},{"value":"/ # let _ = ctx;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163444,"byte_end":163462,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163467,"byte_end":163487,"line_start":768,"line_end":768,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163492,"byte_end":163499,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163504,"byte_end":163511,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":163516,"byte_end":163525,"line_start":771,"line_end":771,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6326},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166981,"byte_end":166994,"line_start":894,"line_end":894,"column_start":12,"column_end":25},"name":"BaseAddresses","qualname":"::read::cfi::BaseAddresses","value":"BaseAddresses { eh_frame_hdr, eh_frame }","parent":null,"children":[{"krate":0,"index":6327},{"krate":0,"index":6328}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","sig":null,"attributes":[{"value":"/ Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166002,"byte_end":166077,"line_start":871,"line_end":871,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166078,"byte_end":166081,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ During CIE/FDE parsing, if a relative pointer is encountered for a base","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166082,"byte_end":166157,"line_start":873,"line_end":873,"column_start":1,"column_end":76}},{"value":"/ address that is unknown, an Err will be returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166158,"byte_end":166211,"line_start":874,"line_end":874,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166212,"byte_end":166215,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166216,"byte_end":166223,"line_start":876,"line_end":876,"column_start":1,"column_end":8}},{"value":"/ use gimli::BaseAddresses;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166224,"byte_end":166253,"line_start":877,"line_end":877,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166254,"byte_end":166257,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166258,"byte_end":166274,"line_start":879,"line_end":879,"column_start":1,"column_end":17}},{"value":"/ # let address_of_eh_frame_hdr_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166275,"byte_end":166346,"line_start":880,"line_end":880,"column_start":1,"column_end":72}},{"value":"/ # let address_of_eh_frame_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166347,"byte_end":166414,"line_start":881,"line_end":881,"column_start":1,"column_end":68}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166415,"byte_end":166478,"line_start":882,"line_end":882,"column_start":1,"column_end":64}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166479,"byte_end":166541,"line_start":883,"line_end":883,"column_start":1,"column_end":63}},{"value":"/ # let address_of_the_start_of_current_func = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166542,"byte_end":166608,"line_start":884,"line_end":884,"column_start":1,"column_end":67}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166609,"byte_end":166649,"line_start":885,"line_end":885,"column_start":1,"column_end":41}},{"value":"/     .set_eh_frame_hdr(address_of_eh_frame_hdr_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166650,"byte_end":166718,"line_start":886,"line_end":886,"column_start":1,"column_end":69}},{"value":"/     .set_eh_frame(address_of_eh_frame_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166719,"byte_end":166779,"line_start":887,"line_end":887,"column_start":1,"column_end":61}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166780,"byte_end":166832,"line_start":888,"line_end":888,"column_start":1,"column_end":53}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166833,"byte_end":166884,"line_start":889,"line_end":889,"column_start":1,"column_end":52}},{"value":"/ # let _ = bases;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166885,"byte_end":166905,"line_start":890,"line_end":890,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166906,"byte_end":166913,"line_start":891,"line_end":891,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":166914,"byte_end":166921,"line_start":892,"line_end":892,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":6327},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167084,"byte_end":167096,"line_start":896,"line_end":896,"column_start":9,"column_end":21},"name":"eh_frame_hdr","qualname":"::read::cfi::BaseAddresses::eh_frame_hdr","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":6326},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The base addresses to use for pointers in the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167001,"byte_end":167075,"line_start":895,"line_end":895,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6328},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167204,"byte_end":167212,"line_start":899,"line_end":899,"column_start":9,"column_end":17},"name":"eh_frame","qualname":"::read::cfi::BaseAddresses::eh_frame","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":6326},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The base addresses to use for pointers in the `.eh_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167125,"byte_end":167195,"line_start":898,"line_end":898,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6342},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167487,"byte_end":167507,"line_start":907,"line_end":907,"column_start":12,"column_end":32},"name":"SectionBaseAddresses","qualname":"::read::cfi::SectionBaseAddresses","value":"SectionBaseAddresses { section, text, data }","parent":null,"children":[{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers\n in a particular section.","sig":null,"attributes":[{"value":"/ Optional base addresses for the relative `DW_EH_PE_*` encoded pointers","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167239,"byte_end":167313,"line_start":902,"line_end":902,"column_start":1,"column_end":75}},{"value":"/ in a particular section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167314,"byte_end":167342,"line_start":903,"line_end":903,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167343,"byte_end":167346,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ See `BaseAddresses` for methods that are helpful in setting these addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167347,"byte_end":167427,"line_start":905,"line_end":905,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167577,"byte_end":167584,"line_start":909,"line_end":909,"column_start":9,"column_end":16},"name":"section","qualname":"::read::cfi::SectionBaseAddresses::section","value":"core::option::Option<u64>","parent":{"krate":0,"index":6342},"children":[],"decl_id":null,"docs":" The address of the section containing the pointer.\n","sig":null,"attributes":[{"value":"/ The address of the section containing the pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167514,"byte_end":167568,"line_start":908,"line_end":908,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6344},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167723,"byte_end":167727,"line_start":913,"line_end":913,"column_start":9,"column_end":13},"name":"text","qualname":"::read::cfi::SectionBaseAddresses::text","value":"core::option::Option<u64>","parent":{"krate":0,"index":6342},"children":[],"decl_id":null,"docs":" The base address for text relative pointers.\n This is generally the address of the `.text` section.\n","sig":null,"attributes":[{"value":"/ The base address for text relative pointers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167604,"byte_end":167652,"line_start":911,"line_end":911,"column_start":5,"column_end":53}},{"value":"/ This is generally the address of the `.text` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167657,"byte_end":167714,"line_start":912,"line_end":912,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6345},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168070,"byte_end":168074,"line_start":922,"line_end":922,"column_start":9,"column_end":13},"name":"data","qualname":"::read::cfi::SectionBaseAddresses::data","value":"core::option::Option<u64>","parent":{"krate":0,"index":6342},"children":[],"decl_id":null,"docs":" The base address for data relative pointers.","sig":null,"attributes":[{"value":"/ The base address for data relative pointers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167747,"byte_end":167795,"line_start":915,"line_end":915,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167800,"byte_end":167803,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ For pointers in the `.eh_frame_hdr` section, this is the address","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167808,"byte_end":167876,"line_start":917,"line_end":917,"column_start":5,"column_end":73}},{"value":"/ of the `.eh_frame_hdr` section","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167881,"byte_end":167915,"line_start":918,"line_end":918,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167920,"byte_end":167923,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ For pointers in the `.eh_frame` section, this is generally the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167928,"byte_end":167994,"line_start":920,"line_end":920,"column_start":5,"column_end":71}},{"value":"/ global pointer, such as the address of the `.got` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":167999,"byte_end":168061,"line_start":921,"line_end":921,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168192,"byte_end":168208,"line_start":928,"line_end":928,"column_start":12,"column_end":28},"name":"set_eh_frame_hdr","qualname":"<BaseAddresses>::set_eh_frame_hdr","value":"pub fn set_eh_frame_hdr(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame_hdr` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.eh_frame_hdr` section base address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168117,"byte_end":168166,"line_start":926,"line_end":926,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168171,"byte_end":168180,"line_start":927,"line_end":927,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168428,"byte_end":168440,"line_start":936,"line_end":936,"column_start":12,"column_end":24},"name":"set_eh_frame","qualname":"<BaseAddresses>::set_eh_frame","value":"pub fn set_eh_frame(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.eh_frame` section base address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168357,"byte_end":168402,"line_start":934,"line_end":934,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168407,"byte_end":168416,"line_start":935,"line_end":935,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168607,"byte_end":168615,"line_start":943,"line_end":943,"column_start":12,"column_end":20},"name":"set_text","qualname":"<BaseAddresses>::set_text","value":"pub fn set_text(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.text` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.text` section base address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168540,"byte_end":168581,"line_start":941,"line_end":941,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168586,"byte_end":168595,"line_start":942,"line_end":942,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168823,"byte_end":168830,"line_start":951,"line_end":951,"column_start":12,"column_end":19},"name":"set_got","qualname":"<BaseAddresses>::set_got","value":"pub fn set_got(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.got` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.got` section base address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168757,"byte_end":168797,"line_start":949,"line_end":949,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168802,"byte_end":168811,"line_start":950,"line_end":950,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6359},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170618,"byte_end":170632,"line_start":997,"line_end":997,"column_start":12,"column_end":26},"name":"CfiEntriesIter","qualname":"::read::cfi::CfiEntriesIter","value":"CfiEntriesIter {  }","parent":null,"children":[{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365}],"decl_id":null,"docs":" An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`\n section.","sig":null,"attributes":[{"value":"/ An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168925,"byte_end":169000,"line_start":957,"line_end":957,"column_start":1,"column_end":76}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169001,"byte_end":169013,"line_start":958,"line_end":958,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169014,"byte_end":169017,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ Some pointers may be encoded relative to various base addresses. Use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169018,"byte_end":169094,"line_start":960,"line_end":960,"column_start":1,"column_end":77}},{"value":"/ [`BaseAddresses`](./struct.BaseAddresses.html) parameter to provide them. By","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169095,"byte_end":169175,"line_start":961,"line_end":961,"column_start":1,"column_end":81}},{"value":"/ default, none are provided. If a relative pointer is encountered for a base","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169176,"byte_end":169255,"line_start":962,"line_end":962,"column_start":1,"column_end":80}},{"value":"/ address that is unknown, an `Err` will be returned and iteration will abort.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169256,"byte_end":169336,"line_start":963,"line_end":963,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169337,"byte_end":169340,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169341,"byte_end":169362,"line_start":965,"line_end":965,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169363,"byte_end":169429,"line_start":966,"line_end":966,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169430,"byte_end":169433,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169434,"byte_end":169441,"line_start":968,"line_end":968,"column_start":1,"column_end":8}},{"value":"/ use gimli::{BaseAddresses, EhFrame, EndianSlice, NativeEndian, UnwindSection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169442,"byte_end":169524,"line_start":969,"line_end":969,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169525,"byte_end":169528,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169529,"byte_end":169566,"line_start":971,"line_end":971,"column_start":1,"column_end":38}},{"value":"/ # let read_eh_frame_somehow = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169567,"byte_end":169621,"line_start":972,"line_end":972,"column_start":1,"column_end":55}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_somehow(), NativeEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169622,"byte_end":169693,"line_start":973,"line_end":973,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169694,"byte_end":169697,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ # let address_of_eh_frame_hdr_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169698,"byte_end":169769,"line_start":975,"line_end":975,"column_start":1,"column_end":72}},{"value":"/ # let address_of_eh_frame_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169770,"byte_end":169837,"line_start":976,"line_end":976,"column_start":1,"column_end":68}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169838,"byte_end":169901,"line_start":977,"line_end":977,"column_start":1,"column_end":64}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169902,"byte_end":169964,"line_start":978,"line_end":978,"column_start":1,"column_end":63}},{"value":"/ # let address_of_the_start_of_current_func = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":169965,"byte_end":170031,"line_start":979,"line_end":979,"column_start":1,"column_end":67}},{"value":"/ // Provide base addresses for relative pointers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170032,"byte_end":170084,"line_start":980,"line_end":980,"column_start":1,"column_end":53}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170085,"byte_end":170125,"line_start":981,"line_end":981,"column_start":1,"column_end":41}},{"value":"/     .set_eh_frame_hdr(address_of_eh_frame_hdr_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170126,"byte_end":170194,"line_start":982,"line_end":982,"column_start":1,"column_end":69}},{"value":"/     .set_eh_frame(address_of_eh_frame_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170195,"byte_end":170255,"line_start":983,"line_end":983,"column_start":1,"column_end":61}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170256,"byte_end":170308,"line_start":984,"line_end":984,"column_start":1,"column_end":53}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170309,"byte_end":170360,"line_start":985,"line_end":985,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170361,"byte_end":170364,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ let mut entries = eh_frame.entries(&bases);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170365,"byte_end":170412,"line_start":987,"line_end":987,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170413,"byte_end":170416,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ # let do_stuff_with = |_| unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170417,"byte_end":170464,"line_start":989,"line_end":989,"column_start":1,"column_end":48}},{"value":"/ while let Some(entry) = entries.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170465,"byte_end":170510,"line_start":990,"line_end":990,"column_start":1,"column_end":46}},{"value":"/     do_stuff_with(entry)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170511,"byte_end":170539,"line_start":991,"line_end":991,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170540,"byte_end":170545,"line_start":992,"line_end":992,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170546,"byte_end":170566,"line_start":993,"line_end":993,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170567,"byte_end":170574,"line_start":994,"line_end":994,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170575,"byte_end":170582,"line_start":995,"line_end":995,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170953,"byte_end":170957,"line_start":1013,"line_end":1013,"column_start":12,"column_end":16},"name":"next","qualname":"<CfiEntriesIter>::next","value":"pub fn next(&mut Self) -> Result<Option<CieOrFde>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next entry.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170898,"byte_end":170941,"line_start":1012,"line_end":1012,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6380},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":172095,"byte_end":172098,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8},"name":"Cie","qualname":"::read::cfi::CieOrFde::Cie","value":"CieOrFde::Cie(CommonInformationEntry<R>)","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" This CFI entry is a `CommonInformationEntry`.\n","sig":null,"attributes":[{"value":"/ This CFI entry is a `CommonInformationEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":172041,"byte_end":172090,"line_start":1053,"line_end":1053,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6383},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":172300,"byte_end":172303,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8},"name":"Fde","qualname":"::read::cfi::CieOrFde::Fde","value":"CieOrFde::Fde(PartialFrameDescriptionEntry)","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" This CFI entry is a `FrameDescriptionEntry`, however fully parsing it\n requires parsing its CIE first, so it is left in a partially parsed\n state.\n","sig":null,"attributes":[{"value":"/ This CFI entry is a `FrameDescriptionEntry`, however fully parsing it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":172131,"byte_end":172204,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ requires parsing its CIE first, so it is left in a partially parsed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":172209,"byte_end":172280,"line_start":1056,"line_end":1056,"column_start":5,"column_end":76}},{"value":"/ state.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":172285,"byte_end":172295,"line_start":1057,"line_end":1057,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":171954,"byte_end":171962,"line_start":1048,"line_end":1048,"column_start":10,"column_end":18},"name":"CieOrFde","qualname":"::read::cfi::CieOrFde","value":"pub enum CieOrFde<'bases, Section, R> where R: Reader,\n    Section: UnwindSection<R> {\n    Cie(CommonInformationEntry<R>),\n    Fde(PartialFrameDescriptionEntry),\n}","parent":null,"children":[{"krate":0,"index":6380},{"krate":0,"index":6383}],"decl_id":null,"docs":" Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).\n","sig":null,"attributes":[{"value":"/ Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":171826,"byte_end":171905,"line_start":1046,"line_end":1046,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":6415},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":174624,"byte_end":174636,"line_start":1124,"line_end":1124,"column_start":12,"column_end":24},"name":"Augmentation","qualname":"::read::cfi::Augmentation","value":"Augmentation {  }","parent":null,"children":[{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6419}],"decl_id":null,"docs":" We support the z-style augmentation [defined by `.eh_frame`][ehframe].","sig":null,"attributes":[{"value":"/ We support the z-style augmentation [defined by `.eh_frame`][ehframe].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":174367,"byte_end":174441,"line_start":1120,"line_end":1120,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":174442,"byte_end":174445,"line_start":1121,"line_end":1121,"column_start":1,"column_end":4}},{"value":"/ [ehframe]: https://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/ehframechpt.html","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":174446,"byte_end":174558,"line_start":1122,"line_end":1122,"column_start":1,"column_end":113}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":180280,"byte_end":180302,"line_start":1256,"line_end":1256,"column_start":12,"column_end":34},"name":"CommonInformationEntry","qualname":"::read::cfi::CommonInformationEntry","value":"CommonInformationEntry {  }","parent":null,"children":[{"krate":0,"index":6452},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6462}],"decl_id":null,"docs":" > A Common Information Entry holds information that is shared among many\n > Frame Description Entries. There is at least one CIE in every non-empty\n > `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ > A Common Information Entry holds information that is shared among many","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":180045,"byte_end":180121,"line_start":1252,"line_end":1252,"column_start":1,"column_end":77}},{"value":"/ > Frame Description Entries. There is at least one CIE in every non-empty","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":180122,"byte_end":180199,"line_start":1253,"line_end":1253,"column_start":1,"column_end":78}},{"value":"/ > `.debug_frame` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":180200,"byte_end":180229,"line_start":1254,"line_end":1254,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185289,"byte_end":185295,"line_start":1400,"line_end":1400,"column_start":12,"column_end":18},"name":"offset","qualname":"<CommonInformationEntry<R>>::offset","value":"pub fn offset(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this entry from the start of its containing section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185203,"byte_end":185277,"line_start":1399,"line_end":1399,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185409,"byte_end":185417,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"encoding","qualname":"<CommonInformationEntry<R>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this CIE.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this CIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185349,"byte_end":185397,"line_start":1404,"line_end":1404,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185664,"byte_end":185676,"line_start":1414,"line_end":1414,"column_start":12,"column_end":24},"name":"address_size","qualname":"<CommonInformationEntry<R>>::address_size","value":"pub fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this CIE.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this CIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185603,"byte_end":185652,"line_start":1413,"line_end":1413,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185895,"byte_end":185907,"line_start":1422,"line_end":1422,"column_start":12,"column_end":24},"name":"instructions","qualname":"<CommonInformationEntry<R>>::instructions","value":"pub fn instructions<'a, Section>(&Self, &'a Section, &'a BaseAddresses)\n-> CallFrameInstructionIter where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this CIE's initial instructions.","sig":null,"attributes":[{"value":"/ Iterate over this CIE's initial instructions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185729,"byte_end":185778,"line_start":1418,"line_end":1418,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185783,"byte_end":185786,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185791,"byte_end":185812,"line_start":1420,"line_end":1420,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185817,"byte_end":185883,"line_start":1421,"line_end":1421,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186746,"byte_end":186755,"line_start":1446,"line_end":1446,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<CommonInformationEntry<R>>::entry_len","value":"pub fn entry_len(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the CIE structure, not\n > including the length field itself (see Section 7.2.2). The size of the\n > length field plus the value of length must be an integral multiple of\n > the address size.\n","sig":null,"attributes":[{"value":"/ > A constant that gives the number of bytes of the CIE structure, not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186472,"byte_end":186545,"line_start":1442,"line_end":1442,"column_start":5,"column_end":78}},{"value":"/ > including the length field itself (see Section 7.2.2). The size of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186550,"byte_end":186626,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/ > length field plus the value of length must be an integral multiple of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186631,"byte_end":186706,"line_start":1444,"line_end":1444,"column_start":5,"column_end":80}},{"value":"/ > the address size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186711,"byte_end":186734,"line_start":1445,"line_end":1445,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186975,"byte_end":186982,"line_start":1452,"line_end":1452,"column_start":12,"column_end":19},"name":"version","qualname":"<CommonInformationEntry<R>>::version","value":"pub fn version(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" > A version number (see Section 7.23). This number is specific to the\n > call frame information and is independent of the DWARF version number.\n","sig":null,"attributes":[{"value":"/ > A version number (see Section 7.23). This number is specific to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186809,"byte_end":186882,"line_start":1450,"line_end":1450,"column_start":5,"column_end":78}},{"value":"/ > call frame information and is independent of the DWARF version number.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":186887,"byte_end":186963,"line_start":1451,"line_end":1451,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187196,"byte_end":187208,"line_start":1460,"line_end":1460,"column_start":12,"column_end":24},"name":"augmentation","qualname":"<CommonInformationEntry<R>>::augmentation","value":"pub fn augmentation(&Self) -> Option<&Augmentation>","parent":null,"children":[],"decl_id":null,"docs":" Get the augmentation data, if any exists.","sig":null,"attributes":[{"value":"/ Get the augmentation data, if any exists.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187030,"byte_end":187075,"line_start":1456,"line_end":1456,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187080,"byte_end":187083,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ The only augmentation understood by `gimli` is that which is defined by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187088,"byte_end":187163,"line_start":1458,"line_end":1458,"column_start":5,"column_end":80}},{"value":"/ `.eh_frame`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187168,"byte_end":187184,"line_start":1459,"line_end":1459,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187341,"byte_end":187349,"line_start":1465,"line_end":1465,"column_start":12,"column_end":20},"name":"has_lsda","qualname":"<CommonInformationEntry<R>>::has_lsda","value":"pub fn has_lsda(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs have a LSDA.\n","sig":null,"attributes":[{"value":"/ True if this CIE's FDEs have a LSDA.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187289,"byte_end":187329,"line_start":1464,"line_end":1464,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187516,"byte_end":187529,"line_start":1470,"line_end":1470,"column_start":12,"column_end":25},"name":"lsda_encoding","qualname":"<CommonInformationEntry<R>>::lsda_encoding","value":"pub fn lsda_encoding(&Self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the LSDA address for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding of the LSDA address for this CIE's FDEs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187440,"byte_end":187504,"line_start":1469,"line_end":1469,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187737,"byte_end":187762,"line_start":1476,"line_end":1476,"column_start":12,"column_end":37},"name":"personality_with_encoding","qualname":"<CommonInformationEntry<R>>::personality_with_encoding","value":"pub fn personality_with_encoding(&Self)\n-> Option<(constants::DwEhPe, Pointer)>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding and address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding and address of the personality routine handler","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187626,"byte_end":187696,"line_start":1474,"line_end":1474,"column_start":5,"column_end":75}},{"value":"/ for this CIE's FDEs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187701,"byte_end":187725,"line_start":1475,"line_end":1475,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187984,"byte_end":187995,"line_start":1482,"line_end":1482,"column_start":12,"column_end":23},"name":"personality","qualname":"<CommonInformationEntry<R>>::personality","value":"pub fn personality(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the address of the personality routine handler","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187886,"byte_end":187943,"line_start":1480,"line_end":1480,"column_start":5,"column_end":62}},{"value":"/ for this CIE's FDEs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":187948,"byte_end":187972,"line_start":1481,"line_end":1481,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188226,"byte_end":188246,"line_start":1490,"line_end":1490,"column_start":12,"column_end":32},"name":"fde_address_encoding","qualname":"<CommonInformationEntry<R>>::fde_address_encoding","value":"pub fn fde_address_encoding(&Self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the addresses for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding of the addresses for this CIE's FDEs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188153,"byte_end":188214,"line_start":1489,"line_end":1489,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188435,"byte_end":188455,"line_start":1495,"line_end":1495,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<CommonInformationEntry<R>>::is_signal_trampoline","value":"pub fn is_signal_trampoline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs are trampolines for signal handlers.\n","sig":null,"attributes":[{"value":"/ True if this CIE's FDEs are trampolines for signal handlers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188359,"byte_end":188423,"line_start":1494,"line_end":1494,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188671,"byte_end":188692,"line_start":1501,"line_end":1501,"column_start":12,"column_end":33},"name":"code_alignment_factor","qualname":"<CommonInformationEntry<R>>::code_alignment_factor","value":"pub fn code_alignment_factor(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of all advance location instructions\n > (see Section 6.4.2.1).\n","sig":null,"attributes":[{"value":"/ > A constant that is factored out of all advance location instructions","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188552,"byte_end":188626,"line_start":1499,"line_end":1499,"column_start":5,"column_end":79}},{"value":"/ > (see Section 6.4.2.1).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188631,"byte_end":188659,"line_start":1500,"line_end":1500,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188916,"byte_end":188937,"line_start":1507,"line_end":1507,"column_start":12,"column_end":33},"name":"data_alignment_factor","qualname":"<CommonInformationEntry<R>>::data_alignment_factor","value":"pub fn data_alignment_factor(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of certain offset instructions (see\n > below). The resulting value is (operand * data_alignment_factor).\n","sig":null,"attributes":[{"value":"/ > A constant that is factored out of certain offset instructions (see","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188755,"byte_end":188828,"line_start":1505,"line_end":1505,"column_start":5,"column_end":78}},{"value":"/ > below). The resulting value is (operand * data_alignment_factor).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":188833,"byte_end":188904,"line_start":1506,"line_end":1506,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189229,"byte_end":189252,"line_start":1514,"line_end":1514,"column_start":12,"column_end":35},"name":"return_address_register","qualname":"<CommonInformationEntry<R>>::return_address_register","value":"pub fn return_address_register(&Self) -> Register","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned ... constant that indicates which column in the rule\n > table represents the return address of the function. Note that this\n > column might not correspond to an actual machine register.\n","sig":null,"attributes":[{"value":"/ > An unsigned ... constant that indicates which column in the rule","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189000,"byte_end":189070,"line_start":1511,"line_end":1511,"column_start":5,"column_end":75}},{"value":"/ > table represents the return address of the function. Note that this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189075,"byte_end":189148,"line_start":1512,"line_end":1512,"column_start":5,"column_end":78}},{"value":"/ > column might not correspond to an actual machine register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189153,"byte_end":189217,"line_start":1513,"line_end":1513,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6486},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189481,"byte_end":189509,"line_start":1523,"line_end":1523,"column_start":12,"column_end":40},"name":"PartialFrameDescriptionEntry","qualname":"::read::cfi::PartialFrameDescriptionEntry","value":"PartialFrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6495},{"krate":0,"index":6496}],"decl_id":null,"docs":" A partially parsed `FrameDescriptionEntry`.","sig":null,"attributes":[{"value":"/ A partially parsed `FrameDescriptionEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189320,"byte_end":189367,"line_start":1519,"line_end":1519,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189368,"byte_end":189371,"line_start":1520,"line_end":1520,"column_start":1,"column_end":4}},{"value":"/ Fully parsing this FDE requires first parsing its CIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189372,"byte_end":189430,"line_start":1521,"line_end":1521,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":190556,"byte_end":190561,"line_start":1559,"line_end":1559,"column_start":12,"column_end":17},"name":"parse","qualname":"<PartialFrameDescriptionEntry>::parse","value":"pub fn parse<F>(&Self, F) -> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Section, &BaseAddresses, Section::Offset) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Fully parse this FDE.","sig":null,"attributes":[{"value":"/ Fully parse this FDE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":190314,"byte_end":190339,"line_start":1554,"line_end":1554,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":190344,"byte_end":190347,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ You must provide a function get its associated CIE (either by parsing it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":190352,"byte_end":190428,"line_start":1556,"line_end":1556,"column_start":5,"column_end":81}},{"value":"/ on demand, or looking it up in some table mapping offsets to CIEs that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":190433,"byte_end":190507,"line_start":1557,"line_end":1557,"column_start":5,"column_end":79}},{"value":"/ you've already parsed, etc.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":190512,"byte_end":190544,"line_start":1558,"line_end":1558,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6526},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":191134,"byte_end":191155,"line_start":1578,"line_end":1578,"column_start":12,"column_end":33},"name":"FrameDescriptionEntry","qualname":"::read::cfi::FrameDescriptionEntry","value":"FrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537}],"decl_id":null,"docs":" A `FrameDescriptionEntry` is a set of CFA instructions for an address range.\n","sig":null,"attributes":[{"value":"/ A `FrameDescriptionEntry` is a set of CFA instructions for an address range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":191003,"byte_end":191083,"line_start":1576,"line_end":1576,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195347,"byte_end":195351,"line_start":1703,"line_end":1703,"column_start":12,"column_end":16},"name":"rows","qualname":"<FrameDescriptionEntry<R>>::rows","value":"pub fn rows<'a, 'ctx, Section: UnwindSection<R>,\nA: UnwindContextStorage<R>>(&Self, &'a Section, &'a BaseAddresses,\n&'ctx mut UnwindContext<R, A>) -> Result<UnwindTable>","parent":null,"children":[],"decl_id":null,"docs":" Return the table of unwind information for this FDE.\n","sig":null,"attributes":[{"value":"/ Return the table of unwind information for this FDE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195265,"byte_end":195321,"line_start":1701,"line_end":1701,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195326,"byte_end":195335,"line_start":1702,"line_end":1702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196009,"byte_end":196032,"line_start":1718,"line_end":1718,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<FrameDescriptionEntry<R>>::unwind_info_for_address","value":"pub fn unwind_info_for_address<'ctx, Section: UnwindSection<R>,\nA: UnwindContextStorage<R>>(&Self, &Section, &BaseAddresses,\n&'ctx mut UnwindContext<R, A>, u64) -> Result<&'ctx UnwindTableRow<R, A>>","parent":null,"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"/ Find the frame unwind information for the given address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195651,"byte_end":195711,"line_start":1712,"line_end":1712,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195716,"byte_end":195719,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ If found, the unwind information is returned along with the reset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195724,"byte_end":195793,"line_start":1714,"line_end":1714,"column_start":5,"column_end":74}},{"value":"/ context in the form `Ok((unwind_info, context))`. If not found,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195798,"byte_end":195865,"line_start":1715,"line_end":1715,"column_start":5,"column_end":72}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned. If parsing or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195870,"byte_end":195944,"line_start":1716,"line_end":1716,"column_start":5,"column_end":79}},{"value":"/ CFI evaluation fails, the error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":195949,"byte_end":195997,"line_start":1717,"line_end":1717,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196864,"byte_end":196870,"line_start":1742,"line_end":1742,"column_start":12,"column_end":18},"name":"offset","qualname":"<FrameDescriptionEntry<R>>::offset","value":"pub fn offset(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this entry from the start of its containing section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196778,"byte_end":196852,"line_start":1741,"line_end":1741,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196974,"byte_end":196977,"line_start":1747,"line_end":1747,"column_start":12,"column_end":15},"name":"cie","qualname":"<FrameDescriptionEntry<R>>::cie","value":"pub fn cie(&Self) -> &CommonInformationEntry<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this FDE's CIE.\n","sig":null,"attributes":[{"value":"/ Get a reference to this FDE's CIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196924,"byte_end":196962,"line_start":1746,"line_end":1746,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197354,"byte_end":197363,"line_start":1755,"line_end":1755,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<FrameDescriptionEntry<R>>::entry_len","value":"pub fn entry_len(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the header and\n > instruction stream for this function, not including the length field\n > itself (see Section 7.2.2). The size of the length field plus the value\n > of length must be an integral multiple of the address size.\n","sig":null,"attributes":[{"value":"/ > A constant that gives the number of bytes of the header and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197046,"byte_end":197111,"line_start":1751,"line_end":1751,"column_start":5,"column_end":70}},{"value":"/ > instruction stream for this function, not including the length field","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197116,"byte_end":197190,"line_start":1752,"line_end":1752,"column_start":5,"column_end":79}},{"value":"/ > itself (see Section 7.2.2). The size of the length field plus the value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197195,"byte_end":197272,"line_start":1753,"line_end":1753,"column_start":5,"column_end":82}},{"value":"/ > of length must be an integral multiple of the address size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197277,"byte_end":197342,"line_start":1754,"line_end":1754,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197703,"byte_end":197715,"line_start":1766,"line_end":1766,"column_start":12,"column_end":24},"name":"instructions","qualname":"<FrameDescriptionEntry<R>>::instructions","value":"pub fn instructions<'a, Section>(&Self, &'a Section, &'a BaseAddresses)\n-> CallFrameInstructionIter where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this FDE's instructions.","sig":null,"attributes":[{"value":"/ Iterate over this FDE's instructions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197417,"byte_end":197458,"line_start":1759,"line_end":1759,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197463,"byte_end":197466,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ Will not include the CIE's initial instructions, if you want those do","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197471,"byte_end":197544,"line_start":1761,"line_end":1761,"column_start":5,"column_end":78}},{"value":"/ `fde.cie().instructions()` first.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197549,"byte_end":197586,"line_start":1762,"line_end":1762,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197591,"byte_end":197594,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197599,"byte_end":197620,"line_start":1764,"line_end":1764,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":197625,"byte_end":197691,"line_start":1765,"line_end":1765,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198414,"byte_end":198429,"line_start":1787,"line_end":1787,"column_start":12,"column_end":27},"name":"initial_address","qualname":"<FrameDescriptionEntry<R>>::initial_address","value":"pub fn initial_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The first address for which this entry has unwind information for.\n","sig":null,"attributes":[{"value":"/ The first address for which this entry has unwind information for.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198332,"byte_end":198402,"line_start":1786,"line_end":1786,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198589,"byte_end":198592,"line_start":1793,"line_end":1793,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameDescriptionEntry<R>>::len","value":"pub fn len(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes of instructions that this entry has unwind\n information for.\n","sig":null,"attributes":[{"value":"/ The number of bytes of instructions that this entry has unwind","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198486,"byte_end":198552,"line_start":1791,"line_end":1791,"column_start":5,"column_end":71}},{"value":"/ information for.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198557,"byte_end":198577,"line_start":1792,"line_end":1792,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198868,"byte_end":198876,"line_start":1802,"line_end":1802,"column_start":12,"column_end":20},"name":"contains","qualname":"<FrameDescriptionEntry<R>>::contains","value":"pub fn contains(&Self, u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given address is within this FDE, `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if the given address is within this FDE, `false`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198647,"byte_end":198713,"line_start":1797,"line_end":1797,"column_start":5,"column_end":71}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198718,"byte_end":198732,"line_start":1798,"line_end":1798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198737,"byte_end":198740,"line_start":1799,"line_end":1799,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `entry.initial_address() <= address <","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198745,"byte_end":198808,"line_start":1800,"line_end":1800,"column_start":5,"column_end":68}},{"value":"/ entry.initial_address() + entry.len()`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":198813,"byte_end":198856,"line_start":1801,"line_end":1801,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199143,"byte_end":199147,"line_start":1810,"line_end":1810,"column_start":12,"column_end":16},"name":"lsda","qualname":"<FrameDescriptionEntry<R>>::lsda","value":"pub fn lsda(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" The address of this FDE's language-specific data area (LSDA), if it has\n any.\n","sig":null,"attributes":[{"value":"/ The address of this FDE's language-specific data area (LSDA), if it has","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199043,"byte_end":199118,"line_start":1808,"line_end":1808,"column_start":5,"column_end":80}},{"value":"/ any.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199123,"byte_end":199131,"line_start":1809,"line_end":1809,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199345,"byte_end":199365,"line_start":1816,"line_end":1816,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<FrameDescriptionEntry<R>>::is_signal_trampoline","value":"pub fn is_signal_trampoline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this FDE's function is a trampoline for a signal handler.\n","sig":null,"attributes":[{"value":"/ Return true if this FDE's function is a trampoline for a signal handler.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199243,"byte_end":199319,"line_start":1814,"line_end":1814,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199324,"byte_end":199333,"line_start":1815,"line_end":1815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199680,"byte_end":199691,"line_start":1824,"line_end":1824,"column_start":12,"column_end":23},"name":"personality","qualname":"<FrameDescriptionEntry<R>>::personality","value":"pub fn personality(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the FDE's function's personality routine\n handler. The personality routine does language-specific clean up when\n unwinding the stack frames with the intent to not run them again.\n","sig":null,"attributes":[{"value":"/ Return the address of the FDE's function's personality routine","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199436,"byte_end":199502,"line_start":1820,"line_end":1820,"column_start":5,"column_end":71}},{"value":"/ handler. The personality routine does language-specific clean up when","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199507,"byte_end":199580,"line_start":1821,"line_end":1821,"column_start":5,"column_end":78}},{"value":"/ unwinding the stack frames with the intent to not run them again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199585,"byte_end":199654,"line_start":1822,"line_end":1822,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199659,"byte_end":199668,"line_start":1823,"line_end":1823,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201108,"byte_end":201128,"line_start":1868,"line_end":1868,"column_start":11,"column_end":31},"name":"UnwindContextStorage","qualname":"::read::cfi::UnwindContextStorage","value":"UnwindContextStorage<R: Reader>: Sized","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"decl_id":null,"docs":" Specification of what storage should be used for [`UnwindContext`].","sig":null,"attributes":[{"value":"/ Specification of what storage should be used for [`UnwindContext`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199762,"byte_end":199833,"line_start":1829,"line_end":1829,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":199834,"byte_end":199837,"line_start":1830,"line_end":1830,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200058,"byte_end":200061,"line_start":1838,"line_end":1838,"column_start":1,"column_end":4}},{"value":"/ If you need to avoid [`UnwindContext`] from allocating memory, e.g. for signal safety,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200062,"byte_end":200152,"line_start":1839,"line_end":1839,"column_start":1,"column_end":91}},{"value":"/ you can provide you own storage specification:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200153,"byte_end":200203,"line_start":1840,"line_end":1840,"column_start":1,"column_end":51}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200204,"byte_end":200222,"line_start":1841,"line_end":1841,"column_start":1,"column_end":19}},{"value":"/ # use gimli::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200223,"byte_end":200242,"line_start":1842,"line_end":1842,"column_start":1,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200243,"byte_end":200248,"line_start":1843,"line_end":1843,"column_start":1,"column_end":6}},{"value":"/ # fn foo<'a>(some_fde: gimli::FrameDescriptionEntry<gimli::EndianSlice<'a, gimli::LittleEndian>>)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200249,"byte_end":200350,"line_start":1844,"line_end":1844,"column_start":1,"column_end":102}},{"value":"/ #            -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200351,"byte_end":200390,"line_start":1845,"line_end":1845,"column_start":1,"column_end":40}},{"value":"/ # let eh_frame: gimli::EhFrame<_> = unreachable!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200391,"byte_end":200446,"line_start":1846,"line_end":1846,"column_start":1,"column_end":56}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200447,"byte_end":200482,"line_start":1847,"line_end":1847,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200483,"byte_end":200488,"line_start":1848,"line_end":1848,"column_start":1,"column_end":6}},{"value":"/ struct StoreOnStack;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200489,"byte_end":200513,"line_start":1849,"line_end":1849,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200514,"byte_end":200517,"line_start":1850,"line_end":1850,"column_start":1,"column_end":4}},{"value":"/ impl<R: Reader> UnwindContextStorage<R> for StoreOnStack {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200518,"byte_end":200580,"line_start":1851,"line_end":1851,"column_start":1,"column_end":63}},{"value":"/     type Rules = [(Register, RegisterRule<R>); 192];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200581,"byte_end":200637,"line_start":1852,"line_end":1852,"column_start":1,"column_end":57}},{"value":"/     type Stack = [UnwindTableRow<R, Self>; 4];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200638,"byte_end":200688,"line_start":1853,"line_end":1853,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200689,"byte_end":200694,"line_start":1854,"line_end":1854,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200695,"byte_end":200698,"line_start":1855,"line_end":1855,"column_start":1,"column_end":4}},{"value":"/ let mut ctx = UnwindContext::<_, StoreOnStack>::new_in();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200699,"byte_end":200760,"line_start":1856,"line_end":1856,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200761,"byte_end":200764,"line_start":1857,"line_end":1857,"column_start":1,"column_end":4}},{"value":"/ // Initialize the context by evaluating the CIE's initial instruction program,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200765,"byte_end":200847,"line_start":1858,"line_end":1858,"column_start":1,"column_end":83}},{"value":"/ // and generate the unwind table.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200848,"byte_end":200885,"line_start":1859,"line_end":1859,"column_start":1,"column_end":38}},{"value":"/ let mut table = some_fde.rows(&eh_frame, &bases, &mut ctx)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200886,"byte_end":200950,"line_start":1860,"line_end":1860,"column_start":1,"column_end":65}},{"value":"/ while let Some(row) = table.next_row()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200951,"byte_end":200996,"line_start":1861,"line_end":1861,"column_start":1,"column_end":46}},{"value":"/     // Do stuff with each row...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":200997,"byte_end":201033,"line_start":1862,"line_end":1862,"column_start":1,"column_end":37}},{"value":"/ #   let _ = row;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201034,"byte_end":201054,"line_start":1863,"line_end":1863,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201055,"byte_end":201060,"line_start":1864,"line_end":1864,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201061,"byte_end":201081,"line_start":1865,"line_end":1865,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201082,"byte_end":201089,"line_start":1866,"line_end":1866,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201090,"byte_end":201097,"line_start":1867,"line_end":1867,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201284,"byte_end":201289,"line_start":1872,"line_end":1872,"column_start":10,"column_end":15},"name":"Rules","qualname":"::read::cfi::UnwindContextStorage::Rules","value":"type Rules: ArrayLike<Item = (Register, RegisterRule<R>)>;","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" The storage used for register rules in a unwind table row.","sig":null,"attributes":[{"value":"/ The storage used for register rules in a unwind table row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201153,"byte_end":201215,"line_start":1869,"line_end":1869,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201220,"byte_end":201223,"line_start":1870,"line_end":1870,"column_start":5,"column_end":8}},{"value":"/ Note that this is nested within the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201228,"byte_end":201274,"line_start":1871,"line_end":1871,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201401,"byte_end":201406,"line_start":1875,"line_end":1875,"column_start":10,"column_end":15},"name":"Stack","qualname":"::read::cfi::UnwindContextStorage::Stack","value":"type Stack: ArrayLike<Item = UnwindTableRow<R, Self>>;","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" The storage used for unwind table row stack.\n","sig":null,"attributes":[{"value":"/ The storage used for unwind table row stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201343,"byte_end":201391,"line_start":1874,"line_end":1874,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6561},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202735,"byte_end":202748,"line_start":1914,"line_end":1914,"column_start":12,"column_end":25},"name":"UnwindContext","qualname":"::read::cfi::UnwindContext","value":"UnwindContext {  }","parent":null,"children":[{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"decl_id":null,"docs":" Common context needed when evaluating the call frame unwinding information.","sig":null,"attributes":[{"value":"/ Common context needed when evaluating the call frame unwinding information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201702,"byte_end":201781,"line_start":1887,"line_end":1887,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201782,"byte_end":201785,"line_start":1888,"line_end":1888,"column_start":1,"column_end":4}},{"value":"/ This structure can be large so it is advisable to place it on the heap.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201786,"byte_end":201861,"line_start":1889,"line_end":1889,"column_start":1,"column_end":76}},{"value":"/ To avoid re-allocating the context multiple times when evaluating multiple","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201862,"byte_end":201940,"line_start":1890,"line_end":1890,"column_start":1,"column_end":79}},{"value":"/ CFI programs, it can be reused.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201941,"byte_end":201976,"line_start":1891,"line_end":1891,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201977,"byte_end":201980,"line_start":1892,"line_end":1892,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201981,"byte_end":201988,"line_start":1893,"line_end":1893,"column_start":1,"column_end":8}},{"value":"/ use gimli::{UnwindContext, UnwindTable};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201989,"byte_end":202033,"line_start":1894,"line_end":1894,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202034,"byte_end":202037,"line_start":1895,"line_end":1895,"column_start":1,"column_end":4}},{"value":"/ # fn foo<'a>(some_fde: gimli::FrameDescriptionEntry<gimli::EndianSlice<'a, gimli::LittleEndian>>)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202038,"byte_end":202139,"line_start":1896,"line_end":1896,"column_start":1,"column_end":102}},{"value":"/ #            -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202140,"byte_end":202179,"line_start":1897,"line_end":1897,"column_start":1,"column_end":40}},{"value":"/ # let eh_frame: gimli::EhFrame<_> = unreachable!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202180,"byte_end":202235,"line_start":1898,"line_end":1898,"column_start":1,"column_end":56}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202236,"byte_end":202271,"line_start":1899,"line_end":1899,"column_start":1,"column_end":36}},{"value":"/ // An uninitialized context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202272,"byte_end":202304,"line_start":1900,"line_end":1900,"column_start":1,"column_end":33}},{"value":"/ let mut ctx = Box::new(UnwindContext::new());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202305,"byte_end":202354,"line_start":1901,"line_end":1901,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202355,"byte_end":202358,"line_start":1902,"line_end":1902,"column_start":1,"column_end":4}},{"value":"/ // Initialize the context by evaluating the CIE's initial instruction program,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202359,"byte_end":202441,"line_start":1903,"line_end":1903,"column_start":1,"column_end":83}},{"value":"/ // and generate the unwind table.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202442,"byte_end":202479,"line_start":1904,"line_end":1904,"column_start":1,"column_end":38}},{"value":"/ let mut table = some_fde.rows(&eh_frame, &bases, &mut ctx)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202480,"byte_end":202544,"line_start":1905,"line_end":1905,"column_start":1,"column_end":65}},{"value":"/ while let Some(row) = table.next_row()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202545,"byte_end":202590,"line_start":1906,"line_end":1906,"column_start":1,"column_end":46}},{"value":"/     // Do stuff with each row...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202591,"byte_end":202627,"line_start":1907,"line_end":1907,"column_start":1,"column_end":37}},{"value":"/ #   let _ = row;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202628,"byte_end":202648,"line_start":1908,"line_end":1908,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202649,"byte_end":202654,"line_start":1909,"line_end":1909,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202655,"byte_end":202675,"line_start":1910,"line_end":1910,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202676,"byte_end":202683,"line_start":1911,"line_end":1911,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":202684,"byte_end":202691,"line_start":1912,"line_end":1912,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204334,"byte_end":204337,"line_start":1952,"line_end":1952,"column_start":12,"column_end":15},"name":"new","qualname":"<UnwindContext<R>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new call frame unwinding context.\n","sig":null,"attributes":[{"value":"/ Construct a new call frame unwinding context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204273,"byte_end":204322,"line_start":1951,"line_end":1951,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204697,"byte_end":204703,"line_start":1963,"line_end":1963,"column_start":12,"column_end":18},"name":"new_in","qualname":"<UnwindContext<R, A>>::new_in","value":"pub fn new_in() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new call frame unwinding context.\n","sig":null,"attributes":[{"value":"/ Construct a new call frame unwinding context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204636,"byte_end":204685,"line_start":1962,"line_end":1962,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6586},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210829,"byte_end":210840,"line_start":2137,"line_end":2137,"column_start":12,"column_end":23},"name":"UnwindTable","qualname":"::read::cfi::UnwindTable","value":"UnwindTable {  }","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":6592},{"krate":0,"index":6593},{"krate":0,"index":6594},{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6598}],"decl_id":null,"docs":" The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s\n `CallFrameInstruction` program, yielding the each row one at a time.","sig":null,"attributes":[{"value":"/ The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208122,"byte_end":208193,"line_start":2080,"line_end":2080,"column_start":1,"column_end":72}},{"value":"/ `CallFrameInstruction` program, yielding the each row one at a time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208194,"byte_end":208266,"line_start":2081,"line_end":2081,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208267,"byte_end":208270,"line_start":2082,"line_end":2082,"column_start":1,"column_end":4}},{"value":"/ > 6.4.1 Structure of Call Frame Information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208271,"byte_end":208318,"line_start":2083,"line_end":2083,"column_start":1,"column_end":48}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208319,"byte_end":208324,"line_start":2084,"line_end":2084,"column_start":1,"column_end":6}},{"value":"/ > DWARF supports virtual unwinding by defining an architecture independent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208325,"byte_end":208403,"line_start":2085,"line_end":2085,"column_start":1,"column_end":79}},{"value":"/ > basis for recording how procedures save and restore registers during their","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208404,"byte_end":208484,"line_start":2086,"line_end":2086,"column_start":1,"column_end":81}},{"value":"/ > lifetimes. This basis must be augmented on some machines with specific","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208485,"byte_end":208561,"line_start":2087,"line_end":2087,"column_start":1,"column_end":77}},{"value":"/ > information that is defined by an architecture specific ABI authoring","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208562,"byte_end":208637,"line_start":2088,"line_end":2088,"column_start":1,"column_end":76}},{"value":"/ > committee, a hardware vendor, or a compiler producer. The body defining a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208638,"byte_end":208717,"line_start":2089,"line_end":2089,"column_start":1,"column_end":80}},{"value":"/ > specific augmentation is referred to below as the “augmenter.”","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208718,"byte_end":208790,"line_start":2090,"line_end":2090,"column_start":1,"column_end":69}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208791,"byte_end":208796,"line_start":2091,"line_end":2091,"column_start":1,"column_end":6}},{"value":"/ > Abstractly, this mechanism describes a very large table that has the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208797,"byte_end":208871,"line_start":2092,"line_end":2092,"column_start":1,"column_end":75}},{"value":"/ > following structure:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208872,"byte_end":208898,"line_start":2093,"line_end":2093,"column_start":1,"column_end":27}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208899,"byte_end":208904,"line_start":2094,"line_end":2094,"column_start":1,"column_end":6}},{"value":"/ > <table>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208905,"byte_end":208918,"line_start":2095,"line_end":2095,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208919,"byte_end":208931,"line_start":2096,"line_end":2096,"column_start":1,"column_end":13}},{"value":"/ >     <th>LOC</th><th>CFA</th><th>R0</th><th>R1</th><td>...</td><th>RN</th>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":208932,"byte_end":209011,"line_start":2097,"line_end":2097,"column_start":1,"column_end":80}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209012,"byte_end":209025,"line_start":2098,"line_end":2098,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209026,"byte_end":209038,"line_start":2099,"line_end":2099,"column_start":1,"column_end":13}},{"value":"/ >     <th>L0</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209039,"byte_end":209116,"line_start":2100,"line_end":2100,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209117,"byte_end":209130,"line_start":2101,"line_end":2101,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209131,"byte_end":209143,"line_start":2102,"line_end":2102,"column_start":1,"column_end":13}},{"value":"/ >     <th>L1</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209144,"byte_end":209221,"line_start":2103,"line_end":2103,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209222,"byte_end":209235,"line_start":2104,"line_end":2104,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209236,"byte_end":209248,"line_start":2105,"line_end":2105,"column_start":1,"column_end":13}},{"value":"/ >     <td>...</td><td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209249,"byte_end":209326,"line_start":2106,"line_end":2106,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209327,"byte_end":209340,"line_start":2107,"line_end":2107,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209341,"byte_end":209353,"line_start":2108,"line_end":2108,"column_start":1,"column_end":13}},{"value":"/ >     <th>LN</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209354,"byte_end":209431,"line_start":2109,"line_end":2109,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209432,"byte_end":209445,"line_start":2110,"line_end":2110,"column_start":1,"column_end":14}},{"value":"/ > </table>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209446,"byte_end":209460,"line_start":2111,"line_end":2111,"column_start":1,"column_end":15}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209461,"byte_end":209466,"line_start":2112,"line_end":2112,"column_start":1,"column_end":6}},{"value":"/ > The first column indicates an address for every location that contains code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209467,"byte_end":209548,"line_start":2113,"line_end":2113,"column_start":1,"column_end":82}},{"value":"/ > in a program. (In shared objects, this is an object-relative offset.) The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209549,"byte_end":209628,"line_start":2114,"line_end":2114,"column_start":1,"column_end":80}},{"value":"/ > remaining columns contain virtual unwinding rules that are associated with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209629,"byte_end":209709,"line_start":2115,"line_end":2115,"column_start":1,"column_end":81}},{"value":"/ > the indicated location.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209710,"byte_end":209739,"line_start":2116,"line_end":2116,"column_start":1,"column_end":30}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209740,"byte_end":209745,"line_start":2117,"line_end":2117,"column_start":1,"column_end":6}},{"value":"/ > The CFA column defines the rule which computes the Canonical Frame Address","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209746,"byte_end":209826,"line_start":2118,"line_end":2118,"column_start":1,"column_end":81}},{"value":"/ > value; it may be either a register and a signed offset that are added","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209827,"byte_end":209902,"line_start":2119,"line_end":2119,"column_start":1,"column_end":76}},{"value":"/ > together, or a DWARF expression that is evaluated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209903,"byte_end":209959,"line_start":2120,"line_end":2120,"column_start":1,"column_end":57}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209960,"byte_end":209965,"line_start":2121,"line_end":2121,"column_start":1,"column_end":6}},{"value":"/ > The remaining columns are labeled by register number. This includes some","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":209966,"byte_end":210044,"line_start":2122,"line_end":2122,"column_start":1,"column_end":79}},{"value":"/ > registers that have special designation on some architectures such as the PC","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210045,"byte_end":210127,"line_start":2123,"line_end":2123,"column_start":1,"column_end":83}},{"value":"/ > and the stack pointer register. (The actual mapping of registers for a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210128,"byte_end":210204,"line_start":2124,"line_end":2124,"column_start":1,"column_end":77}},{"value":"/ > particular architecture is defined by the augmenter.) The register columns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210205,"byte_end":210285,"line_start":2125,"line_end":2125,"column_start":1,"column_end":81}},{"value":"/ > contain rules that describe whether a given register has been saved and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210286,"byte_end":210367,"line_start":2126,"line_end":2126,"column_start":1,"column_end":82}},{"value":"/ > rule to find the value for the register in the previous frame.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210368,"byte_end":210436,"line_start":2127,"line_end":2127,"column_start":1,"column_end":69}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210437,"byte_end":210442,"line_start":2128,"line_end":2128,"column_start":1,"column_end":6}},{"value":"/ > ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210443,"byte_end":210452,"line_start":2129,"line_end":2129,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210453,"byte_end":210458,"line_start":2130,"line_end":2130,"column_start":1,"column_end":6}},{"value":"/ > This table would be extremely large if actually constructed as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210459,"byte_end":210527,"line_start":2131,"line_end":2131,"column_start":1,"column_end":69}},{"value":"/ > described. Most of the entries at any point in the table are identical to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210528,"byte_end":210607,"line_start":2132,"line_end":2132,"column_start":1,"column_end":80}},{"value":"/ > the ones above them. The whole table can be represented quite compactly by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210608,"byte_end":210688,"line_start":2133,"line_end":2133,"column_start":1,"column_end":81}},{"value":"/ > recording just the differences starting at the beginning address of each","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210689,"byte_end":210767,"line_start":2134,"line_end":2134,"column_start":1,"column_end":79}},{"value":"/ > subroutine in the program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":210768,"byte_end":210800,"line_start":2135,"line_end":2135,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":211548,"byte_end":211551,"line_start":2155,"line_end":2155,"column_start":12,"column_end":15},"name":"new","qualname":"<UnwindTable>::new","value":"pub fn new<Section: UnwindSection<R>>(&'a Section, &'a BaseAddresses,\n&'ctx mut UnwindContext<R, A>, &FrameDescriptionEntry<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnwindTable` for the given\n `FrameDescriptionEntry`'s CFI unwinding program.\n","sig":null,"attributes":[{"value":"/ Construct a new `UnwindTable` for the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":211432,"byte_end":211479,"line_start":2153,"line_end":2153,"column_start":5,"column_end":52}},{"value":"/ `FrameDescriptionEntry`'s CFI unwinding program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":211484,"byte_end":211536,"line_start":2154,"line_end":2154,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":213520,"byte_end":213528,"line_start":2208,"line_end":2208,"column_start":12,"column_end":20},"name":"next_row","qualname":"<UnwindTable>::next_row","value":"pub fn next_row(&mut Self) -> Result<Option<&UnwindTableRow<R, A>>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate call frame instructions until the next row of the table is\n completed, and return it.","sig":null,"attributes":[{"value":"/ Evaluate call frame instructions until the next row of the table is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":213264,"byte_end":213335,"line_start":2203,"line_end":2203,"column_start":5,"column_end":76}},{"value":"/ completed, and return it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":213340,"byte_end":213369,"line_start":2204,"line_end":2204,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":213374,"byte_end":213377,"line_start":2205,"line_end":2205,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, this cannot be used with `FallibleIterator` because of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":213382,"byte_end":213455,"line_start":2206,"line_end":2206,"column_start":5,"column_end":78}},{"value":"/ the restricted lifetime of the yielded item.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":213460,"byte_end":213508,"line_start":2207,"line_end":2207,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":214605,"byte_end":214621,"line_start":2241,"line_end":2241,"column_start":12,"column_end":28},"name":"into_current_row","qualname":"<UnwindTable>::into_current_row","value":"pub fn into_current_row(Self) -> Option<&'ctx UnwindTableRow<R, A>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current row with the lifetime of the context.\n","sig":null,"attributes":[{"value":"/ Returns the current row with the lifetime of the context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":214532,"byte_end":214593,"line_start":2240,"line_end":2240,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6605},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226384,"byte_end":226400,"line_start":2576,"line_end":2576,"column_start":12,"column_end":28},"name":"RegisterRuleIter","qualname":"::read::cfi::RegisterRuleIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unordered iterator for register rules.\n","sig":null,"attributes":[{"value":"/ An unordered iterator for register rules.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226303,"byte_end":226348,"line_start":2574,"line_end":2574,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6618},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226872,"byte_end":226886,"line_start":2591,"line_end":2591,"column_start":12,"column_end":26},"name":"UnwindTableRow","qualname":"::read::cfi::UnwindTableRow","value":"UnwindTableRow {  }","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625}],"decl_id":null,"docs":" A row in the virtual unwind table that describes how to find the values of\n the registers in the *previous* frame for a range of PC addresses.\n","sig":null,"attributes":[{"value":"/ A row in the virtual unwind table that describes how to find the values of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226686,"byte_end":226764,"line_start":2588,"line_end":2588,"column_start":1,"column_end":79}},{"value":"/ the registers in the *previous* frame for a range of PC addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226765,"byte_end":226835,"line_start":2589,"line_end":2589,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228556,"byte_end":228569,"line_start":2644,"line_end":2644,"column_start":12,"column_end":25},"name":"start_address","qualname":"<UnwindTableRow<R, S>>::start_address","value":"pub fn start_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting PC address that this row applies to.\n","sig":null,"attributes":[{"value":"/ Get the starting PC address that this row applies to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228487,"byte_end":228544,"line_start":2643,"line_end":2643,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228991,"byte_end":229002,"line_start":2655,"line_end":2655,"column_start":12,"column_end":23},"name":"end_address","qualname":"<UnwindTableRow<R, S>>::end_address","value":"pub fn end_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the end PC address where this row's register rules become\n unapplicable.","sig":null,"attributes":[{"value":"/ Get the end PC address where this row's register rules become","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228624,"byte_end":228689,"line_start":2648,"line_end":2648,"column_start":5,"column_end":70}},{"value":"/ unapplicable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228694,"byte_end":228711,"line_start":2649,"line_end":2649,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228716,"byte_end":228719,"line_start":2650,"line_end":2650,"column_start":5,"column_end":8}},{"value":"/ In other words, this row describes how to recover the last frame's","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228724,"byte_end":228794,"line_start":2651,"line_end":2651,"column_start":5,"column_end":75}},{"value":"/ registers for all PCs where `row.start_address() <= PC <","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228799,"byte_end":228859,"line_start":2652,"line_end":2652,"column_start":5,"column_end":65}},{"value":"/ row.end_address()`. This row does NOT describe how to recover registers","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228864,"byte_end":228939,"line_start":2653,"line_end":2653,"column_start":5,"column_end":80}},{"value":"/ when `PC == row.end_address()`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228944,"byte_end":228979,"line_start":2654,"line_end":2654,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229170,"byte_end":229178,"line_start":2661,"line_end":2661,"column_start":12,"column_end":20},"name":"contains","qualname":"<UnwindTableRow<R, S>>::contains","value":"pub fn contains(&Self, u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given `address` is within this row's address range,\n `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Return `true` if the given `address` is within this row's address range,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229055,"byte_end":229131,"line_start":2659,"line_end":2659,"column_start":5,"column_end":81}},{"value":"/ `false` otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229136,"byte_end":229158,"line_start":2660,"line_end":2660,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229497,"byte_end":229512,"line_start":2669,"line_end":2669,"column_start":12,"column_end":27},"name":"saved_args_size","qualname":"<UnwindTableRow<R, S>>::saved_args_size","value":"pub fn saved_args_size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of args currently on the stack.","sig":null,"attributes":[{"value":"/ Returns the amount of args currently on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229289,"byte_end":229343,"line_start":2665,"line_end":2665,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229348,"byte_end":229351,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ When unwinding, if the personality function requested a change in IP,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229356,"byte_end":229429,"line_start":2667,"line_end":2667,"column_start":5,"column_end":78}},{"value":"/ the SP needs to be adjusted by saved_args_size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229434,"byte_end":229485,"line_start":2668,"line_end":2668,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229650,"byte_end":229653,"line_start":2674,"line_end":2674,"column_start":12,"column_end":15},"name":"cfa","qualname":"<UnwindTableRow<R, S>>::cfa","value":"pub fn cfa(&Self) -> &CfaRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical frame address (CFA) recovery rule for this row.\n","sig":null,"attributes":[{"value":"/ Get the canonical frame address (CFA) recovery rule for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229569,"byte_end":229638,"line_start":2673,"line_end":2673,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233407,"byte_end":233415,"line_start":2722,"line_end":2722,"column_start":12,"column_end":20},"name":"register","qualname":"<UnwindTableRow<R, S>>::register","value":"pub fn register(&Self, Register) -> RegisterRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the register recovery rule for the given register number.","sig":null,"attributes":[{"value":"/ Get the register recovery rule for the given register number.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229707,"byte_end":229772,"line_start":2678,"line_end":2678,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229777,"byte_end":229780,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ The register number mapping is architecture dependent. For example, in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229785,"byte_end":229859,"line_start":2680,"line_end":2680,"column_start":5,"column_end":79}},{"value":"/ the x86-64 ABI the register number mapping is defined in Figure 3.36:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229864,"byte_end":229937,"line_start":2681,"line_end":2681,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229942,"byte_end":229945,"line_start":2682,"line_end":2682,"column_start":5,"column_end":8}},{"value":"/ > Figure 3.36: DWARF Register Number Mapping","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":229950,"byte_end":229998,"line_start":2683,"line_end":2683,"column_start":5,"column_end":53}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230003,"byte_end":230008,"line_start":2684,"line_end":2684,"column_start":5,"column_end":10}},{"value":"/ > <table>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230013,"byte_end":230026,"line_start":2685,"line_end":2685,"column_start":5,"column_end":18}},{"value":"/ >   <tr><th>Register Name</th>                    <th>Number</th>  <th>Abbreviation</th></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230031,"byte_end":230128,"line_start":2686,"line_end":2686,"column_start":5,"column_end":102}},{"value":"/ >   <tr><td>General Purpose Register RAX</td>     <td>0</td>       <td>%rax</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230133,"byte_end":230222,"line_start":2687,"line_end":2687,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RDX</td>     <td>1</td>       <td>%rdx</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230227,"byte_end":230316,"line_start":2688,"line_end":2688,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RCX</td>     <td>2</td>       <td>%rcx</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230321,"byte_end":230410,"line_start":2689,"line_end":2689,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RBX</td>     <td>3</td>       <td>%rbx</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230415,"byte_end":230504,"line_start":2690,"line_end":2690,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RSI</td>     <td>4</td>       <td>%rsi</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230509,"byte_end":230598,"line_start":2691,"line_end":2691,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RDI</td>     <td>5</td>       <td>%rdi</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230603,"byte_end":230692,"line_start":2692,"line_end":2692,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RBP</td>     <td>6</td>       <td>%rbp</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230697,"byte_end":230786,"line_start":2693,"line_end":2693,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Stack Pointer Register RSP</td>       <td>7</td>       <td>%rsp</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230791,"byte_end":230880,"line_start":2694,"line_end":2694,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Extended Integer Registers 8-15</td>  <td>8-15</td>    <td>%r8-%r15</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230885,"byte_end":230978,"line_start":2695,"line_end":2695,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>Return Address RA</td>                <td>16</td>      <td></td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":230983,"byte_end":231068,"line_start":2696,"line_end":2696,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Vector Registers 0–7</td>             <td>17-24</td>   <td>%xmm0–%xmm7</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231073,"byte_end":231173,"line_start":2697,"line_end":2697,"column_start":5,"column_end":101}},{"value":"/ >   <tr><td>Extended Vector Registers 8–15</td>   <td>25-32</td>   <td>%xmm8–%xmm15</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231178,"byte_end":231279,"line_start":2698,"line_end":2698,"column_start":5,"column_end":102}},{"value":"/ >   <tr><td>Floating Point Registers 0–7</td>     <td>33-40</td>   <td>%st0–%st7</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231284,"byte_end":231382,"line_start":2699,"line_end":2699,"column_start":5,"column_end":99}},{"value":"/ >   <tr><td>MMX Registers 0–7</td>                <td>41-48</td>   <td>%mm0–%mm7</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231387,"byte_end":231485,"line_start":2700,"line_end":2700,"column_start":5,"column_end":99}},{"value":"/ >   <tr><td>Flag Register</td>                    <td>49</td>      <td>%rFLAGS</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231490,"byte_end":231582,"line_start":2701,"line_end":2701,"column_start":5,"column_end":97}},{"value":"/ >   <tr><td>Segment Register ES</td>              <td>50</td>      <td>%es</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231587,"byte_end":231675,"line_start":2702,"line_end":2702,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register CS</td>              <td>51</td>      <td>%cs</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231680,"byte_end":231768,"line_start":2703,"line_end":2703,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register SS</td>              <td>52</td>      <td>%ss</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231773,"byte_end":231861,"line_start":2704,"line_end":2704,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register DS</td>              <td>53</td>      <td>%ds</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231866,"byte_end":231954,"line_start":2705,"line_end":2705,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register FS</td>              <td>54</td>      <td>%fs</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":231959,"byte_end":232047,"line_start":2706,"line_end":2706,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register GS</td>              <td>55</td>      <td>%gs</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232052,"byte_end":232140,"line_start":2707,"line_end":2707,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Reserved</td>                         <td>56-57</td>   <td></td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232145,"byte_end":232230,"line_start":2708,"line_end":2708,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>FS Base address</td>                  <td>58</td>      <td>%fs.base</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232235,"byte_end":232328,"line_start":2709,"line_end":2709,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>GS Base address</td>                  <td>59</td>      <td>%gs.base</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232333,"byte_end":232426,"line_start":2710,"line_end":2710,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>Reserved</td>                         <td>60-61</td>   <td></td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232431,"byte_end":232516,"line_start":2711,"line_end":2711,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Task Register</td>                    <td>62</td>      <td>%tr</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232521,"byte_end":232609,"line_start":2712,"line_end":2712,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>LDT Register</td>                     <td>63</td>      <td>%ldtr</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232614,"byte_end":232704,"line_start":2713,"line_end":2713,"column_start":5,"column_end":95}},{"value":"/ >   <tr><td>128-bit Media Control and Status</td> <td>64</td>      <td>%mxcsr</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232709,"byte_end":232800,"line_start":2714,"line_end":2714,"column_start":5,"column_end":96}},{"value":"/ >   <tr><td>x87 Control Word</td>                 <td>65</td>      <td>%fcw</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232805,"byte_end":232894,"line_start":2715,"line_end":2715,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>x87 Status Word</td>                  <td>66</td>      <td>%fsw</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232899,"byte_end":232988,"line_start":2716,"line_end":2716,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Upper Vector Registers 16–31</td>     <td>67-82</td>   <td>%xmm16–%xmm31</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":232993,"byte_end":233095,"line_start":2717,"line_end":2717,"column_start":5,"column_end":103}},{"value":"/ >   <tr><td>Reserved</td>                         <td>83-117</td>  <td></td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233100,"byte_end":233185,"line_start":2718,"line_end":2718,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Vector Mask Registers 0–7</td>        <td>118-125</td> <td>%k0–%k7</td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233190,"byte_end":233286,"line_start":2719,"line_end":2719,"column_start":5,"column_end":97}},{"value":"/ >   <tr><td>Reserved</td>                         <td>126-129</td> <td></td></tr>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233291,"byte_end":233376,"line_start":2720,"line_end":2720,"column_start":5,"column_end":90}},{"value":"/ > </table>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233381,"byte_end":233395,"line_start":2721,"line_end":2721,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234127,"byte_end":234136,"line_start":2741,"line_end":2741,"column_start":12,"column_end":21},"name":"registers","qualname":"<UnwindTableRow<R, S>>::registers","value":"pub fn registers(&Self) -> RegisterRuleIter<, R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all defined register `(number, rule)` pairs.","sig":null,"attributes":[{"value":"/ Iterate over all defined register `(number, rule)` pairs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233512,"byte_end":233573,"line_start":2726,"line_end":2726,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233578,"byte_end":233581,"line_start":2727,"line_end":2727,"column_start":5,"column_end":8}},{"value":"/ The rules are not iterated in any guaranteed order. Any register that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233586,"byte_end":233659,"line_start":2728,"line_end":2728,"column_start":5,"column_end":78}},{"value":"/ does not make an appearance in the iterator implicitly has the rule","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233664,"byte_end":233735,"line_start":2729,"line_end":2729,"column_start":5,"column_end":76}},{"value":"/ `RegisterRule::Undefined`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233740,"byte_end":233770,"line_start":2730,"line_end":2730,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233775,"byte_end":233778,"line_start":2731,"line_end":2731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233783,"byte_end":233790,"line_start":2732,"line_end":2732,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{EndianSlice, LittleEndian, UnwindTableRow};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233795,"byte_end":233856,"line_start":2733,"line_end":2733,"column_start":5,"column_end":66}},{"value":"/ # fn foo<'input>(unwind_table_row: UnwindTableRow<EndianSlice<'input, LittleEndian>>) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233861,"byte_end":233952,"line_start":2734,"line_end":2734,"column_start":5,"column_end":96}},{"value":"/ for &(register, ref rule) in unwind_table_row.registers() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":233957,"byte_end":234020,"line_start":2735,"line_end":2735,"column_start":5,"column_end":68}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234025,"byte_end":234039,"line_start":2736,"line_end":2736,"column_start":5,"column_end":19}},{"value":"/     # drop(register); drop(rule);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234044,"byte_end":234081,"line_start":2737,"line_end":2737,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234086,"byte_end":234091,"line_start":2738,"line_end":2738,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234096,"byte_end":234103,"line_start":2739,"line_end":2739,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234108,"byte_end":234115,"line_start":2740,"line_end":2740,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6643},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234400,"byte_end":234417,"line_start":2750,"line_end":2750,"column_start":5,"column_end":22},"name":"RegisterAndOffset","qualname":"::read::cfi::CfaRule::RegisterAndOffset","value":"CfaRule::RegisterAndOffset { register, offset }","parent":{"krate":0,"index":6641},"children":[],"decl_id":null,"docs":" The CFA is given offset from the given register's value.\n","sig":null,"attributes":[{"value":"/ The CFA is given offset from the given register's value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234335,"byte_end":234395,"line_start":2749,"line_end":2749,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6646},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234682,"byte_end":234692,"line_start":2758,"line_end":2758,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CfaRule::Expression","value":"CfaRule::Expression(Expression<R>)","parent":{"krate":0,"index":6641},"children":[],"decl_id":null,"docs":" The CFA is obtained by evaluating this `Reader` as a DWARF expression\n program.\n","sig":null,"attributes":[{"value":"/ The CFA is obtained by evaluating this `Reader` as a DWARF expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234587,"byte_end":234660,"line_start":2756,"line_end":2756,"column_start":5,"column_end":78}},{"value":"/ program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234665,"byte_end":234677,"line_start":2757,"line_end":2757,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6641},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234310,"byte_end":234317,"line_start":2748,"line_end":2748,"column_start":10,"column_end":17},"name":"CfaRule","qualname":"::read::cfi::CfaRule","value":"pub enum CfaRule<R: Reader> {\n    RegisterAndOffset {\n            register: Register,\n            offset: i64,\n        },\n    Expression(Expression<R>),\n}","parent":null,"children":[{"krate":0,"index":6643},{"krate":0,"index":6646}],"decl_id":null,"docs":" The canonical frame address (CFA) recovery rules.\n","sig":null,"attributes":[{"value":"/ The canonical frame address (CFA) recovery rules.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234208,"byte_end":234261,"line_start":2746,"line_end":2746,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6668},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235656,"byte_end":235665,"line_start":2791,"line_end":2791,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::RegisterRule::Undefined","value":"RegisterRule::Undefined","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" > A register that has this rule has no recoverable value in the previous\n > frame. (By convention, it is not preserved by a callee.)\n","sig":null,"attributes":[{"value":"/ > A register that has this rule has no recoverable value in the previous","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235508,"byte_end":235584,"line_start":2789,"line_end":2789,"column_start":5,"column_end":81}},{"value":"/ > frame. (By convention, it is not preserved by a callee.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235589,"byte_end":235651,"line_start":2790,"line_end":2790,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6670},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235847,"byte_end":235856,"line_start":2796,"line_end":2796,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::RegisterRule::SameValue","value":"RegisterRule::SameValue","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" > This register has not been modified from the previous frame. (By\n > convention, it is preserved by the callee, but the callee has not\n > modified it.)\n","sig":null,"attributes":[{"value":"/ > This register has not been modified from the previous frame. (By","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235672,"byte_end":235742,"line_start":2793,"line_end":2793,"column_start":5,"column_end":75}},{"value":"/ > convention, it is preserved by the callee, but the callee has not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235747,"byte_end":235818,"line_start":2794,"line_end":2794,"column_start":5,"column_end":76}},{"value":"/ > modified it.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235823,"byte_end":235842,"line_start":2795,"line_end":2795,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6672},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236008,"byte_end":236014,"line_start":2800,"line_end":2800,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::RegisterRule::Offset","value":"RegisterRule::Offset(i64)","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" \"The previous value of this register is saved at the address CFA+N where\n CFA is the current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is saved at the address CFA+N where","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235863,"byte_end":235939,"line_start":2798,"line_end":2798,"column_start":5,"column_end":81}},{"value":"/ CFA is the current CFA value and N is a signed offset.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235944,"byte_end":236003,"line_start":2799,"line_end":2799,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6675},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236160,"byte_end":236169,"line_start":2804,"line_end":2804,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::RegisterRule::ValOffset","value":"RegisterRule::ValOffset(i64)","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value CFA+N where CFA is the\n current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is the value CFA+N where CFA is the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236026,"byte_end":236102,"line_start":2802,"line_end":2802,"column_start":5,"column_end":81}},{"value":"/ current CFA value and N is a signed offset.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236107,"byte_end":236155,"line_start":2803,"line_end":2803,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6678},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236277,"byte_end":236285,"line_start":2808,"line_end":2808,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::RegisterRule::Register","value":"RegisterRule::Register(Register)","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" \"The previous value of this register is stored in another register\n numbered R.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is stored in another register","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236181,"byte_end":236251,"line_start":2806,"line_end":2806,"column_start":5,"column_end":75}},{"value":"/ numbered R.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236256,"byte_end":236272,"line_start":2807,"line_end":2807,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6681},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236426,"byte_end":236436,"line_start":2812,"line_end":2812,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::RegisterRule::Expression","value":"RegisterRule::Expression(Expression<R>)","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" \"The previous value of this register is located at the address produced\n by executing the DWARF expression.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is located at the address produced","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236302,"byte_end":236377,"line_start":2810,"line_end":2810,"column_start":5,"column_end":80}},{"value":"/ by executing the DWARF expression.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236382,"byte_end":236421,"line_start":2811,"line_end":2811,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6684},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236569,"byte_end":236582,"line_start":2816,"line_end":2816,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::RegisterRule::ValExpression","value":"RegisterRule::ValExpression(Expression<R>)","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value produced by executing\n the DWARF expression.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is the value produced by executing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236458,"byte_end":236533,"line_start":2814,"line_end":2814,"column_start":5,"column_end":80}},{"value":"/ the DWARF expression.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236538,"byte_end":236564,"line_start":2815,"line_end":2815,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6687},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236685,"byte_end":236698,"line_start":2819,"line_end":2819,"column_start":5,"column_end":18},"name":"Architectural","qualname":"::read::cfi::RegisterRule::Architectural","value":"RegisterRule::Architectural","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":" \"The rule is defined externally to this specification by the augmenter.\"\n","sig":null,"attributes":[{"value":"/ \"The rule is defined externally to this specification by the augmenter.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236604,"byte_end":236680,"line_start":2818,"line_end":2818,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":6666},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235478,"byte_end":235490,"line_start":2788,"line_end":2788,"column_start":10,"column_end":22},"name":"RegisterRule","qualname":"::read::cfi::RegisterRule","value":"pub enum RegisterRule<R: Reader> {\n    Undefined,\n    SameValue,\n    Offset(i64),\n    ValOffset(i64),\n    Register(Register),\n    Expression(Expression<R>),\n    ValExpression(Expression<R>),\n    Architectural,\n}","parent":null,"children":[{"krate":0,"index":6668},{"krate":0,"index":6670},{"krate":0,"index":6672},{"krate":0,"index":6675},{"krate":0,"index":6678},{"krate":0,"index":6681},{"krate":0,"index":6684},{"krate":0,"index":6687}],"decl_id":null,"docs":" An entry in the abstract CFI table that describes how to find the value of a\n register.","sig":null,"attributes":[{"value":"/ An entry in the abstract CFI table that describes how to find the value of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235157,"byte_end":235237,"line_start":2781,"line_end":2781,"column_start":1,"column_end":81}},{"value":"/ register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235238,"byte_end":235251,"line_start":2782,"line_end":2782,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235252,"byte_end":235255,"line_start":2783,"line_end":2783,"column_start":1,"column_end":4}},{"value":"/ \"The register columns contain rules that describe whether a given register","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235256,"byte_end":235334,"line_start":2784,"line_end":2784,"column_start":1,"column_end":79}},{"value":"/ has been saved and the rule to find the value for the register in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235335,"byte_end":235408,"line_start":2785,"line_end":2785,"column_start":1,"column_end":74}},{"value":"/ previous frame.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":235409,"byte_end":235429,"line_start":2786,"line_end":2786,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":6708},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237604,"byte_end":237610,"line_start":2844,"line_end":2844,"column_start":5,"column_end":11},"name":"SetLoc","qualname":"::read::cfi::CallFrameInstruction::SetLoc","value":"CallFrameInstruction::SetLoc { address }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_set_loc\n >\n > The DW_CFA_set_loc instruction takes a single operand that represents\n > a target address. The required action is to create a new table row\n > using the specified address as the location. All other values in the\n > new row are initially identical to the current row. The new location\n > value is always greater than the current one. If the segment_size\n > field of this FDE's CIE is non- zero, the initial location is preceded\n > by a segment selector of the given length.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_set_loc","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237041,"byte_end":237064,"line_start":2835,"line_end":2835,"column_start":5,"column_end":28}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237069,"byte_end":237074,"line_start":2836,"line_end":2836,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_set_loc instruction takes a single operand that represents","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237079,"byte_end":237154,"line_start":2837,"line_end":2837,"column_start":5,"column_end":80}},{"value":"/ > a target address. The required action is to create a new table row","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237159,"byte_end":237231,"line_start":2838,"line_end":2838,"column_start":5,"column_end":77}},{"value":"/ > using the specified address as the location. All other values in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237236,"byte_end":237310,"line_start":2839,"line_end":2839,"column_start":5,"column_end":79}},{"value":"/ > new row are initially identical to the current row. The new location","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237315,"byte_end":237389,"line_start":2840,"line_end":2840,"column_start":5,"column_end":79}},{"value":"/ > value is always greater than the current one. If the segment_size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237394,"byte_end":237465,"line_start":2841,"line_end":2841,"column_start":5,"column_end":76}},{"value":"/ > field of this FDE's CIE is non- zero, the initial location is preceded","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237470,"byte_end":237546,"line_start":2842,"line_end":2842,"column_start":5,"column_end":81}},{"value":"/ > by a segment selector of the given length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237551,"byte_end":237599,"line_start":2843,"line_end":2843,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":6710},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238287,"byte_end":238297,"line_start":2860,"line_end":2860,"column_start":5,"column_end":15},"name":"AdvanceLoc","qualname":"::read::cfi::CallFrameInstruction::AdvanceLoc","value":"CallFrameInstruction::AdvanceLoc { delta }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and\n `DW_CFA_advance_loc{1,2,4}`.","sig":null,"attributes":[{"value":"/ The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237679,"byte_end":237755,"line_start":2849,"line_end":2849,"column_start":5,"column_end":81}},{"value":"/ `DW_CFA_advance_loc{1,2,4}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237760,"byte_end":237792,"line_start":2850,"line_end":2850,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237797,"byte_end":237800,"line_start":2851,"line_end":2851,"column_start":5,"column_end":8}},{"value":"/ > 2. DW_CFA_advance_loc","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237805,"byte_end":237832,"line_start":2852,"line_end":2852,"column_start":5,"column_end":32}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237837,"byte_end":237842,"line_start":2853,"line_end":2853,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_advance instruction takes a single operand (encoded with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237847,"byte_end":237920,"line_start":2854,"line_end":2854,"column_start":5,"column_end":78}},{"value":"/ > the opcode) that represents a constant delta. The required action is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":237925,"byte_end":237999,"line_start":2855,"line_end":2855,"column_start":5,"column_end":79}},{"value":"/ > to create a new table row with a location value that is computed by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238004,"byte_end":238077,"line_start":2856,"line_end":2856,"column_start":5,"column_end":78}},{"value":"/ > taking the current entry’s location value and adding the value of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238082,"byte_end":238155,"line_start":2857,"line_end":2857,"column_start":5,"column_end":76}},{"value":"/ > delta * code_alignment_factor. All other values in the new row are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238160,"byte_end":238232,"line_start":2858,"line_end":2858,"column_start":5,"column_end":77}},{"value":"/ > initially identical to the current row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238237,"byte_end":238282,"line_start":2859,"line_end":2859,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238727,"byte_end":238733,"line_start":2872,"line_end":2872,"column_start":5,"column_end":11},"name":"DefCfa","qualname":"::read::cfi::CallFrameInstruction::DefCfa","value":"CallFrameInstruction::DefCfa { register, offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_def_cfa\n >\n > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands\n > representing a register number and a (non-factored) offset. The\n > required action is to define the current CFA rule to use the provided\n > register and offset.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_def_cfa","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238428,"byte_end":238451,"line_start":2866,"line_end":2866,"column_start":5,"column_end":28}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238456,"byte_end":238461,"line_start":2867,"line_end":2867,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238466,"byte_end":238537,"line_start":2868,"line_end":2868,"column_start":5,"column_end":76}},{"value":"/ > representing a register number and a (non-factored) offset. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238542,"byte_end":238611,"line_start":2869,"line_end":2869,"column_start":5,"column_end":74}},{"value":"/ > required action is to define the current CFA rule to use the provided","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238616,"byte_end":238691,"line_start":2870,"line_end":2870,"column_start":5,"column_end":80}},{"value":"/ > register and offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238696,"byte_end":238722,"line_start":2871,"line_end":2871,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":6715},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239282,"byte_end":239290,"line_start":2886,"line_end":2886,"column_start":5,"column_end":13},"name":"DefCfaSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaSf","value":"CallFrameInstruction::DefCfaSf { register, factored_offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_def_cfa_sf\n >\n > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_def_cfa\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_def_cfa_sf","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238876,"byte_end":238902,"line_start":2879,"line_end":2879,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238907,"byte_end":238912,"line_start":2880,"line_end":2880,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238917,"byte_end":238988,"line_start":2881,"line_end":2881,"column_start":5,"column_end":76}},{"value":"/ > LEB128 value representing a register number and a signed LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":238993,"byte_end":239062,"line_start":2882,"line_end":2882,"column_start":5,"column_end":74}},{"value":"/ > factored offset. This instruction is identical to DW_CFA_def_cfa","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239067,"byte_end":239137,"line_start":2883,"line_end":2883,"column_start":5,"column_end":75}},{"value":"/ > except that the second operand is signed and factored. The resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239142,"byte_end":239216,"line_start":2884,"line_end":2884,"column_start":5,"column_end":79}},{"value":"/ > offset is factored_offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239221,"byte_end":239277,"line_start":2885,"line_end":2885,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":6718},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239853,"byte_end":239867,"line_start":2900,"line_end":2900,"column_start":5,"column_end":19},"name":"DefCfaRegister","qualname":"::read::cfi::CallFrameInstruction::DefCfaRegister","value":"CallFrameInstruction::DefCfaRegister { register }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 3. DW_CFA_def_cfa_register\n >\n > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128\n > operand representing a register number. The required action is to\n > define the current CFA rule to use the provided register (but to keep\n > the old offset). This operation is valid only if the current CFA rule\n > is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 3. DW_CFA_def_cfa_register","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239438,"byte_end":239470,"line_start":2893,"line_end":2893,"column_start":5,"column_end":37}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239475,"byte_end":239480,"line_start":2894,"line_end":2894,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239485,"byte_end":239561,"line_start":2895,"line_end":2895,"column_start":5,"column_end":81}},{"value":"/ > operand representing a register number. The required action is to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239566,"byte_end":239637,"line_start":2896,"line_end":2896,"column_start":5,"column_end":76}},{"value":"/ > define the current CFA rule to use the provided register (but to keep","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239642,"byte_end":239717,"line_start":2897,"line_end":2897,"column_start":5,"column_end":80}},{"value":"/ > the old offset). This operation is valid only if the current CFA rule","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239722,"byte_end":239797,"line_start":2898,"line_end":2898,"column_start":5,"column_end":80}},{"value":"/ > is defined to use a register and offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239802,"byte_end":239848,"line_start":2899,"line_end":2899,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":6720},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240369,"byte_end":240381,"line_start":2912,"line_end":2912,"column_start":5,"column_end":17},"name":"DefCfaOffset","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffset","value":"CallFrameInstruction::DefCfaOffset { offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 4. DW_CFA_def_cfa_offset\n >\n > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128\n > operand representing a (non-factored) offset. The required action is\n > to define the current CFA rule to use the provided offset (but to keep\n > the old register). This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 4. DW_CFA_def_cfa_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239952,"byte_end":239982,"line_start":2905,"line_end":2905,"column_start":5,"column_end":35}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239987,"byte_end":239992,"line_start":2906,"line_end":2906,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":239997,"byte_end":240071,"line_start":2907,"line_end":2907,"column_start":5,"column_end":79}},{"value":"/ > operand representing a (non-factored) offset. The required action is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240076,"byte_end":240150,"line_start":2908,"line_end":2908,"column_start":5,"column_end":79}},{"value":"/ > to define the current CFA rule to use the provided offset (but to keep","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240155,"byte_end":240231,"line_start":2909,"line_end":2909,"column_start":5,"column_end":81}},{"value":"/ > the old register). This operation is valid only if the current CFA","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240236,"byte_end":240308,"line_start":2910,"line_end":2910,"column_start":5,"column_end":77}},{"value":"/ > rule is defined to use a register and offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240313,"byte_end":240364,"line_start":2911,"line_end":2911,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":6722},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240927,"byte_end":240941,"line_start":2925,"line_end":2925,"column_start":5,"column_end":19},"name":"DefCfaOffsetSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffsetSf","value":"CallFrameInstruction::DefCfaOffsetSf { factored_offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_def_cfa_offset_sf\n >\n > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand\n > representing a factored offset. This instruction is identical to\n > DW_CFA_def_cfa_offset except that the operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor. This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 5. DW_CFA_def_cfa_offset_sf","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240454,"byte_end":240487,"line_start":2917,"line_end":2917,"column_start":5,"column_end":38}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240492,"byte_end":240497,"line_start":2918,"line_end":2918,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240502,"byte_end":240578,"line_start":2919,"line_end":2919,"column_start":5,"column_end":81}},{"value":"/ > representing a factored offset. This instruction is identical to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240583,"byte_end":240653,"line_start":2920,"line_end":2920,"column_start":5,"column_end":75}},{"value":"/ > DW_CFA_def_cfa_offset except that the operand is signed and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240658,"byte_end":240723,"line_start":2921,"line_end":2921,"column_start":5,"column_end":70}},{"value":"/ > factored. The resulting offset is factored_offset *","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240728,"byte_end":240785,"line_start":2922,"line_end":2922,"column_start":5,"column_end":62}},{"value":"/ > data_alignment_factor. This operation is valid only if the current CFA","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240790,"byte_end":240866,"line_start":2923,"line_end":2923,"column_start":5,"column_end":81}},{"value":"/ > rule is defined to use a register and offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":240871,"byte_end":240922,"line_start":2924,"line_end":2924,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241344,"byte_end":241360,"line_start":2936,"line_end":2936,"column_start":5,"column_end":21},"name":"DefCfaExpression","qualname":"::read::cfi::CallFrameInstruction::DefCfaExpression","value":"CallFrameInstruction::DefCfaExpression { expression }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_def_cfa_expression\n >\n > The DW_CFA_def_cfa_expression instruction takes a single operand\n > encoded as a DW_FORM_exprloc value representing a DWARF\n > expression. The required action is to establish that expression as the\n > means by which the current CFA is computed.\n","sig":null,"attributes":[{"value":"/ > 6. DW_CFA_def_cfa_expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241019,"byte_end":241053,"line_start":2930,"line_end":2930,"column_start":5,"column_end":39}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241058,"byte_end":241063,"line_start":2931,"line_end":2931,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_expression instruction takes a single operand","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241068,"byte_end":241138,"line_start":2932,"line_end":2932,"column_start":5,"column_end":75}},{"value":"/ > encoded as a DW_FORM_exprloc value representing a DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241143,"byte_end":241204,"line_start":2933,"line_end":2933,"column_start":5,"column_end":66}},{"value":"/ > expression. The required action is to establish that expression as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241209,"byte_end":241285,"line_start":2934,"line_end":2934,"column_start":5,"column_end":81}},{"value":"/ > means by which the current CFA is computed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241290,"byte_end":241339,"line_start":2935,"line_end":2935,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":6726},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241749,"byte_end":241758,"line_start":2947,"line_end":2947,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::CallFrameInstruction::Undefined","value":"CallFrameInstruction::Undefined { register }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_undefined\n >\n > The DW_CFA_undefined instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “undefined.”\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_undefined","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241486,"byte_end":241511,"line_start":2942,"line_end":2942,"column_start":5,"column_end":30}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241516,"byte_end":241521,"line_start":2943,"line_end":2943,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_undefined instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241526,"byte_end":241595,"line_start":2944,"line_end":2944,"column_start":5,"column_end":74}},{"value":"/ > operand that represents a register number. The required action is to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241600,"byte_end":241674,"line_start":2945,"line_end":2945,"column_start":5,"column_end":79}},{"value":"/ > set the rule for the specified register to “undefined.”","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241679,"byte_end":241744,"line_start":2946,"line_end":2946,"column_start":5,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":6728},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242109,"byte_end":242118,"line_start":2957,"line_end":2957,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::CallFrameInstruction::SameValue","value":"CallFrameInstruction::SameValue { register }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_same_value\n >\n > The DW_CFA_same_value instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “same value.”\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_same_value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241843,"byte_end":241869,"line_start":2952,"line_end":2952,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241874,"byte_end":241879,"line_start":2953,"line_end":2953,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_same_value instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241884,"byte_end":241954,"line_start":2954,"line_end":2954,"column_start":5,"column_end":75}},{"value":"/ > operand that represents a register number. The required action is to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":241959,"byte_end":242033,"line_start":2955,"line_end":2955,"column_start":5,"column_end":79}},{"value":"/ > set the rule for the specified register to “same value.”","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242038,"byte_end":242104,"line_start":2956,"line_end":2956,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242740,"byte_end":242746,"line_start":2972,"line_end":2972,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::CallFrameInstruction::Offset","value":"CallFrameInstruction::Offset { register, factored_offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" The `Offset` instruction represents both `DW_CFA_offset` and\n `DW_CFA_offset_extended`.","sig":null,"attributes":[{"value":"/ The `Offset` instruction represents both `DW_CFA_offset` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242203,"byte_end":242267,"line_start":2962,"line_end":2962,"column_start":5,"column_end":69}},{"value":"/ `DW_CFA_offset_extended`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242272,"byte_end":242301,"line_start":2963,"line_end":2963,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242306,"byte_end":242309,"line_start":2964,"line_end":2964,"column_start":5,"column_end":8}},{"value":"/ > 3. DW_CFA_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242314,"byte_end":242336,"line_start":2965,"line_end":2965,"column_start":5,"column_end":27}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242341,"byte_end":242346,"line_start":2966,"line_end":2966,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_offset instruction takes two operands: a register number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242351,"byte_end":242424,"line_start":2967,"line_end":2967,"column_start":5,"column_end":78}},{"value":"/ > (encoded with the opcode) and an unsigned LEB128 constant representing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242429,"byte_end":242505,"line_start":2968,"line_end":2968,"column_start":5,"column_end":81}},{"value":"/ > a factored offset. The required action is to change the rule for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242510,"byte_end":242584,"line_start":2969,"line_end":2969,"column_start":5,"column_end":79}},{"value":"/ > register indicated by the register number to be an offset(N) rule","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242589,"byte_end":242660,"line_start":2970,"line_end":2970,"column_start":5,"column_end":76}},{"value":"/ > where the value of N is factored offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242665,"byte_end":242735,"line_start":2971,"line_end":2971,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":6733},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243334,"byte_end":243350,"line_start":2987,"line_end":2987,"column_start":5,"column_end":21},"name":"OffsetExtendedSf","qualname":"::read::cfi::CallFrameInstruction::OffsetExtendedSf","value":"CallFrameInstruction::OffsetExtendedSf { register, factored_offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_offset_extended_sf\n >\n > The DW_CFA_offset_extended_sf instruction takes two operands: an\n > unsigned LEB128 value representing a register number and a signed\n > LEB128 factored offset. This instruction is identical to\n > DW_CFA_offset_extended except that the second operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 5. DW_CFA_offset_extended_sf","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242894,"byte_end":242928,"line_start":2979,"line_end":2979,"column_start":5,"column_end":39}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242933,"byte_end":242938,"line_start":2980,"line_end":2980,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_offset_extended_sf instruction takes two operands: an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":242943,"byte_end":243013,"line_start":2981,"line_end":2981,"column_start":5,"column_end":75}},{"value":"/ > unsigned LEB128 value representing a register number and a signed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243018,"byte_end":243089,"line_start":2982,"line_end":2982,"column_start":5,"column_end":76}},{"value":"/ > LEB128 factored offset. This instruction is identical to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243094,"byte_end":243156,"line_start":2983,"line_end":2983,"column_start":5,"column_end":67}},{"value":"/ > DW_CFA_offset_extended except that the second operand is signed and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243161,"byte_end":243234,"line_start":2984,"line_end":2984,"column_start":5,"column_end":78}},{"value":"/ > factored. The resulting offset is factored_offset *","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243239,"byte_end":243296,"line_start":2985,"line_end":2985,"column_start":5,"column_end":62}},{"value":"/ > data_alignment_factor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243301,"byte_end":243329,"line_start":2986,"line_end":2986,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":6736},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243896,"byte_end":243905,"line_start":3001,"line_end":3001,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::CallFrameInstruction::ValOffset","value":"CallFrameInstruction::ValOffset { register, factored_offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_val_offset\n >\n > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands\n > representing a register number and a factored offset. The required\n > action is to change the rule for the register indicated by the\n > register number to be a val_offset(N) rule where the value of N is\n > factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 6. DW_CFA_val_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243498,"byte_end":243524,"line_start":2994,"line_end":2994,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243529,"byte_end":243534,"line_start":2995,"line_end":2995,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243539,"byte_end":243613,"line_start":2996,"line_end":2996,"column_start":5,"column_end":79}},{"value":"/ > representing a register number and a factored offset. The required","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243618,"byte_end":243690,"line_start":2997,"line_end":2997,"column_start":5,"column_end":77}},{"value":"/ > action is to change the rule for the register indicated by the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243695,"byte_end":243763,"line_start":2998,"line_end":2998,"column_start":5,"column_end":73}},{"value":"/ > register number to be a val_offset(N) rule where the value of N is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243768,"byte_end":243840,"line_start":2999,"line_end":2999,"column_start":5,"column_end":77}},{"value":"/ > factored_offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":243845,"byte_end":243891,"line_start":3000,"line_end":3000,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":6739},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244468,"byte_end":244479,"line_start":3015,"line_end":3015,"column_start":5,"column_end":16},"name":"ValOffsetSf","qualname":"::read::cfi::CallFrameInstruction::ValOffsetSf","value":"CallFrameInstruction::ValOffsetSf { register, factored_offset }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 7. DW_CFA_val_offset_sf\n >\n > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_val_offset\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 7. DW_CFA_val_offset_sf","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244053,"byte_end":244082,"line_start":3008,"line_end":3008,"column_start":5,"column_end":34}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244087,"byte_end":244092,"line_start":3009,"line_end":3009,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244097,"byte_end":244171,"line_start":3010,"line_end":3010,"column_start":5,"column_end":79}},{"value":"/ > LEB128 value representing a register number and a signed LEB128","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244176,"byte_end":244245,"line_start":3011,"line_end":3011,"column_start":5,"column_end":74}},{"value":"/ > factored offset. This instruction is identical to DW_CFA_val_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244250,"byte_end":244323,"line_start":3012,"line_end":3012,"column_start":5,"column_end":78}},{"value":"/ > except that the second operand is signed and factored. The resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244328,"byte_end":244402,"line_start":3013,"line_end":3013,"column_start":5,"column_end":79}},{"value":"/ > offset is factored_offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244407,"byte_end":244463,"line_start":3014,"line_end":3014,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244916,"byte_end":244924,"line_start":3028,"line_end":3028,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::CallFrameInstruction::Register","value":"CallFrameInstruction::Register { dest_register, src_register }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 8. DW_CFA_register\n >\n > The DW_CFA_register instruction takes two unsigned LEB128 operands\n > representing register numbers. The required action is to set the rule\n > for the first register to be register(R) where R is the second\n > register.\n","sig":null,"attributes":[{"value":"/ > 8. DW_CFA_register","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244627,"byte_end":244651,"line_start":3022,"line_end":3022,"column_start":5,"column_end":29}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244656,"byte_end":244661,"line_start":3023,"line_end":3023,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_register instruction takes two unsigned LEB128 operands","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244666,"byte_end":244738,"line_start":3024,"line_end":3024,"column_start":5,"column_end":77}},{"value":"/ > representing register numbers. The required action is to set the rule","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244743,"byte_end":244818,"line_start":3025,"line_end":3025,"column_start":5,"column_end":80}},{"value":"/ > for the first register to be register(R) where R is the second","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244823,"byte_end":244891,"line_start":3026,"line_end":3026,"column_start":5,"column_end":73}},{"value":"/ > register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":244896,"byte_end":244911,"line_start":3027,"line_end":3027,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":6745},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245761,"byte_end":245771,"line_start":3045,"line_end":3045,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CallFrameInstruction::Expression","value":"CallFrameInstruction::Expression { register, expression }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 9. DW_CFA_expression\n >\n > The DW_CFA_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be an\n > expression(E) rule where E is the DWARF expression. That is, the DWARF\n > expression computes the address. The value of the CFA is pushed on the\n > DWARF evaluation stack prior to execution of the DWARF expression.\n","sig":null,"attributes":[{"value":"/ > 9. DW_CFA_expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245170,"byte_end":245196,"line_start":3036,"line_end":3036,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245201,"byte_end":245206,"line_start":3037,"line_end":3037,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_expression instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245211,"byte_end":245282,"line_start":3038,"line_end":3038,"column_start":5,"column_end":76}},{"value":"/ > LEB128 value representing a register number, and a DW_FORM_block value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245287,"byte_end":245363,"line_start":3039,"line_end":3039,"column_start":5,"column_end":81}},{"value":"/ > representing a DWARF expression. The required action is to change the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245368,"byte_end":245443,"line_start":3040,"line_end":3040,"column_start":5,"column_end":80}},{"value":"/ > rule for the register indicated by the register number to be an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245448,"byte_end":245517,"line_start":3041,"line_end":3041,"column_start":5,"column_end":74}},{"value":"/ > expression(E) rule where E is the DWARF expression. That is, the DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245522,"byte_end":245598,"line_start":3042,"line_end":3042,"column_start":5,"column_end":81}},{"value":"/ > expression computes the address. The value of the CFA is pushed on the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245603,"byte_end":245679,"line_start":3043,"line_end":3043,"column_start":5,"column_end":81}},{"value":"/ > DWARF evaluation stack prior to execution of the DWARF expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245684,"byte_end":245756,"line_start":3044,"line_end":3044,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":6748},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246558,"byte_end":246571,"line_start":3062,"line_end":3062,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::CallFrameInstruction::ValExpression","value":"CallFrameInstruction::ValExpression { register, expression }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 10. DW_CFA_val_expression\n >\n > The DW_CFA_val_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be a\n > val_expression(E) rule where E is the DWARF expression. That is, the\n > DWARF expression computes the value of the given register. The value\n > of the CFA is pushed on the DWARF evaluation stack prior to execution\n > of the DWARF expression.\n","sig":null,"attributes":[{"value":"/ > 10. DW_CFA_val_expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245925,"byte_end":245956,"line_start":3052,"line_end":3052,"column_start":5,"column_end":36}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245961,"byte_end":245966,"line_start":3053,"line_end":3053,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_expression instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":245971,"byte_end":246046,"line_start":3054,"line_end":3054,"column_start":5,"column_end":80}},{"value":"/ > LEB128 value representing a register number, and a DW_FORM_block value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246051,"byte_end":246127,"line_start":3055,"line_end":3055,"column_start":5,"column_end":81}},{"value":"/ > representing a DWARF expression. The required action is to change the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246132,"byte_end":246207,"line_start":3056,"line_end":3056,"column_start":5,"column_end":80}},{"value":"/ > rule for the register indicated by the register number to be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246212,"byte_end":246280,"line_start":3057,"line_end":3057,"column_start":5,"column_end":73}},{"value":"/ > val_expression(E) rule where E is the DWARF expression. That is, the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246285,"byte_end":246359,"line_start":3058,"line_end":3058,"column_start":5,"column_end":79}},{"value":"/ > DWARF expression computes the value of the given register. The value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246364,"byte_end":246438,"line_start":3059,"line_end":3059,"column_start":5,"column_end":79}},{"value":"/ > of the CFA is pushed on the DWARF evaluation stack prior to execution","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246443,"byte_end":246518,"line_start":3060,"line_end":3060,"column_start":5,"column_end":80}},{"value":"/ > of the DWARF expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246523,"byte_end":246553,"line_start":3061,"line_end":3061,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":6751},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247166,"byte_end":247173,"line_start":3078,"line_end":3078,"column_start":5,"column_end":12},"name":"Restore","qualname":"::read::cfi::CallFrameInstruction::Restore","value":"CallFrameInstruction::Restore { register }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" The `Restore` instruction represents both `DW_CFA_restore` and\n `DW_CFA_restore_extended`.","sig":null,"attributes":[{"value":"/ The `Restore` instruction represents both `DW_CFA_restore` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246725,"byte_end":246791,"line_start":3069,"line_end":3069,"column_start":5,"column_end":71}},{"value":"/ `DW_CFA_restore_extended`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246796,"byte_end":246826,"line_start":3070,"line_end":3070,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246831,"byte_end":246834,"line_start":3071,"line_end":3071,"column_start":5,"column_end":8}},{"value":"/ > 11. DW_CFA_restore","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246839,"byte_end":246863,"line_start":3072,"line_end":3072,"column_start":5,"column_end":29}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246868,"byte_end":246873,"line_start":3073,"line_end":3073,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_restore instruction takes a single operand (encoded with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246878,"byte_end":246951,"line_start":3074,"line_end":3074,"column_start":5,"column_end":78}},{"value":"/ > the opcode) that represents a register number. The required action is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":246956,"byte_end":247031,"line_start":3075,"line_end":3075,"column_start":5,"column_end":80}},{"value":"/ > to change the rule for the indicated register to the rule assigned it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247036,"byte_end":247111,"line_start":3076,"line_end":3076,"column_start":5,"column_end":80}},{"value":"/ > by the initial_instructions in the CIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247116,"byte_end":247161,"line_start":3077,"line_end":3077,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6753},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247515,"byte_end":247528,"line_start":3089,"line_end":3089,"column_start":5,"column_end":18},"name":"RememberState","qualname":"::read::cfi::CallFrameInstruction::RememberState","value":"CallFrameInstruction::RememberState","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_remember_state\n >\n > The DW_CFA_remember_state instruction takes no operands. The required\n > action is to push the set of rules for every register onto an implicit\n > stack.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_remember_state","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247292,"byte_end":247322,"line_start":3084,"line_end":3084,"column_start":5,"column_end":35}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247327,"byte_end":247332,"line_start":3085,"line_end":3085,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_remember_state instruction takes no operands. The required","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247337,"byte_end":247412,"line_start":3086,"line_end":3086,"column_start":5,"column_end":80}},{"value":"/ > action is to push the set of rules for every register onto an implicit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247417,"byte_end":247493,"line_start":3087,"line_end":3087,"column_start":5,"column_end":81}},{"value":"/ > stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247498,"byte_end":247510,"line_start":3088,"line_end":3088,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247770,"byte_end":247782,"line_start":3096,"line_end":3096,"column_start":5,"column_end":17},"name":"RestoreState","qualname":"::read::cfi::CallFrameInstruction::RestoreState","value":"CallFrameInstruction::RestoreState","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_restore_state\n >\n > The DW_CFA_restore_state instruction takes no operands. The required\n > action is to pop the set of rules off the implicit stack and place\n > them in the current row.\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_restore_state","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247535,"byte_end":247564,"line_start":3091,"line_end":3091,"column_start":5,"column_end":34}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247569,"byte_end":247574,"line_start":3092,"line_end":3092,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_restore_state instruction takes no operands. The required","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247579,"byte_end":247653,"line_start":3093,"line_end":3093,"column_start":5,"column_end":79}},{"value":"/ > action is to pop the set of rules off the implicit stack and place","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247658,"byte_end":247730,"line_start":3094,"line_end":3094,"column_start":5,"column_end":77}},{"value":"/ > them in the current row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247735,"byte_end":247765,"line_start":3095,"line_end":3095,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":6757},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248100,"byte_end":248108,"line_start":3105,"line_end":3105,"column_start":5,"column_end":13},"name":"ArgsSize","qualname":"::read::cfi::CallFrameInstruction::ArgsSize","value":"CallFrameInstruction::ArgsSize { size }","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > DW_CFA_GNU_args_size\n >\n > GNU Extension\n >\n > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand\n > representing an argument size. This instruction specifies the total of\n > the size of the arguments which have been pushed onto the stack.\n","sig":null,"attributes":[{"value":"/ > DW_CFA_GNU_args_size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247789,"byte_end":247815,"line_start":3098,"line_end":3098,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247820,"byte_end":247825,"line_start":3099,"line_end":3099,"column_start":5,"column_end":10}},{"value":"/ > GNU Extension","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247830,"byte_end":247849,"line_start":3100,"line_end":3100,"column_start":5,"column_end":24}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247854,"byte_end":247859,"line_start":3101,"line_end":3101,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247864,"byte_end":247939,"line_start":3102,"line_end":3102,"column_start":5,"column_end":80}},{"value":"/ > representing an argument size. This instruction specifies the total of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":247944,"byte_end":248020,"line_start":3103,"line_end":3103,"column_start":5,"column_end":81}},{"value":"/ > the size of the arguments which have been pushed onto the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248025,"byte_end":248095,"line_start":3104,"line_end":3104,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6759},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248439,"byte_end":248442,"line_start":3115,"line_end":3115,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::cfi::CallFrameInstruction::Nop","value":"CallFrameInstruction::Nop","parent":{"krate":0,"index":6706},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_nop\n >\n > The DW_CFA_nop instruction has no operands and no required actions. It\n > is used as padding to make a CIE or FDE an appropriate size.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_nop","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248253,"byte_end":248272,"line_start":3111,"line_end":3111,"column_start":5,"column_end":24}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248277,"byte_end":248282,"line_start":3112,"line_end":3112,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_nop instruction has no operands and no required actions. It","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248287,"byte_end":248363,"line_start":3113,"line_end":3113,"column_start":5,"column_end":81}},{"value":"/ > is used as padding to make a CIE or FDE an appropriate size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248368,"byte_end":248434,"line_start":3114,"line_end":3114,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236967,"byte_end":236987,"line_start":2833,"line_end":2833,"column_start":10,"column_end":30},"name":"CallFrameInstruction","qualname":"::read::cfi::CallFrameInstruction","value":"pub enum CallFrameInstruction<R: Reader> {\n    SetLoc {\n            address: u64,\n        },\n    AdvanceLoc {\n            delta: u32,\n        },\n    DefCfa {\n            register: Register,\n            offset: u64,\n        },\n    DefCfaSf {\n            register: Register,\n            factored_offset: i64,\n        },\n    DefCfaRegister {\n            register: Register,\n        },\n    DefCfaOffset {\n            offset: u64,\n        },\n    DefCfaOffsetSf {\n            factored_offset: i64,\n        },\n    DefCfaExpression {\n            expression: Expression<R>,\n        },\n    Undefined {\n            register: Register,\n        },\n    SameValue {\n            register: Register,\n        },\n    Offset {\n            register: Register,\n            factored_offset: u64,\n        },\n    OffsetExtendedSf {\n            register: Register,\n            factored_offset: i64,\n        },\n    ValOffset {\n            register: Register,\n            factored_offset: u64,\n        },\n    ValOffsetSf {\n            register: Register,\n            factored_offset: i64,\n        },\n    Register {\n            dest_register: Register,\n            src_register: Register,\n        },\n    Expression {\n            register: Register,\n            expression: Expression<R>,\n        },\n    ValExpression {\n            register: Register,\n            expression: Expression<R>,\n        },\n    Restore {\n            register: Register,\n        },\n    RememberState,\n    RestoreState,\n    ArgsSize {\n            size: u64,\n        },\n    Nop,\n}","parent":null,"children":[{"krate":0,"index":6708},{"krate":0,"index":6710},{"krate":0,"index":6712},{"krate":0,"index":6715},{"krate":0,"index":6718},{"krate":0,"index":6720},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6730},{"krate":0,"index":6733},{"krate":0,"index":6736},{"krate":0,"index":6739},{"krate":0,"index":6742},{"krate":0,"index":6745},{"krate":0,"index":6748},{"krate":0,"index":6751},{"krate":0,"index":6753},{"krate":0,"index":6755},{"krate":0,"index":6757},{"krate":0,"index":6759}],"decl_id":null,"docs":" A parsed call frame instruction.\n","sig":null,"attributes":[{"value":"/ A parsed call frame instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236882,"byte_end":236918,"line_start":2831,"line_end":2831,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256554,"byte_end":256578,"line_start":3327,"line_end":3327,"column_start":12,"column_end":36},"name":"CallFrameInstructionIter","qualname":"::read::cfi::CallFrameInstructionIter","value":"CallFrameInstructionIter {  }","parent":null,"children":[{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6783}],"decl_id":null,"docs":" A lazy iterator parsing call frame instructions.","sig":null,"attributes":[{"value":"/ A lazy iterator parsing call frame instructions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256373,"byte_end":256425,"line_start":3322,"line_end":3322,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256426,"byte_end":256429,"line_start":3323,"line_end":3323,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256430,"byte_end":256451,"line_start":3324,"line_end":3324,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256452,"byte_end":256518,"line_start":3325,"line_end":3325,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256824,"byte_end":256828,"line_start":3335,"line_end":3335,"column_start":12,"column_end":16},"name":"next","qualname":"<CallFrameInstructionIter>::next","value":"pub fn next(&mut Self) -> Result<Option<CallFrameInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the next call frame instruction.\n","sig":null,"attributes":[{"value":"/ Parse the next call frame instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256770,"byte_end":256812,"line_start":3334,"line_end":3334,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258062,"byte_end":258068,"line_start":3379,"line_end":3379,"column_start":5,"column_end":11},"name":"Direct","qualname":"::read::cfi::Pointer::Direct","value":"Pointer::Direct(u64)","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" This value is the decoded pointer value.\n","sig":null,"attributes":[{"value":"/ This value is the decoded pointer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258013,"byte_end":258057,"line_start":3378,"line_end":3378,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258377,"byte_end":258385,"line_start":3387,"line_end":3387,"column_start":5,"column_end":13},"name":"Indirect","qualname":"::read::cfi::Pointer::Indirect","value":"Pointer::Indirect(u64)","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" This value is *not* the pointer value, but points to the address of\n where the real pointer value lives. In other words, deref this pointer\n to get the real pointer value.","sig":null,"attributes":[{"value":"/ This value is *not* the pointer value, but points to the address of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258080,"byte_end":258151,"line_start":3381,"line_end":3381,"column_start":5,"column_end":76}},{"value":"/ where the real pointer value lives. In other words, deref this pointer","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258156,"byte_end":258230,"line_start":3382,"line_end":3382,"column_start":5,"column_end":79}},{"value":"/ to get the real pointer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258235,"byte_end":258269,"line_start":3383,"line_end":3383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258274,"byte_end":258277,"line_start":3384,"line_end":3384,"column_start":5,"column_end":8}},{"value":"/ Chase this pointer at your own risk: do you trust the DWARF data it came","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258282,"byte_end":258358,"line_start":3385,"line_end":3385,"column_start":5,"column_end":81}},{"value":"/ from?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258363,"byte_end":258372,"line_start":3386,"line_end":3386,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":6792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":257999,"byte_end":258006,"line_start":3377,"line_end":3377,"column_start":10,"column_end":17},"name":"Pointer","qualname":"::read::cfi::Pointer","value":"pub enum Pointer { Direct(u64), Indirect(u64), }","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6796}],"decl_id":null,"docs":" A decoded pointer.\n","sig":null,"attributes":[{"value":"/ A decoded pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":257922,"byte_end":257944,"line_start":3375,"line_end":3375,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404525,"byte_end":404530,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Dwarf","qualname":"::read::dwarf::Dwarf","value":"Dwarf { debug_abbrev, debug_addr, debug_aranges, debug_info, debug_line, debug_line_str, debug_str, debug_str_offsets, debug_types, locations, ranges, file_type, sup }","parent":null,"children":[{"krate":0,"index":6828},{"krate":0,"index":6829},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833},{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":6839},{"krate":0,"index":6840}],"decl_id":null,"docs":" All of the commonly used DWARF sections, and other common information.\n","sig":null,"attributes":[{"value":"/ All of the commonly used DWARF sections, and other common information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404413,"byte_end":404487,"line_start":21,"line_end":21,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":6828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404581,"byte_end":404593,"line_start":25,"line_end":25,"column_start":9,"column_end":21},"name":"debug_abbrev","qualname":"::read::dwarf::Dwarf::debug_abbrev","value":"read::abbrev::DebugAbbrev<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404540,"byte_end":404572,"line_start":24,"line_end":24,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6829},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404655,"byte_end":404665,"line_start":28,"line_end":28,"column_start":9,"column_end":19},"name":"debug_addr","qualname":"::read::dwarf::Dwarf::debug_addr","value":"read::addr::DebugAddr<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404616,"byte_end":404646,"line_start":27,"line_end":27,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404728,"byte_end":404741,"line_start":31,"line_end":31,"column_start":9,"column_end":22},"name":"debug_aranges","qualname":"::read::dwarf::Dwarf::debug_aranges","value":"read::aranges::DebugAranges<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404686,"byte_end":404719,"line_start":30,"line_end":30,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6831},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404804,"byte_end":404814,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"debug_info","qualname":"::read::dwarf::Dwarf::debug_info","value":"read::unit::DebugInfo<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404765,"byte_end":404795,"line_start":33,"line_end":33,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404874,"byte_end":404884,"line_start":37,"line_end":37,"column_start":9,"column_end":19},"name":"debug_line","qualname":"::read::dwarf::Dwarf::debug_line","value":"read::line::DebugLine<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404835,"byte_end":404865,"line_start":36,"line_end":36,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6833},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404948,"byte_end":404962,"line_start":40,"line_end":40,"column_start":9,"column_end":23},"name":"debug_line_str","qualname":"::read::dwarf::Dwarf::debug_line_str","value":"read::str::DebugLineStr<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404905,"byte_end":404939,"line_start":39,"line_end":39,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6834},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405024,"byte_end":405033,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"debug_str","qualname":"::read::dwarf::Dwarf::debug_str","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":404986,"byte_end":405015,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":6835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405099,"byte_end":405116,"line_start":46,"line_end":46,"column_start":9,"column_end":26},"name":"debug_str_offsets","qualname":"::read::dwarf::Dwarf::debug_str_offsets","value":"read::str::DebugStrOffsets<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405053,"byte_end":405090,"line_start":45,"line_end":45,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6836},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405183,"byte_end":405194,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"debug_types","qualname":"::read::dwarf::Dwarf::debug_types","value":"read::unit::DebugTypes<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405143,"byte_end":405174,"line_start":48,"line_end":48,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405299,"byte_end":405308,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"locations","qualname":"::read::dwarf::Dwarf::locations","value":"read::loclists::LocationLists<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The location lists in the `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ The location lists in the `.debug_loc` and `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405216,"byte_end":405290,"line_start":51,"line_end":51,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6838},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405416,"byte_end":405422,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"ranges","qualname":"::read::dwarf::Dwarf::ranges","value":"read::rnglists::RangeLists<R>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The range lists in the `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ The range lists in the `.debug_ranges` and `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405333,"byte_end":405407,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6839},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405479,"byte_end":405488,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"file_type","qualname":"::read::dwarf::Dwarf::file_type","value":"common::DwarfFileType","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The type of this file.\n","sig":null,"attributes":[{"value":"/ The type of this file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405444,"byte_end":405470,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405574,"byte_end":405577,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"name":"sup","qualname":"::read::dwarf::Dwarf::sup","value":"core::option::Option<alloc::sync::Arc<read::dwarf::Dwarf<R>>>","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The DWARF sections for a supplementary object file.\n","sig":null,"attributes":[{"value":"/ The DWARF sections for a supplementary object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405510,"byte_end":405565,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":406177,"byte_end":406181,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"load","qualname":"<Dwarf<T>>::load","value":"pub fn load<F, E>(F) -> core::result::Result<Self, E> where\nF: FnMut(SectionId) -> core::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Try to load the DWARF sections using the given loader function.","sig":null,"attributes":[{"value":"/ Try to load the DWARF sections using the given loader function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405628,"byte_end":405695,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405700,"byte_end":405703,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ `section` loads a DWARF section from the object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405708,"byte_end":405765,"line_start":67,"line_end":67,"column_start":5,"column_end":62}},{"value":"/ It should return an empty section if the section does not exist.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405770,"byte_end":405838,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405843,"byte_end":405846,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ `section` may either directly return a `Reader` instance (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405851,"byte_end":405920,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ `EndianSlice`), or it may return some other type and then convert","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405925,"byte_end":405994,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ that type into a `Reader` using `Dwarf::borrow`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405999,"byte_end":406051,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":406056,"byte_end":406059,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ After loading, the user should set the `file_type` field and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":406064,"byte_end":406128,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ call `load_sup` if required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":406133,"byte_end":406165,"line_start":75,"line_end":75,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407524,"byte_end":407532,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"load_sup","qualname":"<Dwarf<T>>::load_sup","value":"pub fn load_sup<F, E>(&mut Self, F) -> core::result::Result<(), E> where\nF: FnMut(SectionId) -> core::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Load the DWARF sections from the supplementary object file.","sig":null,"attributes":[{"value":"/ Load the DWARF sections from the supplementary object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407327,"byte_end":407390,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407395,"byte_end":407398,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ `section` operates the same as for `load`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407403,"byte_end":407449,"line_start":104,"line_end":104,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407454,"byte_end":407457,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Sets `self.sup`, replacing any previous value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407462,"byte_end":407512,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":409060,"byte_end":409066,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Dwarf<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> Dwarf<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dwarf` structure that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `Dwarf` structure that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407751,"byte_end":407817,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407822,"byte_end":407825,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407830,"byte_end":407895,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407900,"byte_end":407903,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407908,"byte_end":407928,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407933,"byte_end":407936,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ It can be useful to load DWARF sections into owned data structures,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":407941,"byte_end":408012,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/ such as `Vec`. However, we do not implement the `Reader` trait","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408017,"byte_end":408083,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/ for `Vec`, because it would be very inefficient, but this trait","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408088,"byte_end":408155,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ is required for all of the methods that parse the DWARF data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408160,"byte_end":408225,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/ So we first load the DWARF sections into `Vec`s, and then use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408230,"byte_end":408295,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/ `borrow` to create `Reader`s that reference the data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408300,"byte_end":408357,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408362,"byte_end":408365,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408370,"byte_end":408388,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408393,"byte_end":408441,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ # let loader = |name| -> Result<_, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408446,"byte_end":408520,"line_start":130,"line_end":130,"column_start":5,"column_end":79}},{"value":"/ # let sup_loader = |name| -> Result<_, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408525,"byte_end":408603,"line_start":131,"line_end":131,"column_start":5,"column_end":83}},{"value":"/ // Read the DWARF sections into `Vec`s with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408608,"byte_end":408692,"line_start":132,"line_end":132,"column_start":5,"column_end":89}},{"value":"/ let mut owned_dwarf: gimli::Dwarf<Vec<u8>> = gimli::Dwarf::load(loader)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408697,"byte_end":408774,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/ owned_dwarf.load_sup(sup_loader)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408779,"byte_end":408817,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ // Create references to the DWARF sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408822,"byte_end":408869,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ let dwarf = owned_dwarf.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408874,"byte_end":408920,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408925,"byte_end":408987,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":408992,"byte_end":408999,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":409004,"byte_end":409024,"line_start":139,"line_end":139,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":409029,"byte_end":409036,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":409041,"byte_end":409048,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410085,"byte_end":410088,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"sup","qualname":"<Dwarf<T>>::sup","value":"pub fn sup(&Self) -> Option<&Dwarf<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the DWARF sections for supplementary object file.\n","sig":null,"attributes":[{"value":"/ Return a reference to the DWARF sections for supplementary object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":409998,"byte_end":410073,"line_start":163,"line_end":163,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410391,"byte_end":410396,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"units","qualname":"<Dwarf<R>>::units","value":"pub fn units(&Self) -> DebugInfoUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the unit headers in the `.debug_info` section.","sig":null,"attributes":[{"value":"/ Iterate the unit headers in the `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410202,"byte_end":410260,"line_start":170,"line_end":170,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410265,"byte_end":410268,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410273,"byte_end":410294,"line_start":172,"line_end":172,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410299,"byte_end":410365,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410370,"byte_end":410379,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410560,"byte_end":410564,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"unit","qualname":"<Dwarf<R>>::unit","value":"pub fn unit(&Self, UnitHeader<R>) -> Result<Unit<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given unit header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410480,"byte_end":410534,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410539,"byte_end":410548,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410854,"byte_end":410864,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"type_units","qualname":"<Dwarf<R>>::type_units","value":"pub fn type_units(&Self) -> DebugTypesUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-unit headers in the `.debug_types` section.","sig":null,"attributes":[{"value":"/ Iterate the type-unit headers in the `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410659,"byte_end":410723,"line_start":185,"line_end":185,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410728,"byte_end":410731,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410736,"byte_end":410757,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410762,"byte_end":410828,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410833,"byte_end":410842,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411073,"byte_end":411086,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<Dwarf<R>>::abbreviations","value":"pub fn abbreviations(&Self, &UnitHeader<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations for a compilation unit.\n","sig":null,"attributes":[{"value":"/ Parse the abbreviations for a compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410950,"byte_end":411001,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411052,"byte_end":411061,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411275,"byte_end":411288,"line_start":203,"line_end":203,"column_start":12,"column_end":25},"name":"string_offset","qualname":"<Dwarf<R>>::string_offset","value":"pub fn string_offset(&Self, &Unit<R>, DebugStrOffsetsIndex<R::Offset>)\n-> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the string offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the string offset at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411201,"byte_end":411249,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411254,"byte_end":411263,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411628,"byte_end":411634,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"string","qualname":"<Dwarf<R>>::string","value":"pub fn string(&Self, DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_str`.\n","sig":null,"attributes":[{"value":"/ Return the string at the given offset in `.debug_str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411544,"byte_end":411602,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411607,"byte_end":411616,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411831,"byte_end":411842,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"line_string","qualname":"<Dwarf<R>>::line_string","value":"pub fn line_string(&Self, DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_line_str`.\n","sig":null,"attributes":[{"value":"/ Return the string at the given offset in `.debug_line_str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411742,"byte_end":411805,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411810,"byte_end":411819,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412655,"byte_end":412666,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"attr_string","qualname":"<Dwarf<R>>::attr_string","value":"pub fn attr_string(&Self, &Unit<R>, AttributeValue<R>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an attribute value as a string slice.","sig":null,"attributes":[{"value":"/ Return an attribute value as a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":411959,"byte_end":412007,"line_start":224,"line_end":224,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412012,"byte_end":412015,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412020,"byte_end":412057,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412062,"byte_end":412065,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ - an inline `DW_FORM_string` string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412070,"byte_end":412109,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/ - a `DW_FORM_strp` reference to an offset into the `.debug_str` section","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412114,"byte_end":412189,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ - a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412194,"byte_end":412264,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ object file","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412269,"byte_end":412284,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/ - a `DW_FORM_line_strp` reference to an offset into the `.debug_line_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412289,"byte_end":412366,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ section","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412371,"byte_end":412382,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ - a `DW_FORM_strx` index into the `.debug_str_offsets` entries for the unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412387,"byte_end":412466,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412471,"byte_end":412474,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ then return the attribute's string value. Returns an error if the attribute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412479,"byte_end":412558,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ value does not have a string form, or if a string form has an invalid value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":412563,"byte_end":412643,"line_start":237,"line_end":237,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":413712,"byte_end":413719,"line_start":263,"line_end":263,"column_start":12,"column_end":19},"name":"address","qualname":"<Dwarf<R>>::address","value":"pub fn address(&Self, &Unit<R>, DebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the address at the given index.\n","sig":null,"attributes":[{"value":"/ Return the address at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":413658,"byte_end":413700,"line_start":262,"line_end":262,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414214,"byte_end":414226,"line_start":277,"line_end":277,"column_start":12,"column_end":24},"name":"attr_address","qualname":"<Dwarf<R>>::attr_address","value":"pub fn attr_address(&Self, &Unit<R>, AttributeValue<R>) -> Result<Option<u64>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as an address.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as an address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":413907,"byte_end":413958,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":413963,"byte_end":413966,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":413971,"byte_end":414008,"line_start":270,"line_end":270,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414013,"byte_end":414016,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_addr`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414021,"byte_end":414043,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/ - a `DW_FORM_addrx` index into the `.debug_addr` entries for the unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414048,"byte_end":414121,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414126,"byte_end":414129,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ then return the address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414134,"byte_end":414162,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414167,"byte_end":414202,"line_start":276,"line_end":276,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414660,"byte_end":414682,"line_start":288,"line_end":288,"column_start":12,"column_end":34},"name":"ranges_offset_from_raw","qualname":"<Dwarf<R>>::ranges_offset_from_raw","value":"pub fn ranges_offset_from_raw(&Self, &Unit<R>, RawRangeListsOffset<R::Offset>)\n-> RangeListsOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the range list offset for the given raw offset.","sig":null,"attributes":[{"value":"/ Return the range list offset for the given raw offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414517,"byte_end":414575,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414580,"byte_end":414583,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This handles adding `DW_AT_GNU_ranges_base` if required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":414588,"byte_end":414648,"line_start":287,"line_end":287,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":415104,"byte_end":415117,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"ranges_offset","qualname":"<Dwarf<R>>::ranges_offset","value":"pub fn ranges_offset(&Self, &Unit<R>, DebugRngListsIndex<R::Offset>)\n-> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the range list offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the range list offset at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":415040,"byte_end":415092,"line_start":300,"line_end":300,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":415430,"byte_end":415436,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"ranges","qualname":"<Dwarf<R>>::ranges","value":"pub fn ranges(&Self, &Unit<R>, RangeListsOffset<R::Offset>)\n-> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RangeListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `RangeListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":415350,"byte_end":415418,"line_start":310,"line_end":310,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":415820,"byte_end":415830,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"raw_ranges","qualname":"<Dwarf<R>>::raw_ranges","value":"pub fn raw_ranges(&Self, &Unit<R>, RangeListsOffset<R::Offset>)\n-> Result<RawRngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RawRngListEntry`ies starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `RawRngListEntry`ies starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":415737,"byte_end":415808,"line_start":325,"line_end":325,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416440,"byte_end":416458,"line_start":343,"line_end":343,"column_start":12,"column_end":30},"name":"attr_ranges_offset","qualname":"<Dwarf<R>>::attr_ranges_offset","value":"pub fn attr_ranges_offset(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<RangeListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list offset.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a range list offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416020,"byte_end":416080,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416085,"byte_end":416088,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416093,"byte_end":416130,"line_start":336,"line_end":336,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416135,"byte_end":416138,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_ranges` or `.debug_rnglists` sections","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416143,"byte_end":416234,"line_start":338,"line_end":338,"column_start":5,"column_end":96}},{"value":"/ - a `DW_FORM_rnglistx` index into the `.debug_rnglists` entries for the unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416239,"byte_end":416319,"line_start":339,"line_end":339,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416324,"byte_end":416327,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ then return the range list offset of the range list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416332,"byte_end":416388,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416393,"byte_end":416428,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417328,"byte_end":417339,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"attr_ranges","qualname":"<Dwarf<R>>::attr_ranges","value":"pub fn attr_ranges(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<RngListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list entry iterator.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a range list entry iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416893,"byte_end":416961,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416966,"byte_end":416969,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":416974,"byte_end":417011,"line_start":359,"line_end":359,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417016,"byte_end":417019,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_ranges` or `.debug_rnglists` sections","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417024,"byte_end":417115,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ - a `DW_FORM_rnglistx` index into the `.debug_rnglists` entries for the unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417120,"byte_end":417200,"line_start":362,"line_end":362,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417205,"byte_end":417208,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ then return an iterator over the entries in the range list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417213,"byte_end":417276,"line_start":364,"line_end":364,"column_start":5,"column_end":68}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417281,"byte_end":417316,"line_start":365,"line_end":365,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417794,"byte_end":417804,"line_start":380,"line_end":380,"column_start":12,"column_end":22},"name":"die_ranges","qualname":"<Dwarf<R>>::die_ranges","value":"pub fn die_ranges(&Self, &Unit<R>, &DebuggingInformationEntry<, , R>)\n-> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[{"value":"/ Return an iterator for the address ranges of a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417625,"byte_end":417704,"line_start":377,"line_end":377,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417709,"byte_end":417712,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This uses `DW_AT_low_pc`, `DW_AT_high_pc` and `DW_AT_ranges`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":417717,"byte_end":417782,"line_start":379,"line_end":379,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419573,"byte_end":419584,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"unit_ranges","qualname":"<Dwarf<R>>::unit_ranges","value":"pub fn unit_ranges(&Self, &Unit<R>) -> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `Unit`.","sig":null,"attributes":[{"value":"/ Return an iterator for the address ranges of a `Unit`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419377,"byte_end":419435,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419440,"byte_end":419443,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ This uses `DW_AT_low_pc`, `DW_AT_high_pc` and `DW_AT_ranges` of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419448,"byte_end":419519,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/ root `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419524,"byte_end":419561,"line_start":425,"line_end":425,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419910,"byte_end":419926,"line_start":434,"line_end":434,"column_start":12,"column_end":28},"name":"locations_offset","qualname":"<Dwarf<R>>::locations_offset","value":"pub fn locations_offset(&Self, &Unit<R>, DebugLocListsIndex<R::Offset>)\n-> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the location list offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the location list offset at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":419843,"byte_end":419898,"line_start":433,"line_end":433,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":420248,"byte_end":420257,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"locations","qualname":"<Dwarf<R>>::locations","value":"pub fn locations(&Self, &Unit<R>, LocationListsOffset<R::Offset>)\n-> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":420165,"byte_end":420236,"line_start":443,"line_end":443,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":420978,"byte_end":420991,"line_start":468,"line_end":468,"column_start":12,"column_end":25},"name":"raw_locations","qualname":"<Dwarf<R>>::raw_locations","value":"pub fn raw_locations(&Self, &Unit<R>, LocationListsOffset<R::Offset>)\n-> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the raw `LocationListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the raw `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":420891,"byte_end":420966,"line_start":467,"line_end":467,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421778,"byte_end":421799,"line_start":488,"line_end":488,"column_start":12,"column_end":33},"name":"attr_locations_offset","qualname":"<Dwarf<R>>::attr_locations_offset","value":"pub fn attr_locations_offset(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<LocationListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list offset.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a location list offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421352,"byte_end":421415,"line_start":479,"line_end":479,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421420,"byte_end":421423,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421428,"byte_end":421465,"line_start":481,"line_end":481,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421470,"byte_end":421473,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_loc` or `.debug_loclists` sections","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421478,"byte_end":421566,"line_start":483,"line_end":483,"column_start":5,"column_end":93}},{"value":"/ - a `DW_FORM_loclistx` index into the `.debug_loclists` entries for the unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421571,"byte_end":421651,"line_start":484,"line_end":484,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421656,"byte_end":421659,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ then return the location list offset of the location list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421664,"byte_end":421726,"line_start":486,"line_end":486,"column_start":5,"column_end":67}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":421731,"byte_end":421766,"line_start":487,"line_end":487,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422646,"byte_end":422660,"line_start":511,"line_end":511,"column_start":12,"column_end":26},"name":"attr_locations","qualname":"<Dwarf<R>>::attr_locations","value":"pub fn attr_locations(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<LocListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list entry iterator.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a location list entry iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422208,"byte_end":422279,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422284,"byte_end":422287,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422292,"byte_end":422329,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422334,"byte_end":422337,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_loc` or `.debug_loclists` sections","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422342,"byte_end":422430,"line_start":506,"line_end":506,"column_start":5,"column_end":93}},{"value":"/ - a `DW_FORM_loclistx` index into the `.debug_loclists` entries for the unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422435,"byte_end":422515,"line_start":507,"line_end":507,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422520,"byte_end":422523,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ then return an iterator over the entries in the location list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422528,"byte_end":422594,"line_start":509,"line_end":509,"column_start":5,"column_end":71}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422599,"byte_end":422634,"line_start":510,"line_end":510,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":423130,"byte_end":423146,"line_start":525,"line_end":525,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<Dwarf<R>>::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(bool, SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":422952,"byte_end":423033,"line_start":522,"line_end":522,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":423038,"byte_end":423041,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ The first element of the tuple is `true` for supplementary sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":423046,"byte_end":423118,"line_start":524,"line_end":524,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":424338,"byte_end":424350,"line_start":548,"line_end":548,"column_start":12,"column_end":24},"name":"format_error","qualname":"<Dwarf<R>>::format_error","value":"pub fn format_error(&Self, Error) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the given error.","sig":null,"attributes":[{"value":"/ Returns a string representation of the given error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":424166,"byte_end":424221,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":424226,"byte_end":424229,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This uses information from the DWARF sections to provide more information in some cases.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":424234,"byte_end":424326,"line_start":547,"line_end":547,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":6847},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425034,"byte_end":425046,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"DwarfPackage","qualname":"::read::dwarf::DwarfPackage","value":"DwarfPackage { cu_index, tu_index, debug_abbrev, debug_info, debug_line, debug_str, debug_str_offsets, debug_loc, debug_loclists, debug_rnglists, debug_types, empty }","parent":null,"children":[{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6851},{"krate":0,"index":6852},{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6860}],"decl_id":null,"docs":" The sections from a `.dwp` file.\n","sig":null,"attributes":[{"value":"/ The sections from a `.dwp` file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":424969,"byte_end":425005,"line_start":569,"line_end":569,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6849},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425137,"byte_end":425145,"line_start":573,"line_end":573,"column_start":9,"column_end":17},"name":"cu_index","qualname":"::read::dwarf::DwarfPackage::cu_index","value":"read::index::UnitIndex<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The compilation unit index in the `.debug_cu_index` section.\n","sig":null,"attributes":[{"value":"/ The compilation unit index in the `.debug_cu_index` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425064,"byte_end":425128,"line_start":572,"line_end":572,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6850},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425232,"byte_end":425240,"line_start":576,"line_end":576,"column_start":9,"column_end":17},"name":"tu_index","qualname":"::read::dwarf::DwarfPackage::tu_index","value":"read::index::UnitIndex<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The type unit index in the `.debug_tu_index` section.\n","sig":null,"attributes":[{"value":"/ The type unit index in the `.debug_tu_index` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425166,"byte_end":425223,"line_start":575,"line_end":575,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6851},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425306,"byte_end":425318,"line_start":579,"line_end":579,"column_start":9,"column_end":21},"name":"debug_abbrev","qualname":"::read::dwarf::DwarfPackage::debug_abbrev","value":"read::abbrev::DebugAbbrev<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_abbrev.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425261,"byte_end":425297,"line_start":578,"line_end":578,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6852},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425384,"byte_end":425394,"line_start":582,"line_end":582,"column_start":9,"column_end":19},"name":"debug_info","qualname":"::read::dwarf::DwarfPackage::debug_info","value":"read::unit::DebugInfo<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_info.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425341,"byte_end":425375,"line_start":581,"line_end":581,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6853},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425458,"byte_end":425468,"line_start":585,"line_end":585,"column_start":9,"column_end":19},"name":"debug_line","qualname":"::read::dwarf::DwarfPackage::debug_line","value":"read::line::DebugLine<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_line.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425415,"byte_end":425449,"line_start":584,"line_end":584,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6854},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425531,"byte_end":425540,"line_start":588,"line_end":588,"column_start":9,"column_end":18},"name":"debug_str","qualname":"::read::dwarf::DwarfPackage::debug_str","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_str.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425489,"byte_end":425522,"line_start":587,"line_end":587,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6855},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425610,"byte_end":425627,"line_start":591,"line_end":591,"column_start":9,"column_end":26},"name":"debug_str_offsets","qualname":"::read::dwarf::DwarfPackage::debug_str_offsets","value":"read::str::DebugStrOffsets<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425560,"byte_end":425601,"line_start":590,"line_end":590,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6856},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425774,"byte_end":425783,"line_start":596,"line_end":596,"column_start":9,"column_end":18},"name":"debug_loc","qualname":"::read::dwarf::DwarfPackage::debug_loc","value":"read::loclists::DebugLoc<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_loc.dwo` section.","sig":null,"attributes":[{"value":"/ The `.debug_loc.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425654,"byte_end":425687,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425692,"byte_end":425695,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Only present when using GNU split-dwarf extension to DWARF 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425700,"byte_end":425765,"line_start":595,"line_end":595,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":6857},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425850,"byte_end":425864,"line_start":599,"line_end":599,"column_start":9,"column_end":23},"name":"debug_loclists","qualname":"::read::dwarf::DwarfPackage::debug_loclists","value":"read::loclists::DebugLocLists<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_loclists.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loclists.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425803,"byte_end":425841,"line_start":598,"line_end":598,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6858},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425936,"byte_end":425950,"line_start":602,"line_end":602,"column_start":9,"column_end":23},"name":"debug_rnglists","qualname":"::read::dwarf::DwarfPackage::debug_rnglists","value":"read::rnglists::DebugRngLists<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_rnglists.dwo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_rnglists.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425889,"byte_end":425927,"line_start":601,"line_end":601,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426097,"byte_end":426108,"line_start":607,"line_end":607,"column_start":9,"column_end":20},"name":"debug_types","qualname":"::read::dwarf::DwarfPackage::debug_types","value":"read::unit::DebugTypes<R>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The `.debug_types.dwo` section.","sig":null,"attributes":[{"value":"/ The `.debug_types.dwo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":425975,"byte_end":426010,"line_start":604,"line_end":604,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426015,"byte_end":426018,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Only present when using GNU split-dwarf extension to DWARF 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426023,"byte_end":426088,"line_start":606,"line_end":606,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426207,"byte_end":426212,"line_start":612,"line_end":612,"column_start":9,"column_end":14},"name":"empty","qualname":"::read::dwarf::DwarfPackage::empty","value":"R","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" An empty section.","sig":null,"attributes":[{"value":"/ An empty section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426130,"byte_end":426151,"line_start":609,"line_end":609,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426156,"byte_end":426159,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Used when creating `Dwarf<R>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426164,"byte_end":426198,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426481,"byte_end":426485,"line_start":620,"line_end":620,"column_start":12,"column_end":16},"name":"load","qualname":"<DwarfPackage<R>>::load","value":"pub fn load<F, E>(F, R) -> core::result::Result<Self, E> where\nF: FnMut(SectionId) -> core::result::Result<R, E>, E: From<Error>","parent":null,"children":[],"decl_id":null,"docs":" Try to load the `.dwp` sections using the given loader function.","sig":null,"attributes":[{"value":"/ Try to load the `.dwp` sections using the given loader function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426258,"byte_end":426326,"line_start":616,"line_end":616,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426331,"byte_end":426334,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ `section` loads a DWARF section from the object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426339,"byte_end":426396,"line_start":618,"line_end":618,"column_start":5,"column_end":62}},{"value":"/ It should return an empty section if the section does not exist.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426401,"byte_end":426469,"line_start":619,"line_end":619,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":427511,"byte_end":427518,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"find_cu","qualname":"<DwarfPackage<R>>::find_cu","value":"pub fn find_cu(&Self, DwoId, &Dwarf<R>) -> Result<Option<Dwarf<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the compilation unit with the given DWO identifier and return its section\n contributions.\n","sig":null,"attributes":[{"value":"/ Find the compilation unit with the given DWO identifier and return its section","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":427394,"byte_end":427476,"line_start":642,"line_end":642,"column_start":5,"column_end":87}},{"value":"/ contributions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":427481,"byte_end":427499,"line_start":643,"line_end":643,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":427884,"byte_end":427891,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"find_tu","qualname":"<DwarfPackage<R>>::find_tu","value":"pub fn find_tu(&Self, DebugTypeSignature, &Dwarf<R>)\n-> Result<Option<Dwarf<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the type unit with the given type signature and return its section\n contributions.\n","sig":null,"attributes":[{"value":"/ Find the type unit with the given type signature and return its section","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":427774,"byte_end":427849,"line_start":652,"line_end":652,"column_start":5,"column_end":80}},{"value":"/ contributions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":427854,"byte_end":427872,"line_start":653,"line_end":653,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428444,"byte_end":428455,"line_start":671,"line_end":671,"column_start":12,"column_end":23},"name":"cu_sections","qualname":"<DwarfPackage<R>>::cu_sections","value":"pub fn cu_sections(&Self, u32, &Dwarf<R>) -> Result<Dwarf<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return the section contributions of the compilation unit at the given index.","sig":null,"attributes":[{"value":"/ Return the section contributions of the compilation unit at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428205,"byte_end":428285,"line_start":666,"line_end":666,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428290,"byte_end":428293,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ The index must be in the range `1..cu_index.unit_count`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428298,"byte_end":428358,"line_start":668,"line_end":668,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428363,"byte_end":428366,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This function should only be needed by low level parsers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428371,"byte_end":428432,"line_start":670,"line_end":670,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428828,"byte_end":428839,"line_start":680,"line_end":680,"column_start":12,"column_end":23},"name":"tu_sections","qualname":"<DwarfPackage<R>>::tu_sections","value":"pub fn tu_sections(&Self, u32, &Dwarf<R>) -> Result<Dwarf<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return the section contributions of the compilation unit at the given index.","sig":null,"attributes":[{"value":"/ Return the section contributions of the compilation unit at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428589,"byte_end":428669,"line_start":675,"line_end":675,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428674,"byte_end":428677,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ The index must be in the range `1..tu_index.unit_count`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428682,"byte_end":428742,"line_start":677,"line_end":677,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428747,"byte_end":428750,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function should only be needed by low level parsers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428755,"byte_end":428816,"line_start":679,"line_end":679,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":429106,"byte_end":429114,"line_start":687,"line_end":687,"column_start":12,"column_end":20},"name":"sections","qualname":"<DwarfPackage<R>>::sections","value":"pub fn sections(&Self, UnitIndexSectionIterator<, R>, &Dwarf<R>)\n-> Result<Dwarf<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return the section contributions of a unit.","sig":null,"attributes":[{"value":"/ Return the section contributions of a unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":428973,"byte_end":429020,"line_start":684,"line_end":684,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":429025,"byte_end":429028,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function should only be needed by low level parsers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":429033,"byte_end":429094,"line_start":686,"line_end":686,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6864},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433038,"byte_end":433042,"line_start":793,"line_end":793,"column_start":12,"column_end":16},"name":"Unit","qualname":"::read::dwarf::Unit","value":"Unit { header, abbreviations, name, comp_dir, low_pc, str_offsets_base, addr_base, loclists_base, rnglists_base, line_program, dwo_id }","parent":null,"children":[{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877}],"decl_id":null,"docs":" All of the commonly used information for a unit in the `.debug_info` or `.debug_types`\n sections.\n","sig":null,"attributes":[{"value":"/ All of the commonly used information for a unit in the `.debug_info` or `.debug_types`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":432905,"byte_end":432995,"line_start":790,"line_end":790,"column_start":1,"column_end":91}},{"value":"/ sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":432996,"byte_end":433009,"line_start":791,"line_end":791,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":6867},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433184,"byte_end":433190,"line_start":799,"line_end":799,"column_start":9,"column_end":15},"name":"header","qualname":"::read::dwarf::Unit::header","value":"read::unit::UnitHeader<R, Offset>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The header of the unit.\n","sig":null,"attributes":[{"value":"/ The header of the unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433148,"byte_end":433175,"line_start":798,"line_end":798,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6868},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433271,"byte_end":433284,"line_start":802,"line_end":802,"column_start":9,"column_end":22},"name":"abbreviations","qualname":"::read::dwarf::Unit::abbreviations","value":"read::abbrev::Abbreviations","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The parsed abbreviations for the unit.\n","sig":null,"attributes":[{"value":"/ The parsed abbreviations for the unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433220,"byte_end":433262,"line_start":801,"line_end":801,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6869},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433358,"byte_end":433362,"line_start":805,"line_end":805,"column_start":9,"column_end":13},"name":"name","qualname":"::read::dwarf::Unit::name","value":"core::option::Option<R>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_name` attribute of the unit.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_name` attribute of the unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433306,"byte_end":433349,"line_start":804,"line_end":804,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6870},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433436,"byte_end":433444,"line_start":808,"line_end":808,"column_start":9,"column_end":17},"name":"comp_dir","qualname":"::read::dwarf::Unit::comp_dir","value":"core::option::Option<R>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_comp_dir` attribute of the unit.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_comp_dir` attribute of the unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433380,"byte_end":433427,"line_start":807,"line_end":807,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433531,"byte_end":433537,"line_start":811,"line_end":811,"column_start":9,"column_end":15},"name":"low_pc","qualname":"::read::dwarf::Unit::low_pc","value":"u64","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_low_pc` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_low_pc` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433462,"byte_end":433522,"line_start":810,"line_end":810,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6872},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433628,"byte_end":433644,"line_start":814,"line_end":814,"column_start":9,"column_end":25},"name":"str_offsets_base","qualname":"::read::dwarf::Unit::str_offsets_base","value":"common::DebugStrOffsetsBase<Offset>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433549,"byte_end":433619,"line_start":813,"line_end":813,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":6873},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433752,"byte_end":433761,"line_start":817,"line_end":817,"column_start":9,"column_end":18},"name":"addr_base","qualname":"::read::dwarf::Unit::addr_base","value":"common::DebugAddrBase<Offset>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_addr_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_addr_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433680,"byte_end":433743,"line_start":816,"line_end":816,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":6874},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433867,"byte_end":433880,"line_start":820,"line_end":820,"column_start":9,"column_end":22},"name":"loclists_base","qualname":"::read::dwarf::Unit::loclists_base","value":"common::DebugLocListsBase<Offset>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433791,"byte_end":433858,"line_start":819,"line_end":819,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6875},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433990,"byte_end":434003,"line_start":823,"line_end":823,"column_start":9,"column_end":22},"name":"rnglists_base","qualname":"::read::dwarf::Unit::rnglists_base","value":"common::DebugRngListsBase<Offset>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":433914,"byte_end":433981,"line_start":822,"line_end":822,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6876},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434086,"byte_end":434098,"line_start":826,"line_end":826,"column_start":9,"column_end":21},"name":"line_program","qualname":"::read::dwarf::Unit::line_program","value":"core::option::Option<read::line::IncompleteLineProgram<R, Offset>>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The line number program of the unit.\n","sig":null,"attributes":[{"value":"/ The line number program of the unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434037,"byte_end":434077,"line_start":825,"line_end":825,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434216,"byte_end":434222,"line_start":829,"line_end":829,"column_start":9,"column_end":15},"name":"dwo_id","qualname":"::read::dwarf::Unit::dwo_id","value":"core::option::Option<common::DwoId>","parent":{"krate":0,"index":6864},"children":[],"decl_id":null,"docs":" The DWO ID of a skeleton unit or split compilation unit.\n","sig":null,"attributes":[{"value":"/ The DWO ID of a skeleton unit or split compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434147,"byte_end":434207,"line_start":828,"line_end":828,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434352,"byte_end":434355,"line_start":835,"line_end":835,"column_start":12,"column_end":15},"name":"new","qualname":"<Unit<R>>::new","value":"pub fn new(&Dwarf<R>, UnitHeader<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given unit header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434272,"byte_end":434326,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434331,"byte_end":434340,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":438928,"byte_end":438936,"line_start":948,"line_end":948,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Unit<R>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":438853,"byte_end":438902,"line_start":946,"line_end":946,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":438907,"byte_end":438916,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439073,"byte_end":439078,"line_start":953,"line_end":953,"column_start":12,"column_end":17},"name":"entry","qualname":"<Unit<R>>::entry","value":"pub fn entry(&Self, UnitOffset<R::Offset>)\n-> Result<DebuggingInformationEntry<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439000,"byte_end":439061,"line_start":952,"line_end":952,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439305,"byte_end":439312,"line_start":959,"line_end":959,"column_start":12,"column_end":19},"name":"entries","qualname":"<Unit<R>>::entries","value":"pub fn entries(&Self) -> EntriesCursor<, , R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439225,"byte_end":439279,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439284,"byte_end":439293,"line_start":958,"line_end":958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439519,"byte_end":439536,"line_start":966,"line_end":966,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<Unit<R>>::entries_at_offset","value":"pub fn entries_at_offset(&Self, UnitOffset<R::Offset>)\n-> Result<EntriesCursor<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439402,"byte_end":439455,"line_start":963,"line_end":963,"column_start":5,"column_end":58}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439460,"byte_end":439493,"line_start":964,"line_end":964,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439498,"byte_end":439507,"line_start":965,"line_end":965,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439810,"byte_end":439822,"line_start":973,"line_end":973,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<Unit<R>>::entries_tree","value":"pub fn entries_tree(&Self, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesTree<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439683,"byte_end":439746,"line_start":970,"line_end":970,"column_start":5,"column_end":68}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439751,"byte_end":439784,"line_start":971,"line_end":971,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439789,"byte_end":439798,"line_start":972,"line_end":972,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440065,"byte_end":440076,"line_start":979,"line_end":979,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<Unit<R>>::entries_raw","value":"pub fn entries_raw(&Self, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesRaw<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":439970,"byte_end":440039,"line_start":977,"line_end":977,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440044,"byte_end":440053,"line_start":978,"line_end":978,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440444,"byte_end":440469,"line_start":986,"line_end":986,"column_start":12,"column_end":37},"name":"copy_relocated_attributes","qualname":"<Unit<R>>::copy_relocated_attributes","value":"pub fn copy_relocated_attributes(&mut Self, &Unit<R>)","parent":null,"children":[],"decl_id":null,"docs":" Copy attributes that are subject to relocation from another unit. This is intended\n to be used to copy attributes from a skeleton compilation unit to the corresponding\n split compilation unit.\n","sig":null,"attributes":[{"value":"/ Copy attributes that are subject to relocation from another unit. This is intended","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440222,"byte_end":440308,"line_start":983,"line_end":983,"column_start":5,"column_end":91}},{"value":"/ to be used to copy attributes from a skeleton compilation unit to the corresponding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440313,"byte_end":440400,"line_start":984,"line_end":984,"column_start":5,"column_end":92}},{"value":"/ split compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440405,"byte_end":440432,"line_start":985,"line_end":985,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440945,"byte_end":440959,"line_start":999,"line_end":999,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<UnitSectionOffset<T>>::to_unit_offset","value":"pub fn to_unit_offset<R>(&Self, &Unit<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440739,"byte_end":440807,"line_start":996,"line_end":996,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440812,"byte_end":440864,"line_start":997,"line_end":997,"column_start":5,"column_end":57}},{"value":"/ Returns `None` if the offset is not within the unit entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440869,"byte_end":440933,"line_start":998,"line_end":998,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442068,"byte_end":442090,"line_start":1030,"line_end":1030,"column_start":12,"column_end":34},"name":"to_unit_section_offset","qualname":"<UnitOffset<T>>::to_unit_section_offset","value":"pub fn to_unit_section_offset<R>(&Self, &Unit<R>) -> UnitSectionOffset<T>\nwhere R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given compilation unit.","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_info section,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":441850,"byte_end":441927,"line_start":1026,"line_end":1026,"column_start":5,"column_end":82}},{"value":"/ instead of relative to the start of the given compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":441932,"byte_end":441999,"line_start":1027,"line_end":1027,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442004,"byte_end":442007,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ Does not check that the offset is valid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442012,"byte_end":442056,"line_start":1029,"line_end":1029,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442697,"byte_end":442706,"line_start":1049,"line_end":1049,"column_start":12,"column_end":21},"name":"RangeIter","qualname":"::read::dwarf::RangeIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[{"value":"/ An iterator for the address ranges of a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442530,"byte_end":442602,"line_start":1045,"line_end":1045,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442603,"byte_end":442606,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ Returned by `Dwarf::die_ranges` and `Dwarf::unit_ranges`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442607,"byte_end":442668,"line_start":1047,"line_end":1047,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":443062,"byte_end":443066,"line_start":1065,"line_end":1065,"column_start":12,"column_end":16},"name":"next","qualname":"<RangeIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":443007,"byte_end":443050,"line_start":1064,"line_end":1064,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6900},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446075,"byte_end":446086,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"EndianSlice","qualname":"::read::endian_slice::EndianSlice","value":"EndianSlice {  }","parent":null,"children":[{"krate":0,"index":6903},{"krate":0,"index":6904}],"decl_id":null,"docs":" A `&[u8]` slice with endianity metadata.","sig":null,"attributes":[{"value":"/ A `&[u8]` slice with endianity metadata.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":445866,"byte_end":445910,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":445911,"byte_end":445914,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This implements the `Reader` trait, which is used for all reading of DWARF sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":445915,"byte_end":446003,"line_start":15,"line_end":15,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446361,"byte_end":446364,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<EndianSlice>::new","value":"pub fn new(&'input [u8], Endian) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EndianSlice` with the given slice and endianity.\n","sig":null,"attributes":[{"value":"/ Construct a new `EndianSlice` with the given slice and endianity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446266,"byte_end":446335,"line_start":29,"line_end":29,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446340,"byte_end":446349,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446653,"byte_end":446656,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"buf","qualname":"<EndianSlice>::buf","value":"pub fn buf(&Self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446484,"byte_end":446524,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446529,"byte_end":446538,"line_start":36,"line_end":36,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n\"Method renamed to EndianSlice::slice; use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446562,"byte_end":446641,"line_start":38,"line_end":38,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446778,"byte_end":446783,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"slice","qualname":"<EndianSlice>::slice","value":"pub fn slice(&Self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446712,"byte_end":446752,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446757,"byte_end":446766,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447066,"byte_end":447074,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"split_at","qualname":"<EndianSlice>::split_at","value":"pub fn split_at(&Self, usize) -> (EndianSlice, EndianSlice)","parent":null,"children":[],"decl_id":null,"docs":" Split the slice in two at the given index, resulting in the tuple where\n the first item has range [0, idx), and the second has range [idx,\n len). Panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Split the slice in two at the given index, resulting in the tuple where","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446839,"byte_end":446914,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ the first item has range [0, idx), and the second has range [idx,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446919,"byte_end":446988,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ len). Panics if the index is out of bounds.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446993,"byte_end":447040,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447045,"byte_end":447054,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447347,"byte_end":447351,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"find","qualname":"<EndianSlice>::find","value":"pub fn find(&Self, u8) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Find the first occurence of a byte in the slice, and return its index.\n","sig":null,"attributes":[{"value":"/ Find the first occurence of a byte in the slice, and return its index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447247,"byte_end":447321,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447326,"byte_end":447335,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447575,"byte_end":447586,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<EndianSlice>::offset_from","value":"pub fn offset_from(&Self, EndianSlice) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the start of the slice relative to the start\n of the given slice.\n","sig":null,"attributes":[{"value":"/ Return the offset of the start of the slice relative to the start","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447452,"byte_end":447521,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ of the given slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447526,"byte_end":447549,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447554,"byte_end":447563,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448078,"byte_end":448087,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"to_string","qualname":"<EndianSlice>::to_string","value":"pub fn to_string(&Self) -> Result<&'input str>","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string using `str::from_utf8`.","sig":null,"attributes":[{"value":"/ Converts the slice to a string using `str::from_utf8`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447919,"byte_end":447977,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447982,"byte_end":447985,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the slice contains invalid characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":447990,"byte_end":448052,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448057,"byte_end":448066,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448355,"byte_end":448370,"line_start":89,"line_end":89,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<EndianSlice>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string, including invalid characters,\n using `String::from_utf8_lossy`.\n","sig":null,"attributes":[{"value":"/ Converts the slice to a string, including invalid characters,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448194,"byte_end":448259,"line_start":85,"line_end":85,"column_start":5,"column_end":70}},{"value":"/ using `String::from_utf8_lossy`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448264,"byte_end":448300,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448305,"byte_end":448329,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":448334,"byte_end":448343,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449555,"byte_end":449560,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"range","qualname":"<EndianSlice>::range","value":"pub fn range(&Self, Range<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..end` range of the underlying slice and return a\n new `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `start..end` range of the underlying slice and return a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449130,"byte_end":449204,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ new `EndianSlice`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449209,"byte_end":449231,"line_start":116,"line_end":116,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449236,"byte_end":449239,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449244,"byte_end":449251,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449256,"byte_end":449299,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449304,"byte_end":449307,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449312,"byte_end":449354,"line_start":121,"line_end":121,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449359,"byte_end":449420,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range(1..3),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449425,"byte_end":449465,"line_start":123,"line_end":123,"column_start":5,"column_end":45}},{"value":"/            EndianSlice::new(&slice[1..3], LittleEndian));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449470,"byte_end":449531,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449536,"byte_end":449543,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450158,"byte_end":450168,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"range_from","qualname":"<EndianSlice>::range_from","value":"pub fn range_from(&Self, RangeFrom<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `start..` range of the underlying slice and return a new","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449733,"byte_end":449808,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ `EndianSlice`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449813,"byte_end":449831,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449836,"byte_end":449839,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449844,"byte_end":449851,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449856,"byte_end":449899,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449904,"byte_end":449907,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449912,"byte_end":449954,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449959,"byte_end":450020,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range_from(2..),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450025,"byte_end":450069,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/            EndianSlice::new(&slice[2..], LittleEndian));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450074,"byte_end":450134,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450139,"byte_end":450146,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450766,"byte_end":450774,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"range_to","qualname":"<EndianSlice>::range_to","value":"pub fn range_to(&Self, RangeTo<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `..end` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `..end` range of the underlying slice and return a new","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450345,"byte_end":450418,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ `EndianSlice`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450423,"byte_end":450441,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450446,"byte_end":450449,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450454,"byte_end":450461,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450466,"byte_end":450509,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450514,"byte_end":450517,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450522,"byte_end":450564,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450569,"byte_end":450630,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range_to(..3),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450635,"byte_end":450677,"line_start":159,"line_end":159,"column_start":5,"column_end":47}},{"value":"/            EndianSlice::new(&slice[..3], LittleEndian));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450682,"byte_end":450742,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450747,"byte_end":450754,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6940},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455776,"byte_end":455790,"line_start":19,"line_end":19,"column_start":12,"column_end":26},"name":"ReaderOffsetId","qualname":"::read::reader::ReaderOffsetId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an offset within a section reader.","sig":null,"attributes":[{"value":"/ An identifier for an offset within a section reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455414,"byte_end":455470,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455471,"byte_end":455474,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is used for error reporting. The meaning of this value is specific to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455475,"byte_end":455553,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ each reader implementation. The values should be chosen to be unique amongst","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455554,"byte_end":455634,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ all readers. If values are not unique then errors may point to the wrong reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455635,"byte_end":455719,"line_start":17,"line_end":17,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":6942},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455791,"byte_end":455798,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"name":"0","qualname":"::read::reader::ReaderOffsetId::0","value":"u64","parent":{"krate":0,"index":6940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455950,"byte_end":455962,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"ReaderOffset","qualname":"::read::reader::ReaderOffset","value":"ReaderOffset: Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output =\nSelf>","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"decl_id":null,"docs":" A trait for offsets with a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for offsets with a DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455802,"byte_end":455847,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455848,"byte_end":455851,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This allows consumers to choose a size that is appropriate for their address space.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455852,"byte_end":455939,"line_start":23,"line_end":23,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456097,"byte_end":456104,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::read::reader::ReaderOffset::from_u8","value":"pub fn from_u8(u8) -> Self","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Convert a u8 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u8 to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456059,"byte_end":456089,"line_start":27,"line_end":27,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456170,"byte_end":456178,"line_start":31,"line_end":31,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::read::reader::ReaderOffset::from_u16","value":"pub fn from_u16(u16) -> Self","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Convert a u16 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u16 to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456131,"byte_end":456162,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456246,"byte_end":456254,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::read::reader::ReaderOffset::from_i16","value":"pub fn from_i16(i16) -> Self","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Convert an i16 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert an i16 to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456206,"byte_end":456238,"line_start":33,"line_end":33,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456321,"byte_end":456329,"line_start":37,"line_end":37,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::read::reader::ReaderOffset::from_u32","value":"pub fn from_u32(u32) -> Self","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Convert a u32 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u32 to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456282,"byte_end":456313,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456474,"byte_end":456482,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::read::reader::ReaderOffset::from_u64","value":"pub fn from_u64(u64) -> Result<Self>","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Convert a u64 to an offset.","sig":null,"attributes":[{"value":"/ Convert a u64 to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456357,"byte_end":456388,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456393,"byte_end":456396,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Returns `Error::UnsupportedOffset` if the value is too large.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456401,"byte_end":456466,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456557,"byte_end":456565,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"into_u64","qualname":"::read::reader::ReaderOffset::into_u64","value":"pub fn into_u64(Self) -> u64","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Convert an offset to a u64.\n","sig":null,"attributes":[{"value":"/ Convert an offset to a u64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456518,"byte_end":456549,"line_start":44,"line_end":44,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456650,"byte_end":456662,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::read::reader::ReaderOffset::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456585,"byte_end":456642,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456753,"byte_end":456764,"line_start":51,"line_end":51,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::read::reader::ReaderOffset::checked_sub","value":"pub fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`.\n","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456696,"byte_end":456745,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461020,"byte_end":461026,"line_start":215,"line_end":215,"column_start":11,"column_end":17},"name":"Reader","qualname":"::read::reader::Reader","value":"Reader: Debug + Clone","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"decl_id":null,"docs":" A trait for reading the data from a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for reading the data from a DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459426,"byte_end":459480,"line_start":196,"line_end":196,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459481,"byte_end":459484,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ All read operations advance the section offset of the reader","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459485,"byte_end":459549,"line_start":198,"line_end":198,"column_start":1,"column_end":65}},{"value":"/ unless specified otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459550,"byte_end":459581,"line_start":199,"line_end":199,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459582,"byte_end":459585,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ## Choosing a `Reader` Implementation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459586,"byte_end":459627,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459628,"byte_end":459631,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ `gimli` comes with a few different `Reader` implementations and lets you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459632,"byte_end":459708,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/ choose the one that is right for your use case. A `Reader` is essentially a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459709,"byte_end":459788,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ view into the raw bytes that make up some DWARF, but this view might borrow","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459789,"byte_end":459868,"line_start":205,"line_end":205,"column_start":1,"column_end":80}},{"value":"/ the underlying data or use reference counting ownership, and it might be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459869,"byte_end":459945,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ thread safe or not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459946,"byte_end":459969,"line_start":207,"line_end":207,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459970,"byte_end":459973,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ | Implementation    | Ownership         | Thread Safe | Notes |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":459974,"byte_end":460041,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/ |:------------------|:------------------|:------------|:------|","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":460042,"byte_end":460109,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/ | [`EndianSlice`](./struct.EndianSlice.html)        | Borrowed          | Yes         | Fastest, but requires that all of your code work with borrows. |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":460110,"byte_end":460266,"line_start":211,"line_end":211,"column_start":1,"column_end":157}},{"value":"/ | [`EndianRcSlice`](./struct.EndianRcSlice.html)    | Reference counted | No          | Shared ownership via reference counting, which alleviates the borrow restrictions of `EndianSlice` but imposes reference counting increments and decrements. Cannot be sent across threads, because the reference count is not atomic. |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":460267,"byte_end":460591,"line_start":212,"line_end":212,"column_start":1,"column_end":325}},{"value":"/ | [`EndianArcSlice`](./struct.EndianArcSlice.html)  | Reference counted | Yes         | The same as `EndianRcSlice`, but uses atomic reference counting, and therefore reference counting operations are slower but `EndianArcSlice`s may be sent across threads. |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":460592,"byte_end":460855,"line_start":213,"line_end":213,"column_start":1,"column_end":264}},{"value":"/ | [`EndianReader<T>`](./struct.EndianReader.html)   | Same as `T`       | Same as `T` | Escape hatch for easily defining your own type of `Reader`. |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":460856,"byte_end":461009,"line_start":214,"line_end":214,"column_start":1,"column_end":154}}]},{"kind":"Type","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461099,"byte_end":461105,"line_start":217,"line_end":217,"column_start":10,"column_end":16},"name":"Endian","qualname":"::read::reader::Reader::Endian","value":"type Endian: Endianity;","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" The endianity of bytes that are read.\n","sig":null,"attributes":[{"value":"/ The endianity of bytes that are read.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461048,"byte_end":461089,"line_start":216,"line_end":216,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461175,"byte_end":461181,"line_start":220,"line_end":220,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::reader::Reader::Offset","value":"type Offset: ReaderOffset;","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" The type used for offsets and lengths.\n","sig":null,"attributes":[{"value":"/ The type used for offsets and lengths.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461123,"byte_end":461165,"line_start":219,"line_end":219,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461258,"byte_end":461264,"line_start":223,"line_end":223,"column_start":8,"column_end":14},"name":"endian","qualname":"::read::reader::Reader::endian","value":"pub fn endian(&Self) -> Self::Endian","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return the endianity of bytes that are read.\n","sig":null,"attributes":[{"value":"/ Return the endianity of bytes that are read.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461202,"byte_end":461250,"line_start":222,"line_end":222,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461343,"byte_end":461346,"line_start":226,"line_end":226,"column_start":8,"column_end":11},"name":"len","qualname":"::read::reader::Reader::len","value":"pub fn len(&Self) -> Self::Offset","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return the number of bytes remaining.\n","sig":null,"attributes":[{"value":"/ Return the number of bytes remaining.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461294,"byte_end":461335,"line_start":225,"line_end":225,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461430,"byte_end":461435,"line_start":229,"line_end":229,"column_start":8,"column_end":13},"name":"empty","qualname":"::read::reader::Reader::empty","value":"pub fn empty(&mut Self)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to zero.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes remaining to zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461376,"byte_end":461422,"line_start":228,"line_end":228,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461523,"byte_end":461531,"line_start":232,"line_end":232,"column_start":8,"column_end":16},"name":"truncate","qualname":"::read::reader::Reader::truncate","value":"pub fn truncate(&mut Self, Self::Offset) -> Result<()>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to the specified length.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes remaining to the specified length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461453,"byte_end":461515,"line_start":231,"line_end":231,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461806,"byte_end":461817,"line_start":239,"line_end":239,"column_start":8,"column_end":19},"name":"offset_from","qualname":"::read::reader::Reader::offset_from","value":"pub fn offset_from(&Self, &Self) -> Self::Offset","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return the offset of this reader's data relative to the start of\n the given base reader's data.","sig":null,"attributes":[{"value":"/ Return the offset of this reader's data relative to the start of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461582,"byte_end":461650,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ the given base reader's data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461655,"byte_end":461688,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461693,"byte_end":461696,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ May panic if this reader's data is not contained within the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461701,"byte_end":461770,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ base reader's data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461775,"byte_end":461798,"line_start":238,"line_end":238,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461923,"byte_end":461932,"line_start":242,"line_end":242,"column_start":8,"column_end":17},"name":"offset_id","qualname":"::read::reader::Reader::offset_id","value":"pub fn offset_id(&Self) -> ReaderOffsetId","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return an identifier for the current reader offset.\n","sig":null,"attributes":[{"value":"/ Return an identifier for the current reader offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461860,"byte_end":461915,"line_start":241,"line_end":241,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462071,"byte_end":462087,"line_start":246,"line_end":246,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::reader::Reader::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<Self::Offset>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return the offset corresponding to the given `id` if\n it is associated with this reader.\n","sig":null,"attributes":[{"value":"/ Return the offset corresponding to the given `id` if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461964,"byte_end":462020,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/ it is associated with this reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462025,"byte_end":462063,"line_start":245,"line_end":245,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462262,"byte_end":462266,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"find","qualname":"::read::reader::Reader::find","value":"pub fn find(&Self, u8) -> Result<Self::Offset>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Find the index of the first occurence of the given byte.\n The offset of the reader is not changed.\n","sig":null,"attributes":[{"value":"/ Find the index of the first occurence of the given byte.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462145,"byte_end":462205,"line_start":248,"line_end":248,"column_start":5,"column_end":65}},{"value":"/ The offset of the reader is not changed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462210,"byte_end":462254,"line_start":249,"line_end":249,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462364,"byte_end":462368,"line_start":253,"line_end":253,"column_start":8,"column_end":12},"name":"skip","qualname":"::read::reader::Reader::skip","value":"pub fn skip(&mut Self, Self::Offset) -> Result<()>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Discard the specified number of bytes.\n","sig":null,"attributes":[{"value":"/ Discard the specified number of bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462314,"byte_end":462356,"line_start":252,"line_end":252,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462604,"byte_end":462609,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"split","qualname":"::read::reader::Reader::split","value":"pub fn split(&mut Self, Self::Offset) -> Result<Self>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Split a reader in two.","sig":null,"attributes":[{"value":"/ Split a reader in two.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462419,"byte_end":462445,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462450,"byte_end":462453,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ A new reader is returned that can be used to read the next","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462458,"byte_end":462520,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ `len` bytes, and `self` is advanced so that it reads the remainder.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":462525,"byte_end":462596,"line_start":258,"line_end":258,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463359,"byte_end":463367,"line_start":277,"line_end":277,"column_start":8,"column_end":16},"name":"to_slice","qualname":"::read::reader::Reader::to_slice","value":"pub fn to_slice(&Self) -> Result<Cow<, [u8]>>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return all remaining data as a clone-on-write slice.","sig":null,"attributes":[{"value":"/ Return all remaining data as a clone-on-write slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463102,"byte_end":463158,"line_start":270,"line_end":270,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463163,"byte_end":463166,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The slice will be borrowed where possible, but some readers may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463171,"byte_end":463238,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ always return an owned vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463243,"byte_end":463277,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463282,"byte_end":463285,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463290,"byte_end":463322,"line_start":275,"line_end":275,"column_start":5,"column_end":37}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463327,"byte_end":463351,"line_start":276,"line_end":276,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463736,"byte_end":463745,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"to_string","qualname":"::read::reader::Reader::to_string","value":"pub fn to_string(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string.","sig":null,"attributes":[{"value":"/ Convert all remaining data to a clone-on-write string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463402,"byte_end":463460,"line_start":279,"line_end":279,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463465,"byte_end":463468,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The string will be borrowed where possible, but some readers may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463473,"byte_end":463541,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/ always return an owned string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463546,"byte_end":463580,"line_start":282,"line_end":282,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463585,"byte_end":463588,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463593,"byte_end":463625,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463630,"byte_end":463633,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the data contains invalid characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463638,"byte_end":463699,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463704,"byte_end":463728,"line_start":287,"line_end":287,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464069,"byte_end":464084,"line_start":297,"line_end":297,"column_start":8,"column_end":23},"name":"to_string_lossy","qualname":"::read::reader::Reader::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string, including invalid characters.","sig":null,"attributes":[{"value":"/ Convert all remaining data to a clone-on-write string, including invalid characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463779,"byte_end":463867,"line_start":290,"line_end":290,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463872,"byte_end":463875,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The string will be borrowed where possible, but some readers may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463880,"byte_end":463948,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/ always return an owned string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463953,"byte_end":463987,"line_start":293,"line_end":293,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":463992,"byte_end":463995,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464000,"byte_end":464032,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464037,"byte_end":464061,"line_start":296,"line_end":296,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464172,"byte_end":464182,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"read_slice","qualname":"::read::reader::Reader::read_slice","value":"pub fn read_slice(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read exactly `buf.len()` bytes into `buf`.\n","sig":null,"attributes":[{"value":"/ Read exactly `buf.len()` bytes into `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464118,"byte_end":464164,"line_start":299,"line_end":299,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464272,"byte_end":464285,"line_start":304,"line_end":304,"column_start":8,"column_end":21},"name":"read_u8_array","qualname":"::read::reader::Reader::read_u8_array","value":"pub fn read_u8_array<A>(&mut Self) -> Result<A> where A: Sized + Default +\nAsMut<[u8]>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a u8 array.\n","sig":null,"attributes":[{"value":"/ Read a u8 array.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464230,"byte_end":464250,"line_start":302,"line_end":302,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464255,"byte_end":464264,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464583,"byte_end":464591,"line_start":315,"line_end":315,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::read::reader::Reader::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Return true if the number of bytes remaining is zero.\n","sig":null,"attributes":[{"value":"/ Return true if the number of bytes remaining is zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464504,"byte_end":464561,"line_start":313,"line_end":313,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464566,"byte_end":464575,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464703,"byte_end":464710,"line_start":321,"line_end":321,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::read::reader::Reader::read_u8","value":"pub fn read_u8(&mut Self) -> Result<u8>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a u8.\n","sig":null,"attributes":[{"value":"/ Read a u8.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464667,"byte_end":464681,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464686,"byte_end":464695,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464851,"byte_end":464858,"line_start":328,"line_end":328,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::read::reader::Reader::read_i8","value":"pub fn read_i8(&mut Self) -> Result<i8>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an i8.\n","sig":null,"attributes":[{"value":"/ Read an i8.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464814,"byte_end":464829,"line_start":326,"line_end":326,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464834,"byte_end":464843,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465005,"byte_end":465013,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::read::reader::Reader::read_u16","value":"pub fn read_u16(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a u16.\n","sig":null,"attributes":[{"value":"/ Read a u16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464968,"byte_end":464983,"line_start":333,"line_end":333,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":464988,"byte_end":464997,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465178,"byte_end":465186,"line_start":342,"line_end":342,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::read::reader::Reader::read_i16","value":"pub fn read_i16(&mut Self) -> Result<i16>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an i16.\n","sig":null,"attributes":[{"value":"/ Read an i16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465140,"byte_end":465156,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465161,"byte_end":465170,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465350,"byte_end":465358,"line_start":349,"line_end":349,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::read::reader::Reader::read_u32","value":"pub fn read_u32(&mut Self) -> Result<u32>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a u32.\n","sig":null,"attributes":[{"value":"/ Read a u32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465313,"byte_end":465328,"line_start":347,"line_end":347,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465333,"byte_end":465342,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465523,"byte_end":465531,"line_start":356,"line_end":356,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::read::reader::Reader::read_i32","value":"pub fn read_i32(&mut Self) -> Result<i32>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an i32.\n","sig":null,"attributes":[{"value":"/ Read an i32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465485,"byte_end":465501,"line_start":354,"line_end":354,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465506,"byte_end":465515,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465695,"byte_end":465703,"line_start":363,"line_end":363,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::read::reader::Reader::read_u64","value":"pub fn read_u64(&mut Self) -> Result<u64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a u64.\n","sig":null,"attributes":[{"value":"/ Read a u64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465658,"byte_end":465673,"line_start":361,"line_end":361,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465678,"byte_end":465687,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465868,"byte_end":465876,"line_start":370,"line_end":370,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::read::reader::Reader::read_i64","value":"pub fn read_i64(&mut Self) -> Result<i64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an i64.\n","sig":null,"attributes":[{"value":"/ Read an i64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465830,"byte_end":465846,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":465851,"byte_end":465860,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466040,"byte_end":466048,"line_start":377,"line_end":377,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::read::reader::Reader::read_f32","value":"pub fn read_f32(&mut Self) -> Result<f32>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a f32.\n","sig":null,"attributes":[{"value":"/ Read a f32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466003,"byte_end":466018,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466023,"byte_end":466032,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466212,"byte_end":466220,"line_start":384,"line_end":384,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::read::reader::Reader::read_f64","value":"pub fn read_f64(&mut Self) -> Result<f64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a f64.\n","sig":null,"attributes":[{"value":"/ Read a f64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466175,"byte_end":466190,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466195,"byte_end":466204,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466488,"byte_end":466497,"line_start":395,"line_end":395,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::read::reader::Reader::read_uint","value":"pub fn read_uint(&mut Self, usize) -> Result<u64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"/ Read an unsigned n-bytes integer u64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466347,"byte_end":466388,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466393,"byte_end":466396,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466401,"byte_end":466413,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466418,"byte_end":466421,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Panics when nbytes < 1 or nbytes > 8","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466426,"byte_end":466466,"line_start":393,"line_end":393,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466471,"byte_end":466480,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466742,"byte_end":466768,"line_start":402,"line_end":402,"column_start":8,"column_end":34},"name":"read_null_terminated_slice","qualname":"::read::reader::Reader::read_null_terminated_slice","value":"pub fn read_null_terminated_slice(&mut Self) -> Result<Self>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a null-terminated slice, and return it (excluding the null).\n","sig":null,"attributes":[{"value":"/ Read a null-terminated slice, and return it (excluding the null).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466665,"byte_end":466734,"line_start":401,"line_end":401,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466982,"byte_end":466993,"line_start":410,"line_end":410,"column_start":8,"column_end":19},"name":"skip_leb128","qualname":"::read::reader::Reader::skip_leb128","value":"pub fn skip_leb128(&mut Self) -> Result<()>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Skip a LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Skip a LEB128 encoded integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":466940,"byte_end":466974,"line_start":409,"line_end":409,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467117,"byte_end":467129,"line_start":415,"line_end":415,"column_start":8,"column_end":20},"name":"read_uleb128","qualname":"::read::reader::Reader::read_uleb128","value":"pub fn read_uleb128(&mut Self) -> Result<u64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467065,"byte_end":467109,"line_start":414,"line_end":414,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467254,"byte_end":467270,"line_start":420,"line_end":420,"column_start":8,"column_end":24},"name":"read_uleb128_u32","qualname":"::read::reader::Reader::read_uleb128_u32","value":"pub fn read_uleb128_u32(&mut Self) -> Result<u32>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded u32.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded u32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467206,"byte_end":467246,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467471,"byte_end":467487,"line_start":427,"line_end":427,"column_start":8,"column_end":24},"name":"read_uleb128_u16","qualname":"::read::reader::Reader::read_uleb128_u16","value":"pub fn read_uleb128_u16(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded u16.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded u16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467423,"byte_end":467463,"line_start":426,"line_end":426,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467608,"byte_end":467620,"line_start":432,"line_end":432,"column_start":8,"column_end":20},"name":"read_sleb128","qualname":"::read::reader::Reader::read_sleb128","value":"pub fn read_sleb128(&mut Self) -> Result<i64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read a signed LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read a signed LEB128 encoded integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467559,"byte_end":467600,"line_start":431,"line_end":431,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467871,"byte_end":467890,"line_start":440,"line_end":440,"column_start":8,"column_end":27},"name":"read_initial_length","qualname":"::read::reader::Reader::read_initial_length","value":"pub fn read_initial_length(&mut Self) -> Result<(Self::Offset, Format)>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an initial length field.","sig":null,"attributes":[{"value":"/ Read an initial length field.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467695,"byte_end":467728,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467733,"byte_end":467736,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This field is encoded as either a 32-bit length or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467741,"byte_end":467795,"line_start":438,"line_end":438,"column_start":5,"column_end":59}},{"value":"/ a 64-bit length, and the returned `Format` indicates which.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":467800,"byte_end":467863,"line_start":439,"line_end":439,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":468524,"byte_end":468536,"line_start":456,"line_end":456,"column_start":8,"column_end":20},"name":"read_address","qualname":"::read::reader::Reader::read_address","value":"pub fn read_address(&mut Self, u8) -> Result<u64>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Read an address-sized integer, and return it as a `u64`.\n","sig":null,"attributes":[{"value":"/ Read an address-sized integer, and return it as a `u64`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":468456,"byte_end":468516,"line_start":455,"line_end":455,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469076,"byte_end":469085,"line_start":470,"line_end":470,"column_start":8,"column_end":17},"name":"read_word","qualname":"::read::reader::Reader::read_word","value":"pub fn read_word(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Parse a word-sized integer according to the DWARF format.","sig":null,"attributes":[{"value":"/ Parse a word-sized integer according to the DWARF format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":468885,"byte_end":468946,"line_start":466,"line_end":466,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":468951,"byte_end":468954,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ These are always used to encode section offsets or lengths,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":468959,"byte_end":469022,"line_start":468,"line_end":468,"column_start":5,"column_end":68}},{"value":"/ and so have a type of `Self::Offset`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469027,"byte_end":469068,"line_start":469,"line_end":469,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469430,"byte_end":469441,"line_start":479,"line_end":479,"column_start":8,"column_end":19},"name":"read_length","qualname":"::read::reader::Reader::read_length","value":"pub fn read_length(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Parse a word-sized section length according to the DWARF format.\n","sig":null,"attributes":[{"value":"/ Parse a word-sized section length according to the DWARF format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469340,"byte_end":469408,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469413,"byte_end":469422,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469627,"byte_end":469638,"line_start":485,"line_end":485,"column_start":8,"column_end":19},"name":"read_offset","qualname":"::read::reader::Reader::read_offset","value":"pub fn read_offset(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Parse a word-sized section offset according to the DWARF format.\n","sig":null,"attributes":[{"value":"/ Parse a word-sized section offset according to the DWARF format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469537,"byte_end":469605,"line_start":483,"line_end":483,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469610,"byte_end":469619,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469866,"byte_end":469883,"line_start":492,"line_end":492,"column_start":8,"column_end":25},"name":"read_sized_offset","qualname":"::read::reader::Reader::read_sized_offset","value":"pub fn read_sized_offset(&mut Self, u8) -> Result<Self::Offset>","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Parse a section offset of the given size.","sig":null,"attributes":[{"value":"/ Parse a section offset of the given size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469734,"byte_end":469779,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469784,"byte_end":469787,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ This is used for `DW_FORM_ref_addr` values in DWARF version 2.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":469792,"byte_end":469858,"line_start":491,"line_end":491,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":470903,"byte_end":470914,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"DebugAbbrev","qualname":"::read::abbrev::DebugAbbrev","value":"DebugAbbrev {  }","parent":null,"children":[{"krate":0,"index":6957}],"decl_id":null,"docs":" The `DebugAbbrev` struct represents the abbreviations describing\n `DebuggingInformationEntry`s' attribute names and forms found in the\n `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `DebugAbbrev` struct represents the abbreviations describing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":470682,"byte_end":470750,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `DebuggingInformationEntry`s' attribute names and forms found in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":470751,"byte_end":470823,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":470824,"byte_end":470852,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471657,"byte_end":471660,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAbbrev<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471049,"byte_end":471128,"line_start":27,"line_end":27,"column_start":5,"column_end":84}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471133,"byte_end":471145,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471150,"byte_end":471153,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_abbrev` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471158,"byte_end":471235,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471240,"byte_end":471310,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471315,"byte_end":471356,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471361,"byte_end":471364,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471369,"byte_end":471376,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAbbrev, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471381,"byte_end":471424,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471429,"byte_end":471432,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471437,"byte_end":471478,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_abbrev_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471483,"byte_end":471537,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471542,"byte_end":471633,"line_start":39,"line_end":39,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471638,"byte_end":471645,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472021,"byte_end":472034,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<DebugAbbrev<R>>::abbreviations","value":"pub fn abbreviations(&Self, DebugAbbrevOffset<R::Offset>)\n-> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations at the given `offset` within this\n `.debug_abbrev` section.","sig":null,"attributes":[{"value":"/ Parse the abbreviations at the given `offset` within this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471836,"byte_end":471897,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471902,"byte_end":471930,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471935,"byte_end":471938,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The `offset` should generally be retrieved from a unit header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471943,"byte_end":472009,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472955,"byte_end":472961,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAbbrev<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugAbbrev<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAbbrev` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAbbrev` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472321,"byte_end":472391,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472396,"byte_end":472399,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472404,"byte_end":472469,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472474,"byte_end":472477,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472482,"byte_end":472502,"line_start":66,"line_end":66,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472507,"byte_end":472510,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472515,"byte_end":472533,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472538,"byte_end":472583,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472588,"byte_end":472672,"line_start":70,"line_end":70,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAbbrev<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472677,"byte_end":472745,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472750,"byte_end":472797,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472802,"byte_end":472852,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472857,"byte_end":472919,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472924,"byte_end":472931,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472936,"byte_end":472943,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6969},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473670,"byte_end":473683,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"Abbreviations","qualname":"::read::abbrev::Abbreviations","value":"Abbreviations {  }","parent":null,"children":[{"krate":0,"index":6970},{"krate":0,"index":6971}],"decl_id":null,"docs":" A set of type abbreviations.","sig":null,"attributes":[{"value":"/ A set of type abbreviations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473457,"byte_end":473489,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473490,"byte_end":473493,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Construct an `Abbreviations` instance with the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473494,"byte_end":473544,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"/ [`abbreviations()`](struct.UnitHeader.html#method.abbreviations)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473545,"byte_end":473613,"line_start":106,"line_end":106,"column_start":1,"column_end":69}},{"value":"/ method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473614,"byte_end":473625,"line_start":107,"line_end":107,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":475445,"byte_end":475448,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"get","qualname":"<Abbreviations>::get","value":"pub fn get(&Self, u64) -> Option<&Abbreviation>","parent":null,"children":[],"decl_id":null,"docs":" Get the abbreviation associated with the given code.\n","sig":null,"attributes":[{"value":"/ Get the abbreviation associated with the given code.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":475363,"byte_end":475419,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":475424,"byte_end":475433,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476365,"byte_end":476377,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"Abbreviation","qualname":"::read::abbrev::Abbreviation","value":"Abbreviation {  }","parent":null,"children":[{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982}],"decl_id":null,"docs":" An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:\n its code, tag type, whether it has children, and its set of attributes.\n","sig":null,"attributes":[{"value":"/ An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476158,"byte_end":476238,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/ its code, tag type, whether it has children, and its set of attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476239,"byte_end":476314,"line_start":183,"line_end":183,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477013,"byte_end":477017,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"code","qualname":"<Abbreviation>::code","value":"pub fn code(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's code.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's code.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476954,"byte_end":476987,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476992,"byte_end":477001,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477121,"byte_end":477124,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"tag","qualname":"<Abbreviation>::tag","value":"pub fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's tag.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's tag.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477063,"byte_end":477095,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477100,"byte_end":477109,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477282,"byte_end":477294,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Abbreviation>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this abbreviation's type has children, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if this abbreviation's type has children, false otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477182,"byte_end":477256,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477261,"byte_end":477270,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477444,"byte_end":477454,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Abbreviation>::attributes","value":"pub fn attributes(&Self) -> &[AttributeSpecification]","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's attributes.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477379,"byte_end":477418,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":477423,"byte_end":477432,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7004},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481574,"byte_end":481596,"line_start":376,"line_end":376,"column_start":12,"column_end":34},"name":"AttributeSpecification","qualname":"::read::abbrev::AttributeSpecification","value":"AttributeSpecification {  }","parent":null,"children":[{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007}],"decl_id":null,"docs":" The description of an attribute in an abbreviated type. It is a pair of name\n and form.\n","sig":null,"attributes":[{"value":"/ The description of an attribute in an abbreviated type. It is a pair of name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481423,"byte_end":481503,"line_start":373,"line_end":373,"column_start":1,"column_end":81}},{"value":"/ and form.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481504,"byte_end":481517,"line_start":374,"line_end":374,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481856,"byte_end":481859,"line_start":386,"line_end":386,"column_start":12,"column_end":15},"name":"new","qualname":"<AttributeSpecification>::new","value":"pub fn new(constants::DwAt, constants::DwForm, Option<i64>)\n-> AttributeSpecification","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `AttributeSpecification` from the given name and form\n and implicit const value.\n","sig":null,"attributes":[{"value":"/ Construct a new `AttributeSpecification` from the given name and form","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481723,"byte_end":481796,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ and implicit const value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481801,"byte_end":481830,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481835,"byte_end":481844,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482437,"byte_end":482441,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"name","qualname":"<AttributeSpecification>::name","value":"pub fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's name.\n","sig":null,"attributes":[{"value":"/ Get the attribute's name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482382,"byte_end":482411,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482416,"byte_end":482425,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482554,"byte_end":482558,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"form","qualname":"<AttributeSpecification>::form","value":"pub fn form(&Self) -> constants::DwForm","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's form.\n","sig":null,"attributes":[{"value":"/ Get the attribute's form.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482499,"byte_end":482528,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482533,"byte_end":482542,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482689,"byte_end":482709,"line_start":416,"line_end":416,"column_start":12,"column_end":32},"name":"implicit_const_value","qualname":"<AttributeSpecification>::implicit_const_value","value":"pub fn implicit_const_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's implicit const value.\n","sig":null,"attributes":[{"value":"/ Get the attribute's implicit const value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482618,"byte_end":482663,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482668,"byte_end":482677,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":483111,"byte_end":483115,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"size","qualname":"<AttributeSpecification>::size","value":"pub fn size<R: Reader>(&Self, &UnitHeader<R>) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the attribute, in bytes.","sig":null,"attributes":[{"value":"/ Return the size of the attribute, in bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482893,"byte_end":482940,"line_start":424,"line_end":424,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482945,"byte_end":482948,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Note that because some attributes are variably sized, the size cannot","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":482953,"byte_end":483026,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ always be known without parsing, in which case we return `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":483031,"byte_end":483099,"line_start":427,"line_end":427,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7020},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503643,"byte_end":503655,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"DebugAranges","qualname":"::read::aranges::DebugAranges","value":"DebugAranges {  }","parent":null,"children":[{"krate":0,"index":7022}],"decl_id":null,"docs":" The `DebugAranges` struct represents the DWARF address range information\n found in the `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `DebugAranges` struct represents the DWARF address range information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503473,"byte_end":503549,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503550,"byte_end":503592,"line_start":6,"line_end":6,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504368,"byte_end":504371,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAranges<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAranges` instance from the data in the `.debug_aranges`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugAranges` instance from the data in the `.debug_aranges`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503778,"byte_end":503859,"line_start":16,"line_end":16,"column_start":5,"column_end":86}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503864,"byte_end":503876,"line_start":17,"line_end":17,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503881,"byte_end":503884,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_aranges` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503889,"byte_end":503967,"line_start":19,"line_end":19,"column_start":5,"column_end":83}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503972,"byte_end":504042,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504047,"byte_end":504088,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504093,"byte_end":504096,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504101,"byte_end":504108,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAranges, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504113,"byte_end":504157,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504162,"byte_end":504165,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504170,"byte_end":504189,"line_start":26,"line_end":26,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_aranges_section = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504194,"byte_end":504241,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/ let debug_aranges =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504246,"byte_end":504269,"line_start":28,"line_end":28,"column_start":5,"column_end":28}},{"value":"/     DebugAranges::new(read_debug_aranges_section(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504274,"byte_end":504344,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504349,"byte_end":504356,"line_start":30,"line_end":30,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504695,"byte_end":504702,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"headers","qualname":"<DebugAranges<R>>::headers","value":"pub fn headers(&Self) -> ArangeHeaderIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the sets of entries in the `.debug_aranges` section.","sig":null,"attributes":[{"value":"/ Iterate the sets of entries in the `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504557,"byte_end":504621,"line_start":39,"line_end":39,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504626,"byte_end":504629,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Each set of entries belongs to a single unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504634,"byte_end":504683,"line_start":41,"line_end":41,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504938,"byte_end":504944,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"header","qualname":"<DebugAranges<R>>::header","value":"pub fn header(&Self, DebugArangesOffset<R::Offset>) -> Result<ArangeHeader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the header at the given offset.\n","sig":null,"attributes":[{"value":"/ Get the header at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504887,"byte_end":504926,"line_start":49,"line_end":49,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505820,"byte_end":505826,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAranges<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugAranges<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAranges` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAranges` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505184,"byte_end":505255,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505260,"byte_end":505263,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505268,"byte_end":505333,"line_start":60,"line_end":60,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505338,"byte_end":505341,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505346,"byte_end":505366,"line_start":62,"line_end":62,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505371,"byte_end":505374,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505379,"byte_end":505397,"line_start":64,"line_end":64,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505402,"byte_end":505447,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505452,"byte_end":505536,"line_start":66,"line_end":66,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAranges<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505541,"byte_end":505610,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505615,"byte_end":505662,"line_start":68,"line_end":68,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505667,"byte_end":505717,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505722,"byte_end":505784,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505789,"byte_end":505796,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505801,"byte_end":505808,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7034},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506353,"byte_end":506369,"line_start":99,"line_end":99,"column_start":12,"column_end":28},"name":"ArangeHeaderIter","qualname":"::read::aranges::ArangeHeaderIter","value":"ArangeHeaderIter {  }","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7037}],"decl_id":null,"docs":" An iterator over the headers of a `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ An iterator over the headers of a `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506254,"byte_end":506317,"line_start":97,"line_end":97,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506541,"byte_end":506545,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"next","qualname":"<ArangeHeaderIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<ArangeHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506485,"byte_end":506529,"line_start":105,"line_end":105,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7044},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":507490,"byte_end":507502,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"ArangeHeader","qualname":"::read::aranges::ArangeHeader","value":"ArangeHeader {  }","parent":null,"children":[{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7052}],"decl_id":null,"docs":" A header for a set of entries in the `.debug_arange` section.","sig":null,"attributes":[{"value":"/ A header for a set of entries in the `.debug_arange` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":507323,"byte_end":507388,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":507389,"byte_end":507392,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ These entries all belong to a single unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":507393,"byte_end":507439,"line_start":137,"line_end":137,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510012,"byte_end":510018,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"offset","qualname":"<ArangeHeader<R, Offset>>::offset","value":"pub fn offset(&Self) -> DebugArangesOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of this header within the `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ Return the offset of this header within the `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":509913,"byte_end":509986,"line_start":210,"line_end":210,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":509991,"byte_end":510000,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510182,"byte_end":510188,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"length","qualname":"<ArangeHeader<R, Offset>>::length","value":"pub fn length(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the length of this set of entries, including the header.\n","sig":null,"attributes":[{"value":"/ Return the length of this set of entries, including the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510089,"byte_end":510156,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510161,"byte_end":510170,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510324,"byte_end":510332,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"encoding","qualname":"<ArangeHeader<R, Offset>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this set of entries.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this set of entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510239,"byte_end":510298,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510303,"byte_end":510312,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510465,"byte_end":510477,"line_start":230,"line_end":230,"column_start":12,"column_end":24},"name":"segment_size","qualname":"<ArangeHeader<R, Offset>>::segment_size","value":"pub fn segment_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the segment size for this set of entries.\n","sig":null,"attributes":[{"value":"/ Return the segment size for this set of entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510387,"byte_end":510439,"line_start":228,"line_end":228,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510444,"byte_end":510453,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510638,"byte_end":510655,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"debug_info_offset","qualname":"<ArangeHeader<R, Offset>>::debug_info_offset","value":"pub fn debug_info_offset(&Self) -> DebugInfoOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset into the .debug_info section for this set of arange entries.\n","sig":null,"attributes":[{"value":"/ Return the offset into the .debug_info section for this set of arange entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510530,"byte_end":510612,"line_start":234,"line_end":234,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510617,"byte_end":510626,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510802,"byte_end":510809,"line_start":242,"line_end":242,"column_start":12,"column_end":19},"name":"entries","qualname":"<ArangeHeader<R, Offset>>::entries","value":"pub fn entries(&Self) -> ArangeEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the arange entries in this set.\n","sig":null,"attributes":[{"value":"/ Return the arange entries in this set.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510734,"byte_end":510776,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":510781,"byte_end":510790,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511203,"byte_end":511218,"line_start":256,"line_end":256,"column_start":12,"column_end":27},"name":"ArangeEntryIter","qualname":"::read::aranges::ArangeEntryIter","value":"ArangeEntryIter {  }","parent":null,"children":[{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7080}],"decl_id":null,"docs":" An iterator over the aranges from a `.debug_aranges` section.","sig":null,"attributes":[{"value":"/ An iterator over the aranges from a `.debug_aranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511009,"byte_end":511074,"line_start":251,"line_end":251,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511075,"byte_end":511078,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511079,"byte_end":511100,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511101,"byte_end":511167,"line_start":254,"line_end":254,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511730,"byte_end":511734,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"next","qualname":"<ArangeEntryIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<ArangeEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next arange.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next arange.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511336,"byte_end":511388,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511393,"byte_end":511396,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed arange as `Ok(Some(arange))`. Returns `Ok(None)`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511401,"byte_end":511478,"line_start":265,"line_end":265,"column_start":5,"column_end":82}},{"value":"/ when iteration is complete and all aranges have already been parsed and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511483,"byte_end":511558,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ yielded. If an error occurs while parsing the next arange, then this error","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511563,"byte_end":511641,"line_start":267,"line_end":267,"column_start":5,"column_end":83}},{"value":"/ is returned as `Err(e)`, and all subsequent calls return `Ok(None)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511646,"byte_end":511718,"line_start":268,"line_end":268,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":7087},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":512598,"byte_end":512609,"line_start":300,"line_end":300,"column_start":12,"column_end":23},"name":"ArangeEntry","qualname":"::read::aranges::ArangeEntry","value":"ArangeEntry {  }","parent":null,"children":[{"krate":0,"index":7088},{"krate":0,"index":7089},{"krate":0,"index":7090}],"decl_id":null,"docs":" A single parsed arange.\n","sig":null,"attributes":[{"value":"/ A single parsed arange.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":512503,"byte_end":512530,"line_start":298,"line_end":298,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514079,"byte_end":514086,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"segment","qualname":"<ArangeEntry>::segment","value":"pub fn segment(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the segment selector of this arange.\n","sig":null,"attributes":[{"value":"/ Return the segment selector of this arange.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514006,"byte_end":514053,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514058,"byte_end":514067,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514217,"byte_end":514224,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"address","qualname":"<ArangeEntry>::address","value":"pub fn address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the beginning address of this arange.\n","sig":null,"attributes":[{"value":"/ Return the beginning address of this arange.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514143,"byte_end":514191,"line_start":352,"line_end":352,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514196,"byte_end":514205,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514336,"byte_end":514342,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"length","qualname":"<ArangeEntry>::length","value":"pub fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the length of this arange.\n","sig":null,"attributes":[{"value":"/ Return the length of this arange.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514273,"byte_end":514310,"line_start":358,"line_end":358,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514315,"byte_end":514324,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514437,"byte_end":514442,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"range","qualname":"<ArangeEntry>::range","value":"pub fn range(&Self) -> Range","parent":null,"children":[],"decl_id":null,"docs":" Return the range.\n","sig":null,"attributes":[{"value":"/ Return the range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514390,"byte_end":514411,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":514416,"byte_end":514425,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7106},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523846,"byte_end":523858,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"DebugCuIndex","qualname":"::read::index::DebugCuIndex","value":"DebugCuIndex {  }","parent":null,"children":[{"krate":0,"index":7108}],"decl_id":null,"docs":" The data in the `.debug_cu_index` section of a `.dwp` file.","sig":null,"attributes":[{"value":"/ The data in the `.debug_cu_index` section of a `.dwp` file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523674,"byte_end":523737,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523738,"byte_end":523741,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This section contains the compilation unit index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523742,"byte_end":523795,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524092,"byte_end":524095,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugCuIndex<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugCuIndex` instance from the data in the `.debug_cu_index`\n section.\n","sig":null,"attributes":[{"value":"/ Construct a new `DebugCuIndex` instance from the data in the `.debug_cu_index`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523981,"byte_end":524063,"line_start":20,"line_end":20,"column_start":5,"column_end":87}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524068,"byte_end":524080,"line_start":21,"line_end":21,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524566,"byte_end":524571,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"index","qualname":"<DebugCuIndex<R>>::index","value":"pub fn index(Self) -> Result<UnitIndex<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the index header.\n","sig":null,"attributes":[{"value":"/ Parse the index header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524527,"byte_end":524554,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524817,"byte_end":524829,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"DebugTuIndex","qualname":"::read::index::DebugTuIndex","value":"DebugTuIndex {  }","parent":null,"children":[{"krate":0,"index":7122}],"decl_id":null,"docs":" The data in the `.debug_tu_index` section of a `.dwp` file.","sig":null,"attributes":[{"value":"/ The data in the `.debug_tu_index` section of a `.dwp` file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524652,"byte_end":524715,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524716,"byte_end":524719,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This section contains the type unit index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524720,"byte_end":524766,"line_start":52,"line_end":52,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525063,"byte_end":525066,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugTuIndex<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugTuIndex` instance from the data in the `.debug_tu_index`\n section.\n","sig":null,"attributes":[{"value":"/ Construct a new `DebugTuIndex` instance from the data in the `.debug_tu_index`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524952,"byte_end":525034,"line_start":62,"line_end":62,"column_start":5,"column_end":87}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525039,"byte_end":525051,"line_start":63,"line_end":63,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525537,"byte_end":525542,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"index","qualname":"<DebugTuIndex<R>>::index","value":"pub fn index(Self) -> Result<UnitIndex<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the index header.\n","sig":null,"attributes":[{"value":"/ Parse the index header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525498,"byte_end":525525,"line_start":86,"line_end":86,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7134},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525764,"byte_end":525773,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"UnitIndex","qualname":"::read::index::UnitIndex","value":"UnitIndex {  }","parent":null,"children":[{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7141},{"krate":0,"index":7142},{"krate":0,"index":7144},{"krate":0,"index":7145}],"decl_id":null,"docs":" The partially parsed index from a `DebugCuIndex` or `DebugTuIndex`.\n","sig":null,"attributes":[{"value":"/ The partially parsed index from a `DebugCuIndex` or `DebugTuIndex`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525657,"byte_end":525728,"line_start":94,"line_end":94,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":530036,"byte_end":530040,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"find","qualname":"<UnitIndex<R>>::find","value":"pub fn find(&Self, u64) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Find `id` in the index hash table, and return the row index.","sig":null,"attributes":[{"value":"/ Find `id` in the index hash table, and return the row index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":529800,"byte_end":529864,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":529869,"byte_end":529872,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ `id` may be a compilation unit ID if this index is from `.debug_cu_index`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":529877,"byte_end":529955,"line_start":202,"line_end":202,"column_start":5,"column_end":83}},{"value":"/ or a type signature if this index is from `.debug_tu_index`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":529960,"byte_end":530024,"line_start":203,"line_end":203,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":531076,"byte_end":531084,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"sections","qualname":"<UnitIndex<R>>::sections","value":"pub fn sections(&Self, u32) -> Result<UnitIndexSectionIterator<, R>>","parent":null,"children":[],"decl_id":null,"docs":" Return the section offsets and sizes for the given row index.\n","sig":null,"attributes":[{"value":"/ Return the section offsets and sizes for the given row index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":530999,"byte_end":531064,"line_start":230,"line_end":230,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":531879,"byte_end":531886,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"version","qualname":"<UnitIndex<R>>::version","value":"pub fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return the version.\n","sig":null,"attributes":[{"value":"/ Return the version.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":531844,"byte_end":531867,"line_start":254,"line_end":254,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":531981,"byte_end":531994,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"section_count","qualname":"<UnitIndex<R>>::section_count","value":"pub fn section_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the number of sections.\n","sig":null,"attributes":[{"value":"/ Return the number of sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":531935,"byte_end":531969,"line_start":259,"line_end":259,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532092,"byte_end":532102,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"unit_count","qualname":"<UnitIndex<R>>::unit_count","value":"pub fn unit_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the number of units.\n","sig":null,"attributes":[{"value":"/ Return the number of units.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532049,"byte_end":532080,"line_start":264,"line_end":264,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532197,"byte_end":532207,"line_start":270,"line_end":270,"column_start":12,"column_end":22},"name":"slot_count","qualname":"<UnitIndex<R>>::slot_count","value":"pub fn slot_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the number of slots.\n","sig":null,"attributes":[{"value":"/ Return the number of slots.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532154,"byte_end":532185,"line_start":269,"line_end":269,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7152},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532371,"byte_end":532395,"line_start":277,"line_end":277,"column_start":12,"column_end":36},"name":"UnitIndexSectionIterator","qualname":"::read::index::UnitIndexSectionIterator","value":"UnitIndexSectionIterator {  }","parent":null,"children":[{"krate":0,"index":7155},{"krate":0,"index":7156},{"krate":0,"index":7157}],"decl_id":null,"docs":" An iterator over the section offsets and sizes for a row in a `UnitIndex`.\n","sig":null,"attributes":[{"value":"/ An iterator over the section offsets and sizes for a row in a `UnitIndex`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532257,"byte_end":532335,"line_start":275,"line_end":275,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7166},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533122,"byte_end":533138,"line_start":301,"line_end":301,"column_start":12,"column_end":28},"name":"UnitIndexSection","qualname":"::read::index::UnitIndexSection","value":"UnitIndexSection { section, offset, size }","parent":null,"children":[{"krate":0,"index":7167},{"krate":0,"index":7168},{"krate":0,"index":7169}],"decl_id":null,"docs":" Information about a unit's contribution to a section in a `.dwp` file.\n","sig":null,"attributes":[{"value":"/ Information about a unit's contribution to a section in a `.dwp` file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532991,"byte_end":533065,"line_start":299,"line_end":299,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":7167},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533175,"byte_end":533182,"line_start":303,"line_end":303,"column_start":9,"column_end":16},"name":"section","qualname":"::read::index::UnitIndexSection::section","value":"common::SectionId","parent":{"krate":0,"index":7166},"children":[],"decl_id":null,"docs":" The section kind.\n","sig":null,"attributes":[{"value":"/ The section kind.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533145,"byte_end":533166,"line_start":302,"line_end":302,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":7168},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533270,"byte_end":533276,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::index::UnitIndexSection::offset","value":"u32","parent":{"krate":0,"index":7166},"children":[],"decl_id":null,"docs":" The base offset of the unit's contribution to the section.\n","sig":null,"attributes":[{"value":"/ The base offset of the unit's contribution to the section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533199,"byte_end":533261,"line_start":304,"line_end":304,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533351,"byte_end":533355,"line_start":307,"line_end":307,"column_start":9,"column_end":13},"name":"size","qualname":"::read::index::UnitIndexSection::size","value":"u32","parent":{"krate":0,"index":7166},"children":[],"decl_id":null,"docs":" The size of the unit's contribution to the section.\n","sig":null,"attributes":[{"value":"/ The size of the unit's contribution to the section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":533287,"byte_end":533342,"line_start":306,"line_end":306,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7182},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542439,"byte_end":542448,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"DebugLine","qualname":"::read::line::DebugLine","value":"DebugLine {  }","parent":null,"children":[{"krate":0,"index":7184}],"decl_id":null,"docs":" The `DebugLine` struct contains the source location to instruction mapping\n found in the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLine` struct contains the source location to instruction mapping","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542270,"byte_end":542348,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ found in the `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542349,"byte_end":542388,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543171,"byte_end":543174,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLine<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLine` instance from the data in the `.debug_line`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLine` instance from the data in the `.debug_line`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542579,"byte_end":542654,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542659,"byte_end":542671,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542676,"byte_end":542679,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_line` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542684,"byte_end":542759,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542764,"byte_end":542834,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542839,"byte_end":542880,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542885,"byte_end":542888,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542893,"byte_end":542900,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLine, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542905,"byte_end":542946,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542951,"byte_end":542954,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542959,"byte_end":543000,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_line_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543005,"byte_end":543057,"line_start":36,"line_end":36,"column_start":5,"column_end":57}},{"value":"/ let debug_line = DebugLine::new(read_debug_line_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543062,"byte_end":543147,"line_start":37,"line_end":37,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543152,"byte_end":543159,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544496,"byte_end":544503,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"program","qualname":"<DebugLine<R>>::program","value":"pub fn program(&Self, DebugLineOffset<R::Offset>, u8, Option<R>, Option<R>)\n-> Result<IncompleteLineProgram<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the line number program whose header is at the given `offset` in the\n `.debug_line` section.","sig":null,"attributes":[{"value":"/ Parse the line number program whose header is at the given `offset` in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543344,"byte_end":543422,"line_start":45,"line_end":45,"column_start":5,"column_end":83}},{"value":"/ `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543427,"byte_end":543453,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543458,"byte_end":543461,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The `address_size` must match the compilation unit that the lines apply to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543466,"byte_end":543545,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/ The `comp_dir` should be from the `DW_AT_comp_dir` attribute of the compilation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543550,"byte_end":543633,"line_start":49,"line_end":49,"column_start":5,"column_end":88}},{"value":"/ unit. The `comp_name` should be from the `DW_AT_name` attribute of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543638,"byte_end":543712,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543717,"byte_end":543738,"line_start":51,"line_end":51,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543743,"byte_end":543746,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543751,"byte_end":543769,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/ use gimli::{DebugLine, DebugLineOffset, IncompleteLineProgram, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543774,"byte_end":543868,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543873,"byte_end":543876,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543881,"byte_end":543900,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_line_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543905,"byte_end":543957,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"/ let debug_line = DebugLine::new(read_debug_line_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543962,"byte_end":544047,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544052,"byte_end":544055,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ // In a real example, we'd grab the offset via a compilation unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544060,"byte_end":544129,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ // entry's `DW_AT_stmt_list` attribute, and the address size from that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544134,"byte_end":544208,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ // unit directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544213,"byte_end":544234,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/ let offset = DebugLineOffset(0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544239,"byte_end":544275,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/ let address_size = 8;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544280,"byte_end":544305,"line_start":64,"line_end":64,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544310,"byte_end":544313,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let program = debug_line.program(offset, address_size, None, None)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544318,"byte_end":544388,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/     .expect(\"should have found a header at that offset, and parsed it OK\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544393,"byte_end":544472,"line_start":67,"line_end":67,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544477,"byte_end":544484,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545622,"byte_end":545628,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLine<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugLine<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLine` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugLine` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544992,"byte_end":545060,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545065,"byte_end":545068,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545073,"byte_end":545138,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545143,"byte_end":545146,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545151,"byte_end":545171,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545176,"byte_end":545179,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545184,"byte_end":545202,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545207,"byte_end":545252,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545257,"byte_end":545341,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugLine<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545346,"byte_end":545412,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545417,"byte_end":545464,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545469,"byte_end":545519,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545524,"byte_end":545586,"line_start":97,"line_end":97,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545591,"byte_end":545598,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545603,"byte_end":545610,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546258,"byte_end":546275,"line_start":126,"line_end":126,"column_start":10,"column_end":27},"name":"LineNumberProgram","qualname":"::read::line::LineNumberProgram","value":"dyn LineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546085,"byte_end":546155,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"deprecated(note =\n\"LineNumberProgram has been renamed to LineProgram, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546156,"byte_end":546248,"line_start":125,"line_end":125,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546513,"byte_end":546524,"line_start":131,"line_end":131,"column_start":11,"column_end":22},"name":"LineProgram","qualname":"::read::line::LineProgram","value":"LineProgram<R, Offset = <R as Reader>::Offset>","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680}],"decl_id":null,"docs":" A `LineProgram` provides access to a `LineProgramHeader` and\n a way to add files to the files table if necessary. Gimli consumers should\n never need to use or see this trait.\n","sig":null,"attributes":[{"value":"/ A `LineProgram` provides access to a `LineProgramHeader` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546318,"byte_end":546382,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/ a way to add files to the files table if necessary. Gimli consumers should","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546383,"byte_end":546461,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ never need to use or see this trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546462,"byte_end":546502,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546690,"byte_end":546696,"line_start":137,"line_end":137,"column_start":8,"column_end":14},"name":"header","qualname":"::read::line::LineProgram::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Get a reference to the held `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"/ Get a reference to the held `LineProgramHeader`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546630,"byte_end":546682,"line_start":136,"line_end":136,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546796,"byte_end":546804,"line_start":139,"line_end":139,"column_start":8,"column_end":16},"name":"add_file","qualname":"::read::line::LineProgram::add_file","value":"pub fn add_file(&mut Self, FileEntry<R, Offset>)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Add a file to the file table if necessary.\n","sig":null,"attributes":[{"value":"/ Add a file to the file table if necessary.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546742,"byte_end":546788,"line_start":138,"line_end":138,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547697,"byte_end":547709,"line_start":170,"line_end":170,"column_start":10,"column_end":22},"name":"StateMachine","qualname":"::read::line::StateMachine","value":"LineRows<R, Program, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `StateMachine` has been renamed to `LineRows`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `StateMachine` has been renamed to `LineRows`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547540,"byte_end":547602,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n\"StateMachine has been renamed to LineRows, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547603,"byte_end":547687,"line_start":169,"line_end":169,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":7196},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":548090,"byte_end":548098,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"LineRows","qualname":"::read::line::LineRows","value":"LineRows {  }","parent":null,"children":[{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7202}],"decl_id":null,"docs":" Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","sig":null,"attributes":[{"value":"/ Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547763,"byte_end":547858,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547859,"byte_end":547862,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ \"The hypothetical machine used by a consumer of the line number information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547863,"byte_end":547942,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"/ to expand the byte-coded instruction stream into a matrix of line number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":547943,"byte_end":548019,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ information.\" -- Section 6.2.1","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":548020,"byte_end":548054,"line_start":176,"line_end":176,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549620,"byte_end":549626,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"header","qualname":"<LineRows<R, Program, Offset>>::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the header for this state machine's line number\n program.\n","sig":null,"attributes":[{"value":"/ Get a reference to the header for this state machine's line number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549507,"byte_end":549577,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549582,"byte_end":549594,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549599,"byte_end":549608,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":550252,"byte_end":550260,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"next_row","qualname":"<LineRows<R, Program, Offset>>::next_row","value":"pub fn next_row(&mut Self)\n-> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse and execute the next instructions in the line number program until\n another row in the line number matrix is computed.","sig":null,"attributes":[{"value":"/ Parse and execute the next instructions in the line number program until","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549710,"byte_end":549786,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ another row in the line number matrix is computed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549791,"byte_end":549845,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549850,"byte_end":549853,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The freshly computed row is returned as `Ok(Some((header, row)))`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549858,"byte_end":549928,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ If the matrix is complete, and there are no more new rows in the line","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":549933,"byte_end":550006,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ number matrix, then `Ok(None)` is returned. If there was an error parsing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":550011,"byte_end":550088,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/ an instruction, then `Err(e)` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":550093,"byte_end":550139,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":550144,"byte_end":550147,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, the references mean that this cannot be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":550152,"byte_end":550212,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/ `FallibleIterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":550217,"byte_end":550240,"line_start":243,"line_end":243,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551256,"byte_end":551262,"line_start":267,"line_end":267,"column_start":10,"column_end":16},"name":"Opcode","qualname":"::read::line::Opcode","value":"LineInstruction<R, <R as Reader>::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `Opcode` has been renamed to `LineInstruction`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `Opcode` has been renamed to `LineInstruction`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551097,"byte_end":551160,"line_start":265,"line_end":265,"column_start":1,"column_end":64}},{"value":"deprecated(note =\n\"Opcode has been renamed to LineInstruction, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551161,"byte_end":551246,"line_start":266,"line_end":266,"column_start":1,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7216},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552464,"byte_end":552471,"line_start":299,"line_end":299,"column_start":5,"column_end":12},"name":"Special","qualname":"::read::line::LineInstruction::Special","value":"LineInstruction::Special(u8)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" > ### 6.2.5.1 Special Opcodes\n >\n > Each ubyte special opcode has the following effect on the state machine:\n >\n >   1. Add a signed integer to the line register.\n >\n >   2. Modify the operation pointer by incrementing the address and\n >   op_index registers as described below.\n >\n >   3. Append a row to the matrix using the current values of the state\n >   machine registers.\n >\n >   4. Set the basic_block register to “false.”\n >\n >   5. Set the prologue_end register to “false.”\n >\n >   6. Set the epilogue_begin register to “false.”\n >\n >   7. Set the discriminator register to 0.\n >\n > All of the special opcodes do those same seven things; they differ from\n > one another only in what values they add to the line, address and\n > op_index registers.\n","sig":null,"attributes":[{"value":"/ > ### 6.2.5.1 Special Opcodes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551533,"byte_end":551566,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551571,"byte_end":551576,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ > Each ubyte special opcode has the following effect on the state machine:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551581,"byte_end":551659,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551664,"byte_end":551669,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ >   1. Add a signed integer to the line register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551674,"byte_end":551727,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551732,"byte_end":551737,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ >   2. Modify the operation pointer by incrementing the address and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551742,"byte_end":551813,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ >   op_index registers as described below.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551818,"byte_end":551864,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551869,"byte_end":551874,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ >   3. Append a row to the matrix using the current values of the state","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551879,"byte_end":551954,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ >   machine registers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551959,"byte_end":551985,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551990,"byte_end":551995,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/ >   4. Set the basic_block register to “false.”","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552000,"byte_end":552055,"line_start":288,"line_end":288,"column_start":5,"column_end":56}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552060,"byte_end":552065,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ >   5. Set the prologue_end register to “false.”","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552070,"byte_end":552126,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552131,"byte_end":552136,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ >   6. Set the epilogue_begin register to “false.”","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552141,"byte_end":552199,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552204,"byte_end":552209,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ >   7. Set the discriminator register to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552214,"byte_end":552261,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552266,"byte_end":552271,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ > All of the special opcodes do those same seven things; they differ from","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552276,"byte_end":552353,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ > one another only in what values they add to the line, address and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552358,"byte_end":552429,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ > op_index registers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552434,"byte_end":552459,"line_start":298,"line_end":298,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7219},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552757,"byte_end":552761,"line_start":305,"line_end":305,"column_start":5,"column_end":9},"name":"Copy","qualname":"::read::line::LineInstruction::Copy","value":"LineInstruction::Copy","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::Copy`] appends a row to the matrix using the current\n values of the state machine registers. Then it sets the discriminator\n register to 0, and sets the basic_block, prologue_end and epilogue_begin\n registers to “false.”\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::Copy`] appends a row to the matrix using the current","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552482,"byte_end":552558,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ values of the state machine registers. Then it sets the discriminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552563,"byte_end":552636,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ register to 0, and sets the basic_block, prologue_end and epilogue_begin","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552641,"byte_end":552717,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ registers to “false.”\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552722,"byte_end":552752,"line_start":304,"line_end":304,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7221},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552976,"byte_end":552985,"line_start":310,"line_end":310,"column_start":5,"column_end":14},"name":"AdvancePc","qualname":"::read::line::LineInstruction::AdvancePc","value":"LineInstruction::AdvancePc(u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as\n the operation advance and modifies the address and op_index registers\n [the same as `LineInstruction::Special`]\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552768,"byte_end":552843,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ the operation advance and modifies the address and op_index registers","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552848,"byte_end":552921,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/ [the same as `LineInstruction::Special`]\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552926,"byte_end":552971,"line_start":309,"line_end":309,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7224},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553146,"byte_end":553157,"line_start":314,"line_end":314,"column_start":5,"column_end":16},"name":"AdvanceLine","qualname":"::read::line::LineInstruction::AdvanceLine","value":"LineInstruction::AdvanceLine(i64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and\n adds that value to the line register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":552997,"byte_end":553073,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ adds that value to the line register of the state machine.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553078,"byte_end":553141,"line_start":313,"line_end":313,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7227},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553310,"byte_end":553317,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"SetFile","qualname":"::read::line::LineInstruction::SetFile","value":"LineInstruction::SetFile(u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and\n stores it in the file register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553169,"byte_end":553243,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ stores it in the file register of the state machine.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553248,"byte_end":553305,"line_start":317,"line_end":317,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553474,"byte_end":553483,"line_start":322,"line_end":322,"column_start":5,"column_end":14},"name":"SetColumn","qualname":"::read::line::LineInstruction::SetColumn","value":"LineInstruction::SetColumn(u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and\n stores it in the column register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553329,"byte_end":553405,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ stores it in the column register of the state machine.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553410,"byte_end":553469,"line_start":321,"line_end":321,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7233},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553666,"byte_end":553681,"line_start":327,"line_end":327,"column_start":5,"column_end":20},"name":"NegateStatement","qualname":"::read::line::LineInstruction::NegateStatement","value":"LineInstruction::NegateStatement","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt\n register of the state machine to the logical negation of its current\n value.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553495,"byte_end":553568,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ register of the state machine to the logical negation of its current","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553573,"byte_end":553645,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ value.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553650,"byte_end":553661,"line_start":326,"line_end":326,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7235},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553828,"byte_end":553841,"line_start":331,"line_end":331,"column_start":5,"column_end":18},"name":"SetBasicBlock","qualname":"::read::line::LineInstruction::SetBasicBlock","value":"LineInstruction::SetBasicBlock","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_basic_block opcode takes no operands. It sets the\n basic_block register of the state machine to “true.”\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_basic_block opcode takes no operands. It sets the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553688,"byte_end":553757,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ basic_block register of the state machine to “true.”\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553762,"byte_end":553823,"line_start":330,"line_end":330,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7237},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554596,"byte_end":554606,"line_start":344,"line_end":344,"column_start":5,"column_end":15},"name":"ConstAddPc","qualname":"::read::line::LineInstruction::ConstAddPc","value":"LineInstruction::ConstAddPc","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" > The DW_LNS_const_add_pc opcode takes no operands. It advances the\n > address and op_index registers by the increments corresponding to\n > special opcode 255.\n >\n > When the line number program needs to advance the address by a small\n > amount, it can use a single special opcode, which occupies a single\n > byte. When it needs to advance the address by up to twice the range of\n > the last special opcode, it can use DW_LNS_const_add_pc followed by a\n > special opcode, for a total of two bytes. Only if it needs to advance\n > the address by more than twice that range will it need to use both\n > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.\n","sig":null,"attributes":[{"value":"/ > The DW_LNS_const_add_pc opcode takes no operands. It advances the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553848,"byte_end":553919,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ > address and op_index registers by the increments corresponding to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":553924,"byte_end":553995,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/ > special opcode 255.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554000,"byte_end":554025,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554030,"byte_end":554035,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ > When the line number program needs to advance the address by a small","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554040,"byte_end":554114,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ > amount, it can use a single special opcode, which occupies a single","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554119,"byte_end":554192,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ > byte. When it needs to advance the address by up to twice the range of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554197,"byte_end":554273,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ > the last special opcode, it can use DW_LNS_const_add_pc followed by a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554278,"byte_end":554353,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ > special opcode, for a total of two bytes. Only if it needs to advance","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554358,"byte_end":554433,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ > the address by more than twice that range will it need to use both","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554438,"byte_end":554510,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554515,"byte_end":554591,"line_start":343,"line_end":343,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7239},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555006,"byte_end":555016,"line_start":351,"line_end":351,"column_start":5,"column_end":15},"name":"FixedAddPc","qualname":"::read::line::LineInstruction::FixedAddPc","value":"LineInstruction::FixedAddPc(u16)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)\n > operand and adds it to the address register of the state machine and\n > sets the op_index register to 0. This is the only standard opcode whose\n > operand is not a variable length number. It also does not multiply the\n > operand by the minimum_instruction_length field of the header.\n","sig":null,"attributes":[{"value":"/ > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554613,"byte_end":554686,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ > operand and adds it to the address register of the state machine and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554691,"byte_end":554765,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ > sets the op_index register to 0. This is the only standard opcode whose","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554770,"byte_end":554847,"line_start":348,"line_end":348,"column_start":5,"column_end":82}},{"value":"/ > operand is not a variable length number. It also does not multiply the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554852,"byte_end":554928,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ > operand by the minimum_instruction_length field of the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":554933,"byte_end":555001,"line_start":350,"line_end":350,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7242},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555120,"byte_end":555134,"line_start":354,"line_end":354,"column_start":5,"column_end":19},"name":"SetPrologueEnd","qualname":"::read::line::LineInstruction::SetPrologueEnd","value":"LineInstruction::SetPrologueEnd","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555028,"byte_end":555115,"line_start":353,"line_end":353,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7244},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555245,"byte_end":555261,"line_start":358,"line_end":358,"column_start":5,"column_end":21},"name":"SetEpilogueBegin","qualname":"::read::line::LineInstruction::SetEpilogueBegin","value":"LineInstruction::SetEpilogueBegin","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to\n “true”.\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555141,"byte_end":555219,"line_start":356,"line_end":356,"column_start":5,"column_end":83}},{"value":"/ “true”.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555224,"byte_end":555240,"line_start":357,"line_end":357,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7246},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555415,"byte_end":555421,"line_start":362,"line_end":362,"column_start":5,"column_end":11},"name":"SetIsa","qualname":"::read::line::LineInstruction::SetIsa","value":"LineInstruction::SetIsa(u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and\n stores that value in the isa register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555268,"byte_end":555341,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ stores that value in the isa register of the state machine.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555346,"byte_end":555410,"line_start":361,"line_end":361,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7249},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555488,"byte_end":555504,"line_start":365,"line_end":365,"column_start":5,"column_end":21},"name":"UnknownStandard0","qualname":"::read::line::LineInstruction::UnknownStandard0","value":"LineInstruction::UnknownStandard0(constants::DwLns)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" An unknown standard opcode with zero operands.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with zero operands.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555433,"byte_end":555483,"line_start":364,"line_end":364,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7252},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555582,"byte_end":555598,"line_start":368,"line_end":368,"column_start":5,"column_end":21},"name":"UnknownStandard1","qualname":"::read::line::LineInstruction::UnknownStandard1","value":"LineInstruction::UnknownStandard1(constants::DwLns, u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" An unknown standard opcode with one operand.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with one operand.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555529,"byte_end":555577,"line_start":367,"line_end":367,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7256},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555687,"byte_end":555703,"line_start":371,"line_end":371,"column_start":5,"column_end":21},"name":"UnknownStandardN","qualname":"::read::line::LineInstruction::UnknownStandardN","value":"LineInstruction::UnknownStandardN(constants::DwLns, R)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" An unknown standard opcode with multiple operands.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with multiple operands.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555628,"byte_end":555682,"line_start":370,"line_end":370,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7260},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556273,"byte_end":556284,"line_start":380,"line_end":380,"column_start":5,"column_end":16},"name":"EndSequence","qualname":"::read::line::LineInstruction::EndSequence","value":"LineInstruction::EndSequence","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" > [`LineInstruction::EndSequence`] sets the end_sequence register of the state\n > machine to “true” and appends a row to the matrix using the current\n > values of the state-machine registers. Then it resets the registers to\n > the initial values specified above (see Section 6.2.2). Every line\n > number program sequence must end with a DW_LNE_end_sequence instruction\n > which creates a row whose address is that of the byte after the last\n > target machine instruction of the sequence.\n","sig":null,"attributes":[{"value":"/ > [`LineInstruction::EndSequence`] sets the end_sequence register of the state","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555731,"byte_end":555813,"line_start":373,"line_end":373,"column_start":5,"column_end":87}},{"value":"/ > machine to “true” and appends a row to the matrix using the current","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555818,"byte_end":555895,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ > values of the state-machine registers. Then it resets the registers to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555900,"byte_end":555976,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ > the initial values specified above (see Section 6.2.2). Every line","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":555981,"byte_end":556053,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ > number program sequence must end with a DW_LNE_end_sequence instruction","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556058,"byte_end":556135,"line_start":377,"line_end":377,"column_start":5,"column_end":82}},{"value":"/ > which creates a row whose address is that of the byte after the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556140,"byte_end":556214,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ > target machine instruction of the sequence.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556219,"byte_end":556268,"line_start":379,"line_end":379,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7262},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556794,"byte_end":556804,"line_start":390,"line_end":390,"column_start":5,"column_end":15},"name":"SetAddress","qualname":"::read::line::LineInstruction::SetAddress","value":"LineInstruction::SetAddress(u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" > The DW_LNE_set_address opcode takes a single relocatable address as an\n > operand. The size of the operand is the size of an address on the target\n > machine. It sets the address register to the value given by the\n > relocatable address and sets the op_index register to 0.\n >\n > All of the other line number program opcodes that affect the address\n > register add a delta to it. This instruction stores a relocatable value\n > into it instead.\n","sig":null,"attributes":[{"value":"/ > The DW_LNE_set_address opcode takes a single relocatable address as an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556291,"byte_end":556367,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ > operand. The size of the operand is the size of an address on the target","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556372,"byte_end":556450,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ > machine. It sets the address register to the value given by the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556455,"byte_end":556524,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ > relocatable address and sets the op_index register to 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556529,"byte_end":556591,"line_start":385,"line_end":385,"column_start":5,"column_end":67}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556596,"byte_end":556601,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ > All of the other line number program opcodes that affect the address","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556606,"byte_end":556680,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ > register add a delta to it. This instruction stores a relocatable value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556685,"byte_end":556762,"line_start":388,"line_end":388,"column_start":5,"column_end":82}},{"value":"/ > into it instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556767,"byte_end":556789,"line_start":389,"line_end":389,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7265},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556958,"byte_end":556968,"line_start":394,"line_end":394,"column_start":5,"column_end":15},"name":"DefineFile","qualname":"::read::line::LineInstruction::DefineFile","value":"LineInstruction::DefineFile(FileEntry<R, Offset>)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" Defines a new source file in the line number program and appends it to\n the line number program header's list of source files.\n","sig":null,"attributes":[{"value":"/ Defines a new source file in the line number program and appends it to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556816,"byte_end":556890,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ the line number program header's list of source files.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556895,"byte_end":556953,"line_start":393,"line_end":393,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7268},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557166,"byte_end":557182,"line_start":399,"line_end":399,"column_start":5,"column_end":21},"name":"SetDiscriminator","qualname":"::read::line::LineInstruction::SetDiscriminator","value":"LineInstruction::SetDiscriminator(u64)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" \"The DW_LNE_set_discriminator opcode takes a single parameter, an\n unsigned LEB128 integer. It sets the discriminator register to the new\n value.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNE_set_discriminator opcode takes a single parameter, an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":556997,"byte_end":557066,"line_start":396,"line_end":396,"column_start":5,"column_end":74}},{"value":"/ unsigned LEB128 integer. It sets the discriminator register to the new","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557071,"byte_end":557145,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ value.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557150,"byte_end":557161,"line_start":398,"line_end":398,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557269,"byte_end":557284,"line_start":402,"line_end":402,"column_start":5,"column_end":20},"name":"UnknownExtended","qualname":"::read::line::LineInstruction::UnknownExtended","value":"LineInstruction::UnknownExtended(constants::DwLne, R)","parent":{"krate":0,"index":7213},"children":[],"decl_id":null,"docs":" An unknown extended opcode and the slice of its unparsed operands.\n","sig":null,"attributes":[{"value":"/ An unknown extended opcode and the slice of its unparsed operands.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557194,"byte_end":557264,"line_start":401,"line_end":401,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":7213},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551412,"byte_end":551427,"line_start":271,"line_end":271,"column_start":10,"column_end":25},"name":"LineInstruction","qualname":"::read::line::LineInstruction","value":"pub enum LineInstruction<R, Offset = <R as Reader>::Offset> where\n    R: Reader<Offset = Offset>, Offset: ReaderOffset {\n    Special(u8),\n    Copy,\n    AdvancePc(u64),\n    AdvanceLine(i64),\n    SetFile(u64),\n    SetColumn(u64),\n    NegateStatement,\n    SetBasicBlock,\n    ConstAddPc,\n    FixedAddPc(u16),\n    SetPrologueEnd,\n    SetEpilogueBegin,\n    SetIsa(u64),\n    UnknownStandard0(constants::DwLns),\n    UnknownStandard1(constants::DwLns, u64),\n    UnknownStandardN(constants::DwLns, R),\n    EndSequence,\n    SetAddress(u64),\n    DefineFile(FileEntry<R, Offset>),\n    SetDiscriminator(u64),\n    UnknownExtended(constants::DwLne, R),\n}","parent":null,"children":[{"krate":0,"index":7216},{"krate":0,"index":7219},{"krate":0,"index":7221},{"krate":0,"index":7224},{"krate":0,"index":7227},{"krate":0,"index":7230},{"krate":0,"index":7233},{"krate":0,"index":7235},{"krate":0,"index":7237},{"krate":0,"index":7239},{"krate":0,"index":7242},{"krate":0,"index":7244},{"krate":0,"index":7246},{"krate":0,"index":7249},{"krate":0,"index":7252},{"krate":0,"index":7256},{"krate":0,"index":7260},{"krate":0,"index":7262},{"krate":0,"index":7265},{"krate":0,"index":7268},{"krate":0,"index":7271}],"decl_id":null,"docs":" A parsed line number program instruction.\n","sig":null,"attributes":[{"value":"/ A parsed line number program instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":551312,"byte_end":551357,"line_start":269,"line_end":269,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564855,"byte_end":564866,"line_start":577,"line_end":577,"column_start":10,"column_end":21},"name":"OpcodesIter","qualname":"::read::line::OpcodesIter","value":"LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564684,"byte_end":564753,"line_start":575,"line_end":575,"column_start":1,"column_end":70}},{"value":"deprecated(note =\n\"OpcodesIter has been renamed to LineInstructions, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564754,"byte_end":564845,"line_start":576,"line_end":576,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":7301},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565102,"byte_end":565118,"line_start":585,"line_end":585,"column_start":12,"column_end":28},"name":"LineInstructions","qualname":"::read::line::LineInstructions","value":"LineInstructions {  }","parent":null,"children":[{"krate":0,"index":7303}],"decl_id":null,"docs":" An iterator yielding parsed instructions.","sig":null,"attributes":[{"value":"/ An iterator yielding parsed instructions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564894,"byte_end":564939,"line_start":579,"line_end":579,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564940,"byte_end":564943,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564944,"byte_end":564951,"line_start":581,"line_end":581,"column_start":1,"column_end":8}},{"value":"/ [`LineProgramHeader::instructions`](./struct.LineProgramHeader.html#method.instructions)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":564952,"byte_end":565044,"line_start":582,"line_end":582,"column_start":1,"column_end":93}},{"value":"/ for more details.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565045,"byte_end":565066,"line_start":583,"line_end":583,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566098,"byte_end":566114,"line_start":611,"line_end":611,"column_start":12,"column_end":28},"name":"next_instruction","qualname":"<LineInstructions<R>>::next_instruction","value":"pub fn next_instruction(&mut Self, &LineProgramHeader<R>)\n-> Result<Option<LineInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next instruction.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565505,"byte_end":565562,"line_start":599,"line_end":599,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565567,"byte_end":565570,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed instruction as `Ok(Some(instruction))`. Returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565575,"byte_end":565651,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)` when iteration is complete and all instructions have already been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565656,"byte_end":565736,"line_start":602,"line_end":602,"column_start":5,"column_end":85}},{"value":"/ parsed and yielded. If an error occurs while parsing the next attribute,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565741,"byte_end":565817,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565822,"byte_end":565898,"line_start":604,"line_end":604,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565903,"byte_end":565918,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565923,"byte_end":565926,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, the `header` parameter means that this cannot be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565931,"byte_end":566000,"line_start":607,"line_end":607,"column_start":5,"column_end":74}},{"value":"/ `FallibleIterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566005,"byte_end":566028,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"allow(clippy :: inline_always)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566033,"byte_end":566064,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566069,"byte_end":566086,"line_start":610,"line_end":610,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566686,"byte_end":566699,"line_start":631,"line_end":631,"column_start":10,"column_end":23},"name":"LineNumberRow","qualname":"::read::line::LineNumberRow","value":"LineRow","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberRow` has been renamed to `LineRow`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberRow` has been renamed to `LineRow`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566529,"byte_end":566591,"line_start":629,"line_end":629,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n\"LineNumberRow has been renamed to LineRow, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566592,"byte_end":566676,"line_start":630,"line_end":630,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":7310},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566920,"byte_end":566927,"line_start":637,"line_end":637,"column_start":12,"column_end":19},"name":"LineRow","qualname":"::read::line::LineRow","value":"LineRow {  }","parent":null,"children":[{"krate":0,"index":7311},{"krate":0,"index":7312},{"krate":0,"index":7313},{"krate":0,"index":7314},{"krate":0,"index":7315},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7318},{"krate":0,"index":7319},{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":7322}],"decl_id":null,"docs":" A row in the line number program's resulting matrix.","sig":null,"attributes":[{"value":"/ A row in the line number program's resulting matrix.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566712,"byte_end":566768,"line_start":633,"line_end":633,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566769,"byte_end":566772,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ Each row is a copy of the registers of the state machine, as defined in section 6.2.2.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":566773,"byte_end":566863,"line_start":635,"line_end":635,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":567304,"byte_end":567307,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"new","qualname":"<LineRow>::new","value":"pub fn new<R: Reader>(&LineProgramHeader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a line number row in the initial state for the given program.\n","sig":null,"attributes":[{"value":"/ Create a line number row in the initial state for the given program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":567220,"byte_end":567292,"line_start":653,"line_end":653,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568427,"byte_end":568434,"line_start":681,"line_end":681,"column_start":12,"column_end":19},"name":"address","qualname":"<LineRow>::address","value":"pub fn address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"The program-counter value corresponding to a machine instruction\n generated by the compiler.\"\n","sig":null,"attributes":[{"value":"/ \"The program-counter value corresponding to a machine instruction","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568296,"byte_end":568365,"line_start":678,"line_end":678,"column_start":5,"column_end":74}},{"value":"/ generated by the compiler.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568370,"byte_end":568401,"line_start":679,"line_end":679,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568406,"byte_end":568415,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568912,"byte_end":568920,"line_start":693,"line_end":693,"column_start":12,"column_end":20},"name":"op_index","qualname":"<LineRow>::op_index","value":"pub fn op_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned integer representing the index of an operation within a VLIW\n > instruction. The index of the first operation is 0. For non-VLIW\n > architectures, this register will always be 0.\n >\n > The address and op_index registers, taken together, form an operation\n > pointer that can reference any individual operation with the\n > instruction stream.\n","sig":null,"attributes":[{"value":"/ > An unsigned integer representing the index of an operation within a VLIW","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568485,"byte_end":568563,"line_start":685,"line_end":685,"column_start":5,"column_end":83}},{"value":"/ > instruction. The index of the first operation is 0. For non-VLIW","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568568,"byte_end":568638,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ > architectures, this register will always be 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568643,"byte_end":568695,"line_start":687,"line_end":687,"column_start":5,"column_end":57}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568700,"byte_end":568705,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ > The address and op_index registers, taken together, form an operation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568710,"byte_end":568785,"line_start":689,"line_end":689,"column_start":5,"column_end":80}},{"value":"/ > pointer that can reference any individual operation with the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568790,"byte_end":568856,"line_start":690,"line_end":690,"column_start":5,"column_end":71}},{"value":"/ > instruction stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568861,"byte_end":568886,"line_start":691,"line_end":691,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568891,"byte_end":568900,"line_start":692,"line_end":692,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569114,"byte_end":569124,"line_start":700,"line_end":700,"column_start":12,"column_end":22},"name":"file_index","qualname":"<LineRow>::file_index","value":"pub fn file_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating the identity of the source file\n corresponding to a machine instruction.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating the identity of the source file","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":568972,"byte_end":569039,"line_start":697,"line_end":697,"column_start":5,"column_end":72}},{"value":"/ corresponding to a machine instruction.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569044,"byte_end":569088,"line_start":698,"line_end":698,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569093,"byte_end":569102,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569265,"byte_end":569269,"line_start":706,"line_end":706,"column_start":12,"column_end":16},"name":"file","qualname":"<LineRow>::file","value":"pub fn file<'header, R: Reader>(&Self, &'header LineProgramHeader<R>)\n-> Option<&'header FileEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" The source file corresponding to the current machine instruction.\n","sig":null,"attributes":[{"value":"/ The source file corresponding to the current machine instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569170,"byte_end":569239,"line_start":704,"line_end":704,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569244,"byte_end":569253,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569735,"byte_end":569739,"line_start":718,"line_end":718,"column_start":12,"column_end":16},"name":"line","qualname":"<LineRow>::line","value":"pub fn line(&Self) -> Option<NonZeroU64>","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a source line number. Lines are numbered\n beginning at 1. The compiler may emit the value 0 in cases where an\n instruction cannot be attributed to any source line.\"\n Line number values of 0 are represented as `None`.\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating a source line number. Lines are numbered","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569436,"byte_end":569512,"line_start":713,"line_end":713,"column_start":5,"column_end":81}},{"value":"/ beginning at 1. The compiler may emit the value 0 in cases where an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569517,"byte_end":569588,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ instruction cannot be attributed to any source line.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569593,"byte_end":569650,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/ Line number values of 0 are represented as `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569655,"byte_end":569709,"line_start":716,"line_end":716,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569714,"byte_end":569723,"line_start":717,"line_end":717,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570068,"byte_end":570074,"line_start":726,"line_end":726,"column_start":12,"column_end":18},"name":"column","qualname":"<LineRow>::column","value":"pub fn column(&Self) -> ColumnType","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a column number within a source\n line. Columns are numbered beginning at 1. The value 0 is reserved to\n indicate that a statement begins at the “left edge” of the line.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating a column number within a source","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569819,"byte_end":569886,"line_start":722,"line_end":722,"column_start":5,"column_end":72}},{"value":"/ line. Columns are numbered beginning at 1. The value 0 is reserved to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569891,"byte_end":569964,"line_start":723,"line_end":723,"column_start":5,"column_end":78}},{"value":"/ indicate that a statement begins at the “left edge” of the line.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":569969,"byte_end":570042,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570047,"byte_end":570056,"line_start":725,"line_end":725,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570511,"byte_end":570518,"line_start":737,"line_end":737,"column_start":12,"column_end":19},"name":"is_stmt","qualname":"<LineRow>::is_stmt","value":"pub fn is_stmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is a recommended\n breakpoint location. A recommended breakpoint location is intended to\n “represent” a line, a statement and/or a semantically distinct subpart\n of a statement.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current instruction is a recommended","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570228,"byte_end":570299,"line_start":732,"line_end":732,"column_start":5,"column_end":76}},{"value":"/ breakpoint location. A recommended breakpoint location is intended to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570304,"byte_end":570377,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ “represent” a line, a statement and/or a semantically distinct subpart","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570382,"byte_end":570460,"line_start":734,"line_end":734,"column_start":5,"column_end":79}},{"value":"/ of a statement.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570465,"byte_end":570485,"line_start":735,"line_end":735,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570490,"byte_end":570499,"line_start":736,"line_end":736,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570692,"byte_end":570703,"line_start":744,"line_end":744,"column_start":12,"column_end":23},"name":"basic_block","qualname":"<LineRow>::basic_block","value":"pub fn basic_block(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is the beginning of a\n basic block.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current instruction is the beginning of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570568,"byte_end":570644,"line_start":741,"line_end":741,"column_start":5,"column_end":81}},{"value":"/ basic block.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570649,"byte_end":570666,"line_start":742,"line_end":742,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570671,"byte_end":570680,"line_start":743,"line_end":743,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571052,"byte_end":571064,"line_start":753,"line_end":753,"column_start":12,"column_end":24},"name":"end_sequence","qualname":"<LineRow>::end_sequence","value":"pub fn end_sequence(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is that of the first byte\n after the end of a sequence of target machine instructions. end_sequence\n terminates a sequence of lines; therefore other information in the same\n row is not meaningful.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is that of the first byte","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570757,"byte_end":570833,"line_start":748,"line_end":748,"column_start":5,"column_end":81}},{"value":"/ after the end of a sequence of target machine instructions. end_sequence","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570838,"byte_end":570914,"line_start":749,"line_end":749,"column_start":5,"column_end":81}},{"value":"/ terminates a sequence of lines; therefore other information in the same","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570919,"byte_end":570994,"line_start":750,"line_end":750,"column_start":5,"column_end":80}},{"value":"/ row is not meaningful.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":570999,"byte_end":571026,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571031,"byte_end":571040,"line_start":752,"line_end":752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571313,"byte_end":571325,"line_start":761,"line_end":761,"column_start":12,"column_end":24},"name":"prologue_end","qualname":"<LineRow>::prologue_end","value":"pub fn prologue_end(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an entry breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is one (of possibly many)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571119,"byte_end":571195,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ where execution should be suspended for an entry breakpoint of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571200,"byte_end":571268,"line_start":758,"line_end":758,"column_start":5,"column_end":73}},{"value":"/ function.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571273,"byte_end":571287,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571292,"byte_end":571301,"line_start":760,"line_end":760,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571573,"byte_end":571587,"line_start":769,"line_end":769,"column_start":12,"column_end":26},"name":"epilogue_begin","qualname":"<LineRow>::epilogue_begin","value":"pub fn epilogue_begin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an exit breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is one (of possibly many)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571380,"byte_end":571456,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ where execution should be suspended for an exit breakpoint of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571461,"byte_end":571528,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/ function.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571533,"byte_end":571547,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571552,"byte_end":571561,"line_start":768,"line_end":768,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572094,"byte_end":572097,"line_start":782,"line_end":782,"column_start":12,"column_end":15},"name":"isa","qualname":"<LineRow>::isa","value":"pub fn isa(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Tag for the current instruction set architecture.","sig":null,"attributes":[{"value":"/ Tag for the current instruction set architecture.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571644,"byte_end":571697,"line_start":773,"line_end":773,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571702,"byte_end":571705,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ > An unsigned integer whose value encodes the applicable instruction set","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571710,"byte_end":571786,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ > architecture for the current instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571791,"byte_end":571838,"line_start":776,"line_end":776,"column_start":5,"column_end":52}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571843,"byte_end":571848,"line_start":777,"line_end":777,"column_start":5,"column_end":10}},{"value":"/ > The encoding of instruction sets should be shared by all users of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571853,"byte_end":571926,"line_start":778,"line_end":778,"column_start":5,"column_end":78}},{"value":"/ > given architecture. It is recommended that this encoding be defined by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":571931,"byte_end":572007,"line_start":779,"line_end":779,"column_start":5,"column_end":81}},{"value":"/ > the ABI authoring committee for each architecture.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572012,"byte_end":572068,"line_start":780,"line_end":780,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572073,"byte_end":572082,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572581,"byte_end":572594,"line_start":793,"line_end":793,"column_start":12,"column_end":25},"name":"discriminator","qualname":"<LineRow>::discriminator","value":"pub fn discriminator(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer identifying the block to which the current\n instruction belongs. Discriminator values are assigned arbitrarily by\n the DWARF producer and serve to distinguish among multiple blocks that\n may all be associated with the same source file, line, and column. Where\n only one block exists for a given source position, the discriminator\n value should be zero.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer identifying the block to which the current","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572142,"byte_end":572209,"line_start":786,"line_end":786,"column_start":5,"column_end":72}},{"value":"/ instruction belongs. Discriminator values are assigned arbitrarily by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572214,"byte_end":572287,"line_start":787,"line_end":787,"column_start":5,"column_end":78}},{"value":"/ the DWARF producer and serve to distinguish among multiple blocks that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572292,"byte_end":572366,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ may all be associated with the same source file, line, and column. Where","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572371,"byte_end":572447,"line_start":789,"line_end":789,"column_start":5,"column_end":81}},{"value":"/ only one block exists for a given source position, the discriminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572452,"byte_end":572524,"line_start":790,"line_end":790,"column_start":5,"column_end":77}},{"value":"/ value should be zero.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572529,"byte_end":572555,"line_start":791,"line_end":791,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572560,"byte_end":572569,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572850,"byte_end":572857,"line_start":802,"line_end":802,"column_start":12,"column_end":19},"name":"execute","qualname":"<LineRow>::execute","value":"pub fn execute<R, Program>(&mut Self, LineInstruction<R>, &mut Program)\n-> bool where Program: LineProgram<R>, R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Execute the given instruction, and return true if a new row in the\n line number matrix needs to be generated.","sig":null,"attributes":[{"value":"/ Execute the given instruction, and return true if a new row in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572649,"byte_end":572719,"line_start":797,"line_end":797,"column_start":5,"column_end":75}},{"value":"/ line number matrix needs to be generated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572724,"byte_end":572769,"line_start":798,"line_end":798,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572774,"byte_end":572777,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Unknown opcodes are treated as no-ops.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572782,"byte_end":572824,"line_start":800,"line_end":800,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":572829,"byte_end":572838,"line_start":801,"line_end":801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":575990,"byte_end":575995,"line_start":908,"line_end":908,"column_start":12,"column_end":17},"name":"reset","qualname":"<LineRow>::reset","value":"pub fn reset<R: Reader>(&mut Self, &LineProgramHeader<R>)","parent":null,"children":[],"decl_id":null,"docs":" Perform any reset that was required after copying the previous row.\n","sig":null,"attributes":[{"value":"/ Perform any reset that was required after copying the previous row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":575893,"byte_end":575964,"line_start":906,"line_end":906,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":575969,"byte_end":575978,"line_start":907,"line_end":907,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7336},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579222,"byte_end":579230,"line_start":992,"line_end":992,"column_start":5,"column_end":13},"name":"LeftEdge","qualname":"::read::line::ColumnType::LeftEdge","value":"ColumnType::LeftEdge","parent":{"krate":0,"index":7335},"children":[],"decl_id":null,"docs":" The `LeftEdge` means that the statement begins at the start of the new\n line.\n","sig":null,"attributes":[{"value":"/ The `LeftEdge` means that the statement begins at the start of the new","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579129,"byte_end":579203,"line_start":990,"line_end":990,"column_start":5,"column_end":79}},{"value":"/ line.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579208,"byte_end":579217,"line_start":991,"line_end":991,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7338},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579286,"byte_end":579292,"line_start":994,"line_end":994,"column_start":5,"column_end":11},"name":"Column","qualname":"::read::line::ColumnType::Column","value":"ColumnType::Column(NonZeroU64)","parent":{"krate":0,"index":7335},"children":[],"decl_id":null,"docs":" A column number, whose range begins at 1.\n","sig":null,"attributes":[{"value":"/ A column number, whose range begins at 1.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579236,"byte_end":579281,"line_start":993,"line_end":993,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":7335},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579112,"byte_end":579122,"line_start":989,"line_end":989,"column_start":10,"column_end":20},"name":"ColumnType","qualname":"::read::line::ColumnType","value":"pub enum ColumnType { LeftEdge, Column(NonZeroU64), }","parent":null,"children":[{"krate":0,"index":7336},{"krate":0,"index":7338}],"decl_id":null,"docs":" The type of column that a row is referring to.\n","sig":null,"attributes":[{"value":"/ The type of column that a row is referring to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":578990,"byte_end":579040,"line_start":987,"line_end":987,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579486,"byte_end":579504,"line_start":999,"line_end":999,"column_start":10,"column_end":28},"name":"LineNumberSequence","qualname":"::read::line::LineNumberSequence","value":"LineSequence<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579309,"byte_end":579381,"line_start":997,"line_end":997,"column_start":1,"column_end":73}},{"value":"deprecated(note =\n\"LineNumberSequence has been renamed to LineSequence, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579382,"byte_end":579476,"line_start":998,"line_end":998,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":7357},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579771,"byte_end":579783,"line_start":1005,"line_end":1005,"column_start":12,"column_end":24},"name":"LineSequence","qualname":"::read::line::LineSequence","value":"LineSequence { start, end }","parent":null,"children":[{"krate":0,"index":7359},{"krate":0,"index":7360},{"krate":0,"index":7361}],"decl_id":null,"docs":" A sequence within a line number program.  A sequence, as defined in section\n 6.2.5 of the standard, is a linear subset of a line number program within\n which addresses are monotonically increasing.\n","sig":null,"attributes":[{"value":"/ A sequence within a line number program.  A sequence, as defined in section","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579528,"byte_end":579607,"line_start":1001,"line_end":1001,"column_start":1,"column_end":80}},{"value":"/ 6.2.5 of the standard, is a linear subset of a line number program within","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579608,"byte_end":579685,"line_start":1002,"line_end":1002,"column_start":1,"column_end":78}},{"value":"/ which addresses are monotonically increasing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579686,"byte_end":579735,"line_start":1003,"line_end":1003,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7359},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579904,"byte_end":579909,"line_start":1008,"line_end":1008,"column_start":9,"column_end":14},"name":"start","qualname":"::read::line::LineSequence::start","value":"u64","parent":{"krate":0,"index":7357},"children":[],"decl_id":null,"docs":" The first address that is covered by this sequence within the line number\n program.\n","sig":null,"attributes":[{"value":"/ The first address that is covered by this sequence within the line number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579801,"byte_end":579878,"line_start":1006,"line_end":1006,"column_start":5,"column_end":82}},{"value":"/ program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579883,"byte_end":579895,"line_start":1007,"line_end":1007,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":7360},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580029,"byte_end":580032,"line_start":1011,"line_end":1011,"column_start":9,"column_end":12},"name":"end","qualname":"::read::line::LineSequence::end","value":"u64","parent":{"krate":0,"index":7357},"children":[],"decl_id":null,"docs":" The first address that is *not* covered by this sequence within the line\n number program.\n","sig":null,"attributes":[{"value":"/ The first address that is *not* covered by this sequence within the line","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":579920,"byte_end":579996,"line_start":1009,"line_end":1009,"column_start":5,"column_end":81}},{"value":"/ number program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580001,"byte_end":580020,"line_start":1010,"line_end":1010,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580284,"byte_end":580307,"line_start":1019,"line_end":1019,"column_start":10,"column_end":33},"name":"LineNumberProgramHeader","qualname":"::read::line::LineNumberProgramHeader","value":"LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580081,"byte_end":580163,"line_start":1015,"line_end":1015,"column_start":1,"column_end":83}},{"value":"deprecated(note =\n\"LineNumberProgramHeader has been renamed to LineProgramHeader, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580164,"byte_end":580274,"line_start":1016,"line_end":1018,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7368},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580520,"byte_end":580537,"line_start":1024,"line_end":1024,"column_start":12,"column_end":29},"name":"LineProgramHeader","qualname":"::read::line::LineProgramHeader","value":"LineProgramHeader {  }","parent":null,"children":[{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384}],"decl_id":null,"docs":" A header for a line number program in the `.debug_line` section, as defined\n in section 6.2.4 of the standard.\n","sig":null,"attributes":[{"value":"/ A header for a line number program in the `.debug_line` section, as defined","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580352,"byte_end":580431,"line_start":1021,"line_end":1021,"column_start":1,"column_end":80}},{"value":"/ in section 6.2.4 of the standard.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":580432,"byte_end":580469,"line_start":1022,"line_end":1022,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582611,"byte_end":582617,"line_start":1083,"line_end":1083,"column_start":12,"column_end":18},"name":"offset","qualname":"<LineProgramHeader<R, Offset>>::offset","value":"pub fn offset(&Self) -> DebugLineOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the line number program header in the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ Return the offset of the line number program header in the `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582514,"byte_end":582599,"line_start":1082,"line_end":1082,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582823,"byte_end":582834,"line_start":1089,"line_end":1089,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<LineProgramHeader<R, Offset>>::unit_length","value":"pub fn unit_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the line number program and header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Return the length of the line number program and header, not including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582688,"byte_end":582762,"line_start":1087,"line_end":1087,"column_start":5,"column_end":79}},{"value":"/ the length of the encoded length itself.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582767,"byte_end":582811,"line_start":1088,"line_end":1088,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582971,"byte_end":582979,"line_start":1094,"line_end":1094,"column_start":12,"column_end":20},"name":"encoding","qualname":"<LineProgramHeader<R, Offset>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this header's line program.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582893,"byte_end":582959,"line_start":1093,"line_end":1093,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583096,"byte_end":583103,"line_start":1099,"line_end":1099,"column_start":12,"column_end":19},"name":"version","qualname":"<LineProgramHeader<R, Offset>>::version","value":"pub fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the version of this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the version of this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583034,"byte_end":583084,"line_start":1098,"line_end":1098,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583297,"byte_end":583310,"line_start":1105,"line_end":1105,"column_start":12,"column_end":25},"name":"header_length","qualname":"<LineProgramHeader<R, Offset>>::header_length","value":"pub fn header_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the encoded line number program header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the encoded line number program header, not including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583161,"byte_end":583236,"line_start":1103,"line_end":1103,"column_start":5,"column_end":80}},{"value":"/ the length of the encoded length itself.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583241,"byte_end":583285,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583437,"byte_end":583449,"line_start":1110,"line_end":1110,"column_start":12,"column_end":24},"name":"address_size","qualname":"<LineProgramHeader<R, Offset>>::address_size","value":"pub fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the size in bytes of a target machine address.\n","sig":null,"attributes":[{"value":"/ Get the size in bytes of a target machine address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583371,"byte_end":583425,"line_start":1109,"line_end":1109,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583587,"byte_end":583593,"line_start":1115,"line_end":1115,"column_start":12,"column_end":18},"name":"format","qualname":"<LineProgramHeader<R, Offset>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this line program is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this line program is encoded in 64- or 32-bit DWARF.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583511,"byte_end":583575,"line_start":1114,"line_end":1114,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583733,"byte_end":583746,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"line_encoding","qualname":"<LineProgramHeader<R, Offset>>::line_encoding","value":"pub fn line_encoding(&Self) -> LineEncoding","parent":null,"children":[],"decl_id":null,"docs":" Get the line encoding parameters for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line encoding parameters for this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583653,"byte_end":583721,"line_start":1119,"line_end":1119,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583924,"byte_end":583950,"line_start":1126,"line_end":1126,"column_start":12,"column_end":38},"name":"minimum_instruction_length","qualname":"<LineProgramHeader<R, Offset>>::minimum_instruction_length","value":"pub fn minimum_instruction_length(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum instruction length any instruction in this header's line\n program may have.\n","sig":null,"attributes":[{"value":"/ Get the minimum instruction length any instruction in this header's line","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583810,"byte_end":583886,"line_start":1124,"line_end":1124,"column_start":5,"column_end":81}},{"value":"/ program may have.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":583891,"byte_end":583912,"line_start":1125,"line_end":1125,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584148,"byte_end":584182,"line_start":1132,"line_end":1132,"column_start":12,"column_end":46},"name":"maximum_operations_per_instruction","qualname":"<LineProgramHeader<R, Offset>>::maximum_operations_per_instruction","value":"pub fn maximum_operations_per_instruction(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum number of operations each instruction in this header's\n line program may have.\n","sig":null,"attributes":[{"value":"/ Get the maximum number of operations each instruction in this header's","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584031,"byte_end":584105,"line_start":1130,"line_end":1130,"column_start":5,"column_end":79}},{"value":"/ line program may have.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584110,"byte_end":584136,"line_start":1131,"line_end":1131,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584374,"byte_end":584389,"line_start":1138,"line_end":1138,"column_start":12,"column_end":27},"name":"default_is_stmt","qualname":"<LineProgramHeader<R, Offset>>::default_is_stmt","value":"pub fn default_is_stmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get the default value of the `is_stmt` register for this header's line\n program.\n","sig":null,"attributes":[{"value":"/ Get the default value of the `is_stmt` register for this header's line","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584271,"byte_end":584345,"line_start":1136,"line_end":1136,"column_start":5,"column_end":79}},{"value":"/ program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584350,"byte_end":584362,"line_start":1137,"line_end":1137,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584526,"byte_end":584535,"line_start":1143,"line_end":1143,"column_start":12,"column_end":21},"name":"line_base","qualname":"<LineProgramHeader<R, Offset>>::line_base","value":"pub fn line_base(&Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Get the line base for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line base for this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584461,"byte_end":584514,"line_start":1142,"line_end":1142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584665,"byte_end":584675,"line_start":1148,"line_end":1148,"column_start":12,"column_end":22},"name":"line_range","qualname":"<LineProgramHeader<R, Offset>>::line_range","value":"pub fn line_range(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the line range for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line range for this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584599,"byte_end":584653,"line_start":1147,"line_end":1147,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584803,"byte_end":584814,"line_start":1153,"line_end":1153,"column_start":12,"column_end":23},"name":"opcode_base","qualname":"<LineProgramHeader<R, Offset>>::opcode_base","value":"pub fn opcode_base(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get opcode base for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get opcode base for this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584740,"byte_end":584791,"line_start":1152,"line_end":1152,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584985,"byte_end":585008,"line_start":1159,"line_end":1159,"column_start":12,"column_end":35},"name":"standard_opcode_lengths","qualname":"<LineProgramHeader<R, Offset>>::standard_opcode_lengths","value":"pub fn standard_opcode_lengths(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" An array of `u8` that specifies the number of LEB128 operands for\n each of the standard opcodes.\n","sig":null,"attributes":[{"value":"/ An array of `u8` that specifies the number of LEB128 operands for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584866,"byte_end":584935,"line_start":1157,"line_end":1157,"column_start":5,"column_end":74}},{"value":"/ each of the standard opcodes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":584940,"byte_end":584973,"line_start":1158,"line_end":1158,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585125,"byte_end":585147,"line_start":1164,"line_end":1164,"column_start":12,"column_end":34},"name":"directory_entry_format","qualname":"<LineProgramHeader<R, Offset>>::directory_entry_format","value":"pub fn directory_entry_format(&Self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a directory entry.\n","sig":null,"attributes":[{"value":"/ Get the format of a directory entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585073,"byte_end":585113,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585490,"byte_end":585509,"line_start":1172,"line_end":1172,"column_start":12,"column_end":31},"name":"include_directories","qualname":"<LineProgramHeader<R, Offset>>::include_directories","value":"pub fn include_directories(&Self) -> &[AttributeValue<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of include directories for this header's line program.","sig":null,"attributes":[{"value":"/ Get the set of include directories for this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585231,"byte_end":585301,"line_start":1168,"line_end":1168,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585306,"byte_end":585309,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ For DWARF version <= 4, the compilation's current directory is not included","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585314,"byte_end":585393,"line_start":1170,"line_end":1170,"column_start":5,"column_end":84}},{"value":"/ in the return value, but is implicitly considered to be in the set per spec.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585398,"byte_end":585478,"line_start":1171,"line_end":1171,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585755,"byte_end":585764,"line_start":1179,"line_end":1179,"column_start":12,"column_end":21},"name":"directory","qualname":"<LineProgramHeader<R, Offset>>::directory","value":"pub fn directory(&Self, u64) -> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The include directory with the given directory index.","sig":null,"attributes":[{"value":"/ The include directory with the given directory index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585600,"byte_end":585657,"line_start":1176,"line_end":1176,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585662,"byte_end":585665,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ A directory index of 0 corresponds to the compilation unit directory.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":585670,"byte_end":585743,"line_start":1178,"line_end":1178,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586281,"byte_end":586303,"line_start":1193,"line_end":1193,"column_start":12,"column_end":34},"name":"file_name_entry_format","qualname":"<LineProgramHeader<R, Offset>>::file_name_entry_format","value":"pub fn file_name_entry_format(&Self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a file name entry.\n","sig":null,"attributes":[{"value":"/ Get the format of a file name entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586229,"byte_end":586269,"line_start":1192,"line_end":1192,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586565,"byte_end":586583,"line_start":1201,"line_end":1201,"column_start":12,"column_end":30},"name":"file_has_timestamp","qualname":"<LineProgramHeader<R, Offset>>::file_has_timestamp","value":"pub fn file_has_timestamp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid timestamps.","sig":null,"attributes":[{"value":"/ Return true if the file entries may have valid timestamps.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586387,"byte_end":586449,"line_start":1197,"line_end":1197,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586454,"byte_end":586457,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ Only returns false if we definitely know that all timestamp fields","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586462,"byte_end":586532,"line_start":1199,"line_end":1199,"column_start":5,"column_end":75}},{"value":"/ are invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586537,"byte_end":586553,"line_start":1200,"line_end":1200,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586972,"byte_end":586985,"line_start":1213,"line_end":1213,"column_start":12,"column_end":25},"name":"file_has_size","qualname":"<LineProgramHeader<R, Offset>>::file_has_size","value":"pub fn file_has_size(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid sizes.","sig":null,"attributes":[{"value":"/ Return true if the file entries may have valid sizes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586804,"byte_end":586861,"line_start":1209,"line_end":1209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586866,"byte_end":586869,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ Only returns false if we definitely know that all size fields","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586874,"byte_end":586939,"line_start":1211,"line_end":1211,"column_start":5,"column_end":70}},{"value":"/ are invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":586944,"byte_end":586960,"line_start":1212,"line_end":1212,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587281,"byte_end":587293,"line_start":1222,"line_end":1222,"column_start":12,"column_end":24},"name":"file_has_md5","qualname":"<LineProgramHeader<R, Offset>>::file_has_md5","value":"pub fn file_has_md5(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file name entry format contains an MD5 field.\n","sig":null,"attributes":[{"value":"/ Return true if the file name entry format contains an MD5 field.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587201,"byte_end":587269,"line_start":1221,"line_end":1221,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587528,"byte_end":587538,"line_start":1229,"line_end":1229,"column_start":12,"column_end":22},"name":"file_names","qualname":"<LineProgramHeader<R, Offset>>::file_names","value":"pub fn file_names(&Self) -> &[FileEntry<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of source files that appear in this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the list of source files that appear in this header's line program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587441,"byte_end":587516,"line_start":1228,"line_end":1228,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587854,"byte_end":587858,"line_start":1238,"line_end":1238,"column_start":12,"column_end":16},"name":"file","qualname":"<LineProgramHeader<R, Offset>>::file","value":"pub fn file(&Self, u64) -> Option<&FileEntry<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The source file with the given file index.","sig":null,"attributes":[{"value":"/ The source file with the given file index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587615,"byte_end":587661,"line_start":1233,"line_end":1233,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587666,"byte_end":587669,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ A file index of 0 corresponds to the compilation unit file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587674,"byte_end":587737,"line_start":1235,"line_end":1235,"column_start":5,"column_end":68}},{"value":"/ Note that a file index of 0 is invalid for DWARF version <= 4,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587742,"byte_end":587808,"line_start":1236,"line_end":1236,"column_start":5,"column_end":71}},{"value":"/ but we support it anyway.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":587813,"byte_end":587842,"line_start":1237,"line_end":1237,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588924,"byte_end":588939,"line_start":1269,"line_end":1269,"column_start":12,"column_end":27},"name":"raw_program_buf","qualname":"<LineProgramHeader<R, Offset>>::raw_program_buf","value":"pub fn raw_program_buf(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the raw, un-parsed `EndianSlice` containing this header's line number\n program.","sig":null,"attributes":[{"value":"/ Get the raw, un-parsed `EndianSlice` containing this header's line number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588227,"byte_end":588304,"line_start":1251,"line_end":1251,"column_start":5,"column_end":82}},{"value":"/ program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588309,"byte_end":588321,"line_start":1252,"line_end":1252,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588326,"byte_end":588329,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588334,"byte_end":588341,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588346,"byte_end":588362,"line_start":1255,"line_end":1255,"column_start":5,"column_end":21}},{"value":"/ use gimli::{LineProgramHeader, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588367,"byte_end":588429,"line_start":1256,"line_end":1256,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588434,"byte_end":588437,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program_header<'a>() -> LineProgramHeader<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588442,"byte_end":588539,"line_start":1258,"line_end":1258,"column_start":5,"column_end":102}},{"value":"/     // Get a line number program header from some offset in a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588544,"byte_end":588609,"line_start":1259,"line_end":1259,"column_start":5,"column_end":70}},{"value":"/     // `.debug_line` section...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588614,"byte_end":588649,"line_start":1260,"line_end":1260,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588654,"byte_end":588678,"line_start":1261,"line_end":1261,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588683,"byte_end":588688,"line_start":1262,"line_end":1262,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588693,"byte_end":588696,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ let header = get_line_number_program_header();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588701,"byte_end":588751,"line_start":1264,"line_end":1264,"column_start":5,"column_end":55}},{"value":"/ let raw_program = header.raw_program_buf();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588756,"byte_end":588803,"line_start":1265,"line_end":1265,"column_start":5,"column_end":52}},{"value":"/ println!(\"The length of the raw program in bytes is {}\", raw_program.len());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588808,"byte_end":588888,"line_start":1266,"line_end":1266,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588893,"byte_end":588900,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588905,"byte_end":588912,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":589112,"byte_end":589124,"line_start":1275,"line_end":1275,"column_start":12,"column_end":24},"name":"instructions","qualname":"<LineProgramHeader<R, Offset>>::instructions","value":"pub fn instructions(&Self) -> LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the instructions in this header's line number program, parsing\n them as we go.\n","sig":null,"attributes":[{"value":"/ Iterate over the instructions in this header's line number program, parsing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":588998,"byte_end":589077,"line_start":1273,"line_end":1273,"column_start":5,"column_end":84}},{"value":"/ them as we go.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":589082,"byte_end":589100,"line_start":1274,"line_end":1274,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594052,"byte_end":594079,"line_start":1427,"line_end":1427,"column_start":10,"column_end":37},"name":"IncompleteLineNumberProgram","qualname":"::read::line::IncompleteLineNumberProgram","value":"IncompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":593833,"byte_end":593923,"line_start":1423,"line_end":1423,"column_start":1,"column_end":91}},{"value":"deprecated(note =\n\"IncompleteLineNumberProgram has been renamed to IncompleteLineProgram, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":593924,"byte_end":594042,"line_start":1424,"line_end":1426,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7408},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594241,"byte_end":594262,"line_start":1431,"line_end":1431,"column_start":12,"column_end":33},"name":"IncompleteLineProgram","qualname":"::read::line::IncompleteLineProgram","value":"IncompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":7411}],"decl_id":null,"docs":" A line number program that has not been run to completion.\n","sig":null,"attributes":[{"value":"/ A line number program that has not been run to completion.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594128,"byte_end":594190,"line_start":1429,"line_end":1429,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594594,"byte_end":594600,"line_start":1445,"line_end":1445,"column_start":12,"column_end":18},"name":"header","qualname":"<IncompleteLineProgram<R, Offset>>::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[{"value":"/ Retrieve the `LineProgramHeader` for this program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594528,"byte_end":594582,"line_start":1444,"line_end":1444,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594805,"byte_end":594809,"line_start":1451,"line_end":1451,"column_start":12,"column_end":16},"name":"rows","qualname":"<IncompleteLineProgram<R, Offset>>::rows","value":"pub fn rows(Self) -> OneShotLineRows<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing this program to iterate\n over rows in the line information matrix.\n","sig":null,"attributes":[{"value":"/ Construct a new `LineRows` for executing this program to iterate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594675,"byte_end":594743,"line_start":1449,"line_end":1449,"column_start":5,"column_end":73}},{"value":"/ over rows in the line information matrix.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594748,"byte_end":594793,"line_start":1450,"line_end":1450,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595799,"byte_end":595808,"line_start":1476,"line_end":1476,"column_start":12,"column_end":21},"name":"sequences","qualname":"<IncompleteLineProgram<R, Offset>>::sequences","value":"pub fn sequences(Self)\n-> Result<(CompleteLineProgram<R, Offset>, Vec<LineSequence<R>>)>","parent":null,"children":[],"decl_id":null,"docs":" Execute the line number program, completing the `IncompleteLineProgram`\n into a `CompleteLineProgram` and producing an array of sequences within\n the line number program that can later be used with\n `CompleteLineProgram::resume_from`.","sig":null,"attributes":[{"value":"/ Execute the line number program, completing the `IncompleteLineProgram`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594894,"byte_end":594969,"line_start":1455,"line_end":1455,"column_start":5,"column_end":80}},{"value":"/ into a `CompleteLineProgram` and producing an array of sequences within","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594974,"byte_end":595049,"line_start":1456,"line_end":1456,"column_start":5,"column_end":80}},{"value":"/ the line number program that can later be used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595054,"byte_end":595109,"line_start":1457,"line_end":1457,"column_start":5,"column_end":60}},{"value":"/ `CompleteLineProgram::resume_from`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595114,"byte_end":595153,"line_start":1458,"line_end":1458,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595158,"byte_end":595161,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595166,"byte_end":595173,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595178,"byte_end":595194,"line_start":1461,"line_end":1461,"column_start":5,"column_end":21}},{"value":"/ use gimli::{IncompleteLineProgram, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595199,"byte_end":595265,"line_start":1462,"line_end":1462,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595270,"byte_end":595273,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program<'a>() -> IncompleteLineProgram<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595278,"byte_end":595372,"line_start":1464,"line_end":1464,"column_start":5,"column_end":99}},{"value":"/     // Get a line number program from some offset in a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595377,"byte_end":595435,"line_start":1465,"line_end":1465,"column_start":5,"column_end":63}},{"value":"/     // `.debug_line` section...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595440,"byte_end":595475,"line_start":1466,"line_end":1466,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595480,"byte_end":595504,"line_start":1467,"line_end":1467,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595509,"byte_end":595514,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595519,"byte_end":595522,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let program = get_line_number_program();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595527,"byte_end":595571,"line_start":1470,"line_end":1470,"column_start":5,"column_end":49}},{"value":"/ let (program, sequences) = program.sequences().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595576,"byte_end":595636,"line_start":1471,"line_end":1471,"column_start":5,"column_end":65}},{"value":"/ println!(\"There are {} sequences in this line number program\", sequences.len());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595641,"byte_end":595725,"line_start":1472,"line_end":1472,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595730,"byte_end":595737,"line_start":1473,"line_end":1473,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595742,"byte_end":595749,"line_start":1474,"line_end":1474,"column_start":5,"column_end":12}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":595754,"byte_end":595787,"line_start":1475,"line_end":1475,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597363,"byte_end":597388,"line_start":1520,"line_end":1520,"column_start":10,"column_end":35},"name":"CompleteLineNumberProgram","qualname":"::read::line::CompleteLineNumberProgram","value":"CompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597152,"byte_end":597238,"line_start":1516,"line_end":1516,"column_start":1,"column_end":87}},{"value":"deprecated(note =\n\"CompleteLineNumberProgram has been renamed to CompleteLineProgram, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597239,"byte_end":597353,"line_start":1517,"line_end":1519,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7435},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597555,"byte_end":597574,"line_start":1524,"line_end":1524,"column_start":12,"column_end":31},"name":"CompleteLineProgram","qualname":"::read::line::CompleteLineProgram","value":"CompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":7438}],"decl_id":null,"docs":" A line number program that has previously been run to completion.\n","sig":null,"attributes":[{"value":"/ A line number program that has previously been run to completion.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597435,"byte_end":597504,"line_start":1522,"line_end":1522,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597904,"byte_end":597910,"line_start":1538,"line_end":1538,"column_start":12,"column_end":18},"name":"header","qualname":"<CompleteLineProgram<R, Offset>>::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[{"value":"/ Retrieve the `LineProgramHeader` for this program.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597838,"byte_end":597892,"line_start":1537,"line_end":1537,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598775,"byte_end":598786,"line_start":1563,"line_end":1563,"column_start":12,"column_end":23},"name":"resume_from","qualname":"<CompleteLineProgram<R, Offset>>::resume_from","value":"pub fn resume_from<'program>(&'program Self, &LineSequence<R>)\n-> ResumedLineRows","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing the subset of the line\n number program identified by 'sequence' and  generating the line information\n matrix.","sig":null,"attributes":[{"value":"/ Construct a new `LineRows` for executing the subset of the line","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597985,"byte_end":598052,"line_start":1542,"line_end":1542,"column_start":5,"column_end":72}},{"value":"/ number program identified by 'sequence' and  generating the line information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598057,"byte_end":598137,"line_start":1543,"line_end":1543,"column_start":5,"column_end":85}},{"value":"/ matrix.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598142,"byte_end":598153,"line_start":1544,"line_end":1544,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598158,"byte_end":598161,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598166,"byte_end":598173,"line_start":1546,"line_end":1546,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598178,"byte_end":598194,"line_start":1547,"line_end":1547,"column_start":5,"column_end":21}},{"value":"/ use gimli::{IncompleteLineProgram, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598199,"byte_end":598265,"line_start":1548,"line_end":1548,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598270,"byte_end":598273,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program<'a>() -> IncompleteLineProgram<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598278,"byte_end":598372,"line_start":1550,"line_end":1550,"column_start":5,"column_end":99}},{"value":"/     // Get a line number program from some offset in a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598377,"byte_end":598435,"line_start":1551,"line_end":1551,"column_start":5,"column_end":63}},{"value":"/     // `.debug_line` section...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598440,"byte_end":598475,"line_start":1552,"line_end":1552,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598480,"byte_end":598504,"line_start":1553,"line_end":1553,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598509,"byte_end":598514,"line_start":1554,"line_end":1554,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598519,"byte_end":598522,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ let program = get_line_number_program();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598527,"byte_end":598571,"line_start":1556,"line_end":1556,"column_start":5,"column_end":49}},{"value":"/ let (program, sequences) = program.sequences().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598576,"byte_end":598636,"line_start":1557,"line_end":1557,"column_start":5,"column_end":65}},{"value":"/ for sequence in &sequences {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598641,"byte_end":598673,"line_start":1558,"line_end":1558,"column_start":5,"column_end":37}},{"value":"/     let mut sm = program.resume_from(sequence);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598678,"byte_end":598729,"line_start":1559,"line_end":1559,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598734,"byte_end":598739,"line_start":1560,"line_end":1560,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598744,"byte_end":598751,"line_start":1561,"line_end":1561,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598756,"byte_end":598763,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7462},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":599079,"byte_end":599088,"line_start":1573,"line_end":1573,"column_start":12,"column_end":21},"name":"FileEntry","qualname":"::read::line::FileEntry","value":"FileEntry {  }","parent":null,"children":[{"krate":0,"index":7465},{"krate":0,"index":7466},{"krate":0,"index":7467},{"krate":0,"index":7468},{"krate":0,"index":7469}],"decl_id":null,"docs":" An entry in the `LineProgramHeader`'s `file_names` set.\n","sig":null,"attributes":[{"value":"/ An entry in the `LineProgramHeader`'s `file_names` set.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":598963,"byte_end":599022,"line_start":1571,"line_end":1571,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600271,"byte_end":600280,"line_start":1612,"line_end":1612,"column_start":12,"column_end":21},"name":"path_name","qualname":"<FileEntry<R, Offset>>::path_name","value":"pub fn path_name(&Self) -> AttributeValue<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" > A slice containing the full or relative path name of\n > a source file. If the entry contains a file name or a relative path\n > name, the file is located relative to either the compilation directory\n > (as specified by the DW_AT_comp_dir attribute given in the compilation\n > unit) or one of the directories in the include_directories section.\n","sig":null,"attributes":[{"value":"/ > A slice containing the full or relative path name of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":599883,"byte_end":599941,"line_start":1607,"line_end":1607,"column_start":5,"column_end":63}},{"value":"/ > a source file. If the entry contains a file name or a relative path","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":599946,"byte_end":600019,"line_start":1608,"line_end":1608,"column_start":5,"column_end":78}},{"value":"/ > name, the file is located relative to either the compilation directory","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600024,"byte_end":600100,"line_start":1609,"line_end":1609,"column_start":5,"column_end":81}},{"value":"/ > (as specified by the DW_AT_comp_dir attribute given in the compilation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600105,"byte_end":600181,"line_start":1610,"line_end":1610,"column_start":5,"column_end":81}},{"value":"/ > unit) or one of the directories in the include_directories section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600186,"byte_end":600259,"line_start":1611,"line_end":1611,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600945,"byte_end":600960,"line_start":1627,"line_end":1627,"column_start":12,"column_end":27},"name":"directory_index","qualname":"<FileEntry<R, Offset>>::directory_index","value":"pub fn directory_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned LEB128 number representing the directory index of the\n > directory in which the file was found.\n >\n > ...\n >\n > The directory index represents an entry in the include_directories\n > section of the line number program header. The index is 0 if the file\n > was found in the current directory of the compilation, 1 if it was found\n > in the first directory in the include_directories section, and so\n > on. The directory index is ignored for file names that represent full\n > path names.\n","sig":null,"attributes":[{"value":"/ > An unsigned LEB128 number representing the directory index of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600361,"byte_end":600432,"line_start":1616,"line_end":1616,"column_start":5,"column_end":76}},{"value":"/ > directory in which the file was found.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600437,"byte_end":600481,"line_start":1617,"line_end":1617,"column_start":5,"column_end":49}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600486,"byte_end":600491,"line_start":1618,"line_end":1618,"column_start":5,"column_end":10}},{"value":"/ > ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600496,"byte_end":600505,"line_start":1619,"line_end":1619,"column_start":5,"column_end":14}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600510,"byte_end":600515,"line_start":1620,"line_end":1620,"column_start":5,"column_end":10}},{"value":"/ > The directory index represents an entry in the include_directories","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600520,"byte_end":600592,"line_start":1621,"line_end":1621,"column_start":5,"column_end":77}},{"value":"/ > section of the line number program header. The index is 0 if the file","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600597,"byte_end":600672,"line_start":1622,"line_end":1622,"column_start":5,"column_end":80}},{"value":"/ > was found in the current directory of the compilation, 1 if it was found","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600677,"byte_end":600755,"line_start":1623,"line_end":1623,"column_start":5,"column_end":83}},{"value":"/ > in the first directory in the include_directories section, and so","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600760,"byte_end":600831,"line_start":1624,"line_end":1624,"column_start":5,"column_end":76}},{"value":"/ > on. The directory index is ignored for file names that represent full","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600836,"byte_end":600911,"line_start":1625,"line_end":1625,"column_start":5,"column_end":80}},{"value":"/ > path names.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":600916,"byte_end":600933,"line_start":1626,"line_end":1626,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601145,"byte_end":601154,"line_start":1634,"line_end":1634,"column_start":12,"column_end":21},"name":"directory","qualname":"<FileEntry<R, Offset>>::directory","value":"pub fn directory(&Self, &LineProgramHeader<R>)\n-> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Get this file's directory.","sig":null,"attributes":[{"value":"/ Get this file's directory.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601017,"byte_end":601047,"line_start":1631,"line_end":1631,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601052,"byte_end":601055,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ A directory index of 0 corresponds to the compilation unit directory.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601060,"byte_end":601133,"line_start":1633,"line_end":1633,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601402,"byte_end":601411,"line_start":1640,"line_end":1640,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<FileEntry<R, Offset>>::timestamp","value":"pub fn timestamp(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The implementation-defined time of last modification of the file,\n or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The implementation-defined time of last modification of the file,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601290,"byte_end":601359,"line_start":1638,"line_end":1638,"column_start":5,"column_end":74}},{"value":"/ or 0 if not available.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601364,"byte_end":601390,"line_start":1639,"line_end":1639,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601658,"byte_end":601675,"line_start":1648,"line_end":1648,"column_start":12,"column_end":29},"name":"last_modification","qualname":"<FileEntry<R, Offset>>::last_modification","value":"pub fn last_modification(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the time of last modification of\n the file, or 0 if not available.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned LEB128 number representing the time of last modification of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601462,"byte_end":601538,"line_start":1644,"line_end":1644,"column_start":5,"column_end":81}},{"value":"/ the file, or 0 if not available.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601543,"byte_end":601580,"line_start":1645,"line_end":1645,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601795,"byte_end":601799,"line_start":1653,"line_end":1653,"column_start":12,"column_end":16},"name":"size","qualname":"<FileEntry<R, Offset>>::size","value":"pub fn size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The size of the file in bytes, or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The size of the file in bytes, or 0 if not available.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601726,"byte_end":601783,"line_start":1652,"line_end":1652,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602031,"byte_end":602037,"line_start":1661,"line_end":1661,"column_start":12,"column_end":18},"name":"length","qualname":"<FileEntry<R, Offset>>::length","value":"pub fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the length in bytes of the file,\n or 0 if not available.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned LEB128 number representing the length in bytes of the file,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601845,"byte_end":601921,"line_start":1657,"line_end":1657,"column_start":5,"column_end":81}},{"value":"/ or 0 if not available.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":601926,"byte_end":601953,"line_start":1658,"line_end":1658,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602221,"byte_end":602224,"line_start":1668,"line_end":1668,"column_start":12,"column_end":15},"name":"md5","qualname":"<FileEntry<R, Offset>>::md5","value":"pub fn md5(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" A 16-byte MD5 digest of the file contents.","sig":null,"attributes":[{"value":"/ A 16-byte MD5 digest of the file contents.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602083,"byte_end":602129,"line_start":1665,"line_end":1665,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602134,"byte_end":602137,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ Only valid if `LineProgramHeader::file_has_md5` returns `true`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602142,"byte_end":602209,"line_start":1667,"line_end":1667,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7498},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602404,"byte_end":602419,"line_start":1675,"line_end":1675,"column_start":12,"column_end":27},"name":"FileEntryFormat","qualname":"::read::line::FileEntryFormat","value":"FileEntryFormat { content_type, form }","parent":null,"children":[{"krate":0,"index":7499},{"krate":0,"index":7500}],"decl_id":null,"docs":" The format of a component of an include directory or file name entry.\n","sig":null,"attributes":[{"value":"/ The format of a component of an include directory or file name entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602274,"byte_end":602347,"line_start":1673,"line_end":1673,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":7499},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602500,"byte_end":602512,"line_start":1677,"line_end":1677,"column_start":9,"column_end":21},"name":"content_type","qualname":"::read::line::FileEntryFormat::content_type","value":"constants::DwLnct","parent":{"krate":0,"index":7498},"children":[],"decl_id":null,"docs":" The type of information that is represented by the component.\n","sig":null,"attributes":[{"value":"/ The type of information that is represented by the component.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602426,"byte_end":602491,"line_start":1676,"line_end":1676,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":7500},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602592,"byte_end":602596,"line_start":1680,"line_end":1680,"column_start":9,"column_end":13},"name":"form","qualname":"::read::line::FileEntryFormat::form","value":"constants::DwForm","parent":{"krate":0,"index":7498},"children":[],"decl_id":null,"docs":" The encoding form of the component value.\n","sig":null,"attributes":[{"value":"/ The encoding form of the component value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602538,"byte_end":602583,"line_start":1679,"line_end":1679,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7521},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":651963,"byte_end":651971,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"DebugLoc","qualname":"::read::loclists::DebugLoc","value":"DebugLoc {  }","parent":null,"children":[{"krate":0,"index":7523}],"decl_id":null,"docs":" The raw contents of the `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_loc` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":651863,"byte_end":651912,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652685,"byte_end":652688,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLoc<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLoc` instance from the data in the `.debug_loc`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLoc` instance from the data in the `.debug_loc`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652101,"byte_end":652174,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652179,"byte_end":652191,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652196,"byte_end":652199,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_loc` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652204,"byte_end":652278,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652283,"byte_end":652353,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652358,"byte_end":652399,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652404,"byte_end":652407,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652412,"byte_end":652419,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLoc, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652424,"byte_end":652464,"line_start":30,"line_end":30,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652469,"byte_end":652472,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652477,"byte_end":652518,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_loc_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652523,"byte_end":652574,"line_start":33,"line_end":33,"column_start":5,"column_end":56}},{"value":"/ let debug_loc = DebugLoc::new(read_debug_loc_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652579,"byte_end":652661,"line_start":34,"line_end":34,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652666,"byte_end":652673,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7535},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653217,"byte_end":653230,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"DebugLocLists","qualname":"::read::loclists::DebugLocLists","value":"DebugLocLists {  }","parent":null,"children":[{"krate":0,"index":7537}],"decl_id":null,"docs":" The `DebugLocLists` struct represents the DWARF data\n found in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLocLists` struct represents the DWARF data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653066,"byte_end":653122,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/ found in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653123,"byte_end":653166,"line_start":58,"line_end":58,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653978,"byte_end":653981,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLocLists<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653354,"byte_end":653437,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653442,"byte_end":653454,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653459,"byte_end":653462,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_loclists` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653467,"byte_end":653546,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653551,"byte_end":653621,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653626,"byte_end":653667,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653672,"byte_end":653675,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653680,"byte_end":653687,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLocLists, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653692,"byte_end":653737,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653742,"byte_end":653745,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653750,"byte_end":653791,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_loclists_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653796,"byte_end":653852,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ let debug_loclists = DebugLocLists::new(read_debug_loclists_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653857,"byte_end":653954,"line_start":80,"line_end":80,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653959,"byte_end":653966,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654648,"byte_end":654677,"line_start":111,"line_end":111,"column_start":12,"column_end":41},"name":"default_for_encoding_and_file","qualname":"<DebugLocListsBase<Offset>>::default_for_encoding_and_file","value":"pub fn default_for_encoding_and_file(Encoding, DwarfFileType)\n-> DebugLocListsBase<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DebugLocListsBase` with the default value of DW_AT_loclists_base\n for the given `Encoding` and `DwarfFileType`.\n","sig":null,"attributes":[{"value":"/ Returns a `DebugLocListsBase` with the default value of DW_AT_loclists_base","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654503,"byte_end":654582,"line_start":109,"line_end":109,"column_start":5,"column_end":84}},{"value":"/ for the given `Encoding` and `DwarfFileType`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654587,"byte_end":654636,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7549},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655392,"byte_end":655405,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"LocationLists","qualname":"::read::loclists::LocationLists","value":"LocationLists {  }","parent":null,"children":[{"krate":0,"index":7551},{"krate":0,"index":7552}],"decl_id":null,"docs":" The DWARF data found in `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ The DWARF data found in `.debug_loc` and `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655269,"byte_end":655341,"line_start":126,"line_end":126,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655641,"byte_end":655644,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<LocationLists<R>>::new","value":"pub fn new(DebugLoc<R>, DebugLocLists<R>) -> LocationLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LocationLists` instance from the data in the `.debug_loc` and\n `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ Construct a new `LocationLists` instance from the data in the `.debug_loc` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655511,"byte_end":655593,"line_start":134,"line_end":134,"column_start":5,"column_end":87}},{"value":"/ `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655598,"byte_end":655629,"line_start":135,"line_end":135,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656480,"byte_end":656486,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"borrow","qualname":"<LocationLists<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> LocationLists<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocationLists` that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `LocationLists` that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655850,"byte_end":655914,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655919,"byte_end":655922,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655927,"byte_end":655992,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655997,"byte_end":656000,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656005,"byte_end":656025,"line_start":149,"line_end":149,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656030,"byte_end":656033,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656038,"byte_end":656056,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656061,"byte_end":656106,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656111,"byte_end":656195,"line_start":153,"line_end":153,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::LocationLists<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656200,"byte_end":656270,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656275,"byte_end":656322,"line_start":155,"line_end":155,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656327,"byte_end":656377,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656382,"byte_end":656444,"line_start":157,"line_end":157,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656449,"byte_end":656456,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656461,"byte_end":656468,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657302,"byte_end":657311,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"locations","qualname":"<LocationLists<R>>::locations","value":"pub fn locations(&Self, LocationListsOffset<R::Offset>, Encoding, u64,\n&DebugAddr<R>, DebugAddrBase<R::Offset>) -> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656806,"byte_end":656877,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656882,"byte_end":656885,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656890,"byte_end":656954,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656959,"byte_end":656987,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656992,"byte_end":656995,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The `base_address` should be obtained from the `DW_AT_low_pc` attribute in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657000,"byte_end":657082,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/ `DW_TAG_compile_unit` entry for the compilation unit that contains this location","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657087,"byte_end":657171,"line_start":178,"line_end":178,"column_start":5,"column_end":89}},{"value":"/ list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657176,"byte_end":657185,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657190,"byte_end":657193,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657198,"byte_end":657219,"line_start":181,"line_end":181,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657224,"byte_end":657290,"line_start":182,"line_end":182,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657929,"byte_end":657942,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"locations_dwo","qualname":"<LocationLists<R>>::locations_dwo","value":"pub fn locations_dwo(&Self, LocationListsOffset<R::Offset>, Encoding, u64,\n&DebugAddr<R>, DebugAddrBase<R::Offset>) -> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `locations`, but with special handling for .dwo files.\n This should only been used when this `LocationLists` was loaded from a\n .dwo file.\n","sig":null,"attributes":[{"value":"/ Similar to `locations`, but with special handling for .dwo files.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657750,"byte_end":657819,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/ This should only been used when this `LocationLists` was loaded from a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657824,"byte_end":657898,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ .dwo file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":657903,"byte_end":657917,"line_start":201,"line_end":201,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658815,"byte_end":658828,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"raw_locations","qualname":"<LocationLists<R>>::raw_locations","value":"pub fn raw_locations(&Self, LocationListsOffset<R::Offset>, Encoding)\n-> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the raw `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the raw `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658385,"byte_end":658460,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658465,"byte_end":658468,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658473,"byte_end":658537,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658542,"byte_end":658570,"line_start":221,"line_end":221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658575,"byte_end":658578,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This iterator does not perform any processing of the location entries,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658583,"byte_end":658657,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658662,"byte_end":658698,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658703,"byte_end":658706,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658711,"byte_end":658732,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":658737,"byte_end":658803,"line_start":227,"line_end":227,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":659482,"byte_end":659499,"line_start":245,"line_end":245,"column_start":12,"column_end":29},"name":"raw_locations_dwo","qualname":"<LocationLists<R>>::raw_locations_dwo","value":"pub fn raw_locations_dwo(&Self, LocationListsOffset<R::Offset>, Encoding)\n-> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `raw_locations`, but with special handling for .dwo files.\n This should only been used when this `LocationLists` was loaded from a\n .dwo file.\n","sig":null,"attributes":[{"value":"/ Similar to `raw_locations`, but with special handling for .dwo files.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":659299,"byte_end":659372,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ This should only been used when this `LocationLists` was loaded from a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":659377,"byte_end":659451,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ .dwo file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":659456,"byte_end":659470,"line_start":244,"line_end":244,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660526,"byte_end":660536,"line_start":272,"line_end":272,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<LocationLists<R>>::get_offset","value":"pub fn get_offset(&Self, Encoding, DebugLocListsBase<R::Offset>,\nDebugLocListsIndex<R::Offset>) -> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_loclists` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_loclists` offset at the given `base` and `index`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660188,"byte_end":660261,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660266,"byte_end":660269,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_loclists_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660274,"byte_end":660359,"line_start":268,"line_end":268,"column_start":5,"column_end":90}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660364,"byte_end":660438,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660443,"byte_end":660446,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_loclistx` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":660451,"byte_end":660514,"line_start":271,"line_end":271,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661183,"byte_end":661199,"line_start":290,"line_end":290,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<LocationLists<R>>::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661090,"byte_end":661171,"line_start":289,"line_end":289,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661845,"byte_end":661859,"line_start":311,"line_end":311,"column_start":12,"column_end":26},"name":"RawLocListIter","qualname":"::read::loclists::RawLocListIter","value":"RawLocListIter {  }","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7583},{"krate":0,"index":7584}],"decl_id":null,"docs":" A raw iterator over a location list.","sig":null,"attributes":[{"value":"/ A raw iterator over a location list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661660,"byte_end":661700,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661701,"byte_end":661704,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ This iterator does not perform any processing of the location entries,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661705,"byte_end":661779,"line_start":308,"line_end":308,"column_start":1,"column_end":75}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661780,"byte_end":661816,"line_start":309,"line_end":309,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7590},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662088,"byte_end":662107,"line_start":321,"line_end":321,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair","value":"RawLocListEntry::AddressOrOffsetPair { begin, end, data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" A location from DWARF version <= 4.\n","sig":null,"attributes":[{"value":"/ A location from DWARF version <= 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662044,"byte_end":662083,"line_start":320,"line_end":320,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":7594},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662357,"byte_end":662368,"line_start":330,"line_end":330,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::loclists::RawLocListEntry::BaseAddress","value":"RawLocListEntry::BaseAddress { addr }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_address","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662329,"byte_end":662352,"line_start":329,"line_end":329,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":7596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662455,"byte_end":662467,"line_start":335,"line_end":335,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::loclists::RawLocListEntry::BaseAddressx","value":"RawLocListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_base_addressx\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_addressx","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662426,"byte_end":662450,"line_start":334,"line_end":334,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":7598},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662574,"byte_end":662584,"line_start":340,"line_end":340,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::loclists::RawLocListEntry::StartxEndx","value":"RawLocListEntry::StartxEndx { begin, end, data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_startx_endx\n","sig":null,"attributes":[{"value":"/ DW_LLE_startx_endx","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662547,"byte_end":662569,"line_start":339,"line_end":339,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":7602},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662813,"byte_end":662825,"line_start":349,"line_end":349,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::loclists::RawLocListEntry::StartxLength","value":"RawLocListEntry::StartxLength { begin, length, data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_startx_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_startx_length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662784,"byte_end":662808,"line_start":348,"line_end":348,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663036,"byte_end":663046,"line_start":358,"line_end":358,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::loclists::RawLocListEntry::OffsetPair","value":"RawLocListEntry::OffsetPair { begin, end, data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_LLE_offset_pair","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663009,"byte_end":663031,"line_start":357,"line_end":357,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":7610},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663234,"byte_end":663249,"line_start":367,"line_end":367,"column_start":5,"column_end":20},"name":"DefaultLocation","qualname":"::read::loclists::RawLocListEntry::DefaultLocation","value":"RawLocListEntry::DefaultLocation { data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_default_location\n","sig":null,"attributes":[{"value":"/ DW_LLE_default_location","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663202,"byte_end":663229,"line_start":366,"line_end":366,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663340,"byte_end":663348,"line_start":372,"line_end":372,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::loclists::RawLocListEntry::StartEnd","value":"RawLocListEntry::StartEnd { begin, end, data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_end","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663315,"byte_end":663335,"line_start":371,"line_end":371,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":7616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663532,"byte_end":663543,"line_start":381,"line_end":381,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::loclists::RawLocListEntry::StartLength","value":"RawLocListEntry::StartLength { begin, length, data }","parent":{"krate":0,"index":7588},"children":[],"decl_id":null,"docs":" DW_LLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":663504,"byte_end":663527,"line_start":380,"line_end":380,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":7588},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":662011,"byte_end":662026,"line_start":319,"line_end":319,"column_start":10,"column_end":25},"name":"RawLocListEntry","qualname":"::read::loclists::RawLocListEntry","value":"pub enum RawLocListEntry<R: Reader> {\n    AddressOrOffsetPair {\n            begin: u64,\n            end: u64,\n            data: Expression<R>,\n        },\n    BaseAddress {\n            addr: u64,\n        },\n    BaseAddressx {\n            addr: DebugAddrIndex<R::Offset>,\n        },\n    StartxEndx {\n            begin: DebugAddrIndex<R::Offset>,\n            end: DebugAddrIndex<R::Offset>,\n            data: Expression<R>,\n        },\n    StartxLength {\n            begin: DebugAddrIndex<R::Offset>,\n            length: u64,\n            data: Expression<R>,\n        },\n    OffsetPair {\n            begin: u64,\n            end: u64,\n            data: Expression<R>,\n        },\n    DefaultLocation {\n            data: Expression<R>,\n        },\n    StartEnd {\n            begin: u64,\n            end: u64,\n            data: Expression<R>,\n        },\n    StartLength {\n            begin: u64,\n            length: u64,\n            data: Expression<R>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7590},{"krate":0,"index":7594},{"krate":0,"index":7596},{"krate":0,"index":7598},{"krate":0,"index":7602},{"krate":0,"index":7606},{"krate":0,"index":7610},{"krate":0,"index":7612},{"krate":0,"index":7616}],"decl_id":null,"docs":" A raw entry in .debug_loclists.\n","sig":null,"attributes":[{"value":"/ A raw entry in .debug_loclists.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":661942,"byte_end":661977,"line_start":317,"line_end":317,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":667953,"byte_end":667957,"line_start":482,"line_end":482,"column_start":12,"column_end":16},"name":"next","qualname":"<RawLocListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<RawLocListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next location.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":667895,"byte_end":667941,"line_start":481,"line_end":481,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7626},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":669029,"byte_end":669040,"line_start":518,"line_end":518,"column_start":12,"column_end":23},"name":"LocListIter","qualname":"::read::loclists::LocListIter","value":"LocListIter {  }","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7630},{"krate":0,"index":7631}],"decl_id":null,"docs":" An iterator over a location list.","sig":null,"attributes":[{"value":"/ An iterator over a location list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":668749,"byte_end":668786,"line_start":512,"line_end":512,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":668787,"byte_end":668790,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ This iterator internally handles processing of base address selection entries","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":668791,"byte_end":668872,"line_start":514,"line_end":514,"column_start":1,"column_end":82}},{"value":"/ and list end entries.  Thus, it only returns location entries that are valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":668873,"byte_end":668953,"line_start":515,"line_end":515,"column_start":1,"column_end":81}},{"value":"/ and already adjusted for the base address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":668954,"byte_end":669000,"line_start":516,"line_end":516,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":669840,"byte_end":669844,"line_start":548,"line_end":548,"column_start":12,"column_end":16},"name":"next","qualname":"<LocListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<LocationListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next location.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":669782,"byte_end":669828,"line_start":547,"line_end":547,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7635},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":672710,"byte_end":672727,"line_start":627,"line_end":627,"column_start":12,"column_end":29},"name":"LocationListEntry","qualname":"::read::loclists::LocationListEntry","value":"LocationListEntry { range, data }","parent":null,"children":[{"krate":0,"index":7637},{"krate":0,"index":7638}],"decl_id":null,"docs":" A location list entry from the `.debug_loc` or `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ A location list entry from the `.debug_loc` or `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":672569,"byte_end":672647,"line_start":625,"line_end":625,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":7637},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":672808,"byte_end":672813,"line_start":629,"line_end":629,"column_start":9,"column_end":14},"name":"range","qualname":"::read::loclists::LocationListEntry::range","value":"read::rnglists::Range","parent":{"krate":0,"index":7635},"children":[],"decl_id":null,"docs":" The address range that this location is valid for.\n","sig":null,"attributes":[{"value":"/ The address range that this location is valid for.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":672745,"byte_end":672799,"line_start":628,"line_end":628,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":7638},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":672890,"byte_end":672894,"line_start":632,"line_end":632,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::LocationListEntry::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7635},"children":[],"decl_id":null,"docs":" The data containing a single location description.\n","sig":null,"attributes":[{"value":"/ The data containing a single location description.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":672827,"byte_end":672881,"line_start":631,"line_end":631,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":703512,"byte_end":703518,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Header","qualname":"::read::lookup::LookupParser::Header","value":"type Header;","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" The type of the produced header.\n","sig":null,"attributes":[{"value":"/ The type of the produced header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":703466,"byte_end":703502,"line_start":16,"line_end":16,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":703569,"byte_end":703574,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Entry","qualname":"::read::lookup::LookupParser::Entry","value":"type Entry;","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" The type of the produced entry.\n","sig":null,"attributes":[{"value":"/ The type of the produced entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":703524,"byte_end":703559,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7726},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709487,"byte_end":709494,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::op::DieReference::UnitRef","value":"DieReference::UnitRef(UnitOffset<T>)","parent":{"krate":0,"index":7724},"children":[],"decl_id":null,"docs":" A CU-relative reference.\n","sig":null,"attributes":[{"value":"/ A CU-relative reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709454,"byte_end":709482,"line_start":16,"line_end":16,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7729},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709553,"byte_end":709565,"line_start":19,"line_end":19,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::op::DieReference::DebugInfoRef","value":"DieReference::DebugInfoRef(DebugInfoOffset<T>)","parent":{"krate":0,"index":7724},"children":[],"decl_id":null,"docs":" A section-relative reference.\n","sig":null,"attributes":[{"value":"/ A section-relative reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709515,"byte_end":709548,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":7724},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709424,"byte_end":709436,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"DieReference","qualname":"::read::op::DieReference","value":"pub enum DieReference<T = usize> {\n    UnitRef(UnitOffset<T>),\n    DebugInfoRef(DebugInfoOffset<T>),\n}","parent":null,"children":[{"krate":0,"index":7726},{"krate":0,"index":7729}],"decl_id":null,"docs":" A reference to a DIE, either relative to the current CU or\n relative to the section.\n","sig":null,"attributes":[{"value":"/ A reference to a DIE, either relative to the current CU or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709278,"byte_end":709340,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/ relative to the section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709341,"byte_end":709369,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":7754},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710330,"byte_end":710335,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Deref","qualname":"::read::op::Operation::Deref","value":"Operation::Deref { base_type, size, space }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Dereference the topmost value of the stack.\n","sig":null,"attributes":[{"value":"/ Dereference the topmost value of the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710278,"byte_end":710325,"line_start":39,"line_end":39,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7758},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710707,"byte_end":710711,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Drop","qualname":"::read::op::Operation::Drop","value":"Operation::Drop","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Drop an item from the stack.\n","sig":null,"attributes":[{"value":"/ Drop an item from the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710670,"byte_end":710702,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710870,"byte_end":710874,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Pick","qualname":"::read::op::Operation::Pick","value":"Operation::Pick { index }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Pick an item from the stack and push it on top of the stack.\n This operation handles `DW_OP_pick`, `DW_OP_dup`, and\n `DW_OP_over`.\n","sig":null,"attributes":[{"value":"/ Pick an item from the stack and push it on top of the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710717,"byte_end":710781,"line_start":51,"line_end":51,"column_start":5,"column_end":69}},{"value":"/ This operation handles `DW_OP_pick`, `DW_OP_dup`, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710786,"byte_end":710843,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/ `DW_OP_over`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710848,"byte_end":710865,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7762},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711016,"byte_end":711020,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Swap","qualname":"::read::op::Operation::Swap","value":"Operation::Swap","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Swap the top two stack items.\n","sig":null,"attributes":[{"value":"/ Swap the top two stack items.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710978,"byte_end":711011,"line_start":58,"line_end":58,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7764},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711068,"byte_end":711071,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"Rot","qualname":"::read::op::Operation::Rot","value":"Operation::Rot","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Rotate the top three stack items.\n","sig":null,"attributes":[{"value":"/ Rotate the top three stack items.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711026,"byte_end":711063,"line_start":60,"line_end":60,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7766},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711134,"byte_end":711137,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Abs","qualname":"::read::op::Operation::Abs","value":"Operation::Abs","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Take the absolute value of the top of the stack.\n","sig":null,"attributes":[{"value":"/ Take the absolute value of the top of the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711077,"byte_end":711129,"line_start":62,"line_end":62,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7768},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711201,"byte_end":711204,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"And","qualname":"::read::op::Operation::And","value":"Operation::And","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Bitwise `and` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `and` of the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711143,"byte_end":711196,"line_start":64,"line_end":64,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711258,"byte_end":711261,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"Div","qualname":"::read::op::Operation::Div","value":"Operation::Div","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Divide the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Divide the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711210,"byte_end":711253,"line_start":66,"line_end":66,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7772},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711317,"byte_end":711322,"line_start":69,"line_end":69,"column_start":5,"column_end":10},"name":"Minus","qualname":"::read::op::Operation::Minus","value":"Operation::Minus","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Subtract the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Subtract the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711267,"byte_end":711312,"line_start":68,"line_end":68,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7774},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711380,"byte_end":711383,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"Mod","qualname":"::read::op::Operation::Mod","value":"Operation::Mod","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Modulus of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Modulus of the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711328,"byte_end":711375,"line_start":70,"line_end":70,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7776},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711439,"byte_end":711442,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"Mul","qualname":"::read::op::Operation::Mul","value":"Operation::Mul","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Multiply the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Multiply the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711389,"byte_end":711434,"line_start":72,"line_end":72,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711485,"byte_end":711488,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"Neg","qualname":"::read::op::Operation::Neg","value":"Operation::Neg","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Negate the top of the stack.\n","sig":null,"attributes":[{"value":"/ Negate the top of the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711448,"byte_end":711480,"line_start":74,"line_end":74,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7780},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711541,"byte_end":711544,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"Not","qualname":"::read::op::Operation::Not","value":"Operation::Not","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Bitwise `not` of the top of the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `not` of the top of the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711494,"byte_end":711536,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7782},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711607,"byte_end":711609,"line_start":79,"line_end":79,"column_start":5,"column_end":7},"name":"Or","qualname":"::read::op::Operation::Or","value":"Operation::Or","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Bitwise `or` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `or` of the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711550,"byte_end":711602,"line_start":78,"line_end":78,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7784},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711660,"byte_end":711664,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Plus","qualname":"::read::op::Operation::Plus","value":"Operation::Plus","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Add the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Add the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711615,"byte_end":711655,"line_start":80,"line_end":80,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":7786},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711728,"byte_end":711740,"line_start":83,"line_end":83,"column_start":5,"column_end":17},"name":"PlusConstant","qualname":"::read::op::Operation::PlusConstant","value":"Operation::PlusConstant { value }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Add a constant to the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Add a constant to the topmost value on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711670,"byte_end":711723,"line_start":82,"line_end":82,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7788},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711932,"byte_end":711935,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"Shl","qualname":"::read::op::Operation::Shl","value":"Operation::Shl","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Logical left shift of the 2nd value on the stack by the number\n of bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Logical left shift of the 2nd value on the stack by the number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711804,"byte_end":711870,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/ of bits given by the topmost value on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711875,"byte_end":711927,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7790},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712062,"byte_end":712065,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"Shr","qualname":"::read::op::Operation::Shr","value":"Operation::Shr","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Right shift of the 2nd value on the stack by the number of\n bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Right shift of the 2nd value on the stack by the number of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":711941,"byte_end":712003,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ bits given by the topmost value on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712008,"byte_end":712057,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712202,"byte_end":712206,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Shra","qualname":"::read::op::Operation::Shra","value":"Operation::Shra","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Arithmetic left shift of the 2nd value on the stack by the\n number of bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Arithmetic left shift of the 2nd value on the stack by the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712071,"byte_end":712133,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/ number of bits given by the topmost value on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712138,"byte_end":712197,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7794},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712270,"byte_end":712273,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Xor","qualname":"::read::op::Operation::Xor","value":"Operation::Xor","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Bitwise `xor` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `xor` of the top two values on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712212,"byte_end":712265,"line_start":96,"line_end":96,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":7796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712349,"byte_end":712352,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"Bra","qualname":"::read::op::Operation::Bra","value":"Operation::Bra { target }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Branch to the target location if the top of stack is nonzero.\n","sig":null,"attributes":[{"value":"/ Branch to the target location if the top of stack is nonzero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712279,"byte_end":712344,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7798},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712498,"byte_end":712500,"line_start":104,"line_end":104,"column_start":5,"column_end":7},"name":"Eq","qualname":"::read::op::Operation::Eq","value":"Operation::Eq","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compare the top two stack values for equality.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values for equality.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712443,"byte_end":712493,"line_start":103,"line_end":103,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7800},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712559,"byte_end":712561,"line_start":106,"line_end":106,"column_start":5,"column_end":7},"name":"Ge","qualname":"::read::op::Operation::Ge","value":"Operation::Ge","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `>=`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712506,"byte_end":712554,"line_start":105,"line_end":105,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712619,"byte_end":712621,"line_start":108,"line_end":108,"column_start":5,"column_end":7},"name":"Gt","qualname":"::read::op::Operation::Gt","value":"Operation::Gt","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712567,"byte_end":712614,"line_start":107,"line_end":107,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7804},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712680,"byte_end":712682,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"Le","qualname":"::read::op::Operation::Le","value":"Operation::Le","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `<=`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712627,"byte_end":712675,"line_start":109,"line_end":109,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7806},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712740,"byte_end":712742,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Lt","qualname":"::read::op::Operation::Lt","value":"Operation::Lt","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `<`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712688,"byte_end":712735,"line_start":111,"line_end":111,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7808},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712801,"byte_end":712803,"line_start":114,"line_end":114,"column_start":5,"column_end":7},"name":"Ne","qualname":"::read::op::Operation::Ne","value":"Operation::Ne","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `!=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `!=`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712748,"byte_end":712796,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":7810},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712862,"byte_end":712866,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Skip","qualname":"::read::op::Operation::Skip","value":"Operation::Skip { target }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Unconditional branch to the target location.\n","sig":null,"attributes":[{"value":"/ Unconditional branch to the target location.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712809,"byte_end":712857,"line_start":115,"line_end":115,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":7812},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713057,"byte_end":713073,"line_start":122,"line_end":122,"column_start":5,"column_end":21},"name":"UnsignedConstant","qualname":"::read::op::Operation::UnsignedConstant","value":"Operation::UnsignedConstant { value }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Push an unsigned constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[{"value":"/ Push an unsigned constant value on the stack.  This handles multiple","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":712957,"byte_end":713029,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ DWARF opcodes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713034,"byte_end":713052,"line_start":121,"line_end":121,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7814},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713235,"byte_end":713249,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"SignedConstant","qualname":"::read::op::Operation::SignedConstant","value":"Operation::SignedConstant { value }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Push a signed constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[{"value":"/ Push a signed constant value on the stack.  This handles multiple","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713138,"byte_end":713207,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"/ DWARF opcodes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713212,"byte_end":713230,"line_start":127,"line_end":127,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713435,"byte_end":713443,"line_start":135,"line_end":135,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Operation::Register","value":"Operation::Register { register }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Indicate that this piece's location is in the given register.","sig":null,"attributes":[{"value":"/ Indicate that this piece's location is in the given register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713314,"byte_end":713379,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713384,"byte_end":713387,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713392,"byte_end":713430,"line_start":134,"line_end":134,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":7818},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713634,"byte_end":713648,"line_start":141,"line_end":141,"column_start":5,"column_end":19},"name":"RegisterOffset","qualname":"::read::op::Operation::RegisterOffset","value":"Operation::RegisterOffset { register, offset, base_type }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Find the value of the given register, add the offset, and then\n push the resulting sum on the stack.\n","sig":null,"attributes":[{"value":"/ Find the value of the given register, add the offset, and then","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713518,"byte_end":713584,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/ push the resulting sum on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713589,"byte_end":713629,"line_start":140,"line_end":140,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":7822},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714020,"byte_end":714031,"line_start":151,"line_end":151,"column_start":5,"column_end":16},"name":"FrameOffset","qualname":"::read::op::Operation::FrameOffset","value":"Operation::FrameOffset { offset }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compute the frame base (using `DW_AT_frame_base`), add the\n given offset, and then push the resulting sum on the stack.\n","sig":null,"attributes":[{"value":"/ Compute the frame base (using `DW_AT_frame_base`), add the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713885,"byte_end":713947,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/ given offset, and then push the resulting sum on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":713952,"byte_end":714015,"line_start":150,"line_end":150,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7824},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714119,"byte_end":714122,"line_start":156,"line_end":156,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::op::Operation::Nop","value":"Operation::Nop","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" No operation.\n","sig":null,"attributes":[{"value":"/ No operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714097,"byte_end":714114,"line_start":155,"line_end":155,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714174,"byte_end":714191,"line_start":158,"line_end":158,"column_start":5,"column_end":22},"name":"PushObjectAddress","qualname":"::read::op::Operation::PushObjectAddress","value":"Operation::PushObjectAddress","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Push the object address on the stack.\n","sig":null,"attributes":[{"value":"/ Push the object address on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714128,"byte_end":714169,"line_start":157,"line_end":157,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":7828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714346,"byte_end":714350,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Call","qualname":"::read::op::Operation::Call","value":"Operation::Call { offset }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression as a subroutine.  The expression\n comes from the `DW_AT_location` attribute of the indicated\n DIE.\n","sig":null,"attributes":[{"value":"/ Evaluate a DWARF expression as a subroutine.  The expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714197,"byte_end":714261,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ comes from the `DW_AT_location` attribute of the indicated","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714266,"byte_end":714328,"line_start":160,"line_end":160,"column_start":5,"column_end":67}},{"value":"/ DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714333,"byte_end":714341,"line_start":161,"line_end":161,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714519,"byte_end":714522,"line_start":168,"line_end":168,"column_start":5,"column_end":8},"name":"TLS","qualname":"::read::op::Operation::TLS","value":"Operation::TLS","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compute the address of a thread-local variable and push it on\n the stack.\n","sig":null,"attributes":[{"value":"/ Compute the address of a thread-local variable and push it on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714430,"byte_end":714495,"line_start":166,"line_end":166,"column_start":5,"column_end":70}},{"value":"/ the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714500,"byte_end":714514,"line_start":167,"line_end":167,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714589,"byte_end":714601,"line_start":170,"line_end":170,"column_start":5,"column_end":17},"name":"CallFrameCFA","qualname":"::read::op::Operation::CallFrameCFA","value":"Operation::CallFrameCFA","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Compute the call frame CFA and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Compute the call frame CFA and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714528,"byte_end":714584,"line_start":169,"line_end":169,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":7834},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714634,"byte_end":714639,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Piece","qualname":"::read::op::Operation::Piece","value":"Operation::Piece { size_in_bits, bit_offset }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Terminate a piece.\n","sig":null,"attributes":[{"value":"/ Terminate a piece.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714607,"byte_end":714629,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":7837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715091,"byte_end":715104,"line_start":184,"line_end":184,"column_start":5,"column_end":18},"name":"ImplicitValue","qualname":"::read::op::Operation::ImplicitValue","value":"Operation::ImplicitValue { data }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" The object has no location, but has a known constant value.","sig":null,"attributes":[{"value":"/ The object has no location, but has a known constant value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714929,"byte_end":714992,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":714997,"byte_end":715000,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_implicit_value`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715005,"byte_end":715043,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715048,"byte_end":715086,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7839},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715343,"byte_end":715353,"line_start":192,"line_end":192,"column_start":5,"column_end":15},"name":"StackValue","qualname":"::read::op::Operation::StackValue","value":"Operation::StackValue","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" The object has no location, but its value is at the top of the stack.","sig":null,"attributes":[{"value":"/ The object has no location, but its value is at the top of the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715174,"byte_end":715247,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715252,"byte_end":715255,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_stack_value`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715260,"byte_end":715295,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715300,"byte_end":715338,"line_start":191,"line_end":191,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":7841},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715580,"byte_end":715595,"line_start":198,"line_end":198,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Operation::ImplicitPointer","value":"Operation::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" The object is a pointer to a value which has no actual location,\n such as an implicit value or a stack value.","sig":null,"attributes":[{"value":"/ The object is a pointer to a value which has no actual location,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715359,"byte_end":715427,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/ such as an implicit value or a stack value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715432,"byte_end":715479,"line_start":194,"line_end":194,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715484,"byte_end":715487,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_implicit_pointer`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715492,"byte_end":715532,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715537,"byte_end":715575,"line_start":197,"line_end":197,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":7844},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715989,"byte_end":715999,"line_start":207,"line_end":207,"column_start":5,"column_end":15},"name":"EntryValue","qualname":"::read::op::Operation::EntryValue","value":"Operation::EntryValue { expression }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Evaluate an expression at the entry to the current subprogram, and push it on the stack.","sig":null,"attributes":[{"value":"/ Evaluate an expression at the entry to the current subprogram, and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715844,"byte_end":715936,"line_start":204,"line_end":204,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715941,"byte_end":715944,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_entry_value`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":715949,"byte_end":715984,"line_start":206,"line_end":206,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":7846},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716407,"byte_end":716419,"line_start":218,"line_end":218,"column_start":5,"column_end":17},"name":"ParameterRef","qualname":"::read::op::Operation::ParameterRef","value":"Operation::ParameterRef { offset }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" This represents a parameter that was optimized out.","sig":null,"attributes":[{"value":"/ This represents a parameter that was optimized out.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716080,"byte_end":716135,"line_start":211,"line_end":211,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716140,"byte_end":716143,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The offset points to the definition of the parameter, and is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716148,"byte_end":716212,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/ matched to the `DW_TAG_GNU_call_site_parameter` in the caller that also","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716217,"byte_end":716292,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ points to the same definition of the parameter.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716297,"byte_end":716348,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716353,"byte_end":716356,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_GNU_parameter_ref`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716361,"byte_end":716402,"line_start":217,"line_end":217,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":7848},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716604,"byte_end":716611,"line_start":225,"line_end":225,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Operation::Address","value":"Operation::Address { address }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Relocate the address if needed, and push it on the stack.","sig":null,"attributes":[{"value":"/ Relocate the address if needed, and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716497,"byte_end":716558,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716563,"byte_end":716566,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_addr`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716571,"byte_end":716599,"line_start":224,"line_end":224,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7850},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716847,"byte_end":716859,"line_start":233,"line_end":233,"column_start":5,"column_end":17},"name":"AddressIndex","qualname":"::read::op::Operation::AddressIndex","value":"Operation::AddressIndex { index }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Read the address at the given index in `.debug_addr, relocate the address if needed,\n and push it on the stack.","sig":null,"attributes":[{"value":"/ Read the address at the given index in `.debug_addr, relocate the address if needed,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716678,"byte_end":716766,"line_start":229,"line_end":229,"column_start":5,"column_end":93}},{"value":"/ and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716771,"byte_end":716800,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716805,"byte_end":716808,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_addrx`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716813,"byte_end":716842,"line_start":232,"line_end":232,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":7852},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717134,"byte_end":717147,"line_start":241,"line_end":241,"column_start":5,"column_end":18},"name":"ConstantIndex","qualname":"::read::op::Operation::ConstantIndex","value":"Operation::ConstantIndex { index }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Read the address at the given index in `.debug_addr, and push it on the stack.\n Do not relocate the address.","sig":null,"attributes":[{"value":"/ Read the address at the given index in `.debug_addr, and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":716967,"byte_end":717049,"line_start":237,"line_end":237,"column_start":5,"column_end":87}},{"value":"/ Do not relocate the address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717054,"byte_end":717086,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717091,"byte_end":717094,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_constx`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717099,"byte_end":717129,"line_start":240,"line_end":240,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":7854},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717393,"byte_end":717405,"line_start":248,"line_end":248,"column_start":5,"column_end":17},"name":"TypedLiteral","qualname":"::read::op::Operation::TypedLiteral","value":"Operation::TypedLiteral { base_type, value }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Interpret the value bytes as a constant of a given type, and push it on the stack.","sig":null,"attributes":[{"value":"/ Interpret the value bytes as a constant of a given type, and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717255,"byte_end":717341,"line_start":245,"line_end":245,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717346,"byte_end":717349,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_const_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717354,"byte_end":717388,"line_start":247,"line_end":247,"column_start":5,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":7857},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717678,"byte_end":717685,"line_start":257,"line_end":257,"column_start":5,"column_end":12},"name":"Convert","qualname":"::read::op::Operation::Convert","value":"Operation::Convert { base_type }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Pop the top stack entry, convert it to a different type, and push it on the stack.","sig":null,"attributes":[{"value":"/ Pop the top stack entry, convert it to a different type, and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717543,"byte_end":717629,"line_start":254,"line_end":254,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717634,"byte_end":717637,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_convert`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717642,"byte_end":717673,"line_start":256,"line_end":256,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":7859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717946,"byte_end":717957,"line_start":265,"line_end":265,"column_start":5,"column_end":16},"name":"Reinterpret","qualname":"::read::op::Operation::Reinterpret","value":"Operation::Reinterpret { base_type }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" Pop the top stack entry, reinterpret the bits in its value as a different type,\n and push it on the stack.","sig":null,"attributes":[{"value":"/ Pop the top stack entry, reinterpret the bits in its value as a different type,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717776,"byte_end":717859,"line_start":261,"line_end":261,"column_start":5,"column_end":88}},{"value":"/ and push it on the stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717864,"byte_end":717893,"line_start":262,"line_end":262,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717898,"byte_end":717901,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_reinterpret`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":717906,"byte_end":717941,"line_start":264,"line_end":264,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":7861},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718212,"byte_end":718221,"line_start":273,"line_end":273,"column_start":5,"column_end":14},"name":"WasmLocal","qualname":"::read::op::Operation::WasmLocal","value":"Operation::WasmLocal { index }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" The index of a local in the currently executing function.","sig":null,"attributes":[{"value":"/ The index of a local in the currently executing function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718048,"byte_end":718109,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718114,"byte_end":718117,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_WASM_location 0x00`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718122,"byte_end":718164,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718169,"byte_end":718207,"line_start":272,"line_end":272,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":7863},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718450,"byte_end":718460,"line_start":281,"line_end":281,"column_start":5,"column_end":15},"name":"WasmGlobal","qualname":"::read::op::Operation::WasmGlobal","value":"Operation::WasmGlobal { index }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" The index of a global.","sig":null,"attributes":[{"value":"/ The index of a global.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718291,"byte_end":718317,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718322,"byte_end":718325,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_WASM_location 0x01` or `DW_OP_WASM_location 0x03`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718330,"byte_end":718402,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718407,"byte_end":718445,"line_start":280,"line_end":280,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":7865},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718680,"byte_end":718689,"line_start":289,"line_end":289,"column_start":5,"column_end":14},"name":"WasmStack","qualname":"::read::op::Operation::WasmStack","value":"Operation::WasmStack { index }","parent":{"krate":0,"index":7751},"children":[],"decl_id":null,"docs":" The index of an item on the operand stack.","sig":null,"attributes":[{"value":"/ The index of an item on the operand stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718531,"byte_end":718577,"line_start":285,"line_end":285,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718582,"byte_end":718585,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Represents `DW_OP_WASM_location 0x02`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718590,"byte_end":718632,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718637,"byte_end":718675,"line_start":288,"line_end":288,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710163,"byte_end":710172,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"Operation","qualname":"::read::op::Operation","value":"pub enum Operation<R, Offset = <R as Reader>::Offset> where R: Reader<Offset =\n    Offset>, Offset: ReaderOffset {\n    Deref {\n            base_type: UnitOffset<Offset>,\n            size: u8,\n            space: bool,\n        },\n    Drop,\n    Pick {\n            index: u8,\n        },\n    Swap,\n    Rot,\n    Abs,\n    And,\n    Div,\n    Minus,\n    Mod,\n    Mul,\n    Neg,\n    Not,\n    Or,\n    Plus,\n    PlusConstant {\n            value: u64,\n        },\n    Shl,\n    Shr,\n    Shra,\n    Xor,\n    Bra {\n            target: i16,\n        },\n    Eq,\n    Ge,\n    Gt,\n    Le,\n    Lt,\n    Ne,\n    Skip {\n            target: i16,\n        },\n    UnsignedConstant {\n            value: u64,\n        },\n    SignedConstant {\n            value: i64,\n        },\n    Register {\n            register: Register,\n        },\n    RegisterOffset {\n            register: Register,\n            offset: i64,\n            base_type: UnitOffset<Offset>,\n        },\n    FrameOffset {\n            offset: i64,\n        },\n    Nop,\n    PushObjectAddress,\n    Call {\n            offset: DieReference<Offset>,\n        },\n    TLS,\n    CallFrameCFA,\n    Piece {\n            size_in_bits: u64,\n            bit_offset: Option<u64>,\n        },\n    ImplicitValue {\n            data: R,\n        },\n    StackValue,\n    ImplicitPointer {\n            value: DebugInfoOffset<Offset>,\n            byte_offset: i64,\n        },\n    EntryValue {\n            expression: R,\n        },\n    ParameterRef {\n            offset: UnitOffset<Offset>,\n        },\n    Address {\n            address: u64,\n        },\n    AddressIndex {\n            index: DebugAddrIndex<Offset>,\n        },\n    ConstantIndex {\n            index: DebugAddrIndex<Offset>,\n        },\n    TypedLiteral {\n            base_type: UnitOffset<Offset>,\n            value: R,\n        },\n    Convert {\n            base_type: UnitOffset<Offset>,\n        },\n    Reinterpret {\n            base_type: UnitOffset<Offset>,\n        },\n    WasmLocal {\n            index: u32,\n        },\n    WasmGlobal {\n            index: u32,\n        },\n    WasmStack {\n            index: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":7754},{"krate":0,"index":7758},{"krate":0,"index":7760},{"krate":0,"index":7762},{"krate":0,"index":7764},{"krate":0,"index":7766},{"krate":0,"index":7768},{"krate":0,"index":7770},{"krate":0,"index":7772},{"krate":0,"index":7774},{"krate":0,"index":7776},{"krate":0,"index":7778},{"krate":0,"index":7780},{"krate":0,"index":7782},{"krate":0,"index":7784},{"krate":0,"index":7786},{"krate":0,"index":7788},{"krate":0,"index":7790},{"krate":0,"index":7792},{"krate":0,"index":7794},{"krate":0,"index":7796},{"krate":0,"index":7798},{"krate":0,"index":7800},{"krate":0,"index":7802},{"krate":0,"index":7804},{"krate":0,"index":7806},{"krate":0,"index":7808},{"krate":0,"index":7810},{"krate":0,"index":7812},{"krate":0,"index":7814},{"krate":0,"index":7816},{"krate":0,"index":7818},{"krate":0,"index":7822},{"krate":0,"index":7824},{"krate":0,"index":7826},{"krate":0,"index":7828},{"krate":0,"index":7830},{"krate":0,"index":7832},{"krate":0,"index":7834},{"krate":0,"index":7837},{"krate":0,"index":7839},{"krate":0,"index":7841},{"krate":0,"index":7844},{"krate":0,"index":7846},{"krate":0,"index":7848},{"krate":0,"index":7850},{"krate":0,"index":7852},{"krate":0,"index":7854},{"krate":0,"index":7857},{"krate":0,"index":7859},{"krate":0,"index":7861},{"krate":0,"index":7863},{"krate":0,"index":7865}],"decl_id":null,"docs":" A single decoded DWARF expression operation.","sig":null,"attributes":[{"value":"/ A single decoded DWARF expression operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709590,"byte_end":709638,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709639,"byte_end":709642,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ DWARF expression evaluation is done in two parts: first the raw","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709643,"byte_end":709710,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ bytes of the next part of the expression are decoded; and then the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709711,"byte_end":709781,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ decoded operation is evaluated.  This approach lets other","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709782,"byte_end":709843,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ consumers inspect the DWARF expression without reimplementing the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709844,"byte_end":709913,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ decoding operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709914,"byte_end":709937,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709938,"byte_end":709941,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Multiple DWARF opcodes may decode into a single `Operation`.  For","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":709942,"byte_end":710011,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ example, both `DW_OP_deref` and `DW_OP_xderef` are represented","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710012,"byte_end":710078,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ using `Operation::Deref`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":710079,"byte_end":710108,"line_start":32,"line_end":32,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7911},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719316,"byte_end":719321,"line_start":312,"line_end":312,"column_start":5,"column_end":10},"name":"Empty","qualname":"::read::op::Location::Empty","value":"Location::Empty","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" The piece is empty.  Ordinarily this means the piece has been\n optimized away.\n","sig":null,"attributes":[{"value":"/ The piece is empty.  Ordinarily this means the piece has been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719222,"byte_end":719287,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ optimized away.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719292,"byte_end":719311,"line_start":311,"line_end":311,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":7913},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719369,"byte_end":719377,"line_start":314,"line_end":314,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Location::Register","value":"Location::Register { register }","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" The piece is found in a register.\n","sig":null,"attributes":[{"value":"/ The piece is found in a register.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719327,"byte_end":719364,"line_start":313,"line_end":313,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":7915},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719490,"byte_end":719497,"line_start":319,"line_end":319,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Location::Address","value":"Location::Address { address }","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" The piece is found in memory.\n","sig":null,"attributes":[{"value":"/ The piece is found in memory.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719452,"byte_end":719485,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":7917},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719616,"byte_end":719621,"line_start":324,"line_end":324,"column_start":5,"column_end":10},"name":"Value","qualname":"::read::op::Location::Value","value":"Location::Value { value }","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" The piece has no location but its value is known.\n","sig":null,"attributes":[{"value":"/ The piece has no location but its value is known.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719558,"byte_end":719611,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":7919},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719737,"byte_end":719742,"line_start":329,"line_end":329,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::read::op::Location::Bytes","value":"Location::Bytes { value }","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" The piece is represented by some constant bytes.\n","sig":null,"attributes":[{"value":"/ The piece is represented by some constant bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719680,"byte_end":719732,"line_start":328,"line_end":328,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":7921},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719869,"byte_end":719884,"line_start":334,"line_end":334,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Location::ImplicitPointer","value":"Location::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" The piece is a pointer to a value which has no actual location.\n","sig":null,"attributes":[{"value":"/ The piece is a pointer to a value which has no actual location.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719797,"byte_end":719864,"line_start":333,"line_end":333,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":7908},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":719108,"byte_end":719116,"line_start":305,"line_end":305,"column_start":10,"column_end":18},"name":"Location","qualname":"::read::op::Location","value":"pub enum Location<R, Offset = <R as Reader>::Offset> where R: Reader<Offset =\n    Offset>, Offset: ReaderOffset {\n    Empty,\n    Register {\n            register: Register,\n        },\n    Address {\n            address: u64,\n        },\n    Value {\n            value: Value,\n        },\n    Bytes {\n            value: R,\n        },\n    ImplicitPointer {\n            value: DebugInfoOffset<Offset>,\n            byte_offset: i64,\n        },\n}","parent":null,"children":[{"krate":0,"index":7911},{"krate":0,"index":7913},{"krate":0,"index":7915},{"krate":0,"index":7917},{"krate":0,"index":7919},{"krate":0,"index":7921}],"decl_id":null,"docs":" A single location of a piece of the result of a DWARF expression.\n","sig":null,"attributes":[{"value":"/ A single location of a piece of the result of a DWARF expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":718988,"byte_end":719057,"line_start":303,"line_end":303,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720288,"byte_end":720296,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Location<R, Offset>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the piece is empty.\n","sig":null,"attributes":[{"value":"/ Return true if the piece is empty.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720238,"byte_end":720276,"line_start":347,"line_end":347,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7943},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720547,"byte_end":720552,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"Piece","qualname":"::read::op::Piece","value":"Piece { size_in_bits, bit_offset, location }","parent":null,"children":[{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7948}],"decl_id":null,"docs":" The description of a single piece of the result of a DWARF\n expression.\n","sig":null,"attributes":[{"value":"/ The description of a single piece of the result of a DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720416,"byte_end":720478,"line_start":356,"line_end":356,"column_start":1,"column_end":63}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720479,"byte_end":720494,"line_start":357,"line_end":357,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":7946},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720793,"byte_end":720805,"line_start":366,"line_end":366,"column_start":9,"column_end":21},"name":"size_in_bits","qualname":"::read::op::Piece::size_in_bits","value":"core::option::Option<u64>","parent":{"krate":0,"index":7943},"children":[],"decl_id":null,"docs":" If given, the size of the piece in bits.  If `None`, there\n must be only one piece whose size is all of the object.\n","sig":null,"attributes":[{"value":"/ If given, the size of the piece in bits.  If `None`, there","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720658,"byte_end":720720,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/ must be only one piece whose size is all of the object.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720725,"byte_end":720784,"line_start":365,"line_end":365,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":7947},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721431,"byte_end":721441,"line_start":378,"line_end":378,"column_start":9,"column_end":19},"name":"bit_offset","qualname":"::read::op::Piece::bit_offset","value":"core::option::Option<u64>","parent":{"krate":0,"index":7943},"children":[],"decl_id":null,"docs":" If given, the bit offset of the piece within the location.\n If the location is a `Location::Register` or `Location::Value`,\n then this offset is from the least significant bit end of\n the register or value.\n If the location is a `Location::Address` then the offset uses\n the bit numbering and direction conventions of the language\n and target system.","sig":null,"attributes":[{"value":"/ If given, the bit offset of the piece within the location.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720824,"byte_end":720886,"line_start":367,"line_end":367,"column_start":5,"column_end":67}},{"value":"/ If the location is a `Location::Register` or `Location::Value`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720891,"byte_end":720958,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/ then this offset is from the least significant bit end of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720963,"byte_end":721024,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/ the register or value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721029,"byte_end":721055,"line_start":370,"line_end":370,"column_start":5,"column_end":31}},{"value":"/ If the location is a `Location::Address` then the offset uses","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721060,"byte_end":721125,"line_start":371,"line_end":371,"column_start":5,"column_end":70}},{"value":"/ the bit numbering and direction conventions of the language","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721130,"byte_end":721193,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ and target system.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721198,"byte_end":721220,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721225,"byte_end":721228,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ If `None`, the piece starts at the location. If the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721233,"byte_end":721288,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"/ location is a register whose size is larger than the piece,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721293,"byte_end":721356,"line_start":376,"line_end":376,"column_start":5,"column_end":68}},{"value":"/ then placement within the register is defined by the ABI.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721361,"byte_end":721422,"line_start":377,"line_end":377,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":7948},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721505,"byte_end":721513,"line_start":380,"line_end":380,"column_start":9,"column_end":17},"name":"location","qualname":"::read::op::Piece::location","value":"read::op::Location<R, Offset>","parent":{"krate":0,"index":7943},"children":[],"decl_id":null,"docs":" Where this piece is to be found.\n","sig":null,"attributes":[{"value":"/ Where this piece is to be found.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":721460,"byte_end":721496,"line_start":379,"line_end":379,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722552,"byte_end":722557,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"parse","qualname":"<Operation<R, Offset>>::parse","value":"pub fn parse(&mut R, Encoding) -> Result<Operation<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single DWARF expression operation.","sig":null,"attributes":[{"value":"/ Parse a single DWARF expression operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722211,"byte_end":722257,"line_start":405,"line_end":405,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722262,"byte_end":722265,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This is useful when examining a DWARF expression for reasons other","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722270,"byte_end":722340,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ than direct evaluation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722345,"byte_end":722372,"line_start":408,"line_end":408,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722377,"byte_end":722380,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ `bytes` points to a the operation to decode.  It should point into","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722385,"byte_end":722455,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ the same array as `bytecode`, which should be the entire","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722460,"byte_end":722520,"line_start":411,"line_end":411,"column_start":5,"column_end":65}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722525,"byte_end":722540,"line_start":412,"line_end":412,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8019},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740141,"byte_end":740149,"line_start":850,"line_end":850,"column_start":5,"column_end":13},"name":"Complete","qualname":"::read::op::EvaluationResult::Complete","value":"EvaluationResult::Complete","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` is complete, and `Evaluation::result()` can be called.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` is complete, and `Evaluation::result()` can be called.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740061,"byte_end":740136,"line_start":849,"line_end":849,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":8021},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740371,"byte_end":740385,"line_start":854,"line_end":854,"column_start":5,"column_end":19},"name":"RequiresMemory","qualname":"::read::op::EvaluationResult::RequiresMemory","value":"EvaluationResult::RequiresMemory { address, size, space, base_type }","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from memory to proceed further.  Once the\n caller determines what value to provide it should resume the `Evaluation`\n by calling `Evaluation::resume_with_memory`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from memory to proceed further.  Once the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740155,"byte_end":740231,"line_start":851,"line_end":851,"column_start":5,"column_end":81}},{"value":"/ caller determines what value to provide it should resume the `Evaluation`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740236,"byte_end":740313,"line_start":852,"line_end":852,"column_start":5,"column_end":82}},{"value":"/ by calling `Evaluation::resume_with_memory`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740318,"byte_end":740366,"line_start":853,"line_end":853,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":8026},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741046,"byte_end":741062,"line_start":868,"line_end":868,"column_start":5,"column_end":21},"name":"RequiresRegister","qualname":"::read::op::EvaluationResult::RequiresRegister","value":"EvaluationResult::RequiresRegister { register, base_type }","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from a register to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_register`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from a register to proceed further.  Once","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740824,"byte_end":740900,"line_start":865,"line_end":865,"column_start":5,"column_end":81}},{"value":"/ the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740905,"byte_end":740973,"line_start":866,"line_end":866,"column_start":5,"column_end":73}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_register`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740978,"byte_end":741041,"line_start":867,"line_end":867,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8029},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741626,"byte_end":741643,"line_start":879,"line_end":879,"column_start":5,"column_end":22},"name":"RequiresFrameBase","qualname":"::read::op::EvaluationResult::RequiresFrameBase","value":"EvaluationResult::RequiresFrameBase","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the frame base address to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame\n base address is the address produced by the location description in the\n `DW_AT_frame_base` attribute of the current function.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the frame base address to proceed further.  Once","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741250,"byte_end":741325,"line_start":874,"line_end":874,"column_start":5,"column_end":80}},{"value":"/ the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741330,"byte_end":741398,"line_start":875,"line_end":875,"column_start":5,"column_end":73}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741403,"byte_end":741479,"line_start":876,"line_end":876,"column_start":5,"column_end":81}},{"value":"/ base address is the address produced by the location description in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741484,"byte_end":741559,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ `DW_AT_frame_base` attribute of the current function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741564,"byte_end":741621,"line_start":878,"line_end":878,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8031},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741859,"byte_end":741870,"line_start":883,"line_end":883,"column_start":5,"column_end":16},"name":"RequiresTls","qualname":"::read::op::EvaluationResult::RequiresTls","value":"EvaluationResult::RequiresTls(u64)","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from TLS to proceed further.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_tls`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from TLS to proceed further.  Once the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741649,"byte_end":741722,"line_start":880,"line_end":880,"column_start":5,"column_end":78}},{"value":"/ caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741727,"byte_end":741791,"line_start":881,"line_end":881,"column_start":5,"column_end":69}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_tls`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741796,"byte_end":741854,"line_start":882,"line_end":882,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8034},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742093,"byte_end":742113,"line_start":887,"line_end":887,"column_start":5,"column_end":25},"name":"RequiresCallFrameCfa","qualname":"::read::op::EvaluationResult::RequiresCallFrameCfa","value":"EvaluationResult::RequiresCallFrameCfa","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the CFA to proceed further.  Once the caller\n determines what value to provide it should resume the `Evaluation` by\n calling `Evaluation::resume_with_call_frame_cfa`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the CFA to proceed further.  Once the caller","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741881,"byte_end":741952,"line_start":884,"line_end":884,"column_start":5,"column_end":76}},{"value":"/ determines what value to provide it should resume the `Evaluation` by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":741957,"byte_end":742030,"line_start":885,"line_end":885,"column_start":5,"column_end":78}},{"value":"/ calling `Evaluation::resume_with_call_frame_cfa`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742035,"byte_end":742088,"line_start":886,"line_end":886,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8036},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742371,"byte_end":742389,"line_start":892,"line_end":892,"column_start":5,"column_end":23},"name":"RequiresAtLocation","qualname":"::read::op::EvaluationResult::RequiresAtLocation","value":"EvaluationResult::RequiresAtLocation(DieReference<R::Offset>)","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the DWARF expression at the given location to\n proceed further.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_at_location`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the DWARF expression at the given location to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742119,"byte_end":742191,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ proceed further.  Once the caller determines what value to provide it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742196,"byte_end":742269,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/ should resume the `Evaluation` by calling","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742274,"byte_end":742319,"line_start":890,"line_end":890,"column_start":5,"column_end":50}},{"value":"/ `Evaluation::resume_with_at_location`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742324,"byte_end":742366,"line_start":891,"line_end":891,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8039},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742707,"byte_end":742725,"line_start":897,"line_end":897,"column_start":5,"column_end":23},"name":"RequiresEntryValue","qualname":"::read::op::EvaluationResult::RequiresEntryValue","value":"EvaluationResult::RequiresEntryValue(Expression<R>)","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value produced by evaluating a DWARF\n expression at the entry point of the current subprogram.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_entry_value`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the value produced by evaluating a DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742420,"byte_end":742487,"line_start":893,"line_end":893,"column_start":5,"column_end":72}},{"value":"/ expression at the entry point of the current subprogram.  Once the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742492,"byte_end":742562,"line_start":894,"line_end":894,"column_start":5,"column_end":75}},{"value":"/ caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742567,"byte_end":742631,"line_start":895,"line_end":895,"column_start":5,"column_end":69}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_entry_value`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742636,"byte_end":742702,"line_start":896,"line_end":896,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8042},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743020,"byte_end":743040,"line_start":902,"line_end":902,"column_start":5,"column_end":25},"name":"RequiresParameterRef","qualname":"::read::op::EvaluationResult::RequiresParameterRef","value":"EvaluationResult::RequiresParameterRef(UnitOffset<R::Offset>)","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value of the parameter at the given location\n in the current function's caller.  Once the caller determines what value\n to provide it should resume the `Evaluation` by calling\n `Evaluation::resume_with_parameter_ref`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the value of the parameter at the given location","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742746,"byte_end":742821,"line_start":898,"line_end":898,"column_start":5,"column_end":80}},{"value":"/ in the current function's caller.  Once the caller determines what value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742826,"byte_end":742902,"line_start":899,"line_end":899,"column_start":5,"column_end":81}},{"value":"/ to provide it should resume the `Evaluation` by calling","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742907,"byte_end":742966,"line_start":900,"line_end":900,"column_start":5,"column_end":64}},{"value":"/ `Evaluation::resume_with_parameter_ref`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":742971,"byte_end":743015,"line_start":901,"line_end":901,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8045},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743302,"byte_end":743326,"line_start":906,"line_end":906,"column_start":5,"column_end":29},"name":"RequiresRelocatedAddress","qualname":"::read::op::EvaluationResult::RequiresRelocatedAddress","value":"EvaluationResult::RequiresRelocatedAddress(u64)","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address to be relocated to proceed further.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_relocated_address`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs an address to be relocated to proceed further.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743069,"byte_end":743142,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ Once the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743147,"byte_end":743220,"line_start":904,"line_end":904,"column_start":5,"column_end":78}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_relocated_address`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743225,"byte_end":743297,"line_start":905,"line_end":905,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":8048},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743616,"byte_end":743638,"line_start":911,"line_end":911,"column_start":5,"column_end":27},"name":"RequiresIndexedAddress","qualname":"::read::op::EvaluationResult::RequiresIndexedAddress","value":"EvaluationResult::RequiresIndexedAddress { index, relocate }","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address from the `.debug_addr` section.\n This address may also need to be relocated.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_indexed_address`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs an address from the `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743337,"byte_end":743406,"line_start":907,"line_end":907,"column_start":5,"column_end":74}},{"value":"/ This address may also need to be relocated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743411,"byte_end":743458,"line_start":908,"line_end":908,"column_start":5,"column_end":52}},{"value":"/ Once the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743463,"byte_end":743536,"line_start":909,"line_end":909,"column_start":5,"column_end":78}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_indexed_address`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743541,"byte_end":743611,"line_start":910,"line_end":910,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8051},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744166,"byte_end":744182,"line_start":922,"line_end":922,"column_start":5,"column_end":21},"name":"RequiresBaseType","qualname":"::read::op::EvaluationResult::RequiresBaseType","value":"EvaluationResult::RequiresBaseType(UnitOffset<R::Offset>)","parent":{"krate":0,"index":8017},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the `ValueType` for the base type DIE at\n the give unit offset.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_base_type`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the `ValueType` for the base type DIE at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743916,"byte_end":743983,"line_start":918,"line_end":918,"column_start":5,"column_end":72}},{"value":"/ the give unit offset.  Once the caller determines what value to provide it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":743988,"byte_end":744066,"line_start":919,"line_end":919,"column_start":5,"column_end":83}},{"value":"/ should resume the `Evaluation` by calling","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744071,"byte_end":744116,"line_start":920,"line_end":920,"column_start":5,"column_end":50}},{"value":"/ `Evaluation::resume_with_base_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744121,"byte_end":744161,"line_start":921,"line_end":921,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":8017},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":740027,"byte_end":740043,"line_start":848,"line_end":848,"column_start":10,"column_end":26},"name":"EvaluationResult","qualname":"::read::op::EvaluationResult","value":"pub enum EvaluationResult<R: Reader> {\n    Complete,\n    RequiresMemory {\n            address: u64,\n            size: u8,\n            space: Option<u64>,\n            base_type: UnitOffset<R::Offset>,\n        },\n    RequiresRegister {\n            register: Register,\n            base_type: UnitOffset<R::Offset>,\n        },\n    RequiresFrameBase,\n    RequiresTls(u64),\n    RequiresCallFrameCfa,\n    RequiresAtLocation(DieReference<R::Offset>),\n    RequiresEntryValue(Expression<R>),\n    RequiresParameterRef(UnitOffset<R::Offset>),\n    RequiresRelocatedAddress(u64),\n    RequiresIndexedAddress {\n            index: DebugAddrIndex<R::Offset>,\n            relocate: bool,\n        },\n    RequiresBaseType(UnitOffset<R::Offset>),\n}","parent":null,"children":[{"krate":0,"index":8019},{"krate":0,"index":8021},{"krate":0,"index":8026},{"krate":0,"index":8029},{"krate":0,"index":8031},{"krate":0,"index":8034},{"krate":0,"index":8036},{"krate":0,"index":8039},{"krate":0,"index":8042},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":8051}],"decl_id":null,"docs":" The state of an `Evaluation` after evaluating a DWARF expression.\n The evaluation is either `Complete`, or it requires more data\n to continue, as described by the variant.\n","sig":null,"attributes":[{"value":"/ The state of an `Evaluation` after evaluating a DWARF expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":739808,"byte_end":739877,"line_start":844,"line_end":844,"column_start":1,"column_end":70}},{"value":"/ The evaluation is either `Complete`, or it requires more data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":739878,"byte_end":739943,"line_start":845,"line_end":845,"column_start":1,"column_end":66}},{"value":"/ to continue, as described by the variant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":739944,"byte_end":739989,"line_start":846,"line_end":846,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":8063},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744337,"byte_end":744347,"line_start":927,"line_end":927,"column_start":12,"column_end":22},"name":"Expression","qualname":"::read::op::Expression","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bytecode for a DWARF expression or location description.\n","sig":null,"attributes":[{"value":"/ The bytecode for a DWARF expression or location description.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744210,"byte_end":744274,"line_start":925,"line_end":925,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":8066},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744359,"byte_end":744364,"line_start":927,"line_end":927,"column_start":34,"column_end":39},"name":"0","qualname":"::read::op::Expression::0","value":"R","parent":{"krate":0,"index":8063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745247,"byte_end":745257,"line_start":950,"line_end":950,"column_start":12,"column_end":22},"name":"evaluation","qualname":"<Expression<R>>::evaluation","value":"pub fn evaluation(Self, Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an evaluation for this expression.","sig":null,"attributes":[{"value":"/ Create an evaluation for this expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744404,"byte_end":744449,"line_start":930,"line_end":930,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744454,"byte_end":744457,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ The `encoding` is determined by the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744462,"byte_end":744501,"line_start":932,"line_end":932,"column_start":5,"column_end":44}},{"value":"/ [`CompilationUnitHeader`](struct.CompilationUnitHeader.html) or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744506,"byte_end":744573,"line_start":933,"line_end":933,"column_start":5,"column_end":72}},{"value":"/ [`TypeUnitHeader`](struct.TypeUnitHeader.html) that this expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744578,"byte_end":744649,"line_start":934,"line_end":934,"column_start":5,"column_end":76}},{"value":"/ relates to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744654,"byte_end":744669,"line_start":935,"line_end":935,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744674,"byte_end":744677,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744682,"byte_end":744696,"line_start":937,"line_end":937,"column_start":5,"column_end":19}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744701,"byte_end":744719,"line_start":938,"line_end":938,"column_start":5,"column_end":23}},{"value":"/ use gimli::Expression;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744724,"byte_end":744750,"line_start":939,"line_end":939,"column_start":5,"column_end":31}},{"value":"/ # let endian = gimli::LittleEndian;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744755,"byte_end":744794,"line_start":940,"line_end":940,"column_start":5,"column_end":44}},{"value":"/ # let debug_info = gimli::DebugInfo::from(gimli::EndianSlice::new(&[], endian));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744799,"byte_end":744883,"line_start":941,"line_end":941,"column_start":5,"column_end":89}},{"value":"/ # let unit = debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744888,"byte_end":744949,"line_start":942,"line_end":942,"column_start":5,"column_end":66}},{"value":"/ # let bytecode = gimli::EndianSlice::new(&[], endian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744954,"byte_end":745012,"line_start":943,"line_end":943,"column_start":5,"column_end":63}},{"value":"/ let expression = gimli::Expression(bytecode);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745017,"byte_end":745066,"line_start":944,"line_end":944,"column_start":5,"column_end":54}},{"value":"/ let mut eval = expression.evaluation(unit.encoding());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745071,"byte_end":745129,"line_start":945,"line_end":945,"column_start":5,"column_end":63}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745134,"byte_end":745180,"line_start":946,"line_end":946,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745185,"byte_end":745192,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745197,"byte_end":745221,"line_start":948,"line_end":948,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745226,"byte_end":745235,"line_start":949,"line_end":949,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745428,"byte_end":745438,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"operations","qualname":"<Expression<R>>::operations","value":"pub fn operations(Self, Encoding) -> OperationIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the operations in the expression.\n","sig":null,"attributes":[{"value":"/ Return an iterator for the operations in the expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745356,"byte_end":745416,"line_start":954,"line_end":954,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":8090},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745673,"byte_end":745686,"line_start":965,"line_end":965,"column_start":12,"column_end":25},"name":"OperationIter","qualname":"::read::op::OperationIter","value":"OperationIter {  }","parent":null,"children":[{"krate":0,"index":8092},{"krate":0,"index":8093}],"decl_id":null,"docs":" An iterator for the operations in an expression.\n","sig":null,"attributes":[{"value":"/ An iterator for the operations in an expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745579,"byte_end":745631,"line_start":963,"line_end":963,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745837,"byte_end":745841,"line_start":972,"line_end":972,"column_start":12,"column_end":16},"name":"next","qualname":"<OperationIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<Operation<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Read the next operation in an expression.\n","sig":null,"attributes":[{"value":"/ Read the next operation in an expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745780,"byte_end":745825,"line_start":971,"line_end":971,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746243,"byte_end":746254,"line_start":986,"line_end":986,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<OperationIter<R>>::offset_from","value":"pub fn offset_from(&Self, &Expression<R>) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the current byte offset of the iterator.\n","sig":null,"attributes":[{"value":"/ Return the current byte offset of the iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746180,"byte_end":746231,"line_start":985,"line_end":985,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747976,"byte_end":747993,"line_start":1037,"line_end":1037,"column_start":11,"column_end":28},"name":"EvaluationStorage","qualname":"::read::op::EvaluationStorage","value":"EvaluationStorage<R: Reader>","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137}],"decl_id":null,"docs":" Specification of what storage should be used for [`Evaluation`].","sig":null,"attributes":[{"value":"/ Specification of what storage should be used for [`Evaluation`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746360,"byte_end":746428,"line_start":991,"line_end":991,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746429,"byte_end":746432,"line_start":992,"line_end":992,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746667,"byte_end":746670,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ If you need to avoid [`Evaluation`] from allocating memory, e.g. for signal safety,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746671,"byte_end":746758,"line_start":1001,"line_end":1001,"column_start":1,"column_end":88}},{"value":"/ you can provide you own storage specification:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746759,"byte_end":746809,"line_start":1002,"line_end":1002,"column_start":1,"column_end":51}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746810,"byte_end":746828,"line_start":1003,"line_end":1003,"column_start":1,"column_end":19}},{"value":"/ # use gimli::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746829,"byte_end":746848,"line_start":1004,"line_end":1004,"column_start":1,"column_end":20}},{"value":"/ # let bytecode = EndianSlice::new(&[], LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746849,"byte_end":746906,"line_start":1005,"line_end":1005,"column_start":1,"column_end":58}},{"value":"/ # let encoding = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746907,"byte_end":746945,"line_start":1006,"line_end":1006,"column_start":1,"column_end":39}},{"value":"/ # let get_register_value = |_, _| Value::Generic(42);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":746946,"byte_end":747003,"line_start":1007,"line_end":1007,"column_start":1,"column_end":58}},{"value":"/ # let get_frame_base = || 0xdeadbeef;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747004,"byte_end":747045,"line_start":1008,"line_end":1008,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747046,"byte_end":747051,"line_start":1009,"line_end":1009,"column_start":1,"column_end":6}},{"value":"/ struct StoreOnStack;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747052,"byte_end":747076,"line_start":1010,"line_end":1010,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747077,"byte_end":747080,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ impl<R: Reader> EvaluationStorage<R> for StoreOnStack {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747081,"byte_end":747140,"line_start":1012,"line_end":1012,"column_start":1,"column_end":60}},{"value":"/     type Stack = [Value; 64];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747141,"byte_end":747174,"line_start":1013,"line_end":1013,"column_start":1,"column_end":34}},{"value":"/     type ExpressionStack = [(R, R); 4];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747175,"byte_end":747218,"line_start":1014,"line_end":1014,"column_start":1,"column_end":44}},{"value":"/     type Result = [Piece<R>; 1];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747219,"byte_end":747255,"line_start":1015,"line_end":1015,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747256,"byte_end":747261,"line_start":1016,"line_end":1016,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747262,"byte_end":747265,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ let mut eval = Evaluation::<_, StoreOnStack>::new_in(bytecode, encoding);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747266,"byte_end":747343,"line_start":1018,"line_end":1018,"column_start":1,"column_end":78}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747344,"byte_end":747390,"line_start":1019,"line_end":1019,"column_start":1,"column_end":47}},{"value":"/ while result != EvaluationResult::Complete {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747391,"byte_end":747439,"line_start":1020,"line_end":1020,"column_start":1,"column_end":49}},{"value":"/   match result {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747440,"byte_end":747460,"line_start":1021,"line_end":1021,"column_start":1,"column_end":21}},{"value":"/     EvaluationResult::RequiresRegister { register, base_type } => {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747461,"byte_end":747532,"line_start":1022,"line_end":1022,"column_start":1,"column_end":72}},{"value":"/       let value = get_register_value(register, base_type);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747533,"byte_end":747595,"line_start":1023,"line_end":1023,"column_start":1,"column_end":63}},{"value":"/       result = eval.resume_with_register(value).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747596,"byte_end":747657,"line_start":1024,"line_end":1024,"column_start":1,"column_end":62}},{"value":"/     },","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747658,"byte_end":747668,"line_start":1025,"line_end":1025,"column_start":1,"column_end":11}},{"value":"/     EvaluationResult::RequiresFrameBase => {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747669,"byte_end":747717,"line_start":1026,"line_end":1026,"column_start":1,"column_end":49}},{"value":"/       let frame_base = get_frame_base();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747718,"byte_end":747762,"line_start":1027,"line_end":1027,"column_start":1,"column_end":45}},{"value":"/       result = eval.resume_with_frame_base(frame_base).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747763,"byte_end":747831,"line_start":1028,"line_end":1028,"column_start":1,"column_end":69}},{"value":"/     },","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747832,"byte_end":747842,"line_start":1029,"line_end":1029,"column_start":1,"column_end":11}},{"value":"/     _ => unimplemented!(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747843,"byte_end":747873,"line_start":1030,"line_end":1030,"column_start":1,"column_end":31}},{"value":"/   };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747874,"byte_end":747882,"line_start":1031,"line_end":1031,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747883,"byte_end":747888,"line_start":1032,"line_end":1032,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747889,"byte_end":747892,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ let result = eval.as_result();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747893,"byte_end":747927,"line_start":1034,"line_end":1034,"column_start":1,"column_end":35}},{"value":"/ println!(\"{:?}\", result);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747928,"byte_end":747957,"line_start":1035,"line_end":1035,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":747958,"byte_end":747965,"line_start":1036,"line_end":1036,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748067,"byte_end":748072,"line_start":1039,"line_end":1039,"column_start":10,"column_end":15},"name":"Stack","qualname":"::read::op::EvaluationStorage::Stack","value":"type Stack: ArrayLike<Item = Value>;","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The storage used for the evaluation stack.\n","sig":null,"attributes":[{"value":"/ The storage used for the evaluation stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748011,"byte_end":748057,"line_start":1038,"line_end":1038,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748159,"byte_end":748174,"line_start":1041,"line_end":1041,"column_start":10,"column_end":25},"name":"ExpressionStack","qualname":"::read::op::EvaluationStorage::ExpressionStack","value":"type ExpressionStack: ArrayLike<Item = (R, R)>;","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The storage used for the expression stack.\n","sig":null,"attributes":[{"value":"/ The storage used for the expression stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748103,"byte_end":748149,"line_start":1040,"line_end":1040,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748253,"byte_end":748259,"line_start":1043,"line_end":1043,"column_start":10,"column_end":16},"name":"Result","qualname":"::read::op::EvaluationStorage::Result","value":"type Result: ArrayLike<Item = Piece<R>>;","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The storage used for the results.\n","sig":null,"attributes":[{"value":"/ The storage used for the results.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748206,"byte_end":748243,"line_start":1042,"line_end":1042,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8102},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750499,"byte_end":750509,"line_start":1099,"line_end":1099,"column_start":12,"column_end":22},"name":"Evaluation","qualname":"::read::op::Evaluation","value":"Evaluation {  }","parent":null,"children":[{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8109},{"krate":0,"index":8110},{"krate":0,"index":8111},{"krate":0,"index":8112},{"krate":0,"index":8113},{"krate":0,"index":8114},{"krate":0,"index":8115}],"decl_id":null,"docs":" A DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ A DWARF expression evaluator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748477,"byte_end":748510,"line_start":1053,"line_end":1053,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748511,"byte_end":748514,"line_start":1054,"line_end":1054,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748515,"byte_end":748526,"line_start":1055,"line_end":1055,"column_start":1,"column_end":12}},{"value":"/ A DWARF expression may require additional data to produce a final result,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748527,"byte_end":748604,"line_start":1056,"line_end":1056,"column_start":1,"column_end":78}},{"value":"/ such as the value of a register or a memory location.  Once initial setup","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748605,"byte_end":748682,"line_start":1057,"line_end":1057,"column_start":1,"column_end":78}},{"value":"/ is complete (i.e. `set_initial_value()`, `set_object_address()`) the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748683,"byte_end":748755,"line_start":1058,"line_end":1058,"column_start":1,"column_end":73}},{"value":"/ consumer calls the `evaluate()` method.  That returns an `EvaluationResult`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748756,"byte_end":748836,"line_start":1059,"line_end":1059,"column_start":1,"column_end":81}},{"value":"/ which is either `EvaluationResult::Complete` or a value indicating what","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748837,"byte_end":748912,"line_start":1060,"line_end":1060,"column_start":1,"column_end":76}},{"value":"/ data is needed to resume the `Evaluation`.  The consumer is responsible for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748913,"byte_end":748992,"line_start":1061,"line_end":1061,"column_start":1,"column_end":80}},{"value":"/ producing that data and resuming the computation with the correct method,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748993,"byte_end":749070,"line_start":1062,"line_end":1062,"column_start":1,"column_end":78}},{"value":"/ as documented for `EvaluationResult`.  Only once an `EvaluationResult::Complete`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749071,"byte_end":749155,"line_start":1063,"line_end":1063,"column_start":1,"column_end":85}},{"value":"/ is returned can the consumer call `result()`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749156,"byte_end":749205,"line_start":1064,"line_end":1064,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749206,"byte_end":749209,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ This design allows the consumer of `Evaluation` to decide how and when to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749210,"byte_end":749287,"line_start":1066,"line_end":1066,"column_start":1,"column_end":78}},{"value":"/ produce the required data and resume the computation.  The `Evaluation` can","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749288,"byte_end":749367,"line_start":1067,"line_end":1067,"column_start":1,"column_end":80}},{"value":"/ be driven synchronously (as shown below) or by some asynchronous mechanism","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749368,"byte_end":749446,"line_start":1068,"line_end":1068,"column_start":1,"column_end":79}},{"value":"/ such as futures.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749447,"byte_end":749467,"line_start":1069,"line_end":1069,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749468,"byte_end":749471,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749472,"byte_end":749486,"line_start":1071,"line_end":1071,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749487,"byte_end":749505,"line_start":1072,"line_end":1072,"column_start":1,"column_end":19}},{"value":"/ use gimli::{EndianSlice, Evaluation, EvaluationResult, Format, LittleEndian, Value};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749506,"byte_end":749594,"line_start":1073,"line_end":1073,"column_start":1,"column_end":89}},{"value":"/ # let bytecode = EndianSlice::new(&[], LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749595,"byte_end":749652,"line_start":1074,"line_end":1074,"column_start":1,"column_end":58}},{"value":"/ # let encoding = unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749653,"byte_end":749691,"line_start":1075,"line_end":1075,"column_start":1,"column_end":39}},{"value":"/ # let get_register_value = |_, _| Value::Generic(42);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749692,"byte_end":749749,"line_start":1076,"line_end":1076,"column_start":1,"column_end":58}},{"value":"/ # let get_frame_base = || 0xdeadbeef;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749750,"byte_end":749791,"line_start":1077,"line_end":1077,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749792,"byte_end":749795,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ let mut eval = Evaluation::new(bytecode, encoding);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749796,"byte_end":749851,"line_start":1079,"line_end":1079,"column_start":1,"column_end":56}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749852,"byte_end":749898,"line_start":1080,"line_end":1080,"column_start":1,"column_end":47}},{"value":"/ while result != EvaluationResult::Complete {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749899,"byte_end":749947,"line_start":1081,"line_end":1081,"column_start":1,"column_end":49}},{"value":"/   match result {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749948,"byte_end":749968,"line_start":1082,"line_end":1082,"column_start":1,"column_end":21}},{"value":"/     EvaluationResult::RequiresRegister { register, base_type } => {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":749969,"byte_end":750040,"line_start":1083,"line_end":1083,"column_start":1,"column_end":72}},{"value":"/       let value = get_register_value(register, base_type);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750041,"byte_end":750103,"line_start":1084,"line_end":1084,"column_start":1,"column_end":63}},{"value":"/       result = eval.resume_with_register(value).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750104,"byte_end":750165,"line_start":1085,"line_end":1085,"column_start":1,"column_end":62}},{"value":"/     },","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750166,"byte_end":750176,"line_start":1086,"line_end":1086,"column_start":1,"column_end":11}},{"value":"/     EvaluationResult::RequiresFrameBase => {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750177,"byte_end":750225,"line_start":1087,"line_end":1087,"column_start":1,"column_end":49}},{"value":"/       let frame_base = get_frame_base();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750226,"byte_end":750270,"line_start":1088,"line_end":1088,"column_start":1,"column_end":45}},{"value":"/       result = eval.resume_with_frame_base(frame_base).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750271,"byte_end":750339,"line_start":1089,"line_end":1089,"column_start":1,"column_end":69}},{"value":"/     },","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750340,"byte_end":750350,"line_start":1090,"line_end":1090,"column_start":1,"column_end":11}},{"value":"/     _ => unimplemented!(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750351,"byte_end":750381,"line_start":1091,"line_end":1091,"column_start":1,"column_end":31}},{"value":"/   };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750382,"byte_end":750390,"line_start":1092,"line_end":1092,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750391,"byte_end":750396,"line_start":1093,"line_end":1093,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750397,"byte_end":750400,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ let result = eval.result();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750401,"byte_end":750432,"line_start":1095,"line_end":1095,"column_start":1,"column_end":32}},{"value":"/ println!(\"{:?}\", result);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750433,"byte_end":750462,"line_start":1096,"line_end":1096,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":750463,"byte_end":750470,"line_start":1097,"line_end":1097,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751499,"byte_end":751502,"line_start":1131,"line_end":1131,"column_start":12,"column_end":15},"name":"new","qualname":"<Evaluation<R>>::new","value":"pub fn new(R, Encoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ Create a new DWARF expression evaluator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751293,"byte_end":751337,"line_start":1127,"line_end":1127,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751342,"byte_end":751345,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ The new evaluator is created without an initial value, without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751350,"byte_end":751416,"line_start":1129,"line_end":1129,"column_start":5,"column_end":71}},{"value":"/ an object address, and without a maximum number of iterations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751421,"byte_end":751487,"line_start":1130,"line_end":1130,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751746,"byte_end":751752,"line_start":1139,"line_end":1139,"column_start":12,"column_end":18},"name":"result","qualname":"<Evaluation<R>>::result","value":"pub fn result(Self) -> Vec<Piece<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the result of this `Evaluation`.","sig":null,"attributes":[{"value":"/ Get the result of this `Evaluation`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751598,"byte_end":751638,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751643,"byte_end":751646,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751651,"byte_end":751663,"line_start":1137,"line_end":1137,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` has not been driven to completion.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751668,"byte_end":751734,"line_start":1138,"line_end":1138,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752293,"byte_end":752299,"line_start":1154,"line_end":1154,"column_start":12,"column_end":18},"name":"new_in","qualname":"<Evaluation<R, S>>::new_in","value":"pub fn new_in(R, Encoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ Create a new DWARF expression evaluator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752087,"byte_end":752131,"line_start":1150,"line_end":1150,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752136,"byte_end":752139,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ The new evaluator is created without an initial value, without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752144,"byte_end":752210,"line_start":1152,"line_end":1152,"column_start":5,"column_end":71}},{"value":"/ an object address, and without a maximum number of iterations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752215,"byte_end":752281,"line_start":1153,"line_end":1153,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753464,"byte_end":753481,"line_start":1185,"line_end":1185,"column_start":12,"column_end":29},"name":"set_initial_value","qualname":"<Evaluation<R, S>>::set_initial_value","value":"pub fn set_initial_value(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set an initial value to be pushed on the DWARF expression\n evaluator's stack.  This can be used in cases like\n `DW_AT_vtable_elem_location`, which require a value on the\n stack before evaluation commences.  If no initial value is\n set, and the expression uses an opcode requiring the initial\n value, then evaluation will fail with an error.","sig":null,"attributes":[{"value":"/ Set an initial value to be pushed on the DWARF expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752931,"byte_end":752992,"line_start":1175,"line_end":1175,"column_start":5,"column_end":66}},{"value":"/ evaluator's stack.  This can be used in cases like","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752997,"byte_end":753051,"line_start":1176,"line_end":1176,"column_start":5,"column_end":59}},{"value":"/ `DW_AT_vtable_elem_location`, which require a value on the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753056,"byte_end":753118,"line_start":1177,"line_end":1177,"column_start":5,"column_end":67}},{"value":"/ stack before evaluation commences.  If no initial value is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753123,"byte_end":753185,"line_start":1178,"line_end":1178,"column_start":5,"column_end":67}},{"value":"/ set, and the expression uses an opcode requiring the initial","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753190,"byte_end":753254,"line_start":1179,"line_end":1179,"column_start":5,"column_end":69}},{"value":"/ value, then evaluation will fail with an error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753259,"byte_end":753310,"line_start":1180,"line_end":1180,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753315,"byte_end":753318,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753323,"byte_end":753335,"line_start":1182,"line_end":1182,"column_start":5,"column_end":17}},{"value":"/ Panics if `set_initial_value()` has already been called, or if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753340,"byte_end":753406,"line_start":1183,"line_end":1183,"column_start":5,"column_end":71}},{"value":"/ `evaluate()` has already been called.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753411,"byte_end":753452,"line_start":1184,"line_end":1184,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754067,"byte_end":754085,"line_start":1200,"line_end":1200,"column_start":12,"column_end":30},"name":"set_object_address","qualname":"<Evaluation<R, S>>::set_object_address","value":"pub fn set_object_address(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the enclosing object's address, as used by\n `DW_OP_push_object_address`.  If no object address is set, and\n the expression uses an opcode requiring the object address,\n then evaluation will fail with an error.\n","sig":null,"attributes":[{"value":"/ Set the enclosing object's address, as used by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753817,"byte_end":753867,"line_start":1196,"line_end":1196,"column_start":5,"column_end":55}},{"value":"/ `DW_OP_push_object_address`.  If no object address is set, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753872,"byte_end":753938,"line_start":1197,"line_end":1197,"column_start":5,"column_end":71}},{"value":"/ the expression uses an opcode requiring the object address,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":753943,"byte_end":754006,"line_start":1198,"line_end":1198,"column_start":5,"column_end":68}},{"value":"/ then evaluation will fail with an error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754011,"byte_end":754055,"line_start":1199,"line_end":1199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754691,"byte_end":754709,"line_start":1213,"line_end":1213,"column_start":12,"column_end":30},"name":"set_max_iterations","qualname":"<Evaluation<R, S>>::set_max_iterations","value":"pub fn set_max_iterations(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of iterations to be allowed by the\n expression evaluator.","sig":null,"attributes":[{"value":"/ Set the maximum number of iterations to be allowed by the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754165,"byte_end":754226,"line_start":1204,"line_end":1204,"column_start":5,"column_end":66}},{"value":"/ expression evaluator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754231,"byte_end":754256,"line_start":1205,"line_end":1205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754261,"byte_end":754264,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ An iteration corresponds approximately to the evaluation of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754269,"byte_end":754334,"line_start":1207,"line_end":1207,"column_start":5,"column_end":70}},{"value":"/ single operation in an expression (\"approximately\" because the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754339,"byte_end":754405,"line_start":1208,"line_end":1208,"column_start":5,"column_end":71}},{"value":"/ implementation may allow two such operations in some cases).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754410,"byte_end":754474,"line_start":1209,"line_end":1209,"column_start":5,"column_end":69}},{"value":"/ The default is not to have a maximum; once set, it's not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754479,"byte_end":754539,"line_start":1210,"line_end":1210,"column_start":5,"column_end":65}},{"value":"/ possible to go back to this default state.  This value can be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754544,"byte_end":754609,"line_start":1211,"line_end":1211,"column_start":5,"column_end":70}},{"value":"/ set to avoid denial of service attacks by bad DWARF bytecode.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":754614,"byte_end":754679,"line_start":1212,"line_end":1212,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768579,"byte_end":768588,"line_start":1601,"line_end":1601,"column_start":12,"column_end":21},"name":"as_result","qualname":"<Evaluation<R, S>>::as_result","value":"pub fn as_result(&Self) -> &[Piece<R>]","parent":null,"children":[],"decl_id":null,"docs":" Get the result of this `Evaluation`.","sig":null,"attributes":[{"value":"/ Get the result of this `Evaluation`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768431,"byte_end":768471,"line_start":1597,"line_end":1597,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768476,"byte_end":768479,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768484,"byte_end":768496,"line_start":1599,"line_end":1599,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` has not been driven to completion.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768501,"byte_end":768567,"line_start":1600,"line_end":1600,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":769179,"byte_end":769187,"line_start":1615,"line_end":1615,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Evaluation<R, S>>::evaluate","value":"pub fn evaluate(&mut Self) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression.  This method should only ever be called\n once.  If the returned `EvaluationResult` is not\n `EvaluationResult::Complete`, the caller should provide the required\n value and resume the evaluation by calling the appropriate resume_with\n method on `Evaluation`.\n","sig":null,"attributes":[{"value":"/ Evaluate a DWARF expression.  This method should only ever be called","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768850,"byte_end":768922,"line_start":1610,"line_end":1610,"column_start":5,"column_end":77}},{"value":"/ once.  If the returned `EvaluationResult` is not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768927,"byte_end":768979,"line_start":1611,"line_end":1611,"column_start":5,"column_end":57}},{"value":"/ `EvaluationResult::Complete`, the caller should provide the required","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":768984,"byte_end":769056,"line_start":1612,"line_end":1612,"column_start":5,"column_end":77}},{"value":"/ value and resume the evaluation by calling the appropriate resume_with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":769061,"byte_end":769135,"line_start":1613,"line_end":1613,"column_start":5,"column_end":79}},{"value":"/ method on `Evaluation`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":769140,"byte_end":769167,"line_start":1614,"line_end":1614,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770362,"byte_end":770380,"line_start":1645,"line_end":1645,"column_start":12,"column_end":30},"name":"resume_with_memory","qualname":"<Evaluation<R, S>>::resume_with_memory","value":"pub fn resume_with_memory(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided memory `value`.  This will apply\n the provided memory value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided memory `value`.  This will apply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":769960,"byte_end":770038,"line_start":1638,"line_end":1638,"column_start":5,"column_end":83}},{"value":"/ the provided memory value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770043,"byte_end":770114,"line_start":1639,"line_end":1639,"column_start":5,"column_end":76}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770119,"byte_end":770192,"line_start":1640,"line_end":1640,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770197,"byte_end":770224,"line_start":1641,"line_end":1641,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770229,"byte_end":770232,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770237,"byte_end":770249,"line_start":1643,"line_end":1643,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresMemory`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770254,"byte_end":770350,"line_start":1644,"line_end":1644,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771261,"byte_end":771281,"line_start":1666,"line_end":1666,"column_start":12,"column_end":32},"name":"resume_with_register","qualname":"<Evaluation<R, S>>::resume_with_register","value":"pub fn resume_with_register(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `register` value.  This will apply\n the provided register value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `register` value.  This will apply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770853,"byte_end":770933,"line_start":1659,"line_end":1659,"column_start":5,"column_end":85}},{"value":"/ the provided register value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":770938,"byte_end":771011,"line_start":1660,"line_end":1660,"column_start":5,"column_end":78}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771016,"byte_end":771089,"line_start":1661,"line_end":1661,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771094,"byte_end":771121,"line_start":1662,"line_end":1662,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771126,"byte_end":771129,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771134,"byte_end":771146,"line_start":1664,"line_end":1664,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresRegister`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771151,"byte_end":771249,"line_start":1665,"line_end":1665,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772324,"byte_end":772346,"line_start":1689,"line_end":1689,"column_start":12,"column_end":34},"name":"resume_with_frame_base","qualname":"<Evaluation<R, S>>::resume_with_frame_base","value":"pub fn resume_with_frame_base(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `frame_base`.  This will\n apply the provided frame base value to the evaluation and continue\n evaluating opcodes until the evaluation is completed, reaches an error,\n or needs more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `frame_base`.  This will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771917,"byte_end":771987,"line_start":1682,"line_end":1682,"column_start":5,"column_end":75}},{"value":"/ apply the provided frame base value to the evaluation and continue","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":771992,"byte_end":772062,"line_start":1683,"line_end":1683,"column_start":5,"column_end":75}},{"value":"/ evaluating opcodes until the evaluation is completed, reaches an error,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772067,"byte_end":772142,"line_start":1684,"line_end":1684,"column_start":5,"column_end":80}},{"value":"/ or needs more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772147,"byte_end":772183,"line_start":1685,"line_end":1685,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772188,"byte_end":772191,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772196,"byte_end":772208,"line_start":1687,"line_end":1687,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresFrameBase`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772213,"byte_end":772312,"line_start":1688,"line_end":1688,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773281,"byte_end":773296,"line_start":1710,"line_end":1710,"column_start":12,"column_end":27},"name":"resume_with_tls","qualname":"<Evaluation<R, S>>::resume_with_tls","value":"pub fn resume_with_tls(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `value`.  This will apply\n the provided TLS value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `value`.  This will apply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772892,"byte_end":772963,"line_start":1703,"line_end":1703,"column_start":5,"column_end":76}},{"value":"/ the provided TLS value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":772968,"byte_end":773036,"line_start":1704,"line_end":1704,"column_start":5,"column_end":73}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773041,"byte_end":773114,"line_start":1705,"line_end":1705,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773119,"byte_end":773146,"line_start":1706,"line_end":1706,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773151,"byte_end":773154,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773159,"byte_end":773171,"line_start":1708,"line_end":1708,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresTls`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773176,"byte_end":773269,"line_start":1709,"line_end":1709,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774170,"byte_end":774196,"line_start":1731,"line_end":1731,"column_start":12,"column_end":38},"name":"resume_with_call_frame_cfa","qualname":"<Evaluation<R, S>>::resume_with_call_frame_cfa","value":"pub fn resume_with_call_frame_cfa(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `cfa`.  This will\n apply the provided CFA value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `cfa`.  This will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773774,"byte_end":773837,"line_start":1724,"line_end":1724,"column_start":5,"column_end":68}},{"value":"/ apply the provided CFA value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773842,"byte_end":773916,"line_start":1725,"line_end":1725,"column_start":5,"column_end":79}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773921,"byte_end":773994,"line_start":1726,"line_end":1726,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":773999,"byte_end":774026,"line_start":1727,"line_end":1727,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774031,"byte_end":774034,"line_start":1728,"line_end":1728,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774039,"byte_end":774051,"line_start":1729,"line_end":1729,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresCallFrameCfa`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774056,"byte_end":774158,"line_start":1730,"line_end":1730,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":775075,"byte_end":775098,"line_start":1752,"line_end":1752,"column_start":12,"column_end":35},"name":"resume_with_at_location","qualname":"<Evaluation<R, S>>::resume_with_at_location","value":"pub fn resume_with_at_location(&mut Self, R) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `bytes`.  This will\n continue processing the evaluation with the new expression provided\n until the evaluation is completed, reaches an error, or needs more\n information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `bytes`.  This will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774690,"byte_end":774755,"line_start":1745,"line_end":1745,"column_start":5,"column_end":70}},{"value":"/ continue processing the evaluation with the new expression provided","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774760,"byte_end":774831,"line_start":1746,"line_end":1746,"column_start":5,"column_end":76}},{"value":"/ until the evaluation is completed, reaches an error, or needs more","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774836,"byte_end":774906,"line_start":1747,"line_end":1747,"column_start":5,"column_end":75}},{"value":"/ information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774911,"byte_end":774933,"line_start":1748,"line_end":1748,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774938,"byte_end":774941,"line_start":1749,"line_end":1749,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774946,"byte_end":774958,"line_start":1750,"line_end":1750,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresAtLocation`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":774963,"byte_end":775063,"line_start":1751,"line_end":1751,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776272,"byte_end":776295,"line_start":1778,"line_end":1778,"column_start":12,"column_end":35},"name":"resume_with_entry_value","qualname":"<Evaluation<R, S>>::resume_with_entry_value","value":"pub fn resume_with_entry_value(&mut Self, Value)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `entry_value`.  This will\n apply the provided entry value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `entry_value`.  This will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":775868,"byte_end":775939,"line_start":1771,"line_end":1771,"column_start":5,"column_end":76}},{"value":"/ apply the provided entry value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":775944,"byte_end":776020,"line_start":1772,"line_end":1772,"column_start":5,"column_end":81}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776025,"byte_end":776098,"line_start":1773,"line_end":1773,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776103,"byte_end":776130,"line_start":1774,"line_end":1774,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776135,"byte_end":776138,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776143,"byte_end":776155,"line_start":1776,"line_end":1776,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresEntryValue`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776160,"byte_end":776260,"line_start":1777,"line_end":1777,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777207,"byte_end":777232,"line_start":1799,"line_end":1799,"column_start":12,"column_end":37},"name":"resume_with_parameter_ref","qualname":"<Evaluation<R, S>>::resume_with_parameter_ref","value":"pub fn resume_with_parameter_ref(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `parameter_value`.  This will\n apply the provided parameter value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `parameter_value`.  This will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776793,"byte_end":776868,"line_start":1792,"line_end":1792,"column_start":5,"column_end":80}},{"value":"/ apply the provided parameter value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776873,"byte_end":776953,"line_start":1793,"line_end":1793,"column_start":5,"column_end":85}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":776958,"byte_end":777031,"line_start":1794,"line_end":1794,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777036,"byte_end":777063,"line_start":1795,"line_end":1795,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777068,"byte_end":777071,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777076,"byte_end":777088,"line_start":1797,"line_end":1797,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresParameterRef`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777093,"byte_end":777195,"line_start":1798,"line_end":1798,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778227,"byte_end":778256,"line_start":1824,"line_end":1824,"column_start":12,"column_end":41},"name":"resume_with_relocated_address","qualname":"<Evaluation<R, S>>::resume_with_relocated_address","value":"pub fn resume_with_relocated_address(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided relocated `address`.  This will use the\n provided relocated address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided relocated `address`.  This will use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777781,"byte_end":777866,"line_start":1816,"line_end":1816,"column_start":5,"column_end":90}},{"value":"/ provided relocated address for the operation that required it, and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777871,"byte_end":777961,"line_start":1817,"line_end":1817,"column_start":5,"column_end":95}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":777966,"byte_end":778039,"line_start":1818,"line_end":1818,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778044,"byte_end":778071,"line_start":1819,"line_end":1819,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778076,"byte_end":778079,"line_start":1820,"line_end":1820,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778084,"byte_end":778096,"line_start":1821,"line_end":1821,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778101,"byte_end":778161,"line_start":1822,"line_end":1822,"column_start":5,"column_end":65}},{"value":"/ `EvaluationResult::RequiresRelocatedAddress`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778166,"byte_end":778215,"line_start":1823,"line_end":1823,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779218,"byte_end":779245,"line_start":1846,"line_end":1846,"column_start":12,"column_end":39},"name":"resume_with_indexed_address","qualname":"<Evaluation<R, S>>::resume_with_indexed_address","value":"pub fn resume_with_indexed_address(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided indexed `address`.  This will use the\n provided indexed address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided indexed `address`.  This will use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778778,"byte_end":778861,"line_start":1838,"line_end":1838,"column_start":5,"column_end":88}},{"value":"/ provided indexed address for the operation that required it, and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778866,"byte_end":778954,"line_start":1839,"line_end":1839,"column_start":5,"column_end":93}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":778959,"byte_end":779032,"line_start":1840,"line_end":1840,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779037,"byte_end":779064,"line_start":1841,"line_end":1841,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779069,"byte_end":779072,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779077,"byte_end":779089,"line_start":1843,"line_end":1843,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779094,"byte_end":779154,"line_start":1844,"line_end":1844,"column_start":5,"column_end":65}},{"value":"/ `EvaluationResult::RequiresIndexedAddress`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779159,"byte_end":779206,"line_start":1845,"line_end":1845,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":780175,"byte_end":780196,"line_start":1867,"line_end":1867,"column_start":12,"column_end":33},"name":"resume_with_base_type","qualname":"<Evaluation<R, S>>::resume_with_base_type","value":"pub fn resume_with_base_type(&mut Self, ValueType)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `base_type`.  This will use the\n provided base type for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `base_type`.  This will use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779761,"byte_end":779838,"line_start":1860,"line_end":1860,"column_start":5,"column_end":82}},{"value":"/ provided base type for the operation that required it, and continue evaluating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779843,"byte_end":779925,"line_start":1861,"line_end":1861,"column_start":5,"column_end":87}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":779930,"byte_end":780003,"line_start":1862,"line_end":1862,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":780008,"byte_end":780035,"line_start":1863,"line_end":1863,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":780040,"byte_end":780043,"line_start":1864,"line_end":1864,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":780048,"byte_end":780060,"line_start":1865,"line_end":1865,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresBaseType`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":780065,"byte_end":780163,"line_start":1866,"line_end":1866,"column_start":5,"column_end":103}}]},{"kind":"Struct","id":{"krate":0,"index":8120},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852711,"byte_end":852724,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubNamesEntry","qualname":"::read::pubnames::PubNamesEntry","value":"PubNamesEntry {  }","parent":null,"children":[{"krate":0,"index":8122},{"krate":0,"index":8123},{"krate":0,"index":8124}],"decl_id":null,"docs":" A single parsed pubname.\n","sig":null,"attributes":[{"value":"/ A single parsed pubname.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852647,"byte_end":852675,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852938,"byte_end":852942,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubNamesEntry<R>>::name","value":"pub fn name(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name this entry refers to.\n","sig":null,"attributes":[{"value":"/ Returns the name this entry refers to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852884,"byte_end":852926,"line_start":15,"line_end":15,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853124,"byte_end":853142,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubNamesEntry<R>>::unit_header_offset","value":"pub fn unit_header_offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the .debug_info section for the header of the compilation unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852988,"byte_end":853078,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ which contains this name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853083,"byte_end":853112,"line_start":21,"line_end":21,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853350,"byte_end":853360,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubNamesEntry<R>>::die_offset","value":"pub fn die_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n has this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the compilation unit for the debugging information entry which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853225,"byte_end":853315,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ has this name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853320,"byte_end":853338,"line_start":27,"line_end":27,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8131},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853901,"byte_end":853914,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubNames","qualname":"::read::pubnames::DebugPubNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubNames` struct represents the DWARF public names information\n found in the `.debug_pubnames` section.\n","sig":null,"attributes":[{"value":"/ The `DebugPubNames` struct represents the DWARF public names information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853745,"byte_end":853821,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853822,"byte_end":853865,"line_start":48,"line_end":48,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854694,"byte_end":854697,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubNames<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854080,"byte_end":854163,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854168,"byte_end":854180,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854185,"byte_end":854188,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_pubnames` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854193,"byte_end":854272,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854277,"byte_end":854347,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854352,"byte_end":854393,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854398,"byte_end":854401,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854406,"byte_end":854413,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubNames, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854418,"byte_end":854463,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854468,"byte_end":854471,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854476,"byte_end":854495,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubnames_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854500,"byte_end":854556,"line_start":67,"line_end":67,"column_start":5,"column_end":61}},{"value":"/ let debug_pubnames =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854561,"byte_end":854585,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/     DebugPubNames::new(read_debug_pubnames_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854590,"byte_end":854670,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854675,"byte_end":854682,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855448,"byte_end":855453,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubNames<R>>::items","value":"pub fn items(&Self) -> PubNamesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubnames in the `.debug_pubnames` section.","sig":null,"attributes":[{"value":"/ Iterate the pubnames in the `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854879,"byte_end":854937,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854942,"byte_end":854945,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854950,"byte_end":854957,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubNames, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854962,"byte_end":855020,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855025,"byte_end":855028,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855033,"byte_end":855052,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubnames_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855057,"byte_end":855113,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ let debug_pubnames =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855118,"byte_end":855142,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     DebugPubNames::new(read_debug_pubnames_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855147,"byte_end":855227,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855232,"byte_end":855235,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_pubnames.items();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855240,"byte_end":855282,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/ while let Some(pubname) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855287,"byte_end":855339,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/   println!(\"pubname {} found!\", pubname.name().to_string_lossy());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855344,"byte_end":855414,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855419,"byte_end":855424,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855429,"byte_end":855436,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856083,"byte_end":856100,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubNamesEntryIter","qualname":"::read::pubnames::PubNamesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubnames from a `.debug_pubnames` section.","sig":null,"attributes":[{"value":"/ An iterator over the pubnames from a `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855887,"byte_end":855954,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855955,"byte_end":855958,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855959,"byte_end":855980,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855981,"byte_end":856047,"line_start":116,"line_end":116,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856621,"byte_end":856625,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubNamesEntryIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<PubNamesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubname.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next pubname.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856214,"byte_end":856267,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856272,"byte_end":856275,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed pubname as `Ok(Some(pubname))`. Returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856280,"byte_end":856348,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` when iteration is complete and all pubnames have already been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856353,"byte_end":856429,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ parsed and yielded. If an error occurs while parsing the next pubname,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856434,"byte_end":856508,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856513,"byte_end":856589,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856594,"byte_end":856609,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857314,"byte_end":857327,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubTypesEntry","qualname":"::read::pubtypes::PubTypesEntry","value":"PubTypesEntry {  }","parent":null,"children":[{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8155}],"decl_id":null,"docs":" A single parsed pubtype.\n","sig":null,"attributes":[{"value":"/ A single parsed pubtype.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857250,"byte_end":857278,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857553,"byte_end":857557,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubTypesEntry<R>>::name","value":"pub fn name(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the type this entry refers to.\n","sig":null,"attributes":[{"value":"/ Returns the name of the type this entry refers to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857487,"byte_end":857541,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857753,"byte_end":857771,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubTypesEntry<R>>::unit_header_offset","value":"pub fn unit_header_offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains the type with this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the .debug_info section for the header of the compilation unit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857603,"byte_end":857693,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ which contains the type with this name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857698,"byte_end":857741,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857989,"byte_end":857999,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubTypesEntry<R>>::die_offset","value":"pub fn die_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n the type with this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the compilation unit for the debugging information entry which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857854,"byte_end":857944,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ the type with this name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857949,"byte_end":857977,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8162},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858536,"byte_end":858549,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubTypes","qualname":"::read::pubtypes::DebugPubTypes","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubTypes` struct represents the DWARF public types information\n found in the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `DebugPubTypes` struct represents the DWARF public types information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858384,"byte_end":858460,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858461,"byte_end":858500,"line_start":48,"line_end":48,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859313,"byte_end":859316,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubTypes<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858715,"byte_end":858798,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858803,"byte_end":858815,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858820,"byte_end":858823,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_pubtypes` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858828,"byte_end":858907,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858912,"byte_end":858982,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858987,"byte_end":859028,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859033,"byte_end":859036,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859041,"byte_end":859048,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubTypes, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859053,"byte_end":859098,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859103,"byte_end":859106,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859111,"byte_end":859130,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubtypes_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859135,"byte_end":859183,"line_start":67,"line_end":67,"column_start":5,"column_end":53}},{"value":"/ let debug_pubtypes =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859188,"byte_end":859212,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/     DebugPubTypes::new(read_debug_pubtypes_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859217,"byte_end":859289,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859294,"byte_end":859301,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860067,"byte_end":860072,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubTypes<R>>::items","value":"pub fn items(&Self) -> PubTypesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubtypes in the `.debug_pubtypes` section.","sig":null,"attributes":[{"value":"/ Iterate the pubtypes in the `.debug_pubtypes` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859498,"byte_end":859556,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859561,"byte_end":859564,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859569,"byte_end":859576,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubTypes, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859581,"byte_end":859639,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859644,"byte_end":859647,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859652,"byte_end":859671,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubtypes_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859676,"byte_end":859732,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ let debug_pubtypes =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859737,"byte_end":859761,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     DebugPubTypes::new(read_debug_pubtypes_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859766,"byte_end":859846,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859851,"byte_end":859854,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_pubtypes.items();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859859,"byte_end":859901,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/ while let Some(pubtype) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859906,"byte_end":859958,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/   println!(\"pubtype {} found!\", pubtype.name().to_string_lossy());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859963,"byte_end":860033,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860038,"byte_end":860043,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860048,"byte_end":860055,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8172},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860702,"byte_end":860719,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubTypesEntryIter","qualname":"::read::pubtypes::PubTypesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubtypes from a `.debug_pubtypes` section.","sig":null,"attributes":[{"value":"/ An iterator over the pubtypes from a `.debug_pubtypes` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860506,"byte_end":860573,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860574,"byte_end":860577,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860578,"byte_end":860599,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860600,"byte_end":860666,"line_start":116,"line_end":116,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":861240,"byte_end":861244,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubTypesEntryIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<PubTypesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubtype.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next pubtype.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860833,"byte_end":860886,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860891,"byte_end":860894,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed pubtype as `Ok(Some(pubtype))`. Returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860899,"byte_end":860967,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` when iteration is complete and all pubtypes have already been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860972,"byte_end":861048,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ parsed and yielded. If an error occurs while parsing the next pubtype,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":861053,"byte_end":861127,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":861132,"byte_end":861208,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":861213,"byte_end":861228,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8182},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862080,"byte_end":862091,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"DebugRanges","qualname":"::read::rnglists::DebugRanges","value":"DebugRanges {  }","parent":null,"children":[{"krate":0,"index":8184}],"decl_id":null,"docs":" The raw contents of the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_ranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":861977,"byte_end":862029,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862832,"byte_end":862835,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRanges<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRanges` instance from the data in the `.debug_ranges`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugRanges` instance from the data in the `.debug_ranges`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862224,"byte_end":862303,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862308,"byte_end":862320,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862325,"byte_end":862328,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_ranges` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862333,"byte_end":862410,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862415,"byte_end":862485,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862490,"byte_end":862531,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862536,"byte_end":862539,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862544,"byte_end":862551,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugRanges, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862556,"byte_end":862599,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862604,"byte_end":862607,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862612,"byte_end":862653,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_ranges_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862658,"byte_end":862712,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ let debug_ranges = DebugRanges::new(read_debug_ranges_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862717,"byte_end":862808,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862813,"byte_end":862820,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8196},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863368,"byte_end":863381,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"DebugRngLists","qualname":"::read::rnglists::DebugRngLists","value":"DebugRngLists {  }","parent":null,"children":[{"krate":0,"index":8198}],"decl_id":null,"docs":" The `DebugRngLists` struct represents the contents of the\n `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `DebugRngLists` struct represents the contents of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863225,"byte_end":863286,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863287,"byte_end":863317,"line_start":58,"line_end":58,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864141,"byte_end":864144,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRngLists<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRngLists` instance from the data in the\n `.debug_rnglists` section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugRngLists` instance from the data in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863505,"byte_end":863570,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863575,"byte_end":863605,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863610,"byte_end":863613,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_rnglists`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863618,"byte_end":863685,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ section and present it as a `&[u8]` slice. That means using some ELF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863690,"byte_end":863762,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ loader on Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863767,"byte_end":863818,"line_start":73,"line_end":73,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863823,"byte_end":863826,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863831,"byte_end":863838,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugRngLists, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863843,"byte_end":863888,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863893,"byte_end":863896,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863901,"byte_end":863942,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_rnglists_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863947,"byte_end":864003,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ let debug_rnglists =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864008,"byte_end":864032,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/     DebugRngLists::new(read_debug_rnglists_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864037,"byte_end":864117,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864122,"byte_end":864129,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864828,"byte_end":864857,"line_start":113,"line_end":113,"column_start":12,"column_end":41},"name":"default_for_encoding_and_file","qualname":"<DebugRngListsBase<Offset>>::default_for_encoding_and_file","value":"pub fn default_for_encoding_and_file(Encoding, DwarfFileType)\n-> DebugRngListsBase<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DebugRngListsBase` with the default value of DW_AT_rnglists_base\n for the given `Encoding` and `DwarfFileType`.\n","sig":null,"attributes":[{"value":"/ Returns a `DebugRngListsBase` with the default value of DW_AT_rnglists_base","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864683,"byte_end":864762,"line_start":111,"line_end":111,"column_start":5,"column_end":84}},{"value":"/ for the given `Encoding` and `DwarfFileType`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864767,"byte_end":864816,"line_start":112,"line_end":112,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8210},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865575,"byte_end":865585,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"RangeLists","qualname":"::read::rnglists::RangeLists","value":"RangeLists {  }","parent":null,"children":[{"krate":0,"index":8212},{"krate":0,"index":8213}],"decl_id":null,"docs":" The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865449,"byte_end":865524,"line_start":128,"line_end":128,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865824,"byte_end":865827,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeLists<R>>::new","value":"pub fn new(DebugRanges<R>, DebugRngLists<R>) -> RangeLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `RangeLists` instance from the data in the `.debug_ranges` and\n `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ Construct a new `RangeLists` instance from the data in the `.debug_ranges` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865694,"byte_end":865776,"line_start":136,"line_end":136,"column_start":5,"column_end":87}},{"value":"/ `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865781,"byte_end":865812,"line_start":137,"line_end":137,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866058,"byte_end":866070,"line_start":146,"line_end":146,"column_start":12,"column_end":24},"name":"debug_ranges","qualname":"<RangeLists<R>>::debug_ranges","value":"pub fn debug_ranges(&Self) -> &DebugRanges<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ Return the `.debug_ranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866007,"byte_end":866046,"line_start":145,"line_end":145,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866290,"byte_end":866306,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"set_debug_ranges","qualname":"<RangeLists<R>>::set_debug_ranges","value":"pub fn set_debug_ranges(&mut Self, DebugRanges<R>)","parent":null,"children":[],"decl_id":null,"docs":" Replace the `.debug_ranges` section.","sig":null,"attributes":[{"value":"/ Replace the `.debug_ranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866137,"byte_end":866177,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866182,"byte_end":866185,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is useful for `.dwo` files when using the GNU split-dwarf extension to DWARF 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866190,"byte_end":866278,"line_start":152,"line_end":152,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866456,"byte_end":866470,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"debug_rnglists","qualname":"<RangeLists<R>>::debug_rnglists","value":"pub fn debug_rnglists(&Self) -> &DebugRngLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ Return the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866403,"byte_end":866444,"line_start":157,"line_end":157,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867191,"byte_end":867197,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"borrow","qualname":"<RangeLists<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> RangeLists<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `RangeLists` that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `RangeLists` that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866567,"byte_end":866628,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866633,"byte_end":866636,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866641,"byte_end":866706,"line_start":166,"line_end":166,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866711,"byte_end":866714,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866719,"byte_end":866739,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866744,"byte_end":866747,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866752,"byte_end":866770,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866775,"byte_end":866820,"line_start":171,"line_end":171,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866825,"byte_end":866909,"line_start":172,"line_end":172,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::RangeLists<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866914,"byte_end":866981,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866986,"byte_end":867033,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867038,"byte_end":867088,"line_start":175,"line_end":175,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867093,"byte_end":867155,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867160,"byte_end":867167,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867172,"byte_end":867179,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868017,"byte_end":868023,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"ranges","qualname":"<RangeLists<R>>::ranges","value":"pub fn ranges(&Self, RangeListsOffset<R::Offset>, Encoding, u64,\n&DebugAddr<R>, DebugAddrBase<R::Offset>) -> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `Range` list entries starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `Range` list entries starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867514,"byte_end":867585,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867590,"byte_end":867593,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The `unit_version` and `address_size` must match the compilation unit that the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867598,"byte_end":867680,"line_start":193,"line_end":193,"column_start":5,"column_end":87}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867685,"byte_end":867713,"line_start":194,"line_end":194,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867718,"byte_end":867721,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The `base_address` should be obtained from the `DW_AT_low_pc` attribute in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867726,"byte_end":867808,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/ `DW_TAG_compile_unit` entry for the compilation unit that contains this range list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867813,"byte_end":867900,"line_start":197,"line_end":197,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867905,"byte_end":867908,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867913,"byte_end":867934,"line_start":199,"line_end":199,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867939,"byte_end":868005,"line_start":200,"line_end":200,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868879,"byte_end":868889,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"raw_ranges","qualname":"<RangeLists<R>>::raw_ranges","value":"pub fn raw_ranges(&Self, RangeListsOffset<R::Offset>, Encoding)\n-> Result<RawRngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RawRngListEntry`ies starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `RawRngListEntry`ies starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868456,"byte_end":868527,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868532,"byte_end":868535,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868540,"byte_end":868604,"line_start":219,"line_end":219,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868609,"byte_end":868637,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868642,"byte_end":868645,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This iterator does not perform any processing of the range entries,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868650,"byte_end":868721,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868726,"byte_end":868762,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868767,"byte_end":868770,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868775,"byte_end":868796,"line_start":225,"line_end":225,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":868801,"byte_end":868867,"line_start":226,"line_end":226,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869811,"byte_end":869821,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<RangeLists<R>>::get_offset","value":"pub fn get_offset(&Self, Encoding, DebugRngListsBase<R::Offset>,\nDebugRngListsIndex<R::Offset>) -> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_rnglists` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_rnglists` offset at the given `base` and `index`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869364,"byte_end":869437,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869442,"byte_end":869445,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_rnglists_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869450,"byte_end":869535,"line_start":243,"line_end":243,"column_start":5,"column_end":90}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869540,"byte_end":869614,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869619,"byte_end":869622,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_rnglistx` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869627,"byte_end":869690,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869695,"byte_end":869698,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869703,"byte_end":869767,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ index was contained in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":869772,"byte_end":869799,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":870462,"byte_end":870478,"line_start":268,"line_end":268,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<RangeLists<R>>::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":870369,"byte_end":870450,"line_start":267,"line_end":267,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":8241},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871074,"byte_end":871088,"line_start":288,"line_end":288,"column_start":12,"column_end":26},"name":"RawRngListIter","qualname":"::read::rnglists::RawRngListIter","value":"RawRngListIter {  }","parent":null,"children":[{"krate":0,"index":8243},{"krate":0,"index":8244},{"krate":0,"index":8245}],"decl_id":null,"docs":" A raw iterator over an address range list.","sig":null,"attributes":[{"value":"/ A raw iterator over an address range list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":870886,"byte_end":870932,"line_start":283,"line_end":283,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":870933,"byte_end":870936,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This iterator does not perform any processing of the range entries,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":870937,"byte_end":871008,"line_start":285,"line_end":285,"column_start":1,"column_end":72}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871009,"byte_end":871045,"line_start":286,"line_end":286,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":8251},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871307,"byte_end":871326,"line_start":298,"line_end":298,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::rnglists::RawRngListEntry::AddressOrOffsetPair","value":"RawRngListEntry::AddressOrOffsetPair { begin, end }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" A range from DWARF version <= 4.\n","sig":null,"attributes":[{"value":"/ A range from DWARF version <= 4.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871266,"byte_end":871302,"line_start":297,"line_end":297,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871524,"byte_end":871535,"line_start":305,"line_end":305,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::rnglists::RawRngListEntry::BaseAddress","value":"RawRngListEntry::BaseAddress { addr }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_address","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871496,"byte_end":871519,"line_start":304,"line_end":304,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":8256},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871622,"byte_end":871634,"line_start":310,"line_end":310,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::rnglists::RawRngListEntry::BaseAddressx","value":"RawRngListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_base_addressx\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_addressx","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871593,"byte_end":871617,"line_start":309,"line_end":309,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":8258},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871733,"byte_end":871743,"line_start":315,"line_end":315,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::rnglists::RawRngListEntry::StartxEndx","value":"RawRngListEntry::StartxEndx { begin, end }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_startx_endx\n","sig":null,"attributes":[{"value":"/ DW_RLE_startx_endx","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871706,"byte_end":871728,"line_start":314,"line_end":314,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":8261},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871904,"byte_end":871916,"line_start":322,"line_end":322,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::rnglists::RawRngListEntry::StartxLength","value":"RawRngListEntry::StartxLength { begin, length }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_startx_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_startx_length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871875,"byte_end":871899,"line_start":321,"line_end":321,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":8264},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872067,"byte_end":872077,"line_start":329,"line_end":329,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::rnglists::RawRngListEntry::OffsetPair","value":"RawRngListEntry::OffsetPair { begin, end }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_RLE_offset_pair","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872040,"byte_end":872062,"line_start":328,"line_end":328,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":8267},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872206,"byte_end":872214,"line_start":336,"line_end":336,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::rnglists::RawRngListEntry::StartEnd","value":"RawRngListEntry::StartEnd { begin, end }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_end","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872181,"byte_end":872201,"line_start":335,"line_end":335,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8270},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872346,"byte_end":872357,"line_start":343,"line_end":343,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::rnglists::RawRngListEntry::StartLength","value":"RawRngListEntry::StartLength { begin, length }","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":" DW_RLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872318,"byte_end":872341,"line_start":342,"line_end":342,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":8249},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871241,"byte_end":871256,"line_start":296,"line_end":296,"column_start":10,"column_end":25},"name":"RawRngListEntry","qualname":"::read::rnglists::RawRngListEntry","value":"pub enum RawRngListEntry<T> {\n    AddressOrOffsetPair {\n            begin: u64,\n            end: u64,\n        },\n    BaseAddress {\n            addr: u64,\n        },\n    BaseAddressx {\n            addr: DebugAddrIndex<T>,\n        },\n    StartxEndx {\n            begin: DebugAddrIndex<T>,\n            end: DebugAddrIndex<T>,\n        },\n    StartxLength {\n            begin: DebugAddrIndex<T>,\n            length: u64,\n        },\n    OffsetPair {\n            begin: u64,\n            end: u64,\n        },\n    StartEnd {\n            begin: u64,\n            end: u64,\n        },\n    StartLength {\n            begin: u64,\n            length: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":8251},{"krate":0,"index":8254},{"krate":0,"index":8256},{"krate":0,"index":8258},{"krate":0,"index":8261},{"krate":0,"index":8264},{"krate":0,"index":8267},{"krate":0,"index":8270}],"decl_id":null,"docs":" A raw entry in .debug_rnglists\n","sig":null,"attributes":[{"value":"/ A raw entry in .debug_rnglists","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":871173,"byte_end":871207,"line_start":294,"line_end":294,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":875500,"byte_end":875504,"line_start":419,"line_end":419,"column_start":12,"column_end":16},"name":"next","qualname":"<RawRngListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<RawRngListEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":875445,"byte_end":875488,"line_start":418,"line_end":418,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8279},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876584,"byte_end":876595,"line_start":455,"line_end":455,"column_start":12,"column_end":23},"name":"RngListIter","qualname":"::read::rnglists::RngListIter","value":"RngListIter {  }","parent":null,"children":[{"krate":0,"index":8281},{"krate":0,"index":8282},{"krate":0,"index":8283},{"krate":0,"index":8284}],"decl_id":null,"docs":" An iterator over an address range list.","sig":null,"attributes":[{"value":"/ An iterator over an address range list.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876312,"byte_end":876355,"line_start":449,"line_end":449,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876356,"byte_end":876359,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ This iterator internally handles processing of base addresses and different","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876360,"byte_end":876439,"line_start":451,"line_end":451,"column_start":1,"column_end":80}},{"value":"/ entry types.  Thus, it only returns range entries that are valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876440,"byte_end":876508,"line_start":452,"line_end":452,"column_start":1,"column_end":69}},{"value":"/ and already adjusted for the base address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876509,"byte_end":876555,"line_start":453,"line_end":453,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":877392,"byte_end":877396,"line_start":485,"line_end":485,"column_start":12,"column_end":16},"name":"next","qualname":"<RngListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":877337,"byte_end":877380,"line_start":484,"line_end":484,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8306},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":880887,"byte_end":880892,"line_start":585,"line_end":585,"column_start":12,"column_end":17},"name":"Range","qualname":"::read::rnglists::Range","value":"Range { begin, end }","parent":null,"children":[{"krate":0,"index":8307},{"krate":0,"index":8308}],"decl_id":null,"docs":" An address range from the `.debug_ranges`, `.debug_rnglists`, or `.debug_aranges` sections.\n","sig":null,"attributes":[{"value":"/ An address range from the `.debug_ranges`, `.debug_rnglists`, or `.debug_aranges` sections.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":880729,"byte_end":880824,"line_start":583,"line_end":583,"column_start":1,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":8307},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":880947,"byte_end":880952,"line_start":587,"line_end":587,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::Range::begin","value":"u64","parent":{"krate":0,"index":8306},"children":[],"decl_id":null,"docs":" The beginning address of the range.\n","sig":null,"attributes":[{"value":"/ The beginning address of the range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":880899,"byte_end":880938,"line_start":586,"line_end":586,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":8308},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":881021,"byte_end":881024,"line_start":590,"line_end":590,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::Range::end","value":"u64","parent":{"krate":0,"index":8306},"children":[],"decl_id":null,"docs":" The first address past the end of the range.\n","sig":null,"attributes":[{"value":"/ The first address past the end of the range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":880964,"byte_end":881012,"line_start":589,"line_end":589,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":8324},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904340,"byte_end":904348,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"DebugStr","qualname":"::read::str::DebugStr","value":"DebugStr {  }","parent":null,"children":[{"krate":0,"index":8326}],"decl_id":null,"docs":" The `DebugStr` struct represents the DWARF strings\n found in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `DebugStr` struct represents the DWARF strings","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904196,"byte_end":904250,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/ found in the `.debug_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904251,"byte_end":904289,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905061,"byte_end":905064,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugStr<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugStr` instance from the data in the `.debug_str`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugStr` instance from the data in the `.debug_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904477,"byte_end":904550,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904555,"byte_end":904567,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904572,"byte_end":904575,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_str` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904580,"byte_end":904654,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904659,"byte_end":904729,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904734,"byte_end":904775,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904780,"byte_end":904783,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904788,"byte_end":904795,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugStr, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904800,"byte_end":904840,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904845,"byte_end":904848,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904853,"byte_end":904894,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_str_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904899,"byte_end":904950,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/ let debug_str = DebugStr::new(read_debug_str_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904955,"byte_end":905037,"line_start":32,"line_end":32,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905042,"byte_end":905049,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905775,"byte_end":905782,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugStr<R>>::get_str","value":"pub fn get_str(&Self, DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_str` section by DebugStrOffset.","sig":null,"attributes":[{"value":"/ Lookup a string from the `.debug_str` section by DebugStrOffset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905231,"byte_end":905299,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905304,"byte_end":905307,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905312,"byte_end":905319,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugStr, DebugStrOffset, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905324,"byte_end":905380,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905385,"byte_end":905388,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x01, 0x02, 0x00];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905393,"byte_end":905428,"line_start":45,"line_end":45,"column_start":5,"column_end":40}},{"value":"/ # let offset = DebugStrOffset(0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905433,"byte_end":905470,"line_start":46,"line_end":46,"column_start":5,"column_end":42}},{"value":"/ # let read_debug_str_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905475,"byte_end":905526,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"/ # let debug_str_offset_somehow = || offset;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905531,"byte_end":905578,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/ let debug_str = DebugStr::new(read_debug_str_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905583,"byte_end":905665,"line_start":49,"line_end":49,"column_start":5,"column_end":87}},{"value":"/ println!(\"Found string {:?}\", debug_str.get_str(debug_str_offset_somehow()));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905670,"byte_end":905751,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905756,"byte_end":905763,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906634,"byte_end":906640,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStr<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugStr<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugStr` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906006,"byte_end":906073,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906078,"byte_end":906081,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906086,"byte_end":906151,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906156,"byte_end":906159,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906164,"byte_end":906184,"line_start":64,"line_end":64,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906189,"byte_end":906192,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906197,"byte_end":906215,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906220,"byte_end":906265,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906270,"byte_end":906354,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugStr<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906359,"byte_end":906424,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906429,"byte_end":906476,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906481,"byte_end":906531,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906536,"byte_end":906598,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906603,"byte_end":906610,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906615,"byte_end":906622,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8338},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907196,"byte_end":907211,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"DebugStrOffsets","qualname":"::read::str::DebugStrOffsets","value":"DebugStrOffsets {  }","parent":null,"children":[{"krate":0,"index":8340}],"decl_id":null,"docs":" The raw contents of the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907088,"byte_end":907145,"line_start":99,"line_end":99,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908164,"byte_end":908178,"line_start":122,"line_end":122,"column_start":12,"column_end":26},"name":"get_str_offset","qualname":"<DebugStrOffsets<R>>::get_str_offset","value":"pub fn get_str_offset(&Self, Format, DebugStrOffsetsBase<R::Offset>,\nDebugStrOffsetsIndex<R::Offset>) -> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_str` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_str` offset at the given `base` and `index`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907414,"byte_end":907482,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907487,"byte_end":907490,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ A set of entries in the `.debug_str_offsets` section consists of a header","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907495,"byte_end":907572,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ followed by a series of string table offsets.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907577,"byte_end":907626,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907631,"byte_end":907634,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_str_offsets_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907639,"byte_end":907727,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907732,"byte_end":907806,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907811,"byte_end":907814,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_strx` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907819,"byte_end":907878,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907883,"byte_end":907886,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `format` must be the DWARF format of the compilation unit. This format must","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907891,"byte_end":907974,"line_start":119,"line_end":119,"column_start":5,"column_end":88}},{"value":"/ match the header. However, note that we do not parse the header to validate this,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907979,"byte_end":908064,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ since locating the header is unreliable, and the GNU extensions do not emit it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908069,"byte_end":908152,"line_start":121,"line_end":121,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909290,"byte_end":909296,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStrOffsets<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugStrOffsets<R> where\nF: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStrOffsets` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugStrOffsets` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908648,"byte_end":908722,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908727,"byte_end":908730,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908735,"byte_end":908800,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908805,"byte_end":908808,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908813,"byte_end":908833,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908838,"byte_end":908841,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908846,"byte_end":908864,"line_start":144,"line_end":144,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908869,"byte_end":908914,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908919,"byte_end":909003,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugStrOffsets<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909008,"byte_end":909080,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909085,"byte_end":909132,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909137,"byte_end":909187,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909192,"byte_end":909254,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909259,"byte_end":909266,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909271,"byte_end":909278,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909968,"byte_end":909997,"line_start":183,"line_end":183,"column_start":12,"column_end":41},"name":"default_for_encoding_and_file","qualname":"<DebugStrOffsetsBase<Offset>>::default_for_encoding_and_file","value":"pub fn default_for_encoding_and_file(Encoding, DwarfFileType)\n-> DebugStrOffsetsBase<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DebugStrOffsetsBase` with the default value of DW_AT_str_offsets_base\n for the given `Encoding` and `DwarfFileType`.\n","sig":null,"attributes":[{"value":"/ Returns a `DebugStrOffsetsBase` with the default value of DW_AT_str_offsets_base","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909818,"byte_end":909902,"line_start":181,"line_end":181,"column_start":5,"column_end":89}},{"value":"/ for the given `Encoding` and `DwarfFileType`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909907,"byte_end":909956,"line_start":182,"line_end":182,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8352},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":910851,"byte_end":910863,"line_start":204,"line_end":204,"column_start":12,"column_end":24},"name":"DebugLineStr","qualname":"::read::str::DebugLineStr","value":"DebugLineStr {  }","parent":null,"children":[{"krate":0,"index":8354}],"decl_id":null,"docs":" The `DebugLineStr` struct represents the DWARF strings\n found in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLineStr` struct represents the DWARF strings","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":910698,"byte_end":910756,"line_start":201,"line_end":201,"column_start":1,"column_end":59}},{"value":"/ found in the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":910757,"byte_end":910800,"line_start":202,"line_end":202,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911602,"byte_end":911605,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLineStr<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLineStr` instance from the data in the `.debug_line_str`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLineStr` instance from the data in the `.debug_line_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":910986,"byte_end":911068,"line_start":212,"line_end":212,"column_start":5,"column_end":87}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911073,"byte_end":911085,"line_start":213,"line_end":213,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911090,"byte_end":911093,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_line_str` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911098,"byte_end":911177,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911182,"byte_end":911252,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911257,"byte_end":911298,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911303,"byte_end":911306,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911311,"byte_end":911318,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLineStr, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911323,"byte_end":911367,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911372,"byte_end":911375,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911380,"byte_end":911421,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_line_str_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911426,"byte_end":911482,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/ let debug_str = DebugLineStr::new(read_debug_line_str_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911487,"byte_end":911578,"line_start":224,"line_end":224,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911583,"byte_end":911590,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911875,"byte_end":911882,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugLineStr<R>>::get_str","value":"pub fn get_str(&Self, DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.\n","sig":null,"attributes":[{"value":"/ Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911786,"byte_end":911863,"line_start":232,"line_end":232,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912740,"byte_end":912746,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLineStr<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugLineStr<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLineStr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugLineStr` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912104,"byte_end":912175,"line_start":241,"line_end":241,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912180,"byte_end":912183,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912188,"byte_end":912253,"line_start":243,"line_end":243,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912258,"byte_end":912261,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912266,"byte_end":912286,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912291,"byte_end":912294,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912299,"byte_end":912317,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912322,"byte_end":912367,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912372,"byte_end":912456,"line_start":249,"line_end":249,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugLineStr<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912461,"byte_end":912530,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912535,"byte_end":912582,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912587,"byte_end":912637,"line_start":252,"line_end":252,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912642,"byte_end":912704,"line_start":253,"line_end":253,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912709,"byte_end":912716,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912721,"byte_end":912728,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8366},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101798,"byte_end":101808,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"UnitOffset","qualname":"::read::UnitOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the current compilation or type unit.\n","sig":null,"attributes":[{"value":"/ An offset into the current compilation or type unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101662,"byte_end":101718,"line_start":248,"line_end":248,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8369},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101820,"byte_end":101825,"line_start":250,"line_end":250,"column_start":34,"column_end":39},"name":"0","qualname":"::read::UnitOffset::0","value":"T","parent":{"krate":0,"index":8366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":915861,"byte_end":915875,"line_start":26,"line_end":26,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugTypesOffset<T>>::to_unit_offset","value":"pub fn to_unit_offset<R>(&Self, &UnitHeader<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_types section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":915642,"byte_end":915710,"line_start":23,"line_end":23,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the .debug_types section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":915715,"byte_end":915780,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/ Returns `None` if the offset is not within the unit entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":915785,"byte_end":915849,"line_start":25,"line_end":25,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916489,"byte_end":916503,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugInfoOffset<T>>::to_unit_offset","value":"pub fn to_unit_offset<R>(&Self, &UnitHeader<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_info section.\n Returns `None` if the offset is not within this unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916270,"byte_end":916338,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the .debug_info section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916343,"byte_end":916407,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/ Returns `None` if the offset is not within this unit entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916412,"byte_end":916477,"line_start":42,"line_end":42,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917118,"byte_end":917138,"line_start":60,"line_end":60,"column_start":12,"column_end":32},"name":"to_debug_info_offset","qualname":"<UnitOffset<T>>::to_debug_info_offset","value":"pub fn to_debug_info_offset<R>(&Self, &UnitHeader<R>)\n-> Option<DebugInfoOffset<T>> where R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given unit. Returns None if the\n provided unit lives in the .debug_types section.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_info section,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916892,"byte_end":916969,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/ instead of relative to the start of the given unit. Returns None if the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916974,"byte_end":917049,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ provided unit lives in the .debug_types section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917054,"byte_end":917106,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917604,"byte_end":917625,"line_start":71,"line_end":71,"column_start":12,"column_end":33},"name":"to_debug_types_offset","qualname":"<UnitOffset<T>>::to_debug_types_offset","value":"pub fn to_debug_types_offset<R>(&Self, &UnitHeader<R>)\n-> Option<DebugTypesOffset<T>> where R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_types section,\n instead of relative to the start of the given unit. Returns None if the\n provided unit lives in the .debug_info section.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_types section,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917378,"byte_end":917456,"line_start":68,"line_end":68,"column_start":5,"column_end":83}},{"value":"/ instead of relative to the start of the given unit. Returns None if the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917461,"byte_end":917536,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ provided unit lives in the .debug_info section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917541,"byte_end":917592,"line_start":70,"line_end":70,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":8399},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918026,"byte_end":918035,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"DebugInfo","qualname":"::read::unit::DebugInfo","value":"DebugInfo {  }","parent":null,"children":[{"krate":0,"index":8401}],"decl_id":null,"docs":" The `DebugInfo` struct represents the DWARF debugging information found in\n the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `DebugInfo` struct represents the DWARF debugging information found in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917866,"byte_end":917944,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ the `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":917945,"byte_end":917975,"line_start":81,"line_end":81,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918758,"byte_end":918761,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugInfo<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugInfo` instance from the data in the `.debug_info`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugInfo` instance from the data in the `.debug_info`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918166,"byte_end":918241,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918246,"byte_end":918258,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918263,"byte_end":918266,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_info` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918271,"byte_end":918346,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918351,"byte_end":918421,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918426,"byte_end":918467,"line_start":96,"line_end":96,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918472,"byte_end":918475,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918480,"byte_end":918487,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918492,"byte_end":918533,"line_start":99,"line_end":99,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918538,"byte_end":918541,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918546,"byte_end":918587,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_info_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918592,"byte_end":918644,"line_start":102,"line_end":102,"column_start":5,"column_end":57}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918649,"byte_end":918734,"line_start":103,"line_end":103,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918739,"byte_end":918746,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919537,"byte_end":919542,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugInfo<R>>::units","value":"pub fn units(&Self) -> DebugInfoUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the units in this `.debug_info` section.","sig":null,"attributes":[{"value":"/ Iterate the units in this `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918931,"byte_end":918983,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918988,"byte_end":918991,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918996,"byte_end":919003,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919008,"byte_end":919049,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919054,"byte_end":919057,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919062,"byte_end":919081,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_info_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919086,"byte_end":919138,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919143,"byte_end":919228,"line_start":118,"line_end":118,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919233,"byte_end":919236,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_info.units();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919241,"byte_end":919279,"line_start":120,"line_end":120,"column_start":5,"column_end":43}},{"value":"/ while let Some(unit) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919284,"byte_end":919333,"line_start":121,"line_end":121,"column_start":5,"column_end":54}},{"value":"/     println!(\"unit's length is {}\", unit.unit_length());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919338,"byte_end":919398,"line_start":122,"line_end":122,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919403,"byte_end":919408,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919413,"byte_end":919420,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919425,"byte_end":919428,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919433,"byte_end":919454,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919459,"byte_end":919525,"line_start":127,"line_end":127,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919850,"byte_end":919868,"line_start":138,"line_end":138,"column_start":12,"column_end":30},"name":"header_from_offset","qualname":"<DebugInfo<R>>::header_from_offset","value":"pub fn header_from_offset(&Self, DebugInfoOffset<R::Offset>)\n-> Result<UnitHeader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the UnitHeader located at offset from this .debug_info section.","sig":null,"attributes":[{"value":"/ Get the UnitHeader located at offset from this .debug_info section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919751,"byte_end":919822,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919827,"byte_end":919830,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":919835,"byte_end":919838,"line_start":137,"line_end":137,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920742,"byte_end":920748,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugInfo<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugInfo<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugInfo` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugInfo` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920112,"byte_end":920180,"line_start":146,"line_end":146,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920185,"byte_end":920188,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920193,"byte_end":920258,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920263,"byte_end":920266,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920271,"byte_end":920291,"line_start":150,"line_end":150,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920296,"byte_end":920299,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920304,"byte_end":920322,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920327,"byte_end":920372,"line_start":153,"line_end":153,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920377,"byte_end":920461,"line_start":154,"line_end":154,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugInfo<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920466,"byte_end":920532,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920537,"byte_end":920584,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920589,"byte_end":920639,"line_start":157,"line_end":157,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920644,"byte_end":920706,"line_start":158,"line_end":158,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920711,"byte_end":920718,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920723,"byte_end":920730,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8413},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921410,"byte_end":921434,"line_start":190,"line_end":190,"column_start":12,"column_end":36},"name":"DebugInfoUnitHeadersIter","qualname":"::read::unit::DebugInfoUnitHeadersIter","value":"DebugInfoUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":8415},{"krate":0,"index":8416}],"decl_id":null,"docs":" An iterator over the units of a .debug_info section.","sig":null,"attributes":[{"value":"/ An iterator over the units of a .debug_info section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921205,"byte_end":921261,"line_start":185,"line_end":185,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921262,"byte_end":921265,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921266,"byte_end":921295,"line_start":187,"line_end":187,"column_start":1,"column_end":30}},{"value":"/ `DebugInfo::units`](./struct.DebugInfo.html#method.units) for more detail.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921296,"byte_end":921374,"line_start":188,"line_end":188,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921616,"byte_end":921620,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"next","qualname":"<DebugInfoUnitHeadersIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<UnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next unit header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next unit header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921555,"byte_end":921604,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8425},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923541,"byte_end":923552,"line_start":258,"line_end":258,"column_start":5,"column_end":16},"name":"Compilation","qualname":"::read::unit::UnitType::Compilation","value":"UnitType::Compilation","parent":{"krate":0,"index":8423},"children":[],"decl_id":null,"docs":" In DWARF5, a unit with type `DW_UT_compile`. In previous DWARF versions,\n any unit appearing in the .debug_info section.\n","sig":null,"attributes":[{"value":"/ In DWARF5, a unit with type `DW_UT_compile`. In previous DWARF versions,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923405,"byte_end":923481,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ any unit appearing in the .debug_info section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923486,"byte_end":923536,"line_start":257,"line_end":257,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":8427},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923675,"byte_end":923679,"line_start":261,"line_end":261,"column_start":5,"column_end":9},"name":"Type","qualname":"::read::unit::UnitType::Type","value":"UnitType::Type { type_signature, type_offset }","parent":{"krate":0,"index":8423},"children":[],"decl_id":null,"docs":" In DWARF5, a unit with type `DW_UT_type`. In DWARF4, any unit appearing\n in the .debug_types section.\n","sig":null,"attributes":[{"value":"/ In DWARF5, a unit with type `DW_UT_type`. In DWARF4, any unit appearing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923558,"byte_end":923633,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/ in the .debug_types section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923638,"byte_end":923670,"line_start":260,"line_end":260,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8430},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924019,"byte_end":924026,"line_start":269,"line_end":269,"column_start":5,"column_end":12},"name":"Partial","qualname":"::read::unit::UnitType::Partial","value":"UnitType::Partial","parent":{"krate":0,"index":8423},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_partial`. The root DIE of this unit should be a\n `DW_TAG_partial_unit`.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_partial`. The root DIE of this unit should be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923908,"byte_end":923983,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `DW_TAG_partial_unit`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923988,"byte_end":924014,"line_start":268,"line_end":268,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8432},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924366,"byte_end":924374,"line_start":275,"line_end":275,"column_start":5,"column_end":13},"name":"Skeleton","qualname":"::read::unit::UnitType::Skeleton","value":"UnitType::Skeleton(DwoId)","parent":{"krate":0,"index":8423},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_skeleton`. The enclosed dwo_id can be used to\n link this with the corresponding `SplitCompilation` unit in a dwo file.\n NB: The non-standard GNU split DWARF extension to DWARF 4 will instead\n be a `Compilation` unit with the dwo_id present as an attribute on the\n root DIE.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_skeleton`. The enclosed dwo_id can be used to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924032,"byte_end":924105,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/ link this with the corresponding `SplitCompilation` unit in a dwo file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924110,"byte_end":924185,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ NB: The non-standard GNU split DWARF extension to DWARF 4 will instead","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924190,"byte_end":924264,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ be a `Compilation` unit with the dwo_id present as an attribute on the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924269,"byte_end":924343,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ root DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924348,"byte_end":924361,"line_start":274,"line_end":274,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8435},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924727,"byte_end":924743,"line_start":281,"line_end":281,"column_start":5,"column_end":21},"name":"SplitCompilation","qualname":"::read::unit::UnitType::SplitCompilation","value":"UnitType::SplitCompilation(DwoId)","parent":{"krate":0,"index":8423},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_split_compile`. The enclosed dwo_id can be used to\n link this with the corresponding `Skeleton` unit in the original binary.\n NB: The non-standard GNU split DWARF extension to DWARF 4 will instead\n be a `Compilation` unit with the dwo_id present as an attribute on the\n root DIE.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_split_compile`. The enclosed dwo_id can be used to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924387,"byte_end":924465,"line_start":276,"line_end":276,"column_start":5,"column_end":83}},{"value":"/ link this with the corresponding `Skeleton` unit in the original binary.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924470,"byte_end":924546,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ NB: The non-standard GNU split DWARF extension to DWARF 4 will instead","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924551,"byte_end":924625,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ be a `Compilation` unit with the dwo_id present as an attribute on the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924630,"byte_end":924704,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ root DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924709,"byte_end":924722,"line_start":280,"line_end":280,"column_start":5,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":8438},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924912,"byte_end":924921,"line_start":284,"line_end":284,"column_start":5,"column_end":14},"name":"SplitType","qualname":"::read::unit::UnitType::SplitType","value":"UnitType::SplitType { type_signature, type_offset }","parent":{"krate":0,"index":8423},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_split_type`. A split type unit is identical to a\n conventional type unit except for the section in which it appears.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_split_type`. A split type unit is identical to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924756,"byte_end":924832,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ conventional type unit except for the section in which it appears.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":924837,"byte_end":924907,"line_start":283,"line_end":283,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":8423},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923350,"byte_end":923358,"line_start":252,"line_end":252,"column_start":10,"column_end":18},"name":"UnitType","qualname":"::read::unit::UnitType","value":"pub enum UnitType<Offset> where Offset: ReaderOffset {\n    Compilation,\n    Type {\n            type_signature: DebugTypeSignature,\n            type_offset: UnitOffset<Offset>,\n        },\n    Partial,\n    Skeleton(DwoId),\n    SplitCompilation(DwoId),\n    SplitType {\n            type_signature: DebugTypeSignature,\n            type_offset: UnitOffset<Offset>,\n        },\n}","parent":null,"children":[{"krate":0,"index":8425},{"krate":0,"index":8427},{"krate":0,"index":8430},{"krate":0,"index":8432},{"krate":0,"index":8435},{"krate":0,"index":8438}],"decl_id":null,"docs":" This enum specifies the type of the unit and any type\n specific data carried in the header (e.g. the type\n signature/type offset of a type unit).\n","sig":null,"attributes":[{"value":"/ This enum specifies the type of the unit and any type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923140,"byte_end":923197,"line_start":248,"line_end":248,"column_start":1,"column_end":58}},{"value":"/ specific data carried in the header (e.g. the type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923198,"byte_end":923252,"line_start":249,"line_end":249,"column_start":1,"column_end":55}},{"value":"/ signature/type offset of a type unit).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":923253,"byte_end":923295,"line_start":250,"line_end":250,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":8460},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":925984,"byte_end":925994,"line_start":314,"line_end":314,"column_start":12,"column_end":22},"name":"UnitHeader","qualname":"::read::unit::UnitHeader","value":"UnitHeader {  }","parent":null,"children":[{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8465},{"krate":0,"index":8466},{"krate":0,"index":8467},{"krate":0,"index":8468}],"decl_id":null,"docs":" The common fields for the headers of compilation units and\n type units.\n","sig":null,"attributes":[{"value":"/ The common fields for the headers of compilation units and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":925849,"byte_end":925911,"line_start":311,"line_end":311,"column_start":1,"column_end":63}},{"value":"/ type units.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":925912,"byte_end":925927,"line_start":312,"line_end":312,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":926470,"byte_end":926473,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitHeader<R, Offset>>::new","value":"pub fn new(Encoding, Offset, UnitType<Offset>, DebugAbbrevOffset<Offset>,\nUnitSectionOffset<Offset>, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnitHeader`.\n","sig":null,"attributes":[{"value":"/ Construct a new `UnitHeader`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":926425,"byte_end":926458,"line_start":333,"line_end":333,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":927099,"byte_end":927105,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"offset","qualname":"<UnitHeader<R, Offset>>::offset","value":"pub fn offset(&Self) -> UnitSectionOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this unit within its section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this unit within its section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":927036,"byte_end":927087,"line_start":359,"line_end":359,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":927284,"byte_end":927298,"line_start":366,"line_end":366,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<UnitHeader<R, Offset>>::size_of_header","value":"pub fn size_of_header(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the common unit header for the given\n DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of the common unit header for the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":927180,"byte_end":927250,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ DWARF format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":927255,"byte_end":927272,"line_start":365,"line_end":365,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928432,"byte_end":928443,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<UnitHeader<R, Offset>>::unit_length","value":"pub fn unit_length(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit, not\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit, not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928285,"byte_end":928356,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928361,"byte_end":928420,"line_start":391,"line_end":391,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928642,"byte_end":928663,"line_start":398,"line_end":398,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<UnitHeader<R, Offset>>::length_including_self","value":"pub fn length_including_self(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928499,"byte_end":928566,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928571,"byte_end":928630,"line_start":397,"line_end":397,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928835,"byte_end":928843,"line_start":403,"line_end":403,"column_start":12,"column_end":20},"name":"encoding","qualname":"<UnitHeader<R, Offset>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928774,"byte_end":928823,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928984,"byte_end":928991,"line_start":408,"line_end":408,"column_start":12,"column_end":19},"name":"version","qualname":"<UnitHeader<R, Offset>>::version","value":"pub fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this compilation unit.\n","sig":null,"attributes":[{"value":"/ Get the DWARF version of the debugging info for this compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":928898,"byte_end":928972,"line_start":407,"line_end":407,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929095,"byte_end":929100,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"type_","qualname":"<UnitHeader<R, Offset>>::type_","value":"pub fn type_(&Self) -> UnitType<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the UnitType of this unit.\n","sig":null,"attributes":[{"value":"/ Get the UnitType of this unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929049,"byte_end":929083,"line_start":412,"line_end":412,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929305,"byte_end":929324,"line_start":419,"line_end":419,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<UnitHeader<R, Offset>>::debug_abbrev_offset","value":"pub fn debug_abbrev_offset(&Self) -> DebugAbbrevOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this compilation unit's\n debugging information entries' abbreviations.\n","sig":null,"attributes":[{"value":"/ The offset into the `.debug_abbrev` section for this compilation unit's","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929164,"byte_end":929239,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ debugging information entries' abbreviations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929244,"byte_end":929293,"line_start":418,"line_end":418,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929481,"byte_end":929493,"line_start":424,"line_end":424,"column_start":12,"column_end":24},"name":"address_size","qualname":"<UnitHeader<R, Offset>>::address_size","value":"pub fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this compilation unit.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929407,"byte_end":929469,"line_start":423,"line_end":423,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929635,"byte_end":929641,"line_start":429,"line_end":429,"column_start":12,"column_end":18},"name":"format","qualname":"<UnitHeader<R, Offset>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this compilation unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this compilation unit is encoded in 64- or 32-bit DWARF.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929555,"byte_end":929623,"line_start":428,"line_end":428,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929777,"byte_end":929788,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"header_size","qualname":"<UnitHeader<R, Offset>>::header_size","value":"pub fn header_size(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this compilation unit.\n","sig":null,"attributes":[{"value":"/ The serialized size of the header for this compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":929701,"byte_end":929765,"line_start":433,"line_end":433,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":930278,"byte_end":930283,"line_start":449,"line_end":449,"column_start":12,"column_end":17},"name":"range","qualname":"<UnitHeader<R, Offset>>::range","value":"pub fn range(&Self, Range<UnitOffset<Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":930214,"byte_end":930266,"line_start":448,"line_end":448,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":930941,"byte_end":930951,"line_start":467,"line_end":467,"column_start":12,"column_end":22},"name":"range_from","qualname":"<UnitHeader<R, Offset>>::range_from","value":"pub fn range_from(&Self, RangeFrom<UnitOffset<Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":930877,"byte_end":930929,"line_start":466,"line_end":466,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":931341,"byte_end":931349,"line_start":478,"line_end":478,"column_start":12,"column_end":20},"name":"range_to","qualname":"<UnitHeader<R, Offset>>::range_to","value":"pub fn range_to(&Self, RangeTo<UnitOffset<Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":931277,"byte_end":931329,"line_start":477,"line_end":477,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":931742,"byte_end":931747,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"entry","qualname":"<UnitHeader<R, Offset>>::entry","value":"pub fn entry<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<Offset>)\n-> Result<DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":931669,"byte_end":931730,"line_start":488,"line_end":488,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":932193,"byte_end":932200,"line_start":500,"line_end":500,"column_start":12,"column_end":19},"name":"entries","qualname":"<UnitHeader<R, Offset>>::entries","value":"pub fn entries<'me, 'abbrev>(&'me Self, &'abbrev Abbreviations)\n-> EntriesCursor","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":932127,"byte_end":932181,"line_start":499,"line_end":499,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":932642,"byte_end":932659,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<UnitHeader<R, Offset>>::entries_at_offset","value":"pub fn entries_at_offset<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<Offset>)\n-> Result<EntriesCursor>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this compilation unit's `DebuggingInformationEntry`s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":932527,"byte_end":932592,"line_start":513,"line_end":513,"column_start":5,"column_end":70}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":932597,"byte_end":932630,"line_start":514,"line_end":514,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":933169,"byte_end":933181,"line_start":532,"line_end":532,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<UnitHeader<R, Offset>>::entries_tree","value":"pub fn entries_tree<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<Offset>>)\n-> Result<EntriesTree>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":933056,"byte_end":933119,"line_start":530,"line_end":530,"column_start":5,"column_end":68}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":933124,"byte_end":933157,"line_start":531,"line_end":531,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":933652,"byte_end":933663,"line_start":545,"line_end":545,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<UnitHeader<R, Offset>>::entries_raw","value":"pub fn entries_raw<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<Offset>>)\n-> Result<EntriesRaw>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":933571,"byte_end":933640,"line_start":544,"line_end":544,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":934170,"byte_end":934183,"line_start":563,"line_end":563,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<UnitHeader<R, Offset>>::abbreviations","value":"pub fn abbreviations(&Self, &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this unit's abbreviations.\n","sig":null,"attributes":[{"value":"/ Parse this unit's abbreviations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":934122,"byte_end":934158,"line_start":562,"line_end":562,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":8495},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937288,"byte_end":937313,"line_start":658,"line_end":658,"column_start":12,"column_end":37},"name":"DebuggingInformationEntry","qualname":"::read::unit::DebuggingInformationEntry","value":"DebuggingInformationEntry {  }","parent":null,"children":[{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8502},{"krate":0,"index":8503},{"krate":0,"index":8504}],"decl_id":null,"docs":" A Debugging Information Entry (DIE).","sig":null,"attributes":[{"value":"/ A Debugging Information Entry (DIE).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937131,"byte_end":937171,"line_start":654,"line_end":654,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937172,"byte_end":937175,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ DIEs have a set of attributes and optionally have children DIEs as well.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937176,"byte_end":937252,"line_start":656,"line_end":656,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937813,"byte_end":937816,"line_start":676,"line_end":676,"column_start":12,"column_end":15},"name":"new","qualname":"<DebuggingInformationEntry>::new","value":"pub fn new(UnitOffset<Offset>, R, &'abbrev Abbreviation,\n&'unit UnitHeader<R, Offset>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ Construct a new `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937753,"byte_end":937801,"line_start":675,"line_end":675,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938195,"byte_end":938199,"line_start":692,"line_end":692,"column_start":12,"column_end":16},"name":"code","qualname":"<DebuggingInformationEntry>::code","value":"pub fn code(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's code.\n","sig":null,"attributes":[{"value":"/ Get this entry's code.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938157,"byte_end":938183,"line_start":691,"line_end":691,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938294,"byte_end":938300,"line_start":697,"line_end":697,"column_start":12,"column_end":18},"name":"offset","qualname":"<DebuggingInformationEntry>::offset","value":"pub fn offset(&Self) -> UnitOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's offset.\n","sig":null,"attributes":[{"value":"/ Get this entry's offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938254,"byte_end":938282,"line_start":696,"line_end":696,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940693,"byte_end":940696,"line_start":764,"line_end":764,"column_start":12,"column_end":15},"name":"tag","qualname":"<DebuggingInformationEntry>::tag","value":"pub fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's `DW_TAG_whatever` tag.","sig":null,"attributes":[{"value":"/ Get this entry's `DW_TAG_whatever` tag.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938363,"byte_end":938406,"line_start":701,"line_end":701,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938411,"byte_end":938414,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938419,"byte_end":938426,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938431,"byte_end":938487,"line_start":704,"line_end":704,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938492,"byte_end":938514,"line_start":705,"line_end":705,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938519,"byte_end":938554,"line_start":706,"line_end":706,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938559,"byte_end":938564,"line_start":707,"line_end":707,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 12","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938569,"byte_end":938605,"line_start":708,"line_end":708,"column_start":5,"column_end":41}},{"value":"/ #     0x0c, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938610,"byte_end":938643,"line_start":709,"line_end":709,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938648,"byte_end":938670,"line_start":710,"line_end":710,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938675,"byte_end":938696,"line_start":711,"line_end":711,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938701,"byte_end":938733,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938738,"byte_end":938771,"line_start":713,"line_end":713,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938776,"byte_end":938801,"line_start":714,"line_end":714,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938806,"byte_end":938821,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938826,"byte_end":938831,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938836,"byte_end":938853,"line_start":717,"line_end":717,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938858,"byte_end":938863,"line_start":718,"line_end":718,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938868,"byte_end":938898,"line_start":719,"line_end":719,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938903,"byte_end":938918,"line_start":720,"line_end":720,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938923,"byte_end":938978,"line_start":721,"line_end":721,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":938983,"byte_end":939016,"line_start":722,"line_end":722,"column_start":5,"column_end":38}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939021,"byte_end":939029,"line_start":723,"line_end":723,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939034,"byte_end":939097,"line_start":724,"line_end":724,"column_start":5,"column_end":68}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939102,"byte_end":939126,"line_start":725,"line_end":725,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939131,"byte_end":939148,"line_start":726,"line_end":726,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939153,"byte_end":939168,"line_start":727,"line_end":727,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939173,"byte_end":939203,"line_start":728,"line_end":728,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939208,"byte_end":939223,"line_start":729,"line_end":729,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939228,"byte_end":939255,"line_start":730,"line_end":730,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939260,"byte_end":939275,"line_start":731,"line_end":731,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939280,"byte_end":939309,"line_start":732,"line_end":732,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939314,"byte_end":939356,"line_start":733,"line_end":733,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939361,"byte_end":939378,"line_start":734,"line_end":734,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939383,"byte_end":939429,"line_start":735,"line_end":735,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939434,"byte_end":939451,"line_start":736,"line_end":736,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939456,"byte_end":939483,"line_start":737,"line_end":737,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939488,"byte_end":939503,"line_start":738,"line_end":738,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939508,"byte_end":939523,"line_start":739,"line_end":739,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939528,"byte_end":939556,"line_start":740,"line_end":740,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939561,"byte_end":939575,"line_start":741,"line_end":741,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939580,"byte_end":939588,"line_start":742,"line_end":742,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939593,"byte_end":939662,"line_start":743,"line_end":743,"column_start":5,"column_end":74}},{"value":"/ # let unit = debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939667,"byte_end":939728,"line_start":744,"line_end":744,"column_start":5,"column_end":66}},{"value":"/ # let abbrevs = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939733,"byte_end":939796,"line_start":745,"line_end":745,"column_start":5,"column_end":68}},{"value":"/ # let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939801,"byte_end":939847,"line_start":746,"line_end":746,"column_start":5,"column_end":51}},{"value":"/ # let (_, entry) = cursor.next_dfs().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939852,"byte_end":939911,"line_start":747,"line_end":747,"column_start":5,"column_end":64}},{"value":"/ # let mut get_some_entry = || entry;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939916,"byte_end":939956,"line_start":748,"line_end":748,"column_start":5,"column_end":45}},{"value":"/ let entry = get_some_entry();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939961,"byte_end":939994,"line_start":749,"line_end":749,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":939999,"byte_end":940002,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ match entry.tag() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940007,"byte_end":940030,"line_start":751,"line_end":751,"column_start":5,"column_end":28}},{"value":"/     gimli::DW_TAG_subprogram =>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940035,"byte_end":940070,"line_start":752,"line_end":752,"column_start":5,"column_end":40}},{"value":"/         println!(\"this entry contains debug info about a function\"),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940075,"byte_end":940147,"line_start":753,"line_end":753,"column_start":5,"column_end":77}},{"value":"/     gimli::DW_TAG_inlined_subroutine =>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940152,"byte_end":940195,"line_start":754,"line_end":754,"column_start":5,"column_end":48}},{"value":"/         println!(\"this entry contains debug info about a particular instance of inlining\"),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940200,"byte_end":940295,"line_start":755,"line_end":755,"column_start":5,"column_end":100}},{"value":"/     gimli::DW_TAG_variable =>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940300,"byte_end":940333,"line_start":756,"line_end":756,"column_start":5,"column_end":38}},{"value":"/         println!(\"this entry contains debug info about a local variable\"),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940338,"byte_end":940416,"line_start":757,"line_end":757,"column_start":5,"column_end":83}},{"value":"/     gimli::DW_TAG_formal_parameter =>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940421,"byte_end":940462,"line_start":758,"line_end":758,"column_start":5,"column_end":46}},{"value":"/         println!(\"this entry contains debug info about a function parameter\"),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940467,"byte_end":940549,"line_start":759,"line_end":759,"column_start":5,"column_end":87}},{"value":"/     otherwise =>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940554,"byte_end":940574,"line_start":760,"line_end":760,"column_start":5,"column_end":25}},{"value":"/         println!(\"this entry is some other kind of data: {:?}\", otherwise),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940579,"byte_end":940658,"line_start":761,"line_end":761,"column_start":5,"column_end":84}},{"value":"/ };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940663,"byte_end":940669,"line_start":762,"line_end":762,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940674,"byte_end":940681,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940847,"byte_end":940859,"line_start":769,"line_end":769,"column_start":12,"column_end":24},"name":"has_children","qualname":"<DebuggingInformationEntry>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this entry's type can have children, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if this entry's type can have children, false otherwise.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940763,"byte_end":940835,"line_start":768,"line_end":768,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943599,"byte_end":943604,"line_start":851,"line_end":851,"column_start":12,"column_end":17},"name":"attrs","qualname":"<DebuggingInformationEntry>::attrs","value":"pub fn attrs<'me>(&'me Self) -> AttrsIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this entry's set of attributes.","sig":null,"attributes":[{"value":"/ Iterate over this entry's set of attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940923,"byte_end":940971,"line_start":773,"line_end":773,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940976,"byte_end":940979,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940984,"byte_end":940991,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":940996,"byte_end":941050,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941055,"byte_end":941058,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ // Read the `.debug_info` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941063,"byte_end":941101,"line_start":778,"line_end":778,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941106,"byte_end":941109,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941114,"byte_end":941136,"line_start":780,"line_end":780,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941141,"byte_end":941176,"line_start":781,"line_end":781,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941181,"byte_end":941186,"line_start":782,"line_end":782,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 12","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941191,"byte_end":941227,"line_start":783,"line_end":783,"column_start":5,"column_end":41}},{"value":"/ #     0x0c, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941232,"byte_end":941265,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941270,"byte_end":941292,"line_start":785,"line_end":785,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941297,"byte_end":941318,"line_start":786,"line_end":786,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941323,"byte_end":941355,"line_start":787,"line_end":787,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941360,"byte_end":941393,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941398,"byte_end":941423,"line_start":789,"line_end":789,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941428,"byte_end":941443,"line_start":790,"line_end":790,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941448,"byte_end":941453,"line_start":791,"line_end":791,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941458,"byte_end":941475,"line_start":792,"line_end":792,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941480,"byte_end":941485,"line_start":793,"line_end":793,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941490,"byte_end":941520,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941525,"byte_end":941540,"line_start":795,"line_end":795,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941545,"byte_end":941600,"line_start":796,"line_end":796,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941605,"byte_end":941638,"line_start":797,"line_end":797,"column_start":5,"column_end":38}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941643,"byte_end":941651,"line_start":798,"line_end":798,"column_start":5,"column_end":13}},{"value":"/ # let read_debug_info_section_somehow = || &info_buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941656,"byte_end":941713,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941718,"byte_end":941803,"line_start":800,"line_end":800,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941808,"byte_end":941811,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ // Get the data about the first compilation unit out of the `.debug_info`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941816,"byte_end":941894,"line_start":802,"line_end":802,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941899,"byte_end":941902,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let unit = debug_info.units().next()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941907,"byte_end":941947,"line_start":804,"line_end":804,"column_start":5,"column_end":45}},{"value":"/     .expect(\"Should have at least one compilation unit\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":941952,"byte_end":942012,"line_start":805,"line_end":805,"column_start":5,"column_end":65}},{"value":"/     .expect(\"and it should parse ok\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942017,"byte_end":942059,"line_start":806,"line_end":806,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942064,"byte_end":942067,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ // Read the `.debug_abbrev` section and parse the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942072,"byte_end":942125,"line_start":808,"line_end":808,"column_start":5,"column_end":58}},{"value":"/ // abbreviations for our compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942130,"byte_end":942176,"line_start":809,"line_end":809,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942181,"byte_end":942184,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942189,"byte_end":942213,"line_start":811,"line_end":811,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942218,"byte_end":942235,"line_start":812,"line_end":812,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942240,"byte_end":942255,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942260,"byte_end":942290,"line_start":814,"line_end":814,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942295,"byte_end":942310,"line_start":815,"line_end":815,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942315,"byte_end":942342,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942347,"byte_end":942362,"line_start":817,"line_end":817,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942367,"byte_end":942396,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942401,"byte_end":942443,"line_start":819,"line_end":819,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942448,"byte_end":942465,"line_start":820,"line_end":820,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942470,"byte_end":942516,"line_start":821,"line_end":821,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942521,"byte_end":942538,"line_start":822,"line_end":822,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942543,"byte_end":942570,"line_start":823,"line_end":823,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942575,"byte_end":942590,"line_start":824,"line_end":824,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942595,"byte_end":942610,"line_start":825,"line_end":825,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942615,"byte_end":942643,"line_start":826,"line_end":826,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942648,"byte_end":942662,"line_start":827,"line_end":827,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942667,"byte_end":942675,"line_start":828,"line_end":828,"column_start":5,"column_end":13}},{"value":"/ # let read_debug_abbrev_section_somehow = || &abbrev_buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942680,"byte_end":942741,"line_start":829,"line_end":829,"column_start":5,"column_end":66}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942746,"byte_end":942837,"line_start":830,"line_end":830,"column_start":5,"column_end":96}},{"value":"/ let abbrevs = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942842,"byte_end":942903,"line_start":831,"line_end":831,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942908,"byte_end":942911,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ // Get the first entry from that compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942916,"byte_end":942970,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942975,"byte_end":942978,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":942983,"byte_end":943027,"line_start":835,"line_end":835,"column_start":5,"column_end":49}},{"value":"/ let (_, entry) = cursor.next_dfs()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943032,"byte_end":943070,"line_start":836,"line_end":836,"column_start":5,"column_end":43}},{"value":"/     .expect(\"Should parse next entry\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943075,"byte_end":943117,"line_start":837,"line_end":837,"column_start":5,"column_end":47}},{"value":"/     .expect(\"Should have at least one entry\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943122,"byte_end":943172,"line_start":838,"line_end":838,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943177,"byte_end":943180,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ // Finally, print the first entry's attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943185,"byte_end":943236,"line_start":840,"line_end":840,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943241,"byte_end":943244,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let mut attrs = entry.attrs();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943249,"byte_end":943283,"line_start":842,"line_end":842,"column_start":5,"column_end":39}},{"value":"/ while let Some(attr) = attrs.next().unwrap() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943288,"byte_end":943338,"line_start":843,"line_end":843,"column_start":5,"column_end":55}},{"value":"/     println!(\"Attribute name = {:?}\", attr.name());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943343,"byte_end":943398,"line_start":844,"line_end":844,"column_start":5,"column_end":60}},{"value":"/     println!(\"Attribute value = {:?}\", attr.value());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943403,"byte_end":943460,"line_start":845,"line_end":845,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943465,"byte_end":943470,"line_start":846,"line_end":846,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943475,"byte_end":943482,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943487,"byte_end":943490,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943495,"byte_end":943516,"line_start":849,"line_end":849,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943521,"byte_end":943587,"line_start":850,"line_end":850,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943969,"byte_end":943973,"line_start":861,"line_end":861,"column_start":12,"column_end":16},"name":"attr","qualname":"<DebuggingInformationEntry>::attr","value":"pub fn attr(&Self, constants::DwAt) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return it. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943821,"byte_end":943889,"line_start":859,"line_end":859,"column_start":5,"column_end":73}},{"value":"/ and return it. Returns `Ok(None)` if no attribute is found.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":943894,"byte_end":943957,"line_start":860,"line_end":860,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944410,"byte_end":944424,"line_start":873,"line_end":873,"column_start":12,"column_end":26},"name":"attr_value_raw","qualname":"<DebuggingInformationEntry>::attr_value_raw","value":"pub fn attr_value_raw(&Self, constants::DwAt)\n-> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its raw value. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944251,"byte_end":944319,"line_start":871,"line_end":871,"column_start":5,"column_end":73}},{"value":"/ and return its raw value. Returns `Ok(None)` if no attribute is found.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944324,"byte_end":944398,"line_start":872,"line_end":872,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944763,"byte_end":944773,"line_start":881,"line_end":881,"column_start":12,"column_end":22},"name":"attr_value","qualname":"<DebuggingInformationEntry>::attr_value","value":"pub fn attr_value(&Self, constants::DwAt) -> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its normalized value.  Returns `Ok(None)` if no\n attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944588,"byte_end":944656,"line_start":878,"line_end":878,"column_start":5,"column_end":73}},{"value":"/ and return its normalized value.  Returns `Ok(None)` if no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944661,"byte_end":944723,"line_start":879,"line_end":879,"column_start":5,"column_end":67}},{"value":"/ attribute is found.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":944728,"byte_end":944751,"line_start":880,"line_end":880,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8520},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947167,"byte_end":947171,"line_start":950,"line_end":950,"column_start":5,"column_end":9},"name":"Addr","qualname":"::read::unit::AttributeValue::Addr","value":"AttributeValue::Addr(u64)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" \"Refers to some location in the address space of the described program.\"\n","sig":null,"attributes":[{"value":"/ \"Refers to some location in the address space of the described program.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947086,"byte_end":947162,"line_start":949,"line_end":949,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8523},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947232,"byte_end":947237,"line_start":953,"line_end":953,"column_start":5,"column_end":10},"name":"Block","qualname":"::read::unit::AttributeValue::Block","value":"AttributeValue::Block(R)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A slice of an arbitrary number of bytes.\n","sig":null,"attributes":[{"value":"/ A slice of an arbitrary number of bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947183,"byte_end":947227,"line_start":952,"line_end":952,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8526},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947515,"byte_end":947520,"line_start":960,"line_end":960,"column_start":5,"column_end":10},"name":"Data1","qualname":"::read::unit::AttributeValue::Data1","value":"AttributeValue::Data1(u8)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A one byte constant data value. How to interpret the byte depends on context.","sig":null,"attributes":[{"value":"/ A one byte constant data value. How to interpret the byte depends on context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947247,"byte_end":947328,"line_start":955,"line_end":955,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947333,"byte_end":947336,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947341,"byte_end":947411,"line_start":957,"line_end":957,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947416,"byte_end":947486,"line_start":958,"line_end":958,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947491,"byte_end":947510,"line_start":959,"line_end":959,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8529},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947929,"byte_end":947934,"line_start":970,"line_end":970,"column_start":5,"column_end":10},"name":"Data2","qualname":"::read::unit::AttributeValue::Data2","value":"AttributeValue::Data2(u16)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A two byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A two byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947531,"byte_end":947613,"line_start":962,"line_end":962,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947618,"byte_end":947621,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947626,"byte_end":947708,"line_start":964,"line_end":964,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947713,"byte_end":947742,"line_start":965,"line_end":965,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947747,"byte_end":947750,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947755,"byte_end":947825,"line_start":967,"line_end":967,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947830,"byte_end":947900,"line_start":968,"line_end":968,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947905,"byte_end":947924,"line_start":969,"line_end":969,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8532},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948345,"byte_end":948350,"line_start":980,"line_end":980,"column_start":5,"column_end":10},"name":"Data4","qualname":"::read::unit::AttributeValue::Data4","value":"AttributeValue::Data4(u32)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A four byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A four byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":947946,"byte_end":948029,"line_start":972,"line_end":972,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948034,"byte_end":948037,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948042,"byte_end":948124,"line_start":974,"line_end":974,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948129,"byte_end":948158,"line_start":975,"line_end":975,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948163,"byte_end":948166,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948171,"byte_end":948241,"line_start":977,"line_end":977,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948246,"byte_end":948316,"line_start":978,"line_end":978,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948321,"byte_end":948340,"line_start":979,"line_end":979,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8535},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948763,"byte_end":948768,"line_start":990,"line_end":990,"column_start":5,"column_end":10},"name":"Data8","qualname":"::read::unit::AttributeValue::Data8","value":"AttributeValue::Data8(u64)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An eight byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ An eight byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948362,"byte_end":948447,"line_start":982,"line_end":982,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948452,"byte_end":948455,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948460,"byte_end":948542,"line_start":984,"line_end":984,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948547,"byte_end":948576,"line_start":985,"line_end":985,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948581,"byte_end":948584,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948589,"byte_end":948659,"line_start":987,"line_end":987,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948664,"byte_end":948734,"line_start":988,"line_end":988,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948739,"byte_end":948758,"line_start":989,"line_end":989,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8538},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948815,"byte_end":948820,"line_start":993,"line_end":993,"column_start":5,"column_end":10},"name":"Sdata","qualname":"::read::unit::AttributeValue::Sdata","value":"AttributeValue::Sdata(i64)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A signed integer constant.\n","sig":null,"attributes":[{"value":"/ A signed integer constant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948780,"byte_end":948810,"line_start":992,"line_end":992,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8541},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948870,"byte_end":948875,"line_start":996,"line_end":996,"column_start":5,"column_end":10},"name":"Udata","qualname":"::read::unit::AttributeValue::Udata","value":"AttributeValue::Udata(u64)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An unsigned integer constant.\n","sig":null,"attributes":[{"value":"/ An unsigned integer constant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948832,"byte_end":948865,"line_start":995,"line_end":995,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8544},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949015,"byte_end":949022,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12},"name":"Exprloc","qualname":"::read::unit::AttributeValue::Exprloc","value":"AttributeValue::Exprloc(Expression<R>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" \"The information bytes contain a DWARF expression (see Section 2.5) or\n location description (see Section 2.6).\"\n","sig":null,"attributes":[{"value":"/ \"The information bytes contain a DWARF expression (see Section 2.5) or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948887,"byte_end":948961,"line_start":998,"line_end":998,"column_start":5,"column_end":79}},{"value":"/ location description (see Section 2.6).\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":948966,"byte_end":949010,"line_start":999,"line_end":999,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8547},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949115,"byte_end":949119,"line_start":1003,"line_end":1003,"column_start":5,"column_end":9},"name":"Flag","qualname":"::read::unit::AttributeValue::Flag","value":"AttributeValue::Flag(bool)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A boolean that indicates presence or absence of the attribute.\n","sig":null,"attributes":[{"value":"/ A boolean that indicates presence or absence of the attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949044,"byte_end":949110,"line_start":1002,"line_end":1002,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8550},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949237,"byte_end":949246,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14},"name":"SecOffset","qualname":"::read::unit::AttributeValue::SecOffset","value":"AttributeValue::SecOffset(Offset)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into another section. Which section this is an offset into\n depends on context.\n","sig":null,"attributes":[{"value":"/ An offset into another section. Which section this is an offset into","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949132,"byte_end":949204,"line_start":1005,"line_end":1005,"column_start":5,"column_end":77}},{"value":"/ depends on context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949209,"byte_end":949232,"line_start":1006,"line_end":1006,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949331,"byte_end":949344,"line_start":1010,"line_end":1010,"column_start":5,"column_end":18},"name":"DebugAddrBase","qualname":"::read::unit::AttributeValue::DebugAddrBase","value":"AttributeValue::DebugAddrBase(DebugAddrBase<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset to a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of addresses in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949261,"byte_end":949326,"line_start":1009,"line_end":1009,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8556},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949445,"byte_end":949459,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19},"name":"DebugAddrIndex","qualname":"::read::unit::AttributeValue::DebugAddrIndex","value":"AttributeValue::DebugAddrIndex(DebugAddrIndex<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of addresses in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949374,"byte_end":949440,"line_start":1012,"line_end":1012,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8559},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949543,"byte_end":949550,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::unit::AttributeValue::UnitRef","value":"AttributeValue::UnitRef(UnitOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the current compilation unit.\n","sig":null,"attributes":[{"value":"/ An offset into the current compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949490,"byte_end":949538,"line_start":1015,"line_end":1015,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8562},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949707,"byte_end":949719,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::unit::AttributeValue::DebugInfoRef","value":"AttributeValue::DebugInfoRef(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the current `.debug_info` section, but possibly a\n different compilation unit from the current one.\n","sig":null,"attributes":[{"value":"/ An offset into the current `.debug_info` section, but possibly a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949577,"byte_end":949645,"line_start":1018,"line_end":1018,"column_start":5,"column_end":73}},{"value":"/ different compilation unit from the current one.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949650,"byte_end":949702,"line_start":1019,"line_end":1019,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8565},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949834,"byte_end":949849,"line_start":1023,"line_end":1023,"column_start":5,"column_end":20},"name":"DebugInfoRefSup","qualname":"::read::unit::AttributeValue::DebugInfoRefSup","value":"AttributeValue::DebugInfoRefSup(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section of the supplementary object file.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section of the supplementary object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949751,"byte_end":949829,"line_start":1022,"line_end":1022,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8568},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949931,"byte_end":949943,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17},"name":"DebugLineRef","qualname":"::read::unit::AttributeValue::DebugLineRef","value":"AttributeValue::DebugLineRef(DebugLineOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949881,"byte_end":949926,"line_start":1025,"line_end":1025,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8571},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950064,"byte_end":950080,"line_start":1029,"line_end":1029,"column_start":5,"column_end":21},"name":"LocationListsRef","qualname":"::read::unit::AttributeValue::LocationListsRef","value":"AttributeValue::LocationListsRef(LocationListsOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_loc` section or the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":949975,"byte_end":950059,"line_start":1028,"line_end":1028,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8574},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950188,"byte_end":950205,"line_start":1032,"line_end":1032,"column_start":5,"column_end":22},"name":"DebugLocListsBase","qualname":"::read::unit::AttributeValue::DebugLocListsBase","value":"AttributeValue::DebugLocListsBase(DebugLocListsBase<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950116,"byte_end":950183,"line_start":1031,"line_end":1031,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8577},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950312,"byte_end":950330,"line_start":1035,"line_end":1035,"column_start":5,"column_end":23},"name":"DebugLocListsIndex","qualname":"::read::unit::AttributeValue::DebugLocListsIndex","value":"AttributeValue::DebugLocListsIndex(DebugLocListsIndex<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950239,"byte_end":950307,"line_start":1034,"line_end":1034,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8580},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950418,"byte_end":950433,"line_start":1038,"line_end":1038,"column_start":5,"column_end":20},"name":"DebugMacinfoRef","qualname":"::read::unit::AttributeValue::DebugMacinfoRef","value":"AttributeValue::DebugMacinfoRef(DebugMacinfoOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950365,"byte_end":950413,"line_start":1037,"line_end":1037,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8583},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950519,"byte_end":950532,"line_start":1041,"line_end":1041,"column_start":5,"column_end":18},"name":"DebugMacroRef","qualname":"::read::unit::AttributeValue::DebugMacroRef","value":"AttributeValue::DebugMacroRef(DebugMacroOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950468,"byte_end":950514,"line_start":1040,"line_end":1040,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8586},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950617,"byte_end":950630,"line_start":1044,"line_end":1044,"column_start":5,"column_end":18},"name":"RangeListsRef","qualname":"::read::unit::AttributeValue::RangeListsRef","value":"AttributeValue::RangeListsRef(RawRangeListsOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_ranges` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950565,"byte_end":950612,"line_start":1043,"line_end":1043,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8589},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950738,"byte_end":950755,"line_start":1047,"line_end":1047,"column_start":5,"column_end":22},"name":"DebugRngListsBase","qualname":"::read::unit::AttributeValue::DebugRngListsBase","value":"AttributeValue::DebugRngListsBase(DebugRngListsBase<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950666,"byte_end":950733,"line_start":1046,"line_end":1046,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8592},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950862,"byte_end":950880,"line_start":1050,"line_end":1050,"column_start":5,"column_end":23},"name":"DebugRngListsIndex","qualname":"::read::unit::AttributeValue::DebugRngListsIndex","value":"AttributeValue::DebugRngListsIndex(DebugRngListsIndex<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950789,"byte_end":950857,"line_start":1049,"line_end":1049,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8595},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950941,"byte_end":950954,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18},"name":"DebugTypesRef","qualname":"::read::unit::AttributeValue::DebugTypesRef","value":"AttributeValue::DebugTypesRef(DebugTypeSignature)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A type signature.\n","sig":null,"attributes":[{"value":"/ A type signature.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950915,"byte_end":950936,"line_start":1052,"line_end":1052,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8598},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951030,"byte_end":951041,"line_start":1056,"line_end":1056,"column_start":5,"column_end":16},"name":"DebugStrRef","qualname":"::read::unit::AttributeValue::DebugStrRef","value":"AttributeValue::DebugStrRef(DebugStrOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":950981,"byte_end":951025,"line_start":1055,"line_end":1055,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8601},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951154,"byte_end":951168,"line_start":1059,"line_end":1059,"column_start":5,"column_end":19},"name":"DebugStrRefSup","qualname":"::read::unit::AttributeValue::DebugStrRefSup","value":"AttributeValue::DebugStrRefSup(DebugStrOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section of the supplementary object file.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section of the supplementary object file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951072,"byte_end":951149,"line_start":1058,"line_end":1058,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8604},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951274,"byte_end":951293,"line_start":1062,"line_end":1062,"column_start":5,"column_end":24},"name":"DebugStrOffsetsBase","qualname":"::read::unit::AttributeValue::DebugStrOffsetsBase","value":"AttributeValue::DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951199,"byte_end":951269,"line_start":1061,"line_end":1061,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8607},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951405,"byte_end":951425,"line_start":1065,"line_end":1065,"column_start":5,"column_end":25},"name":"DebugStrOffsetsIndex","qualname":"::read::unit::AttributeValue::DebugStrOffsetsIndex","value":"AttributeValue::DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951329,"byte_end":951400,"line_start":1064,"line_end":1064,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8610},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951516,"byte_end":951531,"line_start":1068,"line_end":1068,"column_start":5,"column_end":20},"name":"DebugLineStrRef","qualname":"::read::unit::AttributeValue::DebugLineStrRef","value":"AttributeValue::DebugLineStrRef(DebugLineStrOffset<Offset>)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951462,"byte_end":951511,"line_start":1067,"line_end":1067,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8613},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951708,"byte_end":951714,"line_start":1072,"line_end":1072,"column_start":5,"column_end":11},"name":"String","qualname":"::read::unit::AttributeValue::String","value":"AttributeValue::String(R)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" A slice of bytes representing a string. Does not include a final null byte.\n Not guaranteed to be UTF-8 or anything like that.\n","sig":null,"attributes":[{"value":"/ A slice of bytes representing a string. Does not include a final null byte.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951566,"byte_end":951645,"line_start":1070,"line_end":1070,"column_start":5,"column_end":84}},{"value":"/ Not guaranteed to be UTF-8 or anything like that.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951650,"byte_end":951703,"line_start":1071,"line_end":1071,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951775,"byte_end":951783,"line_start":1075,"line_end":1075,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::read::unit::AttributeValue::Encoding","value":"AttributeValue::Encoding(constants::DwAte)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_encoding` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_encoding` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951724,"byte_end":951770,"line_start":1074,"line_end":1074,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8619},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951863,"byte_end":951874,"line_start":1078,"line_end":1078,"column_start":5,"column_end":16},"name":"DecimalSign","qualname":"::read::unit::AttributeValue::DecimalSign","value":"AttributeValue::DecimalSign(constants::DwDs)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_decimal_sign` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_decimal_sign` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951808,"byte_end":951858,"line_start":1077,"line_end":1077,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8622},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951950,"byte_end":951959,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14},"name":"Endianity","qualname":"::read::unit::AttributeValue::Endianity","value":"AttributeValue::Endianity(constants::DwEnd)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_endianity` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_endianity` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951898,"byte_end":951945,"line_start":1080,"line_end":1080,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8625},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952040,"byte_end":952053,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18},"name":"Accessibility","qualname":"::read::unit::AttributeValue::Accessibility","value":"AttributeValue::Accessibility(constants::DwAccess)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_accessibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_accessibility` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":951984,"byte_end":952035,"line_start":1083,"line_end":1083,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8628},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952134,"byte_end":952144,"line_start":1087,"line_end":1087,"column_start":5,"column_end":15},"name":"Visibility","qualname":"::read::unit::AttributeValue::Visibility","value":"AttributeValue::Visibility(constants::DwVis)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_visibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_visibility` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952081,"byte_end":952129,"line_start":1086,"line_end":1086,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8631},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952222,"byte_end":952232,"line_start":1090,"line_end":1090,"column_start":5,"column_end":15},"name":"Virtuality","qualname":"::read::unit::AttributeValue::Virtuality","value":"AttributeValue::Virtuality(constants::DwVirtuality)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_virtuality` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_virtuality` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952169,"byte_end":952217,"line_start":1089,"line_end":1089,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8634},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952315,"byte_end":952323,"line_start":1093,"line_end":1093,"column_start":5,"column_end":13},"name":"Language","qualname":"::read::unit::AttributeValue::Language","value":"AttributeValue::Language(constants::DwLang)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_language` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_language` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952264,"byte_end":952310,"line_start":1092,"line_end":1092,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8637},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952405,"byte_end":952417,"line_start":1096,"line_end":1096,"column_start":5,"column_end":17},"name":"AddressClass","qualname":"::read::unit::AttributeValue::AddressClass","value":"AttributeValue::AddressClass(constants::DwAddr)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_address_class` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_address_class` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952349,"byte_end":952400,"line_start":1095,"line_end":1095,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8640},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952501,"byte_end":952515,"line_start":1099,"line_end":1099,"column_start":5,"column_end":19},"name":"IdentifierCase","qualname":"::read::unit::AttributeValue::IdentifierCase","value":"AttributeValue::IdentifierCase(constants::DwId)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_identifier_case` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_identifier_case` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952443,"byte_end":952496,"line_start":1098,"line_end":1098,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8643},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952600,"byte_end":952617,"line_start":1102,"line_end":1102,"column_start":5,"column_end":22},"name":"CallingConvention","qualname":"::read::unit::AttributeValue::CallingConvention","value":"AttributeValue::CallingConvention(constants::DwCc)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_calling_convention` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_calling_convention` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952539,"byte_end":952595,"line_start":1101,"line_end":1101,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8646},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952690,"byte_end":952696,"line_start":1105,"line_end":1105,"column_start":5,"column_end":11},"name":"Inline","qualname":"::read::unit::AttributeValue::Inline","value":"AttributeValue::Inline(constants::DwInl)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_inline` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_inline` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952641,"byte_end":952685,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8649},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952772,"byte_end":952780,"line_start":1108,"line_end":1108,"column_start":5,"column_end":13},"name":"Ordering","qualname":"::read::unit::AttributeValue::Ordering","value":"AttributeValue::Ordering(constants::DwOrd)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_ordering` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_ordering` attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952721,"byte_end":952767,"line_start":1107,"line_end":1107,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8652},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952943,"byte_end":952952,"line_start":1112,"line_end":1112,"column_start":5,"column_end":14},"name":"FileIndex","qualname":"::read::unit::AttributeValue::FileIndex","value":"AttributeValue::FileIndex(u64)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An index into the filename entries from the line number information\n table for the compilation unit containing this value.\n","sig":null,"attributes":[{"value":"/ An index into the filename entries from the line number information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952805,"byte_end":952876,"line_start":1110,"line_end":1110,"column_start":5,"column_end":76}},{"value":"/ table for the compilation unit containing this value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952881,"byte_end":952938,"line_start":1111,"line_end":1111,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8655},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953058,"byte_end":953063,"line_start":1116,"line_end":1116,"column_start":5,"column_end":10},"name":"DwoId","qualname":"::read::unit::AttributeValue::DwoId","value":"AttributeValue::DwoId(DwoId)","parent":{"krate":0,"index":8517},"children":[],"decl_id":null,"docs":" An implementation-defined identifier uniquely identifying a compilation\n unit.\n","sig":null,"attributes":[{"value":"/ An implementation-defined identifier uniquely identifying a compilation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":952964,"byte_end":953039,"line_start":1114,"line_end":1114,"column_start":5,"column_end":80}},{"value":"/ unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953044,"byte_end":953053,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":8517},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":946966,"byte_end":946980,"line_start":944,"line_end":944,"column_start":10,"column_end":24},"name":"AttributeValue","qualname":"::read::unit::AttributeValue","value":"pub enum AttributeValue<R, Offset = <R as Reader>::Offset> where\n    R: Reader<Offset = Offset>, Offset: ReaderOffset {\n    Addr(u64),\n    Block(R),\n    Data1(u8),\n    Data2(u16),\n    Data4(u32),\n    Data8(u64),\n    Sdata(i64),\n    Udata(u64),\n    Exprloc(Expression<R>),\n    Flag(bool),\n    SecOffset(Offset),\n    DebugAddrBase(DebugAddrBase<Offset>),\n    DebugAddrIndex(DebugAddrIndex<Offset>),\n    UnitRef(UnitOffset<Offset>),\n    DebugInfoRef(DebugInfoOffset<Offset>),\n    DebugInfoRefSup(DebugInfoOffset<Offset>),\n    DebugLineRef(DebugLineOffset<Offset>),\n    LocationListsRef(LocationListsOffset<Offset>),\n    DebugLocListsBase(DebugLocListsBase<Offset>),\n    DebugLocListsIndex(DebugLocListsIndex<Offset>),\n    DebugMacinfoRef(DebugMacinfoOffset<Offset>),\n    DebugMacroRef(DebugMacroOffset<Offset>),\n    RangeListsRef(RawRangeListsOffset<Offset>),\n    DebugRngListsBase(DebugRngListsBase<Offset>),\n    DebugRngListsIndex(DebugRngListsIndex<Offset>),\n    DebugTypesRef(DebugTypeSignature),\n    DebugStrRef(DebugStrOffset<Offset>),\n    DebugStrRefSup(DebugStrOffset<Offset>),\n    DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>),\n    DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>),\n    DebugLineStrRef(DebugLineStrOffset<Offset>),\n    String(R),\n    Encoding(constants::DwAte),\n    DecimalSign(constants::DwDs),\n    Endianity(constants::DwEnd),\n    Accessibility(constants::DwAccess),\n    Visibility(constants::DwVis),\n    Virtuality(constants::DwVirtuality),\n    Language(constants::DwLang),\n    AddressClass(constants::DwAddr),\n    IdentifierCase(constants::DwId),\n    CallingConvention(constants::DwCc),\n    Inline(constants::DwInl),\n    Ordering(constants::DwOrd),\n    FileIndex(u64),\n    DwoId(DwoId),\n}","parent":null,"children":[{"krate":0,"index":8520},{"krate":0,"index":8523},{"krate":0,"index":8526},{"krate":0,"index":8529},{"krate":0,"index":8532},{"krate":0,"index":8535},{"krate":0,"index":8538},{"krate":0,"index":8541},{"krate":0,"index":8544},{"krate":0,"index":8547},{"krate":0,"index":8550},{"krate":0,"index":8553},{"krate":0,"index":8556},{"krate":0,"index":8559},{"krate":0,"index":8562},{"krate":0,"index":8565},{"krate":0,"index":8568},{"krate":0,"index":8571},{"krate":0,"index":8574},{"krate":0,"index":8577},{"krate":0,"index":8580},{"krate":0,"index":8583},{"krate":0,"index":8586},{"krate":0,"index":8589},{"krate":0,"index":8592},{"krate":0,"index":8595},{"krate":0,"index":8598},{"krate":0,"index":8601},{"krate":0,"index":8604},{"krate":0,"index":8607},{"krate":0,"index":8610},{"krate":0,"index":8613},{"krate":0,"index":8616},{"krate":0,"index":8619},{"krate":0,"index":8622},{"krate":0,"index":8625},{"krate":0,"index":8628},{"krate":0,"index":8631},{"krate":0,"index":8634},{"krate":0,"index":8637},{"krate":0,"index":8640},{"krate":0,"index":8643},{"krate":0,"index":8646},{"krate":0,"index":8649},{"krate":0,"index":8652},{"krate":0,"index":8655}],"decl_id":null,"docs":" The value of an attribute in a `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ The value of an attribute in a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":946683,"byte_end":946746,"line_start":938,"line_end":938,"column_start":1,"column_end":64}},{"value":"repr(u64)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":946899,"byte_end":946911,"line_start":942,"line_end":942,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":8684},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953229,"byte_end":953238,"line_start":1122,"line_end":1122,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::read::unit::Attribute","value":"Attribute {  }","parent":null,"children":[{"krate":0,"index":8686},{"krate":0,"index":8687}],"decl_id":null,"docs":" An attribute in a `DebuggingInformationEntry`, consisting of a name and\n associated value.\n","sig":null,"attributes":[{"value":"/ An attribute in a `DebuggingInformationEntry`, consisting of a name and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953075,"byte_end":953150,"line_start":1119,"line_end":1119,"column_start":1,"column_end":76}},{"value":"/ associated value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953151,"byte_end":953172,"line_start":1120,"line_end":1120,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953389,"byte_end":953393,"line_start":1129,"line_end":1129,"column_start":12,"column_end":16},"name":"name","qualname":"<Attribute<R>>::name","value":"pub fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's name.\n","sig":null,"attributes":[{"value":"/ Get this attribute's name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953347,"byte_end":953377,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953498,"byte_end":953507,"line_start":1134,"line_end":1134,"column_start":12,"column_end":21},"name":"raw_value","qualname":"<Attribute<R>>::raw_value","value":"pub fn raw_value(&Self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's raw value.\n","sig":null,"attributes":[{"value":"/ Get this attribute's raw value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953451,"byte_end":953486,"line_start":1133,"line_end":1133,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":954076,"byte_end":954081,"line_start":1148,"line_end":1148,"column_start":12,"column_end":17},"name":"value","qualname":"<Attribute<R>>::value","value":"pub fn value(&Self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's normalized value.","sig":null,"attributes":[{"value":"/ Get this attribute's normalized value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953576,"byte_end":953618,"line_start":1138,"line_end":1138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953623,"byte_end":953626,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ Attribute values can potentially be encoded in multiple equivalent forms,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953631,"byte_end":953708,"line_start":1140,"line_end":1140,"column_start":5,"column_end":82}},{"value":"/ and may have special meaning depending on the attribute name.  This method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953713,"byte_end":953791,"line_start":1141,"line_end":1141,"column_start":5,"column_end":83}},{"value":"/ converts the attribute value to a normalized form based on the attribute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953796,"byte_end":953872,"line_start":1142,"line_end":1142,"column_start":5,"column_end":81}},{"value":"/ name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953877,"byte_end":953886,"line_start":1143,"line_end":1143,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953891,"byte_end":953894,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ See \"Table 7.5: Attribute encodings\" and \"Table 7.6: Attribute form encodings\".","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953899,"byte_end":953982,"line_start":1145,"line_end":1145,"column_start":5,"column_end":88}},{"value":"allow(clippy :: cyclomatic_complexity)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953987,"byte_end":954026,"line_start":1146,"line_end":1146,"column_start":5,"column_end":44}},{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":954031,"byte_end":954064,"line_start":1147,"line_end":1147,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973202,"byte_end":973210,"line_start":1739,"line_end":1739,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<Attribute<R>>::u8_value","value":"pub fn u8_value(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u8.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973126,"byte_end":973176,"line_start":1737,"line_end":1737,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973181,"byte_end":973190,"line_start":1738,"line_end":1738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973352,"byte_end":973361,"line_start":1745,"line_end":1745,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<Attribute<R>>::u16_value","value":"pub fn u16_value(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973275,"byte_end":973326,"line_start":1743,"line_end":1743,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973331,"byte_end":973340,"line_start":1744,"line_end":1744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973519,"byte_end":973530,"line_start":1751,"line_end":1751,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<Attribute<R>>::udata_value","value":"pub fn udata_value(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an unsigned integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973428,"byte_end":973493,"line_start":1749,"line_end":1749,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973498,"byte_end":973507,"line_start":1750,"line_end":1750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973687,"byte_end":973698,"line_start":1757,"line_end":1757,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<Attribute<R>>::sdata_value","value":"pub fn sdata_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a signed integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973599,"byte_end":973661,"line_start":1755,"line_end":1755,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973666,"byte_end":973675,"line_start":1756,"line_end":1756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973848,"byte_end":973860,"line_start":1763,"line_end":1763,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<Attribute<R>>::offset_value","value":"pub fn offset_value(&Self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973767,"byte_end":973822,"line_start":1761,"line_end":1761,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973827,"byte_end":973836,"line_start":1762,"line_end":1762,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974245,"byte_end":974258,"line_start":1773,"line_end":1773,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<Attribute<R>>::exprloc_value","value":"pub fn exprloc_value(&Self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an expression or location buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":973936,"byte_end":974014,"line_start":1767,"line_end":1767,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974019,"byte_end":974022,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ Expressions and locations may be `DW_FORM_block*` or `DW_FORM_exprloc`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974027,"byte_end":974102,"line_start":1769,"line_end":1769,"column_start":5,"column_end":80}},{"value":"/ The standard doesn't mention `DW_FORM_block*` as a possible form, but","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974107,"byte_end":974180,"line_start":1770,"line_end":1770,"column_start":5,"column_end":78}},{"value":"/ it is encountered in practice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974185,"byte_end":974219,"line_start":1771,"line_end":1771,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974224,"byte_end":974233,"line_start":1772,"line_end":1772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974832,"byte_end":974844,"line_start":1787,"line_end":1787,"column_start":12,"column_end":24},"name":"string_value","qualname":"<Attribute<R>>::string_value","value":"pub fn string_value(&Self, &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974339,"byte_end":974398,"line_start":1777,"line_end":1777,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974403,"byte_end":974406,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974411,"byte_end":974485,"line_start":1779,"line_end":1779,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974490,"byte_end":974558,"line_start":1780,"line_end":1780,"column_start":5,"column_end":73}},{"value":"/ section, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974563,"byte_end":974638,"line_start":1781,"line_end":1781,"column_start":5,"column_end":80}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974643,"byte_end":974682,"line_start":1782,"line_end":1782,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974687,"byte_end":974690,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974695,"byte_end":974764,"line_start":1784,"line_end":1784,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974769,"byte_end":974806,"line_start":1785,"line_end":1785,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974811,"byte_end":974820,"line_start":1786,"line_end":1786,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975528,"byte_end":975544,"line_start":1802,"line_end":1802,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<Attribute<R>>::string_value_sup","value":"pub fn string_value_sup(&Self, &DebugStr<R>, Option<&DebugStr<R>>)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":974946,"byte_end":975005,"line_start":1791,"line_end":1791,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975010,"byte_end":975013,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975018,"byte_end":975092,"line_start":1793,"line_end":1793,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975097,"byte_end":975165,"line_start":1794,"line_end":1794,"column_start":5,"column_end":73}},{"value":"/ section, or a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975170,"byte_end":975250,"line_start":1795,"line_end":1795,"column_start":5,"column_end":85}},{"value":"/ object file, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975255,"byte_end":975334,"line_start":1796,"line_end":1796,"column_start":5,"column_end":84}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975339,"byte_end":975378,"line_start":1797,"line_end":1797,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975383,"byte_end":975386,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975391,"byte_end":975460,"line_start":1799,"line_end":1799,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975465,"byte_end":975502,"line_start":1800,"line_end":1800,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975507,"byte_end":975516,"line_start":1801,"line_end":1801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975905,"byte_end":975913,"line_start":1817,"line_end":1817,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<AttributeValue<R, Offset>>::u8_value","value":"pub fn u8_value(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u8.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975843,"byte_end":975893,"line_start":1816,"line_end":1816,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":976185,"byte_end":976194,"line_start":1827,"line_end":1827,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<AttributeValue<R, Offset>>::u16_value","value":"pub fn u16_value(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":976122,"byte_end":976173,"line_start":1826,"line_end":1826,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":976483,"byte_end":976494,"line_start":1837,"line_end":1837,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<AttributeValue<R, Offset>>::udata_value","value":"pub fn udata_value(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an unsigned integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":976406,"byte_end":976471,"line_start":1836,"line_end":1836,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":977177,"byte_end":977188,"line_start":1856,"line_end":1856,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<AttributeValue<R, Offset>>::sdata_value","value":"pub fn sdata_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a signed integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":977103,"byte_end":977165,"line_start":1855,"line_end":1855,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":977913,"byte_end":977925,"line_start":1875,"line_end":1875,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<AttributeValue<R, Offset>>::offset_value","value":"pub fn offset_value(&Self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":977846,"byte_end":977901,"line_start":1874,"line_end":1874,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978521,"byte_end":978534,"line_start":1890,"line_end":1890,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<AttributeValue<R, Offset>>::exprloc_value","value":"pub fn exprloc_value(&Self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an expression or location buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978226,"byte_end":978304,"line_start":1885,"line_end":1885,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978309,"byte_end":978312,"line_start":1886,"line_end":1886,"column_start":5,"column_end":8}},{"value":"/ Expressions and locations may be `DW_FORM_block*` or `DW_FORM_exprloc`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978317,"byte_end":978392,"line_start":1887,"line_end":1887,"column_start":5,"column_end":80}},{"value":"/ The standard doesn't mention `DW_FORM_block*` as a possible form, but","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978397,"byte_end":978470,"line_start":1888,"line_end":1888,"column_start":5,"column_end":78}},{"value":"/ it is encountered in practice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978475,"byte_end":978509,"line_start":1889,"line_end":1889,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979263,"byte_end":979275,"line_start":1907,"line_end":1907,"column_start":12,"column_end":24},"name":"string_value","qualname":"<AttributeValue<R, Offset>>::string_value","value":"pub fn string_value(&Self, &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978784,"byte_end":978843,"line_start":1898,"line_end":1898,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978848,"byte_end":978851,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978856,"byte_end":978930,"line_start":1900,"line_end":1900,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":978935,"byte_end":979003,"line_start":1901,"line_end":1901,"column_start":5,"column_end":73}},{"value":"/ section, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979008,"byte_end":979083,"line_start":1902,"line_end":1902,"column_start":5,"column_end":80}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979088,"byte_end":979127,"line_start":1903,"line_end":1903,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979132,"byte_end":979135,"line_start":1904,"line_end":1904,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979140,"byte_end":979209,"line_start":1905,"line_end":1905,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979214,"byte_end":979251,"line_start":1906,"line_end":1906,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":980112,"byte_end":980128,"line_start":1925,"line_end":1925,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<AttributeValue<R, Offset>>::string_value_sup","value":"pub fn string_value_sup(&Self, &DebugStr<R>, Option<&DebugStr<R>>)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979544,"byte_end":979603,"line_start":1915,"line_end":1915,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979608,"byte_end":979611,"line_start":1916,"line_end":1916,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979616,"byte_end":979690,"line_start":1917,"line_end":1917,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979695,"byte_end":979763,"line_start":1918,"line_end":1918,"column_start":5,"column_end":73}},{"value":"/ section, or a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979768,"byte_end":979848,"line_start":1919,"line_end":1919,"column_start":5,"column_end":85}},{"value":"/ object file, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979853,"byte_end":979932,"line_start":1920,"line_end":1920,"column_start":5,"column_end":84}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979937,"byte_end":979976,"line_start":1921,"line_end":1921,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979981,"byte_end":979984,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":979989,"byte_end":980058,"line_start":1923,"line_end":1923,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":980063,"byte_end":980100,"line_start":1924,"line_end":1924,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8707},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995105,"byte_end":995114,"line_start":2285,"line_end":2285,"column_start":12,"column_end":21},"name":"AttrsIter","qualname":"::read::unit::AttrsIter","value":"AttrsIter {  }","parent":null,"children":[{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8714}],"decl_id":null,"docs":" An iterator over a particular entry's attributes.","sig":null,"attributes":[{"value":"/ An iterator over a particular entry's attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994769,"byte_end":994822,"line_start":2276,"line_end":2276,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994823,"byte_end":994826,"line_start":2277,"line_end":2277,"column_start":1,"column_end":4}},{"value":"/ See [the documentation for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994827,"byte_end":994857,"line_start":2278,"line_end":2278,"column_start":1,"column_end":31}},{"value":"/ `DebuggingInformationEntry::attrs()`](./struct.DebuggingInformationEntry.html#method.attrs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994858,"byte_end":994953,"line_start":2279,"line_end":2279,"column_start":1,"column_end":96}},{"value":"/ for details.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994954,"byte_end":994970,"line_start":2280,"line_end":2280,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994971,"byte_end":994974,"line_start":2281,"line_end":2281,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994975,"byte_end":994996,"line_start":2282,"line_end":2282,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":994997,"byte_end":995063,"line_start":2283,"line_end":2283,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995690,"byte_end":995694,"line_start":2299,"line_end":2299,"column_start":12,"column_end":16},"name":"next","qualname":"<AttrsIter>::next","value":"pub fn next(&mut Self) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next attribute.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995368,"byte_end":995423,"line_start":2292,"line_end":2292,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995428,"byte_end":995431,"line_start":2293,"line_end":2293,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when iteration is finished. If an error","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995436,"byte_end":995494,"line_start":2294,"line_end":2294,"column_start":5,"column_end":63}},{"value":"/ occurs while parsing the next attribute, then this error","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995499,"byte_end":995559,"line_start":2295,"line_end":2295,"column_start":5,"column_end":65}},{"value":"/ is returned, and all subsequent calls return `None`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995564,"byte_end":995620,"line_start":2296,"line_end":2296,"column_start":5,"column_end":61}},{"value":"allow(clippy :: inline_always)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995625,"byte_end":995656,"line_start":2297,"line_end":2297,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995661,"byte_end":995678,"line_start":2298,"line_end":2298,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8732},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999387,"byte_end":999397,"line_start":2396,"line_end":2396,"column_start":12,"column_end":22},"name":"EntriesRaw","qualname":"::read::unit::EntriesRaw","value":"EntriesRaw {  }","parent":null,"children":[{"krate":0,"index":8736},{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739}],"decl_id":null,"docs":" A raw reader of the data that defines the Debugging Information Entries.","sig":null,"attributes":[{"value":"/ A raw reader of the data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997136,"byte_end":997212,"line_start":2343,"line_end":2343,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997213,"byte_end":997216,"line_start":2344,"line_end":2344,"column_start":1,"column_end":4}},{"value":"/ `EntriesRaw` provides primitives to read the components of Debugging Information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997217,"byte_end":997301,"line_start":2345,"line_end":2345,"column_start":1,"column_end":85}},{"value":"/ Entries (DIEs). A DIE consists of an abbreviation code (read with `read_abbreviation`)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997302,"byte_end":997392,"line_start":2346,"line_end":2346,"column_start":1,"column_end":91}},{"value":"/ followed by a number of attributes (read with `read_attribute`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997393,"byte_end":997461,"line_start":2347,"line_end":2347,"column_start":1,"column_end":69}},{"value":"/ The user must provide the control flow to read these correctly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997462,"byte_end":997529,"line_start":2348,"line_end":2348,"column_start":1,"column_end":68}},{"value":"/ In particular, all attributes must always be read before reading another","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997530,"byte_end":997606,"line_start":2349,"line_end":2349,"column_start":1,"column_end":77}},{"value":"/ abbreviation code.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997607,"byte_end":997629,"line_start":2350,"line_end":2350,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997630,"byte_end":997633,"line_start":2351,"line_end":2351,"column_start":1,"column_end":4}},{"value":"/ `EntriesRaw` lacks some features of `EntriesCursor`, such as the ability to skip","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997634,"byte_end":997718,"line_start":2352,"line_end":2352,"column_start":1,"column_end":85}},{"value":"/ to the next sibling DIE. However, this also allows it to optimize better, since it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997719,"byte_end":997805,"line_start":2353,"line_end":2353,"column_start":1,"column_end":87}},{"value":"/ does not need to perform the extra bookkeeping required to support these features,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997806,"byte_end":997892,"line_start":2354,"line_end":2354,"column_start":1,"column_end":87}},{"value":"/ and thus it is suitable for cases where performance is important.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997893,"byte_end":997962,"line_start":2355,"line_end":2355,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997963,"byte_end":997966,"line_start":2356,"line_end":2356,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997967,"byte_end":997987,"line_start":2357,"line_end":2357,"column_start":1,"column_end":21}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":997988,"byte_end":998006,"line_start":2358,"line_end":2358,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998007,"byte_end":998055,"line_start":2359,"line_end":2359,"column_start":1,"column_end":49}},{"value":"/ # let debug_info = gimli::DebugInfo::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998056,"byte_end":998127,"line_start":2360,"line_end":2360,"column_start":1,"column_end":72}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998128,"byte_end":998201,"line_start":2361,"line_end":2361,"column_start":1,"column_end":74}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998202,"byte_end":998233,"line_start":2362,"line_end":2362,"column_start":1,"column_end":32}},{"value":"/ # let debug_abbrev = gimli::DebugAbbrev::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998234,"byte_end":998309,"line_start":2363,"line_end":2363,"column_start":1,"column_end":76}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998310,"byte_end":998390,"line_start":2364,"line_end":2364,"column_start":1,"column_end":81}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998391,"byte_end":998437,"line_start":2365,"line_end":2365,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998438,"byte_end":998441,"line_start":2366,"line_end":2366,"column_start":1,"column_end":4}},{"value":"/ let mut entries = unit.entries_raw(&abbrevs, None)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998442,"byte_end":998498,"line_start":2367,"line_end":2367,"column_start":1,"column_end":57}},{"value":"/ while !entries.is_empty() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998499,"byte_end":998530,"line_start":2368,"line_end":2368,"column_start":1,"column_end":32}},{"value":"/     let abbrev = if let Some(abbrev) = entries.read_abbreviation()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998531,"byte_end":998604,"line_start":2369,"line_end":2369,"column_start":1,"column_end":74}},{"value":"/         abbrev","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998605,"byte_end":998623,"line_start":2370,"line_end":2370,"column_start":1,"column_end":19}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998624,"byte_end":998640,"line_start":2371,"line_end":2371,"column_start":1,"column_end":17}},{"value":"/         // Null entry with no attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998641,"byte_end":998686,"line_start":2372,"line_end":2372,"column_start":1,"column_end":46}},{"value":"/         continue","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998687,"byte_end":998707,"line_start":2373,"line_end":2373,"column_start":1,"column_end":21}},{"value":"/     };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998708,"byte_end":998718,"line_start":2374,"line_end":2374,"column_start":1,"column_end":11}},{"value":"/     match abbrev.tag() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998719,"byte_end":998747,"line_start":2375,"line_end":2375,"column_start":1,"column_end":29}},{"value":"/         gimli::DW_TAG_subprogram => {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998748,"byte_end":998789,"line_start":2376,"line_end":2376,"column_start":1,"column_end":42}},{"value":"/             // Loop over attributes for DIEs we care about.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998790,"byte_end":998853,"line_start":2377,"line_end":2377,"column_start":1,"column_end":64}},{"value":"/             for spec in abbrev.attributes() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998854,"byte_end":998903,"line_start":2378,"line_end":2378,"column_start":1,"column_end":50}},{"value":"/                 let attr = entries.read_attribute(*spec)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998904,"byte_end":998966,"line_start":2379,"line_end":2379,"column_start":1,"column_end":63}},{"value":"/                 match attr.name() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":998967,"byte_end":999006,"line_start":2380,"line_end":2380,"column_start":1,"column_end":40}},{"value":"/                     // Handle attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999007,"byte_end":999052,"line_start":2381,"line_end":2381,"column_start":1,"column_end":46}},{"value":"/                     _ => {}","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999053,"byte_end":999084,"line_start":2382,"line_end":2382,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999085,"byte_end":999106,"line_start":2383,"line_end":2383,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999107,"byte_end":999124,"line_start":2384,"line_end":2384,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999125,"byte_end":999138,"line_start":2385,"line_end":2385,"column_start":1,"column_end":14}},{"value":"/         _ => {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999139,"byte_end":999157,"line_start":2386,"line_end":2386,"column_start":1,"column_end":19}},{"value":"/             // Skip attributes for DIEs we don't care about.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999158,"byte_end":999222,"line_start":2387,"line_end":2387,"column_start":1,"column_end":65}},{"value":"/             entries.skip_attributes(abbrev.attributes());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999223,"byte_end":999284,"line_start":2388,"line_end":2388,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999285,"byte_end":999298,"line_start":2389,"line_end":2389,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999299,"byte_end":999308,"line_start":2390,"line_end":2390,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999309,"byte_end":999314,"line_start":2391,"line_end":2391,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999315,"byte_end":999335,"line_start":2392,"line_end":2392,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999336,"byte_end":999343,"line_start":2393,"line_end":2393,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999344,"byte_end":999351,"line_start":2394,"line_end":2394,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999686,"byte_end":999694,"line_start":2409,"line_end":2409,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EntriesRaw>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if there is no more input.\n","sig":null,"attributes":[{"value":"/ Return true if there is no more input.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999618,"byte_end":999660,"line_start":2407,"line_end":2407,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999665,"byte_end":999674,"line_start":2408,"line_end":2408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999951,"byte_end":999962,"line_start":2417,"line_end":2417,"column_start":12,"column_end":23},"name":"next_offset","qualname":"<EntriesRaw>::next_offset","value":"pub fn next_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the unit offset at which the reader will read next.","sig":null,"attributes":[{"value":"/ Return the unit offset at which the reader will read next.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999753,"byte_end":999815,"line_start":2413,"line_end":2413,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999820,"byte_end":999823,"line_start":2414,"line_end":2414,"column_start":5,"column_end":8}},{"value":"/ If you want the offset of the next entry, then this must be called prior to reading","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999828,"byte_end":999915,"line_start":2415,"line_end":2415,"column_start":5,"column_end":92}},{"value":"/ the next entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999920,"byte_end":999939,"line_start":2416,"line_end":2416,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000335,"byte_end":1000345,"line_start":2426,"line_end":2426,"column_start":12,"column_end":22},"name":"next_depth","qualname":"<EntriesRaw>::next_depth","value":"pub fn next_depth(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of the next entry.","sig":null,"attributes":[{"value":"/ Return the depth of the next entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000101,"byte_end":1000140,"line_start":2421,"line_end":2421,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000145,"byte_end":1000148,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ This depth is updated when `read_abbreviation` is called, and is updated","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000153,"byte_end":1000229,"line_start":2423,"line_end":2423,"column_start":5,"column_end":81}},{"value":"/ based on null entries and the `has_children` field in the abbreviation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000234,"byte_end":1000309,"line_start":2424,"line_end":2424,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000314,"byte_end":1000323,"line_start":2425,"line_end":2425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000547,"byte_end":1000564,"line_start":2434,"line_end":2434,"column_start":12,"column_end":29},"name":"read_abbreviation","qualname":"<EntriesRaw>::read_abbreviation","value":"pub fn read_abbreviation(&mut Self) -> Result<Option<&'abbrev Abbreviation>>","parent":null,"children":[],"decl_id":null,"docs":" Read an abbreviation code and lookup the corresponding `Abbreviation`.","sig":null,"attributes":[{"value":"/ Read an abbreviation code and lookup the corresponding `Abbreviation`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000394,"byte_end":1000468,"line_start":2430,"line_end":2430,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000473,"byte_end":1000476,"line_start":2431,"line_end":2431,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` for null entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000481,"byte_end":1000521,"line_start":2432,"line_end":2432,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000526,"byte_end":1000535,"line_start":2433,"line_end":2433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001041,"byte_end":1001055,"line_start":2452,"line_end":2452,"column_start":12,"column_end":26},"name":"read_attribute","qualname":"<EntriesRaw>::read_attribute","value":"pub fn read_attribute(&mut Self, AttributeSpecification)\n-> Result<Attribute<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read an attribute.\n","sig":null,"attributes":[{"value":"/ Read an attribute.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1000993,"byte_end":1001015,"line_start":2450,"line_end":2450,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001020,"byte_end":1001029,"line_start":2451,"line_end":2451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001276,"byte_end":1001291,"line_start":2458,"line_end":2458,"column_start":12,"column_end":27},"name":"skip_attributes","qualname":"<EntriesRaw>::skip_attributes","value":"pub fn skip_attributes(&mut Self, &[AttributeSpecification]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Skip all the attributes of an abbreviation.\n","sig":null,"attributes":[{"value":"/ Skip all the attributes of an abbreviation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001203,"byte_end":1001250,"line_start":2456,"line_end":2456,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001255,"byte_end":1001264,"line_start":2457,"line_end":2457,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8750},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002271,"byte_end":1002284,"line_start":2477,"line_end":2477,"column_start":12,"column_end":25},"name":"EntriesCursor","qualname":"::read::unit::EntriesCursor","value":"EntriesCursor {  }","parent":null,"children":[{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758}],"decl_id":null,"docs":" A cursor into the Debugging Information Entries tree for a compilation unit.","sig":null,"attributes":[{"value":"/ A cursor into the Debugging Information Entries tree for a compilation unit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001432,"byte_end":1001512,"line_start":2463,"line_end":2463,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001513,"byte_end":1001516,"line_start":2464,"line_end":2464,"column_start":1,"column_end":4}},{"value":"/ The `EntriesCursor` can traverse the DIE tree in DFS order using `next_dfs()`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001517,"byte_end":1001599,"line_start":2465,"line_end":2465,"column_start":1,"column_end":83}},{"value":"/ or skip to the next sibling of the entry the cursor is currently pointing to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001600,"byte_end":1001680,"line_start":2466,"line_end":2466,"column_start":1,"column_end":81}},{"value":"/ using `next_sibling()`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001681,"byte_end":1001708,"line_start":2467,"line_end":2467,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001709,"byte_end":1001712,"line_start":2468,"line_end":2468,"column_start":1,"column_end":4}},{"value":"/ It is also possible to traverse the DIE tree at a lower abstraction level","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001713,"byte_end":1001790,"line_start":2469,"line_end":2469,"column_start":1,"column_end":78}},{"value":"/ using `next_entry()`. This method does not skip over null entries, or provide","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001791,"byte_end":1001872,"line_start":2470,"line_end":2470,"column_start":1,"column_end":82}},{"value":"/ any indication of the current tree depth. In this case, you must use `current()`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001873,"byte_end":1001957,"line_start":2471,"line_end":2471,"column_start":1,"column_end":85}},{"value":"/ to obtain the current entry, and `current().has_children()` to determine if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1001958,"byte_end":1002037,"line_start":2472,"line_end":2472,"column_start":1,"column_end":80}},{"value":"/ the entry following the current entry will be a sibling or child. `current()`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002038,"byte_end":1002119,"line_start":2473,"line_end":2473,"column_start":1,"column_end":82}},{"value":"/ will return `None` if the current entry is a null entry, which signifies the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002120,"byte_end":1002200,"line_start":2474,"line_end":2474,"column_start":1,"column_end":81}},{"value":"/ end of the current tree depth.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002201,"byte_end":1002235,"line_start":2475,"line_end":2475,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002821,"byte_end":1002828,"line_start":2494,"line_end":2494,"column_start":12,"column_end":19},"name":"current","qualname":"<EntriesCursor>::current","value":"pub fn current(&Self) -> Option<&DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the entry that the cursor is currently pointing to.","sig":null,"attributes":[{"value":"/ Get a reference to the entry that the cursor is currently pointing to.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002588,"byte_end":1002662,"line_start":2489,"line_end":2489,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002667,"byte_end":1002670,"line_start":2490,"line_end":2490,"column_start":5,"column_end":8}},{"value":"/ If the cursor is not pointing at an entry, or if the current entry is a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002675,"byte_end":1002750,"line_start":2491,"line_end":2491,"column_start":5,"column_end":80}},{"value":"/ null entry, then `None` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002755,"byte_end":1002795,"line_start":2492,"line_end":2492,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002800,"byte_end":1002809,"line_start":2493,"line_end":2493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1003148,"byte_end":1003158,"line_start":2502,"line_end":2502,"column_start":12,"column_end":22},"name":"next_entry","qualname":"<EntriesCursor>::next_entry","value":"pub fn next_entry(&mut Self) -> Result<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree.","sig":null,"attributes":[{"value":"/ Move the cursor to the next DIE in the tree.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002943,"byte_end":1002991,"line_start":2498,"line_end":2498,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002996,"byte_end":1002999,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if there is a next entry, even if this entry is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1003004,"byte_end":1003076,"line_start":2500,"line_end":2500,"column_start":5,"column_end":77}},{"value":"/ If there is no next entry, then `None` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1003081,"byte_end":1003136,"line_start":2501,"line_end":2501,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008157,"byte_end":1008165,"line_start":2651,"line_end":2651,"column_start":12,"column_end":20},"name":"next_dfs","qualname":"<EntriesCursor>::next_dfs","value":"pub fn next_dfs(&mut Self)\n-> Result<Option<(isize, &DebuggingInformationEntry)>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree in DFS order.","sig":null,"attributes":[{"value":"/ Move the cursor to the next DIE in the tree in DFS order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004102,"byte_end":1004163,"line_start":2533,"line_end":2533,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004168,"byte_end":1004171,"line_start":2534,"line_end":2534,"column_start":5,"column_end":8}},{"value":"/ Upon successful movement of the cursor, return the delta traversal","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004176,"byte_end":1004246,"line_start":2535,"line_end":2535,"column_start":5,"column_end":75}},{"value":"/ depth and the entry:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004251,"byte_end":1004275,"line_start":2536,"line_end":2536,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004280,"byte_end":1004283,"line_start":2537,"line_end":2537,"column_start":5,"column_end":8}},{"value":"/   * If we moved down into the previous current entry's children, we get","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004288,"byte_end":1004363,"line_start":2538,"line_end":2538,"column_start":5,"column_end":80}},{"value":"/     `Some((1, entry))`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004368,"byte_end":1004395,"line_start":2539,"line_end":2539,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004400,"byte_end":1004403,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/   * If we moved to the previous current entry's sibling, we get","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004408,"byte_end":1004475,"line_start":2541,"line_end":2541,"column_start":5,"column_end":72}},{"value":"/     `Some((0, entry))`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004480,"byte_end":1004507,"line_start":2542,"line_end":2542,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004512,"byte_end":1004515,"line_start":2543,"line_end":2543,"column_start":5,"column_end":8}},{"value":"/   * If the previous entry does not have any siblings and we move up to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004520,"byte_end":1004594,"line_start":2544,"line_end":2544,"column_start":5,"column_end":79}},{"value":"/     its parent's next sibling, then we get `Some((-1, entry))`. Note that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004599,"byte_end":1004676,"line_start":2545,"line_end":2545,"column_start":5,"column_end":82}},{"value":"/     if the parent doesn't have a next sibling, then it could go up to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004681,"byte_end":1004758,"line_start":2546,"line_end":2546,"column_start":5,"column_end":82}},{"value":"/     parent's parent's next sibling and return `Some((-2, entry))`, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004763,"byte_end":1004838,"line_start":2547,"line_end":2547,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004843,"byte_end":1004846,"line_start":2548,"line_end":2548,"column_start":5,"column_end":8}},{"value":"/ If there is no next entry, then `None` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004851,"byte_end":1004906,"line_start":2549,"line_end":2549,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004911,"byte_end":1004914,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ Here is an example that finds the first entry in a compilation unit that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1004919,"byte_end":1004995,"line_start":2551,"line_end":2551,"column_start":5,"column_end":81}},{"value":"/ does not have any children.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005000,"byte_end":1005031,"line_start":2552,"line_end":2552,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005036,"byte_end":1005039,"line_start":2553,"line_end":2553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005044,"byte_end":1005051,"line_start":2554,"line_end":2554,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005056,"byte_end":1005112,"line_start":2555,"line_end":2555,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005117,"byte_end":1005139,"line_start":2556,"line_end":2556,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005144,"byte_end":1005179,"line_start":2557,"line_end":2557,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005184,"byte_end":1005189,"line_start":2558,"line_end":2558,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005194,"byte_end":1005230,"line_start":2559,"line_end":2559,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005235,"byte_end":1005268,"line_start":2560,"line_end":2560,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005273,"byte_end":1005295,"line_start":2561,"line_end":2561,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005300,"byte_end":1005321,"line_start":2562,"line_end":2562,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005326,"byte_end":1005358,"line_start":2563,"line_end":2563,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005363,"byte_end":1005396,"line_start":2564,"line_end":2564,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005401,"byte_end":1005426,"line_start":2565,"line_end":2565,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005431,"byte_end":1005446,"line_start":2566,"line_end":2566,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005451,"byte_end":1005456,"line_start":2567,"line_end":2567,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005461,"byte_end":1005478,"line_start":2568,"line_end":2568,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005483,"byte_end":1005488,"line_start":2569,"line_end":2569,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005493,"byte_end":1005523,"line_start":2570,"line_end":2570,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005528,"byte_end":1005543,"line_start":2571,"line_end":2571,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005548,"byte_end":1005603,"line_start":2572,"line_end":2572,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005608,"byte_end":1005641,"line_start":2573,"line_end":2573,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005646,"byte_end":1005651,"line_start":2574,"line_end":2574,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005656,"byte_end":1005679,"line_start":2575,"line_end":2575,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005684,"byte_end":1005689,"line_start":2576,"line_end":2576,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005694,"byte_end":1005726,"line_start":2577,"line_end":2577,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005731,"byte_end":1005748,"line_start":2578,"line_end":2578,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005753,"byte_end":1005810,"line_start":2579,"line_end":2579,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005815,"byte_end":1005850,"line_start":2580,"line_end":2580,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005855,"byte_end":1005860,"line_start":2581,"line_end":2581,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005865,"byte_end":1005890,"line_start":2582,"line_end":2582,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005895,"byte_end":1005900,"line_start":2583,"line_end":2583,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005905,"byte_end":1005939,"line_start":2584,"line_end":2584,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005944,"byte_end":1005963,"line_start":2585,"line_end":2585,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1005968,"byte_end":1006027,"line_start":2586,"line_end":2586,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006032,"byte_end":1006069,"line_start":2587,"line_end":2587,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006074,"byte_end":1006079,"line_start":2588,"line_end":2588,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006084,"byte_end":1006111,"line_start":2589,"line_end":2589,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006116,"byte_end":1006121,"line_start":2590,"line_end":2590,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006126,"byte_end":1006160,"line_start":2591,"line_end":2591,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006165,"byte_end":1006186,"line_start":2592,"line_end":2592,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006191,"byte_end":1006196,"line_start":2593,"line_end":2593,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006201,"byte_end":1006233,"line_start":2594,"line_end":2594,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006238,"byte_end":1006257,"line_start":2595,"line_end":2595,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006262,"byte_end":1006267,"line_start":2596,"line_end":2596,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006272,"byte_end":1006302,"line_start":2597,"line_end":2597,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006307,"byte_end":1006324,"line_start":2598,"line_end":2598,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006329,"byte_end":1006337,"line_start":2599,"line_end":2599,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006342,"byte_end":1006405,"line_start":2600,"line_end":2600,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006410,"byte_end":1006415,"line_start":2601,"line_end":2601,"column_start":5,"column_end":10}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006420,"byte_end":1006444,"line_start":2602,"line_end":2602,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006449,"byte_end":1006466,"line_start":2603,"line_end":2603,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006471,"byte_end":1006486,"line_start":2604,"line_end":2604,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006491,"byte_end":1006521,"line_start":2605,"line_end":2605,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006526,"byte_end":1006541,"line_start":2606,"line_end":2606,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006546,"byte_end":1006574,"line_start":2607,"line_end":2607,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006579,"byte_end":1006594,"line_start":2608,"line_end":2608,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006599,"byte_end":1006628,"line_start":2609,"line_end":2609,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006633,"byte_end":1006675,"line_start":2610,"line_end":2610,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006680,"byte_end":1006697,"line_start":2611,"line_end":2611,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006702,"byte_end":1006748,"line_start":2612,"line_end":2612,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006753,"byte_end":1006770,"line_start":2613,"line_end":2613,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006775,"byte_end":1006802,"line_start":2614,"line_end":2614,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006807,"byte_end":1006822,"line_start":2615,"line_end":2615,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006827,"byte_end":1006842,"line_start":2616,"line_end":2616,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006847,"byte_end":1006875,"line_start":2617,"line_end":2617,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006880,"byte_end":1006894,"line_start":2618,"line_end":2618,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006899,"byte_end":1006907,"line_start":2619,"line_end":2619,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006912,"byte_end":1006981,"line_start":2620,"line_end":2620,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006986,"byte_end":1006991,"line_start":2621,"line_end":2621,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1006996,"byte_end":1007069,"line_start":2622,"line_end":2622,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007074,"byte_end":1007077,"line_start":2623,"line_end":2623,"column_start":5,"column_end":8}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007082,"byte_end":1007113,"line_start":2624,"line_end":2624,"column_start":5,"column_end":36}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007118,"byte_end":1007198,"line_start":2625,"line_end":2625,"column_start":5,"column_end":85}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007203,"byte_end":1007249,"line_start":2626,"line_end":2626,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007254,"byte_end":1007257,"line_start":2627,"line_end":2627,"column_start":5,"column_end":8}},{"value":"/ let mut first_entry_with_no_children = None;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007262,"byte_end":1007310,"line_start":2628,"line_end":2628,"column_start":5,"column_end":53}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007315,"byte_end":1007359,"line_start":2629,"line_end":2629,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007364,"byte_end":1007367,"line_start":2630,"line_end":2630,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007372,"byte_end":1007407,"line_start":2631,"line_end":2631,"column_start":5,"column_end":40}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007412,"byte_end":1007462,"line_start":2632,"line_end":2632,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007467,"byte_end":1007470,"line_start":2633,"line_end":2633,"column_start":5,"column_end":8}},{"value":"/ // Traverse the DIE tree in depth-first search order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007475,"byte_end":1007532,"line_start":2634,"line_end":2634,"column_start":5,"column_end":62}},{"value":"/ let mut depth = 0;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007537,"byte_end":1007559,"line_start":2635,"line_end":2635,"column_start":5,"column_end":27}},{"value":"/ while let Some((delta_depth, current)) = cursor.next_dfs().expect(\"Should parse next dfs\") {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007564,"byte_end":1007660,"line_start":2636,"line_end":2636,"column_start":5,"column_end":101}},{"value":"/     // Update depth value, and break out of the loop when we","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007665,"byte_end":1007729,"line_start":2637,"line_end":2637,"column_start":5,"column_end":69}},{"value":"/     // return to the original starting position.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007734,"byte_end":1007786,"line_start":2638,"line_end":2638,"column_start":5,"column_end":57}},{"value":"/     depth += delta_depth;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007791,"byte_end":1007820,"line_start":2639,"line_end":2639,"column_start":5,"column_end":34}},{"value":"/     if depth <= 0 {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007825,"byte_end":1007848,"line_start":2640,"line_end":2640,"column_start":5,"column_end":28}},{"value":"/         break;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007853,"byte_end":1007871,"line_start":2641,"line_end":2641,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007876,"byte_end":1007885,"line_start":2642,"line_end":2642,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007890,"byte_end":1007893,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/     first_entry_with_no_children = Some(current.clone());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007898,"byte_end":1007959,"line_start":2644,"line_end":2644,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007964,"byte_end":1007969,"line_start":2645,"line_end":2645,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007974,"byte_end":1007977,"line_start":2646,"line_end":2646,"column_start":5,"column_end":8}},{"value":"/ println!(\"The first entry with no children is {:?}\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1007982,"byte_end":1008038,"line_start":2647,"line_end":2647,"column_start":5,"column_end":61}},{"value":"/          first_entry_with_no_children.unwrap());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008043,"byte_end":1008095,"line_start":2648,"line_end":2648,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008100,"byte_end":1008107,"line_start":2649,"line_end":2649,"column_start":5,"column_end":12}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008112,"byte_end":1008145,"line_start":2650,"line_end":2650,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012204,"byte_end":1012216,"line_start":2776,"line_end":2776,"column_start":12,"column_end":24},"name":"next_sibling","qualname":"<EntriesCursor>::next_sibling","value":"pub fn next_sibling(&mut Self) -> Result<Option<&DebuggingInformationEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next sibling DIE of the current one.","sig":null,"attributes":[{"value":"/ Move the cursor to the next sibling DIE of the current one.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008764,"byte_end":1008827,"line_start":2670,"line_end":2670,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008832,"byte_end":1008835,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Some(entry))` when the cursor has been moved to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008840,"byte_end":1008903,"line_start":2672,"line_end":2672,"column_start":5,"column_end":68}},{"value":"/ the next sibling, `Ok(None)` when there is no next sibling.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008908,"byte_end":1008971,"line_start":2673,"line_end":2673,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008976,"byte_end":1008979,"line_start":2674,"line_end":2674,"column_start":5,"column_end":8}},{"value":"/ The depth of the cursor is never changed if this method returns `Ok`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1008984,"byte_end":1009057,"line_start":2675,"line_end":2675,"column_start":5,"column_end":78}},{"value":"/ Once `Ok(None)` is returned, this method will continue to return","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009062,"byte_end":1009130,"line_start":2676,"line_end":2676,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` until either `next_entry` or `next_dfs` is called.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009135,"byte_end":1009200,"line_start":2677,"line_end":2677,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009205,"byte_end":1009208,"line_start":2678,"line_end":2678,"column_start":5,"column_end":8}},{"value":"/ Here is an example that iterates over all of the direct children of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009213,"byte_end":1009288,"line_start":2679,"line_end":2679,"column_start":5,"column_end":80}},{"value":"/ root entry:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009293,"byte_end":1009308,"line_start":2680,"line_end":2680,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009313,"byte_end":1009316,"line_start":2681,"line_end":2681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009321,"byte_end":1009328,"line_start":2682,"line_end":2682,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009333,"byte_end":1009389,"line_start":2683,"line_end":2683,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009394,"byte_end":1009416,"line_start":2684,"line_end":2684,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009421,"byte_end":1009456,"line_start":2685,"line_end":2685,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009461,"byte_end":1009466,"line_start":2686,"line_end":2686,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009471,"byte_end":1009507,"line_start":2687,"line_end":2687,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009512,"byte_end":1009545,"line_start":2688,"line_end":2688,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009550,"byte_end":1009572,"line_start":2689,"line_end":2689,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009577,"byte_end":1009598,"line_start":2690,"line_end":2690,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009603,"byte_end":1009635,"line_start":2691,"line_end":2691,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009640,"byte_end":1009673,"line_start":2692,"line_end":2692,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009678,"byte_end":1009703,"line_start":2693,"line_end":2693,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009708,"byte_end":1009723,"line_start":2694,"line_end":2694,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009728,"byte_end":1009733,"line_start":2695,"line_end":2695,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009738,"byte_end":1009755,"line_start":2696,"line_end":2696,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009760,"byte_end":1009765,"line_start":2697,"line_end":2697,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009770,"byte_end":1009800,"line_start":2698,"line_end":2698,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009805,"byte_end":1009820,"line_start":2699,"line_end":2699,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009825,"byte_end":1009880,"line_start":2700,"line_end":2700,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009885,"byte_end":1009918,"line_start":2701,"line_end":2701,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009923,"byte_end":1009928,"line_start":2702,"line_end":2702,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009933,"byte_end":1009956,"line_start":2703,"line_end":2703,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009961,"byte_end":1009966,"line_start":2704,"line_end":2704,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1009971,"byte_end":1010003,"line_start":2705,"line_end":2705,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010008,"byte_end":1010025,"line_start":2706,"line_end":2706,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010030,"byte_end":1010087,"line_start":2707,"line_end":2707,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010092,"byte_end":1010127,"line_start":2708,"line_end":2708,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010132,"byte_end":1010137,"line_start":2709,"line_end":2709,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010142,"byte_end":1010167,"line_start":2710,"line_end":2710,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010172,"byte_end":1010177,"line_start":2711,"line_end":2711,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010182,"byte_end":1010216,"line_start":2712,"line_end":2712,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010221,"byte_end":1010240,"line_start":2713,"line_end":2713,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010245,"byte_end":1010304,"line_start":2714,"line_end":2714,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010309,"byte_end":1010346,"line_start":2715,"line_end":2715,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010351,"byte_end":1010356,"line_start":2716,"line_end":2716,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010361,"byte_end":1010388,"line_start":2717,"line_end":2717,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010393,"byte_end":1010398,"line_start":2718,"line_end":2718,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010403,"byte_end":1010437,"line_start":2719,"line_end":2719,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010442,"byte_end":1010463,"line_start":2720,"line_end":2720,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010468,"byte_end":1010473,"line_start":2721,"line_end":2721,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010478,"byte_end":1010510,"line_start":2722,"line_end":2722,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010515,"byte_end":1010534,"line_start":2723,"line_end":2723,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010539,"byte_end":1010544,"line_start":2724,"line_end":2724,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010549,"byte_end":1010579,"line_start":2725,"line_end":2725,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010584,"byte_end":1010601,"line_start":2726,"line_end":2726,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010606,"byte_end":1010614,"line_start":2727,"line_end":2727,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010619,"byte_end":1010682,"line_start":2728,"line_end":2728,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010687,"byte_end":1010692,"line_start":2729,"line_end":2729,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010697,"byte_end":1010770,"line_start":2730,"line_end":2730,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010775,"byte_end":1010778,"line_start":2731,"line_end":2731,"column_start":5,"column_end":8}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010783,"byte_end":1010807,"line_start":2732,"line_end":2732,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010812,"byte_end":1010829,"line_start":2733,"line_end":2733,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010834,"byte_end":1010849,"line_start":2734,"line_end":2734,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010854,"byte_end":1010884,"line_start":2735,"line_end":2735,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010889,"byte_end":1010904,"line_start":2736,"line_end":2736,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010909,"byte_end":1010937,"line_start":2737,"line_end":2737,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010942,"byte_end":1010957,"line_start":2738,"line_end":2738,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010962,"byte_end":1010991,"line_start":2739,"line_end":2739,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1010996,"byte_end":1011038,"line_start":2740,"line_end":2740,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011043,"byte_end":1011060,"line_start":2741,"line_end":2741,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011065,"byte_end":1011111,"line_start":2742,"line_end":2742,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011116,"byte_end":1011133,"line_start":2743,"line_end":2743,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011138,"byte_end":1011165,"line_start":2744,"line_end":2744,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011170,"byte_end":1011185,"line_start":2745,"line_end":2745,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011190,"byte_end":1011205,"line_start":2746,"line_end":2746,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011210,"byte_end":1011238,"line_start":2747,"line_end":2747,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011243,"byte_end":1011257,"line_start":2748,"line_end":2748,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011262,"byte_end":1011270,"line_start":2749,"line_end":2749,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011275,"byte_end":1011344,"line_start":2750,"line_end":2750,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011349,"byte_end":1011354,"line_start":2751,"line_end":2751,"column_start":5,"column_end":10}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011359,"byte_end":1011390,"line_start":2752,"line_end":2752,"column_start":5,"column_end":36}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011395,"byte_end":1011475,"line_start":2753,"line_end":2753,"column_start":5,"column_end":85}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011480,"byte_end":1011526,"line_start":2754,"line_end":2754,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011531,"byte_end":1011534,"line_start":2755,"line_end":2755,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011539,"byte_end":1011583,"line_start":2756,"line_end":2756,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011588,"byte_end":1011591,"line_start":2757,"line_end":2757,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011596,"byte_end":1011631,"line_start":2758,"line_end":2758,"column_start":5,"column_end":40}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011636,"byte_end":1011686,"line_start":2759,"line_end":2759,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011691,"byte_end":1011694,"line_start":2760,"line_end":2760,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root's first child.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011699,"byte_end":1011748,"line_start":2761,"line_end":2761,"column_start":5,"column_end":54}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011753,"byte_end":1011803,"line_start":2762,"line_end":2762,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011808,"byte_end":1011811,"line_start":2763,"line_end":2763,"column_start":5,"column_end":8}},{"value":"/ // Iterate the root's children.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011816,"byte_end":1011851,"line_start":2764,"line_end":2764,"column_start":5,"column_end":40}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011856,"byte_end":1011866,"line_start":2765,"line_end":2765,"column_start":5,"column_end":15}},{"value":"/     {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011871,"byte_end":1011880,"line_start":2766,"line_end":2766,"column_start":5,"column_end":14}},{"value":"/         let current = cursor.current().expect(\"Should be at an entry\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011885,"byte_end":1011960,"line_start":2767,"line_end":2767,"column_start":5,"column_end":80}},{"value":"/         println!(\"{:?} is a child of the root\", current);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1011965,"byte_end":1012026,"line_start":2768,"line_end":2768,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012031,"byte_end":1012040,"line_start":2769,"line_end":2769,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012045,"byte_end":1012048,"line_start":2770,"line_end":2770,"column_start":5,"column_end":8}},{"value":"/     if cursor.next_sibling().expect(\"Should parse next sibling\").is_none() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012053,"byte_end":1012133,"line_start":2771,"line_end":2771,"column_start":5,"column_end":85}},{"value":"/         break;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012138,"byte_end":1012156,"line_start":2772,"line_end":2772,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012161,"byte_end":1012170,"line_start":2773,"line_end":2773,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012175,"byte_end":1012180,"line_start":2774,"line_end":2774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1012185,"byte_end":1012192,"line_start":2775,"line_end":2775,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8769},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015285,"byte_end":1015296,"line_start":2862,"line_end":2862,"column_start":12,"column_end":23},"name":"EntriesTree","qualname":"::read::unit::EntriesTree","value":"EntriesTree {  }","parent":null,"children":[{"krate":0,"index":8773},{"krate":0,"index":8774},{"krate":0,"index":8775},{"krate":0,"index":8776},{"krate":0,"index":8777},{"krate":0,"index":8778}],"decl_id":null,"docs":" The state information for a tree view of the Debugging Information Entries.","sig":null,"attributes":[{"value":"/ The state information for a tree view of the Debugging Information Entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1013772,"byte_end":1013851,"line_start":2821,"line_end":2821,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1013852,"byte_end":1013855,"line_start":2822,"line_end":2822,"column_start":1,"column_end":4}},{"value":"/ The `EntriesTree` can be used to recursively iterate through the DIE","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1013856,"byte_end":1013928,"line_start":2823,"line_end":2823,"column_start":1,"column_end":73}},{"value":"/ tree, following the parent/child relationships. The `EntriesTree` contains","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1013929,"byte_end":1014007,"line_start":2824,"line_end":2824,"column_start":1,"column_end":79}},{"value":"/ shared state for all nodes in the tree, avoiding any duplicate parsing of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014008,"byte_end":1014085,"line_start":2825,"line_end":2825,"column_start":1,"column_end":78}},{"value":"/ entries during the traversal.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014086,"byte_end":1014119,"line_start":2826,"line_end":2826,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014120,"byte_end":1014123,"line_start":2827,"line_end":2827,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014124,"byte_end":1014144,"line_start":2828,"line_end":2828,"column_start":1,"column_end":21}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014145,"byte_end":1014163,"line_start":2829,"line_end":2829,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014164,"byte_end":1014212,"line_start":2830,"line_end":2830,"column_start":1,"column_end":49}},{"value":"/ # let debug_info = gimli::DebugInfo::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014213,"byte_end":1014284,"line_start":2831,"line_end":2831,"column_start":1,"column_end":72}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014285,"byte_end":1014358,"line_start":2832,"line_end":2832,"column_start":1,"column_end":74}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014359,"byte_end":1014390,"line_start":2833,"line_end":2833,"column_start":1,"column_end":32}},{"value":"/ # let debug_abbrev = gimli::DebugAbbrev::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014391,"byte_end":1014466,"line_start":2834,"line_end":2834,"column_start":1,"column_end":76}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014467,"byte_end":1014547,"line_start":2835,"line_end":2835,"column_start":1,"column_end":81}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014548,"byte_end":1014594,"line_start":2836,"line_end":2836,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014595,"byte_end":1014598,"line_start":2837,"line_end":2837,"column_start":1,"column_end":4}},{"value":"/ let mut tree = unit.entries_tree(&abbrevs, None)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014599,"byte_end":1014653,"line_start":2838,"line_end":2838,"column_start":1,"column_end":55}},{"value":"/ let root = tree.root()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014654,"byte_end":1014682,"line_start":2839,"line_end":2839,"column_start":1,"column_end":29}},{"value":"/ process_tree(root)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014683,"byte_end":1014707,"line_start":2840,"line_end":2840,"column_start":1,"column_end":25}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014708,"byte_end":1014728,"line_start":2841,"line_end":2841,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014729,"byte_end":1014736,"line_start":2842,"line_end":2842,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014737,"byte_end":1014740,"line_start":2843,"line_end":2843,"column_start":1,"column_end":4}},{"value":"/ fn process_tree<R>(mut node: gimli::EntriesTreeNode<R>) -> gimli::Result<()>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014741,"byte_end":1014821,"line_start":2844,"line_end":2844,"column_start":1,"column_end":81}},{"value":"/     where R: gimli::Reader","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014822,"byte_end":1014852,"line_start":2845,"line_end":2845,"column_start":1,"column_end":31}},{"value":"/ {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014853,"byte_end":1014858,"line_start":2846,"line_end":2846,"column_start":1,"column_end":6}},{"value":"/     {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014859,"byte_end":1014868,"line_start":2847,"line_end":2847,"column_start":1,"column_end":10}},{"value":"/         // Examine the entry attributes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014869,"byte_end":1014913,"line_start":2848,"line_end":2848,"column_start":1,"column_end":45}},{"value":"/         let mut attrs = node.entry().attrs();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014914,"byte_end":1014963,"line_start":2849,"line_end":2849,"column_start":1,"column_end":50}},{"value":"/         while let Some(attr) = attrs.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1014964,"byte_end":1015014,"line_start":2850,"line_end":2850,"column_start":1,"column_end":51}},{"value":"/         }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015015,"byte_end":1015028,"line_start":2851,"line_end":2851,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015029,"byte_end":1015038,"line_start":2852,"line_end":2852,"column_start":1,"column_end":10}},{"value":"/     let mut children = node.children();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015039,"byte_end":1015082,"line_start":2853,"line_end":2853,"column_start":1,"column_end":44}},{"value":"/     while let Some(child) = children.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015083,"byte_end":1015133,"line_start":2854,"line_end":2854,"column_start":1,"column_end":51}},{"value":"/         // Recursively process a child.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015134,"byte_end":1015177,"line_start":2855,"line_end":2855,"column_start":1,"column_end":44}},{"value":"/         process_tree(child);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015178,"byte_end":1015210,"line_start":2856,"line_end":2856,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015211,"byte_end":1015220,"line_start":2857,"line_end":2857,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015221,"byte_end":1015235,"line_start":2858,"line_end":2858,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015236,"byte_end":1015241,"line_start":2859,"line_end":2859,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015242,"byte_end":1015249,"line_start":2860,"line_end":2860,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015945,"byte_end":1015949,"line_start":2888,"line_end":2888,"column_start":12,"column_end":16},"name":"root","qualname":"<EntriesTree>::root","value":"pub fn root<'me>(&'me mut Self) -> Result<EntriesTreeNode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the root node of the tree.\n","sig":null,"attributes":[{"value":"/ Returns the root node of the tree.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015895,"byte_end":1015933,"line_start":2887,"line_end":2887,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":8789},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019582,"byte_end":1019597,"line_start":2994,"line_end":2994,"column_start":12,"column_end":27},"name":"EntriesTreeNode","qualname":"::read::unit::EntriesTreeNode","value":"EntriesTreeNode {  }","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795}],"decl_id":null,"docs":" A node in the Debugging Information Entry tree.","sig":null,"attributes":[{"value":"/ A node in the Debugging Information Entry tree.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019384,"byte_end":1019435,"line_start":2989,"line_end":2989,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019436,"byte_end":1019439,"line_start":2990,"line_end":2990,"column_start":1,"column_end":4}},{"value":"/ The root node of a tree can be obtained","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019440,"byte_end":1019483,"line_start":2991,"line_end":2991,"column_start":1,"column_end":44}},{"value":"/ via [`EntriesTree::root`](./struct.EntriesTree.html#method.root).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019484,"byte_end":1019553,"line_start":2992,"line_end":2992,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020085,"byte_end":1020090,"line_start":3009,"line_end":3009,"column_start":12,"column_end":17},"name":"entry","qualname":"<EntriesTreeNode>::entry","value":"pub fn entry(&Self) -> &DebuggingInformationEntry","parent":null,"children":[],"decl_id":null,"docs":" Returns the current entry in the tree.\n","sig":null,"attributes":[{"value":"/ Returns the current entry in the tree.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020031,"byte_end":1020073,"line_start":3008,"line_end":3008,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020424,"byte_end":1020432,"line_start":3018,"line_end":3018,"column_start":12,"column_end":20},"name":"children","qualname":"<EntriesTreeNode>::children","value":"pub fn children(Self) -> EntriesTreeIter","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator for the children of the current entry.","sig":null,"attributes":[{"value":"/ Create an iterator for the children of the current entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020254,"byte_end":1020315,"line_start":3014,"line_end":3014,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020320,"byte_end":1020323,"line_start":3015,"line_end":3015,"column_start":5,"column_end":8}},{"value":"/ The current entry can no longer be accessed after creating the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020328,"byte_end":1020394,"line_start":3016,"line_end":3016,"column_start":5,"column_end":71}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020399,"byte_end":1020412,"line_start":3017,"line_end":3017,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020790,"byte_end":1020805,"line_start":3029,"line_end":3029,"column_start":12,"column_end":27},"name":"EntriesTreeIter","qualname":"::read::unit::EntriesTreeIter","value":"EntriesTreeIter {  }","parent":null,"children":[{"krate":0,"index":8807},{"krate":0,"index":8808},{"krate":0,"index":8809}],"decl_id":null,"docs":" An iterator that allows traversal of the children of an\n `EntriesTreeNode`.","sig":null,"attributes":[{"value":"/ An iterator that allows traversal of the children of an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020547,"byte_end":1020606,"line_start":3023,"line_end":3023,"column_start":1,"column_end":60}},{"value":"/ `EntriesTreeNode`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020607,"byte_end":1020629,"line_start":3024,"line_end":3024,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020630,"byte_end":1020633,"line_start":3025,"line_end":3025,"column_start":1,"column_end":4}},{"value":"/ The items returned by this iterator are also `EntriesTreeNode`s,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020634,"byte_end":1020702,"line_start":3026,"line_end":3026,"column_start":1,"column_end":69}},{"value":"/ which allow recursive traversal of grandchildren, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020703,"byte_end":1020761,"line_start":3027,"line_end":3027,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1021402,"byte_end":1021406,"line_start":3050,"line_end":3050,"column_start":12,"column_end":16},"name":"next","qualname":"<EntriesTreeIter>::next","value":"pub fn next<'me>(&'me mut Self) -> Result<Option<EntriesTreeNode>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EntriesTreeNode` for the next child entry.","sig":null,"attributes":[{"value":"/ Returns an `EntriesTreeNode` for the next child entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1021270,"byte_end":1021328,"line_start":3047,"line_end":3047,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1021333,"byte_end":1021336,"line_start":3048,"line_end":3048,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there are no more children.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1021341,"byte_end":1021390,"line_start":3049,"line_end":3049,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022319,"byte_end":1022329,"line_start":3076,"line_end":3076,"column_start":12,"column_end":22},"name":"DebugTypes","qualname":"::read::unit::DebugTypes","value":"DebugTypes {  }","parent":null,"children":[{"krate":0,"index":8818}],"decl_id":null,"docs":" The `DebugTypes` struct represents the DWARF type information\n found in the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `DebugTypes` struct represents the DWARF type information","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022162,"byte_end":1022227,"line_start":3073,"line_end":3073,"column_start":1,"column_end":66}},{"value":"/ found in the `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022228,"byte_end":1022268,"line_start":3074,"line_end":3074,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023062,"byte_end":1023065,"line_start":3098,"line_end":3098,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugTypes<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugTypes` instance from the data in the `.debug_types`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugTypes` instance from the data in the `.debug_types`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022462,"byte_end":1022539,"line_start":3084,"line_end":3084,"column_start":5,"column_end":82}},{"value":"/ section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022544,"byte_end":1022556,"line_start":3085,"line_end":3085,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022561,"byte_end":1022564,"line_start":3086,"line_end":3086,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_types` section and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022569,"byte_end":1022645,"line_start":3087,"line_end":3087,"column_start":5,"column_end":81}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022650,"byte_end":1022720,"line_start":3088,"line_end":3088,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on macOS, etc.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022725,"byte_end":1022766,"line_start":3089,"line_end":3089,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022771,"byte_end":1022774,"line_start":3090,"line_end":3090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022779,"byte_end":1022786,"line_start":3091,"line_end":3091,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022791,"byte_end":1022833,"line_start":3092,"line_end":3092,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022838,"byte_end":1022841,"line_start":3093,"line_end":3093,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022846,"byte_end":1022887,"line_start":3094,"line_end":3094,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_types_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022892,"byte_end":1022945,"line_start":3095,"line_end":3095,"column_start":5,"column_end":58}},{"value":"/ let debug_types = DebugTypes::new(read_debug_types_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022950,"byte_end":1023038,"line_start":3096,"line_end":3096,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023043,"byte_end":1023050,"line_start":3097,"line_end":3097,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023862,"byte_end":1023868,"line_start":3119,"line_end":3119,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugTypes<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugTypes<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugTypes` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugTypes` section that references the data in `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023230,"byte_end":1023299,"line_start":3104,"line_end":3104,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023304,"byte_end":1023307,"line_start":3105,"line_end":3105,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023312,"byte_end":1023377,"line_start":3106,"line_end":3106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023382,"byte_end":1023385,"line_start":3107,"line_end":3107,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023390,"byte_end":1023410,"line_start":3108,"line_end":3108,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023415,"byte_end":1023418,"line_start":3109,"line_end":3109,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023423,"byte_end":1023441,"line_start":3110,"line_end":3110,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023446,"byte_end":1023491,"line_start":3111,"line_end":3111,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023496,"byte_end":1023580,"line_start":3112,"line_end":3112,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugTypes<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023585,"byte_end":1023652,"line_start":3113,"line_end":3113,"column_start":5,"column_end":72}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023657,"byte_end":1023704,"line_start":3114,"line_end":3114,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023709,"byte_end":1023759,"line_start":3115,"line_end":3115,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023764,"byte_end":1023826,"line_start":3116,"line_end":3116,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023831,"byte_end":1023838,"line_start":3117,"line_end":3117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023843,"byte_end":1023850,"line_start":3118,"line_end":3118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025009,"byte_end":1025014,"line_start":3163,"line_end":3163,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugTypes<R>>::units","value":"pub fn units(&Self) -> DebugTypesUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-units in this `.debug_types` section.","sig":null,"attributes":[{"value":"/ Iterate the type-units in this `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024391,"byte_end":1024449,"line_start":3146,"line_end":3146,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024454,"byte_end":1024457,"line_start":3147,"line_end":3147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024462,"byte_end":1024469,"line_start":3148,"line_end":3148,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024474,"byte_end":1024516,"line_start":3149,"line_end":3149,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024521,"byte_end":1024524,"line_start":3150,"line_end":3150,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024529,"byte_end":1024548,"line_start":3151,"line_end":3151,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_types_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024553,"byte_end":1024606,"line_start":3152,"line_end":3152,"column_start":5,"column_end":58}},{"value":"/ let debug_types = DebugTypes::new(read_debug_types_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024611,"byte_end":1024699,"line_start":3153,"line_end":3153,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024704,"byte_end":1024707,"line_start":3154,"line_end":3154,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_types.units();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024712,"byte_end":1024751,"line_start":3155,"line_end":3155,"column_start":5,"column_end":44}},{"value":"/ while let Some(unit) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024756,"byte_end":1024805,"line_start":3156,"line_end":3156,"column_start":5,"column_end":54}},{"value":"/     println!(\"unit's length is {}\", unit.unit_length());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024810,"byte_end":1024870,"line_start":3157,"line_end":3157,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024875,"byte_end":1024880,"line_start":3158,"line_end":3158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024885,"byte_end":1024892,"line_start":3159,"line_end":3159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024897,"byte_end":1024900,"line_start":3160,"line_end":3160,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024905,"byte_end":1024926,"line_start":3161,"line_end":3161,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024931,"byte_end":1024997,"line_start":3162,"line_end":3162,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025447,"byte_end":1025472,"line_start":3177,"line_end":3177,"column_start":12,"column_end":37},"name":"DebugTypesUnitHeadersIter","qualname":"::read::unit::DebugTypesUnitHeadersIter","value":"DebugTypesUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":8832},{"krate":0,"index":8833}],"decl_id":null,"docs":" An iterator over the type-units of this `.debug_types` section.","sig":null,"attributes":[{"value":"/ An iterator over the type-units of this `.debug_types` section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025225,"byte_end":1025292,"line_start":3171,"line_end":3171,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025293,"byte_end":1025296,"line_start":3172,"line_end":3172,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025297,"byte_end":1025326,"line_start":3173,"line_end":3173,"column_start":1,"column_end":30}},{"value":"/ `DebugTypes::units`](./struct.DebugTypes.html#method.units) for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025327,"byte_end":1025394,"line_start":3174,"line_end":3174,"column_start":1,"column_end":68}},{"value":"/ more detail.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025395,"byte_end":1025411,"line_start":3175,"line_end":3175,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025661,"byte_end":1025665,"line_start":3184,"line_end":3184,"column_start":12,"column_end":16},"name":"next","qualname":"<DebugTypesUnitHeadersIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<UnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next type unit header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next type unit header.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025595,"byte_end":1025649,"line_start":3183,"line_end":3183,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8841},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134619,"byte_end":1134626,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::ValueType::Generic","value":"ValueType::Generic","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" The generic type, which is address-sized and of unspecified sign,\n as specified in the DWARF 5 standard, section 2.5.1.\n This type is also used to represent address base types.\n","sig":null,"attributes":[{"value":"/ The generic type, which is address-sized and of unspecified sign,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134420,"byte_end":1134489,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ as specified in the DWARF 5 standard, section 2.5.1.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134494,"byte_end":1134550,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"/ This type is also used to represent address base types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134555,"byte_end":1134614,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8843},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134667,"byte_end":1134669,"line_start":32,"line_end":32,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::ValueType::I8","value":"ValueType::I8","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Signed 8-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 8-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134632,"byte_end":1134662,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8845},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134712,"byte_end":1134714,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::ValueType::U8","value":"ValueType::U8","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Unsigned 8-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 8-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134675,"byte_end":1134707,"line_start":33,"line_end":33,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8847},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134756,"byte_end":1134759,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::ValueType::I16","value":"ValueType::I16","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Signed 16-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 16-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134720,"byte_end":1134751,"line_start":35,"line_end":35,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8849},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134803,"byte_end":1134806,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::ValueType::U16","value":"ValueType::U16","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Unsigned 16-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 16-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134765,"byte_end":1134798,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8851},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134848,"byte_end":1134851,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Signed 32-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 32-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134812,"byte_end":1134843,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8853},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134895,"byte_end":1134898,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::ValueType::U32","value":"ValueType::U32","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Unsigned 32-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 32-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134857,"byte_end":1134890,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8855},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134940,"byte_end":1134943,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Signed 64-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 64-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134904,"byte_end":1134935,"line_start":43,"line_end":43,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8857},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134987,"byte_end":1134990,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::ValueType::U64","value":"ValueType::U64","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" Unsigned 64-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 64-bit integer type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134949,"byte_end":1134982,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135032,"byte_end":1135035,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" 32-bit floating point type.\n","sig":null,"attributes":[{"value":"/ 32-bit floating point type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134996,"byte_end":1135027,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8861},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135077,"byte_end":1135080,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":" 64-bit floating point type.\n","sig":null,"attributes":[{"value":"/ 64-bit floating point type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135041,"byte_end":1135072,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":8840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134404,"byte_end":1134413,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::read::value::ValueType","value":"pub enum ValueType {\n    Generic,\n    I8,\n    U8,\n    I16,\n    U16,\n    I32,\n    U32,\n    I64,\n    U64,\n    F32,\n    F64,\n}","parent":null,"children":[{"krate":0,"index":8841},{"krate":0,"index":8843},{"krate":0,"index":8845},{"krate":0,"index":8847},{"krate":0,"index":8849},{"krate":0,"index":8851},{"krate":0,"index":8853},{"krate":0,"index":8855},{"krate":0,"index":8857},{"krate":0,"index":8859},{"krate":0,"index":8861}],"decl_id":null,"docs":" The type of an entry on the DWARF stack.\n","sig":null,"attributes":[{"value":"/ The type of an entry on the DWARF stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1134305,"byte_end":1134349,"line_start":24,"line_end":24,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8875},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135266,"byte_end":1135273,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::Value::Generic","value":"Value::Generic(u64)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A generic value, which is address-sized and of unspecified sign.\n","sig":null,"attributes":[{"value":"/ A generic value, which is address-sized and of unspecified sign.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135193,"byte_end":1135261,"line_start":56,"line_end":56,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8878},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135322,"byte_end":1135324,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::Value::I8","value":"Value::I8(i8)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A signed 8-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 8-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135284,"byte_end":1135317,"line_start":58,"line_end":58,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8881},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135375,"byte_end":1135377,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::Value::U8","value":"Value::U8(u8)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" An unsigned 8-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 8-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135334,"byte_end":1135370,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135426,"byte_end":1135429,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::Value::I16","value":"Value::I16(i16)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A signed 16-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 16-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135387,"byte_end":1135421,"line_start":62,"line_end":62,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8887},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135482,"byte_end":1135485,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::Value::U16","value":"Value::U16(u16)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" An unsigned 16-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 16-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135440,"byte_end":1135477,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135535,"byte_end":1135538,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::Value::I32","value":"Value::I32(i32)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A signed 32-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 32-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135496,"byte_end":1135530,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8893},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135591,"byte_end":1135594,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::Value::U32","value":"Value::U32(u32)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" An unsigned 32-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 32-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135549,"byte_end":1135586,"line_start":68,"line_end":68,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8896},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135644,"byte_end":1135647,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::Value::I64","value":"Value::I64(i64)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 64-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135605,"byte_end":1135639,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8899},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135700,"byte_end":1135703,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::Value::U64","value":"Value::U64(u64)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" An unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 64-bit integer value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135658,"byte_end":1135695,"line_start":72,"line_end":72,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8902},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135753,"byte_end":1135756,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::Value::F32","value":"Value::F32(f32)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A 32-bit floating point value.\n","sig":null,"attributes":[{"value":"/ A 32-bit floating point value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135714,"byte_end":1135748,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8905},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135806,"byte_end":1135809,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::Value::F64","value":"Value::F64(f64)","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":" A 64-bit floating point value.\n","sig":null,"attributes":[{"value":"/ A 64-bit floating point value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135767,"byte_end":1135801,"line_start":76,"line_end":76,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":8874},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135181,"byte_end":1135186,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Value","qualname":"::read::value::Value","value":"pub enum Value {\n    Generic(u64),\n    I8(i8),\n    U8(u8),\n    I16(i16),\n    U16(u16),\n    I32(i32),\n    U32(u32),\n    I64(i64),\n    U64(u64),\n    F32(f32),\n    F64(f64),\n}","parent":null,"children":[{"krate":0,"index":8875},{"krate":0,"index":8878},{"krate":0,"index":8881},{"krate":0,"index":8884},{"krate":0,"index":8887},{"krate":0,"index":8890},{"krate":0,"index":8893},{"krate":0,"index":8896},{"krate":0,"index":8899},{"krate":0,"index":8902},{"krate":0,"index":8905}],"decl_id":null,"docs":" The value of an entry on the DWARF stack.\n","sig":null,"attributes":[{"value":"/ The value of an entry on the DWARF stack.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135085,"byte_end":1135130,"line_start":53,"line_end":53,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135898,"byte_end":1135906,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"bit_size","qualname":"<ValueType>::bit_size","value":"pub fn bit_size(Self, u64) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size in bits of a value for this type.\n","sig":null,"attributes":[{"value":"/ The size in bits of a value for this type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135840,"byte_end":1135886,"line_start":81,"line_end":81,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1136354,"byte_end":1136367,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"from_encoding","qualname":"<ValueType>::from_encoding","value":"pub fn from_encoding(constants::DwAte, u64) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from the attributes of a base type DIE.\n","sig":null,"attributes":[{"value":"/ Construct a `ValueType` from the attributes of a base type DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1136275,"byte_end":1136342,"line_start":92,"line_end":92,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1137234,"byte_end":1137244,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"from_entry","qualname":"<ValueType>::from_entry","value":"pub fn from_entry<R: Reader>(&DebuggingInformationEntry<, , R>)\n-> Result<Option<ValueType>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from a base type DIE.\n","sig":null,"attributes":[{"value":"/ Construct a `ValueType` from a base type DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1137144,"byte_end":1137193,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1137198,"byte_end":1137222,"line_start":110,"line_end":110,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1138719,"byte_end":1138729,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"value_type","qualname":"<Value>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Return the `ValueType` corresponding to this `Value`.\n","sig":null,"attributes":[{"value":"/ Return the `ValueType` corresponding to this `Value`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1138650,"byte_end":1138707,"line_start":153,"line_end":153,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1139369,"byte_end":1139374,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"parse","qualname":"<Value>::parse","value":"pub fn parse<R: Reader>(ValueType, R) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Read a `Value` with the given `value_type` from a `Reader`.\n","sig":null,"attributes":[{"value":"/ Read a `Value` with the given `value_type` from a `Reader`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1139294,"byte_end":1139357,"line_start":170,"line_end":170,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1140356,"byte_end":1140362,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Value>::to_u64","value":"pub fn to_u64(Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to a `u64`.","sig":null,"attributes":[{"value":"/ Convert a `Value` to a `u64`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1140187,"byte_end":1140220,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1140225,"byte_end":1140228,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The `ValueType` of `self` must be integral.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1140233,"byte_end":1140280,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/ Values are sign extended if the source value is signed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1140285,"byte_end":1140344,"line_start":191,"line_end":191,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1141227,"byte_end":1141235,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Value>::from_u64","value":"pub fn from_u64(ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Value` with the given `value_type` from a `u64` value.","sig":null,"attributes":[{"value":"/ Create a `Value` with the given `value_type` from a `u64` value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1140975,"byte_end":1141043,"line_start":208,"line_end":208,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1141048,"byte_end":1141051,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The `value_type` may be integral or floating point.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1141056,"byte_end":1141111,"line_start":210,"line_end":210,"column_start":5,"column_end":60}},{"value":"/ The result is truncated if the `u64` value does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1141116,"byte_end":1141167,"line_start":211,"line_end":211,"column_start":5,"column_end":56}},{"value":"/ not fit the bounds of the `value_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1141172,"byte_end":1141215,"line_start":212,"line_end":212,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144419,"byte_end":1144426,"line_start":282,"line_end":282,"column_start":12,"column_end":19},"name":"convert","qualname":"<Value>::convert","value":"pub fn convert(Self, ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to the given `value_type`.","sig":null,"attributes":[{"value":"/ Convert a `Value` to the given `value_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1143983,"byte_end":1144031,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144036,"byte_end":1144039,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ When converting between integral types, the result is truncated","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144044,"byte_end":1144111,"line_start":276,"line_end":276,"column_start":5,"column_end":72}},{"value":"/ if the source value does not fit the bounds of the `value_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144116,"byte_end":1144184,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ When converting from floating point types, the result is not defined","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144189,"byte_end":1144261,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/ if the source value does not fit the bounds of the `value_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144266,"byte_end":1144334,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144339,"byte_end":1144342,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_convert` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144347,"byte_end":1144407,"line_start":281,"line_end":281,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144968,"byte_end":1144979,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"reinterpret","qualname":"<Value>::reinterpret","value":"pub fn reinterpret(Self, ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Reinterpret the bits in a `Value` as the given `value_type`.","sig":null,"attributes":[{"value":"/ Reinterpret the bits in a `Value` as the given `value_type`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144742,"byte_end":1144806,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144811,"byte_end":1144814,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The source and result value types must have equal sizes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144819,"byte_end":1144879,"line_start":292,"line_end":292,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144884,"byte_end":1144887,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_reinterpret` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1144892,"byte_end":1144956,"line_start":294,"line_end":294,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1146677,"byte_end":1146680,"line_start":333,"line_end":333,"column_start":12,"column_end":15},"name":"abs","qualname":"<Value>::abs","value":"pub fn abs(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an absolute value operation.","sig":null,"attributes":[{"value":"/ Perform an absolute value operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1146466,"byte_end":1146506,"line_start":328,"line_end":328,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1146511,"byte_end":1146514,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1146519,"byte_end":1146596,"line_start":330,"line_end":330,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1146601,"byte_end":1146604,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_abs` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1146609,"byte_end":1146665,"line_start":332,"line_end":332,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1147845,"byte_end":1147848,"line_start":357,"line_end":357,"column_start":12,"column_end":15},"name":"neg","qualname":"<Value>::neg","value":"pub fn neg(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a negation operation.","sig":null,"attributes":[{"value":"/ Perform a negation operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1147641,"byte_end":1147674,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1147679,"byte_end":1147682,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1147687,"byte_end":1147764,"line_start":354,"line_end":354,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1147769,"byte_end":1147772,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_neg` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1147777,"byte_end":1147833,"line_start":356,"line_end":356,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1149056,"byte_end":1149059,"line_start":384,"line_end":384,"column_start":12,"column_end":15},"name":"add","qualname":"<Value>::add","value":"pub fn add(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an addition operation.","sig":null,"attributes":[{"value":"/ Perform an addition operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1148884,"byte_end":1148918,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1148923,"byte_end":1148926,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1148931,"byte_end":1148974,"line_start":381,"line_end":381,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1148979,"byte_end":1148982,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_plus` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1148987,"byte_end":1149044,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1150334,"byte_end":1150337,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"sub","qualname":"<Value>::sub","value":"pub fn sub(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a subtraction operation.","sig":null,"attributes":[{"value":"/ Perform a subtraction operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1150159,"byte_end":1150195,"line_start":404,"line_end":404,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1150200,"byte_end":1150203,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1150208,"byte_end":1150251,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1150256,"byte_end":1150259,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_minus` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1150264,"byte_end":1150322,"line_start":408,"line_end":408,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1151613,"byte_end":1151616,"line_start":434,"line_end":434,"column_start":12,"column_end":15},"name":"mul","qualname":"<Value>::mul","value":"pub fn mul(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a multiplication operation.","sig":null,"attributes":[{"value":"/ Perform a multiplication operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1151437,"byte_end":1151476,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1151481,"byte_end":1151484,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1151489,"byte_end":1151532,"line_start":431,"line_end":431,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1151537,"byte_end":1151540,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_mul` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1151545,"byte_end":1151601,"line_start":433,"line_end":433,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152968,"byte_end":1152971,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"div","qualname":"<Value>::div","value":"pub fn div(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a division operation.","sig":null,"attributes":[{"value":"/ Perform a division operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152716,"byte_end":1152749,"line_start":454,"line_end":454,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152754,"byte_end":1152757,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152762,"byte_end":1152805,"line_start":456,"line_end":456,"column_start":5,"column_end":48}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152810,"byte_end":1152887,"line_start":457,"line_end":457,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152892,"byte_end":1152895,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_div` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1152900,"byte_end":1152956,"line_start":459,"line_end":459,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154929,"byte_end":1154932,"line_start":505,"line_end":505,"column_start":12,"column_end":15},"name":"rem","qualname":"<Value>::rem","value":"pub fn rem(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a remainder operation.","sig":null,"attributes":[{"value":"/ Perform a remainder operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154664,"byte_end":1154698,"line_start":499,"line_end":499,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154703,"byte_end":1154706,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154711,"byte_end":1154763,"line_start":501,"line_end":501,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as an unsigned value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154768,"byte_end":1154848,"line_start":502,"line_end":502,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154853,"byte_end":1154856,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_mod` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1154861,"byte_end":1154917,"line_start":504,"line_end":504,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156768,"byte_end":1156771,"line_start":547,"line_end":547,"column_start":12,"column_end":15},"name":"not","qualname":"<Value>::not","value":"pub fn not(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise not operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise not operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156586,"byte_end":1156622,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156627,"byte_end":1156630,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156635,"byte_end":1156687,"line_start":544,"line_end":544,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156692,"byte_end":1156695,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_not` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156700,"byte_end":1156756,"line_start":546,"line_end":546,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157131,"byte_end":1157134,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"and","qualname":"<Value>::and","value":"pub fn and(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise and operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise and operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156949,"byte_end":1156985,"line_start":553,"line_end":553,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156990,"byte_end":1156993,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1156998,"byte_end":1157050,"line_start":555,"line_end":555,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157055,"byte_end":1157058,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_and` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157063,"byte_end":1157119,"line_start":557,"line_end":557,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157650,"byte_end":1157652,"line_start":573,"line_end":573,"column_start":12,"column_end":14},"name":"or","qualname":"<Value>::or","value":"pub fn or(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise or operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise or operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157470,"byte_end":1157505,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157510,"byte_end":1157513,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157518,"byte_end":1157570,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157575,"byte_end":1157578,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_or` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157583,"byte_end":1157638,"line_start":572,"line_end":572,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1158179,"byte_end":1158182,"line_start":588,"line_end":588,"column_start":12,"column_end":15},"name":"xor","qualname":"<Value>::xor","value":"pub fn xor(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise exclusive-or operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise exclusive-or operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1157988,"byte_end":1158033,"line_start":583,"line_end":583,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1158038,"byte_end":1158041,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1158046,"byte_end":1158098,"line_start":585,"line_end":585,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1158103,"byte_end":1158106,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_xor` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1158111,"byte_end":1158167,"line_start":587,"line_end":587,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159615,"byte_end":1159618,"line_start":624,"line_end":624,"column_start":12,"column_end":15},"name":"shl","qualname":"<Value>::shl","value":"pub fn shl(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a shift left operation.","sig":null,"attributes":[{"value":"/ Perform a shift left operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159305,"byte_end":1159340,"line_start":617,"line_end":617,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159345,"byte_end":1159348,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This operation requires integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159353,"byte_end":1159396,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/ If the shift length exceeds the type size, then 0 is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159401,"byte_end":1159467,"line_start":620,"line_end":620,"column_start":5,"column_end":71}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159472,"byte_end":1159534,"line_start":621,"line_end":621,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159539,"byte_end":1159542,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shl` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1159547,"byte_end":1159603,"line_start":623,"line_end":623,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1161165,"byte_end":1161168,"line_start":655,"line_end":655,"column_start":12,"column_end":15},"name":"shr","qualname":"<Value>::shr","value":"pub fn shr(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a logical shift right operation.","sig":null,"attributes":[{"value":"/ Perform a logical shift right operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160657,"byte_end":1160701,"line_start":645,"line_end":645,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160706,"byte_end":1160709,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This operation requires an unsigned integral type for the value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160714,"byte_end":1160782,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/ If the value type is `Generic`, then it is interpreted as an unsigned value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160787,"byte_end":1160867,"line_start":648,"line_end":648,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160872,"byte_end":1160875,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This operation requires an integral type for the shift length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160880,"byte_end":1160946,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ If the shift length exceeds the type size, then 0 is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1160951,"byte_end":1161017,"line_start":651,"line_end":651,"column_start":5,"column_end":71}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1161022,"byte_end":1161084,"line_start":652,"line_end":652,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1161089,"byte_end":1161092,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shr` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1161097,"byte_end":1161153,"line_start":654,"line_end":654,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162761,"byte_end":1162765,"line_start":688,"line_end":688,"column_start":12,"column_end":16},"name":"shra","qualname":"<Value>::shra","value":"pub fn shra(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an arithmetic shift right operation.","sig":null,"attributes":[{"value":"/ Perform an arithmetic shift right operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162186,"byte_end":1162234,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162239,"byte_end":1162242,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This operation requires a signed integral type for the value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162247,"byte_end":1162312,"line_start":679,"line_end":679,"column_start":5,"column_end":70}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162317,"byte_end":1162394,"line_start":680,"line_end":680,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162399,"byte_end":1162402,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This operation requires an integral type for the shift length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162407,"byte_end":1162473,"line_start":682,"line_end":682,"column_start":5,"column_end":71}},{"value":"/ If the shift length exceeds the type size, then 0 is returned for positive values,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162478,"byte_end":1162564,"line_start":683,"line_end":683,"column_start":5,"column_end":91}},{"value":"/ and -1 is returned for negative values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162569,"byte_end":1162612,"line_start":684,"line_end":684,"column_start":5,"column_end":48}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162617,"byte_end":1162679,"line_start":685,"line_end":685,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162684,"byte_end":1162687,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shra` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1162692,"byte_end":1162749,"line_start":687,"line_end":687,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164911,"byte_end":1164913,"line_start":756,"line_end":756,"column_start":12,"column_end":14},"name":"eq","qualname":"<Value>::eq","value":"pub fn eq(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `==` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `==` relational operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164642,"byte_end":1164684,"line_start":750,"line_end":750,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164689,"byte_end":1164692,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164697,"byte_end":1164749,"line_start":752,"line_end":752,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164754,"byte_end":1164831,"line_start":753,"line_end":753,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164836,"byte_end":1164839,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_eq` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1164844,"byte_end":1164899,"line_start":755,"line_end":755,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1166110,"byte_end":1166112,"line_start":782,"line_end":782,"column_start":12,"column_end":14},"name":"ge","qualname":"<Value>::ge","value":"pub fn ge(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>=` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `>=` relational operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1165841,"byte_end":1165883,"line_start":776,"line_end":776,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1165888,"byte_end":1165891,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1165896,"byte_end":1165948,"line_start":778,"line_end":778,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1165953,"byte_end":1166030,"line_start":779,"line_end":779,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1166035,"byte_end":1166038,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_ge` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1166043,"byte_end":1166098,"line_start":781,"line_end":781,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167308,"byte_end":1167310,"line_start":808,"line_end":808,"column_start":12,"column_end":14},"name":"gt","qualname":"<Value>::gt","value":"pub fn gt(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `>` relational operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167040,"byte_end":1167081,"line_start":802,"line_end":802,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167086,"byte_end":1167089,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167094,"byte_end":1167146,"line_start":804,"line_end":804,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167151,"byte_end":1167228,"line_start":805,"line_end":805,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167233,"byte_end":1167236,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_gt` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1167241,"byte_end":1167296,"line_start":807,"line_end":807,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168495,"byte_end":1168497,"line_start":834,"line_end":834,"column_start":12,"column_end":14},"name":"le","qualname":"<Value>::le","value":"pub fn le(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `<= relational operation.","sig":null,"attributes":[{"value":"/ Perform the `<= relational operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168227,"byte_end":1168268,"line_start":828,"line_end":828,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168273,"byte_end":1168276,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168281,"byte_end":1168333,"line_start":830,"line_end":830,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168338,"byte_end":1168415,"line_start":831,"line_end":831,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168420,"byte_end":1168423,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_le` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1168428,"byte_end":1168483,"line_start":833,"line_end":833,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169692,"byte_end":1169694,"line_start":860,"line_end":860,"column_start":12,"column_end":14},"name":"lt","qualname":"<Value>::lt","value":"pub fn lt(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `< relational operation.","sig":null,"attributes":[{"value":"/ Perform the `< relational operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169425,"byte_end":1169465,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169470,"byte_end":1169473,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169478,"byte_end":1169530,"line_start":856,"line_end":856,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169535,"byte_end":1169612,"line_start":857,"line_end":857,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169617,"byte_end":1169620,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_lt` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1169625,"byte_end":1169680,"line_start":859,"line_end":859,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170879,"byte_end":1170881,"line_start":886,"line_end":886,"column_start":12,"column_end":14},"name":"ne","qualname":"<Value>::ne","value":"pub fn ne(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `!= relational operation.","sig":null,"attributes":[{"value":"/ Perform the `!= relational operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170611,"byte_end":1170652,"line_start":880,"line_end":880,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170657,"byte_end":1170660,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170665,"byte_end":1170717,"line_start":882,"line_end":882,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170722,"byte_end":1170799,"line_start":883,"line_end":883,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170804,"byte_end":1170807,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_ne` operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1170812,"byte_end":1170867,"line_start":885,"line_end":885,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8917},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102061,"byte_end":102072,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"StoreOnHeap","qualname":"::read::StoreOnHeap","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that storage should be allocated on heap.\n","sig":null,"attributes":[{"value":"/ Indicates that storage should be allocated on heap.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":101949,"byte_end":102004,"line_start":260,"line_end":260,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102298,"byte_end":102307,"line_start":267,"line_end":267,"column_start":10,"column_end":19},"name":"EndianBuf","qualname":"::read::EndianBuf","value":"EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across\n `gimli` versions, we export this type alias.\n","sig":null,"attributes":[{"value":"/ `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102075,"byte_end":102154,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"/ `gimli` versions, we export this type alias.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102155,"byte_end":102203,"line_start":265,"line_end":265,"column_start":1,"column_end":49}},{"value":"deprecated(note =\n\"EndianBuf has been renamed to EndianSlice, use that instead.\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102204,"byte_end":102288,"line_start":266,"line_end":266,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8931},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102508,"byte_end":102510,"line_start":273,"line_end":273,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::Error::Io","value":"Error::Io","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An I/O error occurred while reading.\n","sig":null,"attributes":[{"value":"/ An I/O error occurred while reading.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102463,"byte_end":102503,"line_start":272,"line_end":272,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8933},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102588,"byte_end":102630,"line_start":275,"line_end":275,"column_start":5,"column_end":47},"name":"PcRelativePointerButSectionBaseIsUndefined","qualname":"::read::Error::PcRelativePointerButSectionBaseIsUndefined","value":"Error::PcRelativePointerButSectionBaseIsUndefined","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found a PC relative pointer, but the section base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a PC relative pointer, but the section base is undefined.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102516,"byte_end":102583,"line_start":274,"line_end":274,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8935},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102713,"byte_end":102754,"line_start":277,"line_end":277,"column_start":5,"column_end":46},"name":"TextRelativePointerButTextBaseIsUndefined","qualname":"::read::Error::TextRelativePointerButTextBaseIsUndefined","value":"Error::TextRelativePointerButTextBaseIsUndefined","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found a `.text` relative pointer, but the `.text` base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a `.text` relative pointer, but the `.text` base is undefined.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102636,"byte_end":102708,"line_start":276,"line_end":276,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8937},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102831,"byte_end":102872,"line_start":279,"line_end":279,"column_start":5,"column_end":46},"name":"DataRelativePointerButDataBaseIsUndefined","qualname":"::read::Error::DataRelativePointerButDataBaseIsUndefined","value":"Error::DataRelativePointerButDataBaseIsUndefined","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found a data relative pointer, but the data base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a data relative pointer, but the data base is undefined.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102760,"byte_end":102826,"line_start":278,"line_end":278,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8939},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102977,"byte_end":103008,"line_start":282,"line_end":282,"column_start":5,"column_end":36},"name":"FuncRelativePointerInBadContext","qualname":"::read::Error::FuncRelativePointerInBadContext","value":"Error::FuncRelativePointerInBadContext","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found a function relative pointer in a context that does not have a\n function base.\n","sig":null,"attributes":[{"value":"/ Found a function relative pointer in a context that does not have a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102878,"byte_end":102949,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/ function base.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102954,"byte_end":102972,"line_start":281,"line_end":281,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8941},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103078,"byte_end":103108,"line_start":284,"line_end":284,"column_start":5,"column_end":35},"name":"CannotParseOmitPointerEncoding","qualname":"::read::Error::CannotParseOmitPointerEncoding","value":"Error::CannotParseOmitPointerEncoding","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Cannot parse a pointer with a `DW_EH_PE_omit` encoding.\n","sig":null,"attributes":[{"value":"/ Cannot parse a pointer with a `DW_EH_PE_omit` encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103014,"byte_end":103073,"line_start":283,"line_end":283,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8943},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103165,"byte_end":103182,"line_start":286,"line_end":286,"column_start":5,"column_end":22},"name":"BadUnsignedLeb128","qualname":"::read::Error::BadUnsignedLeb128","value":"Error::BadUnsignedLeb128","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An error parsing an unsigned LEB128 value.\n","sig":null,"attributes":[{"value":"/ An error parsing an unsigned LEB128 value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103114,"byte_end":103160,"line_start":285,"line_end":285,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8945},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103236,"byte_end":103251,"line_start":288,"line_end":288,"column_start":5,"column_end":20},"name":"BadSignedLeb128","qualname":"::read::Error::BadSignedLeb128","value":"Error::BadSignedLeb128","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An error parsing a signed LEB128 value.\n","sig":null,"attributes":[{"value":"/ An error parsing a signed LEB128 value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103188,"byte_end":103231,"line_start":287,"line_end":287,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8947},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103359,"byte_end":103378,"line_start":291,"line_end":291,"column_start":5,"column_end":24},"name":"AbbreviationTagZero","qualname":"::read::Error::AbbreviationTagZero","value":"Error::AbbreviationTagZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An abbreviation declared that its tag is zero, but zero is reserved for\n null records.\n","sig":null,"attributes":[{"value":"/ An abbreviation declared that its tag is zero, but zero is reserved for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103257,"byte_end":103332,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ null records.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103337,"byte_end":103354,"line_start":290,"line_end":290,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8949},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103498,"byte_end":103515,"line_start":294,"line_end":294,"column_start":5,"column_end":22},"name":"AttributeFormZero","qualname":"::read::Error::AttributeFormZero","value":"Error::AttributeFormZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An attribute specification declared that its form is zero, but zero is\n reserved for null records.\n","sig":null,"attributes":[{"value":"/ An attribute specification declared that its form is zero, but zero is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103384,"byte_end":103458,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ reserved for null records.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103463,"byte_end":103493,"line_start":293,"line_end":293,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8951},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103613,"byte_end":103627,"line_start":297,"line_end":297,"column_start":5,"column_end":19},"name":"BadHasChildren","qualname":"::read::Error::BadHasChildren","value":"Error::BadHasChildren","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The abbreviation's has-children byte was not one of\n `DW_CHILDREN_{yes,no}`.\n","sig":null,"attributes":[{"value":"/ The abbreviation's has-children byte was not one of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103521,"byte_end":103576,"line_start":295,"line_end":295,"column_start":5,"column_end":60}},{"value":"/ `DW_CHILDREN_{yes,no}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103581,"byte_end":103608,"line_start":296,"line_end":296,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8953},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103677,"byte_end":103686,"line_start":299,"line_end":299,"column_start":5,"column_end":14},"name":"BadLength","qualname":"::read::Error::BadLength","value":"Error::BadLength","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The specified length is impossible.\n","sig":null,"attributes":[{"value":"/ The specified length is impossible.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103633,"byte_end":103672,"line_start":298,"line_end":298,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103735,"byte_end":103746,"line_start":301,"line_end":301,"column_start":5,"column_end":16},"name":"UnknownForm","qualname":"::read::Error::UnknownForm","value":"Error::UnknownForm","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an unknown `DW_FORM_*` type.\n","sig":null,"attributes":[{"value":"/ Found an unknown `DW_FORM_*` type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103692,"byte_end":103730,"line_start":300,"line_end":300,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8957},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103799,"byte_end":103811,"line_start":303,"line_end":303,"column_start":5,"column_end":17},"name":"ExpectedZero","qualname":"::read::Error::ExpectedZero","value":"Error::ExpectedZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Expected a zero, found something else.\n","sig":null,"attributes":[{"value":"/ Expected a zero, found something else.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103752,"byte_end":103794,"line_start":302,"line_end":302,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8959},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103880,"byte_end":103905,"line_start":305,"line_end":305,"column_start":5,"column_end":30},"name":"DuplicateAbbreviationCode","qualname":"::read::Error::DuplicateAbbreviationCode","value":"Error::DuplicateAbbreviationCode","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an abbreviation code that has already been used.\n","sig":null,"attributes":[{"value":"/ Found an abbreviation code that has already been used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103817,"byte_end":103875,"line_start":304,"line_end":304,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8961},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103945,"byte_end":103960,"line_start":307,"line_end":307,"column_start":5,"column_end":20},"name":"DuplicateArange","qualname":"::read::Error::DuplicateArange","value":"Error::DuplicateArange","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found a duplicate arange.\n","sig":null,"attributes":[{"value":"/ Found a duplicate arange.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103911,"byte_end":103940,"line_start":306,"line_end":306,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8963},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104014,"byte_end":104035,"line_start":309,"line_end":309,"column_start":5,"column_end":26},"name":"UnknownReservedLength","qualname":"::read::Error::UnknownReservedLength","value":"Error::UnknownReservedLength","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an unknown reserved length value.\n","sig":null,"attributes":[{"value":"/ Found an unknown reserved length value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":103966,"byte_end":104009,"line_start":308,"line_end":308,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8965},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104081,"byte_end":104095,"line_start":311,"line_end":311,"column_start":5,"column_end":19},"name":"UnknownVersion","qualname":"::read::Error::UnknownVersion","value":"Error::UnknownVersion(u64)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an unknown DWARF version.\n","sig":null,"attributes":[{"value":"/ Found an unknown DWARF version.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104041,"byte_end":104076,"line_start":310,"line_end":310,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8968},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104164,"byte_end":104183,"line_start":313,"line_end":313,"column_start":5,"column_end":24},"name":"UnknownAbbreviation","qualname":"::read::Error::UnknownAbbreviation","value":"Error::UnknownAbbreviation","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found a record with an unknown abbreviation code.\n","sig":null,"attributes":[{"value":"/ Found a record with an unknown abbreviation code.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104106,"byte_end":104159,"line_start":312,"line_end":312,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8970},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104242,"byte_end":104255,"line_start":315,"line_end":315,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::read::Error::UnexpectedEof","value":"Error::UnexpectedEof(ReaderOffsetId)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Hit the end of input before it was expected.\n","sig":null,"attributes":[{"value":"/ Hit the end of input before it was expected.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104189,"byte_end":104237,"line_start":314,"line_end":314,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8973},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104327,"byte_end":104341,"line_start":317,"line_end":317,"column_start":5,"column_end":19},"name":"UnexpectedNull","qualname":"::read::Error::UnexpectedNull","value":"Error::UnexpectedNull","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Read a null entry before it was expected.\n","sig":null,"attributes":[{"value":"/ Read a null entry before it was expected.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104277,"byte_end":104322,"line_start":316,"line_end":316,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8975},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104389,"byte_end":104410,"line_start":319,"line_end":319,"column_start":5,"column_end":26},"name":"UnknownStandardOpcode","qualname":"::read::Error::UnknownStandardOpcode","value":"Error::UnknownStandardOpcode(constants::DwLns)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an unknown standard opcode.\n","sig":null,"attributes":[{"value":"/ Found an unknown standard opcode.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104347,"byte_end":104384,"line_start":318,"line_end":318,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8978},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104476,"byte_end":104497,"line_start":321,"line_end":321,"column_start":5,"column_end":26},"name":"UnknownExtendedOpcode","qualname":"::read::Error::UnknownExtendedOpcode","value":"Error::UnknownExtendedOpcode(constants::DwLne)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an unknown extended opcode.\n","sig":null,"attributes":[{"value":"/ Found an unknown extended opcode.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104434,"byte_end":104471,"line_start":320,"line_end":320,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8981},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104574,"byte_end":104596,"line_start":323,"line_end":323,"column_start":5,"column_end":27},"name":"UnsupportedAddressSize","qualname":"::read::Error::UnsupportedAddressSize","value":"Error::UnsupportedAddressSize(u8)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The specified address size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified address size is not supported.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104521,"byte_end":104569,"line_start":322,"line_end":322,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8984},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104658,"byte_end":104679,"line_start":325,"line_end":325,"column_start":5,"column_end":26},"name":"UnsupportedOffsetSize","qualname":"::read::Error::UnsupportedOffsetSize","value":"Error::UnsupportedOffsetSize(u8)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The specified offset size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified offset size is not supported.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104606,"byte_end":104653,"line_start":324,"line_end":324,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8987},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104740,"byte_end":104760,"line_start":327,"line_end":327,"column_start":5,"column_end":25},"name":"UnsupportedFieldSize","qualname":"::read::Error::UnsupportedFieldSize","value":"Error::UnsupportedFieldSize(u8)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The specified field size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified field size is not supported.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104689,"byte_end":104735,"line_start":326,"line_end":326,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8990},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104827,"byte_end":104855,"line_start":329,"line_end":329,"column_start":5,"column_end":33},"name":"MinimumInstructionLengthZero","qualname":"::read::Error::MinimumInstructionLengthZero","value":"Error::MinimumInstructionLengthZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The minimum instruction length must not be zero.\n","sig":null,"attributes":[{"value":"/ The minimum instruction length must not be zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104770,"byte_end":104822,"line_start":328,"line_end":328,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8992},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104926,"byte_end":104961,"line_start":331,"line_end":331,"column_start":5,"column_end":40},"name":"MaximumOperationsPerInstructionZero","qualname":"::read::Error::MaximumOperationsPerInstructionZero","value":"Error::MaximumOperationsPerInstructionZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The maximum operations per instruction must not be zero.\n","sig":null,"attributes":[{"value":"/ The maximum operations per instruction must not be zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104861,"byte_end":104921,"line_start":330,"line_end":330,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8994},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105008,"byte_end":105021,"line_start":333,"line_end":333,"column_start":5,"column_end":18},"name":"LineRangeZero","qualname":"::read::Error::LineRangeZero","value":"Error::LineRangeZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The line range must not be zero.\n","sig":null,"attributes":[{"value":"/ The line range must not be zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":104967,"byte_end":105003,"line_start":332,"line_end":332,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8996},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105069,"byte_end":105083,"line_start":335,"line_end":335,"column_start":5,"column_end":19},"name":"OpcodeBaseZero","qualname":"::read::Error::OpcodeBaseZero","value":"Error::OpcodeBaseZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The opcode base must not be zero.\n","sig":null,"attributes":[{"value":"/ The opcode base must not be zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105027,"byte_end":105064,"line_start":334,"line_end":334,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8998},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105128,"byte_end":105135,"line_start":337,"line_end":337,"column_start":5,"column_end":12},"name":"BadUtf8","qualname":"::read::Error::BadUtf8","value":"Error::BadUtf8","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an invalid UTF-8 string.\n","sig":null,"attributes":[{"value":"/ Found an invalid UTF-8 string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105089,"byte_end":105123,"line_start":336,"line_end":336,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105204,"byte_end":105212,"line_start":339,"line_end":339,"column_start":5,"column_end":13},"name":"NotCieId","qualname":"::read::Error::NotCieId","value":"Error::NotCieId","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Expected to find the CIE ID, but found something else.\n","sig":null,"attributes":[{"value":"/ Expected to find the CIE ID, but found something else.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105141,"byte_end":105199,"line_start":338,"line_end":338,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9002},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105293,"byte_end":105306,"line_start":341,"line_end":341,"column_start":5,"column_end":18},"name":"NotCiePointer","qualname":"::read::Error::NotCiePointer","value":"Error::NotCiePointer","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Expected to find a pointer to a CIE, but found the CIE ID instead.\n","sig":null,"attributes":[{"value":"/ Expected to find a pointer to a CIE, but found the CIE ID instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105218,"byte_end":105288,"line_start":340,"line_end":340,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9004},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105383,"byte_end":105396,"line_start":343,"line_end":343,"column_start":5,"column_end":18},"name":"NotFdePointer","qualname":"::read::Error::NotFdePointer","value":"Error::NotFdePointer","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Expected to find a pointer to an FDE, but found a CIE instead.\n","sig":null,"attributes":[{"value":"/ Expected to find a pointer to an FDE, but found a CIE instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105312,"byte_end":105378,"line_start":342,"line_end":342,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9006},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105463,"byte_end":105478,"line_start":345,"line_end":345,"column_start":5,"column_end":20},"name":"BadBranchTarget","qualname":"::read::Error::BadBranchTarget","value":"Error::BadBranchTarget(u64)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Invalid branch target for a DW_OP_bra or DW_OP_skip.\n","sig":null,"attributes":[{"value":"/ Invalid branch target for a DW_OP_bra or DW_OP_skip.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105402,"byte_end":105458,"line_start":344,"line_end":344,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9009},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105554,"byte_end":105578,"line_start":347,"line_end":347,"column_start":5,"column_end":29},"name":"InvalidPushObjectAddress","qualname":"::read::Error::InvalidPushObjectAddress","value":"Error::InvalidPushObjectAddress","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" DW_OP_push_object_address used but no address passed in.\n","sig":null,"attributes":[{"value":"/ DW_OP_push_object_address used but no address passed in.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105489,"byte_end":105549,"line_start":346,"line_end":346,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9011},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105653,"byte_end":105672,"line_start":349,"line_end":349,"column_start":5,"column_end":24},"name":"NotEnoughStackItems","qualname":"::read::Error::NotEnoughStackItems","value":"Error::NotEnoughStackItems","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Not enough items on the stack when evaluating an expression.\n","sig":null,"attributes":[{"value":"/ Not enough items on the stack when evaluating an expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105584,"byte_end":105648,"line_start":348,"line_end":348,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9013},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105733,"byte_end":105750,"line_start":351,"line_end":351,"column_start":5,"column_end":22},"name":"TooManyIterations","qualname":"::read::Error::TooManyIterations","value":"Error::TooManyIterations","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Too many iterations to compute the expression.\n","sig":null,"attributes":[{"value":"/ Too many iterations to compute the expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105678,"byte_end":105728,"line_start":350,"line_end":350,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9015},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105842,"byte_end":105859,"line_start":354,"line_end":354,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::read::Error::InvalidExpression","value":"Error::InvalidExpression(constants::DwOp)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An unrecognized operation was found while parsing a DWARF\n expression.\n","sig":null,"attributes":[{"value":"/ An unrecognized operation was found while parsing a DWARF","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105756,"byte_end":105817,"line_start":352,"line_end":352,"column_start":5,"column_end":66}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105822,"byte_end":105837,"line_start":353,"line_end":353,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9018},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105962,"byte_end":105983,"line_start":356,"line_end":356,"column_start":5,"column_end":26},"name":"UnsupportedEvaluation","qualname":"::read::Error::UnsupportedEvaluation","value":"Error::UnsupportedEvaluation","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An unsupported operation was found while evaluating a DWARF expression.\n","sig":null,"attributes":[{"value":"/ An unsupported operation was found while evaluating a DWARF expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105882,"byte_end":105957,"line_start":355,"line_end":355,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9020},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106086,"byte_end":106098,"line_start":359,"line_end":359,"column_start":5,"column_end":17},"name":"InvalidPiece","qualname":"::read::Error::InvalidPiece","value":"Error::InvalidPiece","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The expression had a piece followed by an expression\n terminator without a piece.\n","sig":null,"attributes":[{"value":"/ The expression had a piece followed by an expression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":105989,"byte_end":106045,"line_start":357,"line_end":357,"column_start":5,"column_end":61}},{"value":"/ terminator without a piece.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106050,"byte_end":106081,"line_start":358,"line_end":358,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9022},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106241,"byte_end":106268,"line_start":362,"line_end":362,"column_start":5,"column_end":32},"name":"InvalidExpressionTerminator","qualname":"::read::Error::InvalidExpressionTerminator","value":"Error::InvalidExpressionTerminator(u64)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An expression-terminating operation was followed by something\n other than the end of the expression or a piece operation.\n","sig":null,"attributes":[{"value":"/ An expression-terminating operation was followed by something","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106104,"byte_end":106169,"line_start":360,"line_end":360,"column_start":5,"column_end":70}},{"value":"/ other than the end of the expression or a piece operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106174,"byte_end":106236,"line_start":361,"line_end":361,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9025},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106346,"byte_end":106360,"line_start":364,"line_end":364,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::read::Error::DivisionByZero","value":"Error::DivisionByZero","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Division or modulus by zero when evaluating an expression.\n","sig":null,"attributes":[{"value":"/ Division or modulus by zero when evaluating an expression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106279,"byte_end":106341,"line_start":363,"line_end":363,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9027},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106422,"byte_end":106434,"line_start":366,"line_end":366,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::read::Error::TypeMismatch","value":"Error::TypeMismatch","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An expression operation used mismatching types.\n","sig":null,"attributes":[{"value":"/ An expression operation used mismatching types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106366,"byte_end":106417,"line_start":365,"line_end":365,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9029},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106537,"byte_end":106557,"line_start":369,"line_end":369,"column_start":5,"column_end":25},"name":"IntegralTypeRequired","qualname":"::read::Error::IntegralTypeRequired","value":"Error::IntegralTypeRequired","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An expression operation required an integral type but saw a\n floating point type.\n","sig":null,"attributes":[{"value":"/ An expression operation required an integral type but saw a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106440,"byte_end":106503,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/ floating point type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106508,"byte_end":106532,"line_start":368,"line_end":368,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9031},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106630,"byte_end":106654,"line_start":371,"line_end":371,"column_start":5,"column_end":29},"name":"UnsupportedTypeOperation","qualname":"::read::Error::UnsupportedTypeOperation","value":"Error::UnsupportedTypeOperation","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An expression operation used types that are not supported.\n","sig":null,"attributes":[{"value":"/ An expression operation used types that are not supported.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106563,"byte_end":106625,"line_start":370,"line_end":370,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9033},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106733,"byte_end":106755,"line_start":373,"line_end":373,"column_start":5,"column_end":27},"name":"InvalidShiftExpression","qualname":"::read::Error::InvalidShiftExpression","value":"Error::InvalidShiftExpression","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The shift value in an expression must be a non-negative integer.\n","sig":null,"attributes":[{"value":"/ The shift value in an expression must be a non-negative integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106660,"byte_end":106728,"line_start":372,"line_end":372,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9035},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106802,"byte_end":106829,"line_start":375,"line_end":375,"column_start":5,"column_end":32},"name":"UnknownCallFrameInstruction","qualname":"::read::Error::UnknownCallFrameInstruction","value":"Error::UnknownCallFrameInstruction(constants::DwCfa)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An unknown DW_CFA_* instruction.\n","sig":null,"attributes":[{"value":"/ An unknown DW_CFA_* instruction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106761,"byte_end":106797,"line_start":374,"line_end":374,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9038},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106915,"byte_end":106934,"line_start":377,"line_end":377,"column_start":5,"column_end":24},"name":"InvalidAddressRange","qualname":"::read::Error::InvalidAddressRange","value":"Error::InvalidAddressRange","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The end of an address range was before the beginning.\n","sig":null,"attributes":[{"value":"/ The end of an address range was before the beginning.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106853,"byte_end":106910,"line_start":376,"line_end":376,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9040},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107009,"byte_end":107036,"line_start":379,"line_end":379,"column_start":5,"column_end":32},"name":"InvalidLocationAddressRange","qualname":"::read::Error::InvalidLocationAddressRange","value":"Error::InvalidLocationAddressRange","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The end offset of a loc list entry was before the beginning.\n","sig":null,"attributes":[{"value":"/ The end offset of a loc list entry was before the beginning.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":106940,"byte_end":107004,"line_start":378,"line_end":378,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9042},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107134,"byte_end":107164,"line_start":382,"line_end":382,"column_start":5,"column_end":35},"name":"CfiInstructionInInvalidContext","qualname":"::read::Error::CfiInstructionInInvalidContext","value":"Error::CfiInstructionInInvalidContext","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Encountered a call frame instruction in a context in which it is not\n valid.\n","sig":null,"attributes":[{"value":"/ Encountered a call frame instruction in a context in which it is not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107042,"byte_end":107114,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ valid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107119,"byte_end":107129,"line_start":381,"line_end":381,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9044},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107330,"byte_end":107347,"line_start":385,"line_end":385,"column_start":5,"column_end":22},"name":"PopWithEmptyStack","qualname":"::read::Error::PopWithEmptyStack","value":"Error::PopWithEmptyStack","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" When evaluating call frame instructions, found a `DW_CFA_restore_state`\n stack pop instruction, but the stack was empty, and had nothing to pop.\n","sig":null,"attributes":[{"value":"/ When evaluating call frame instructions, found a `DW_CFA_restore_state`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107170,"byte_end":107245,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ stack pop instruction, but the stack was empty, and had nothing to pop.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107250,"byte_end":107325,"line_start":384,"line_end":384,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9046},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107408,"byte_end":107430,"line_start":387,"line_end":387,"column_start":5,"column_end":27},"name":"NoUnwindInfoForAddress","qualname":"::read::Error::NoUnwindInfoForAddress","value":"Error::NoUnwindInfoForAddress","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Do not have unwind info for the given address.\n","sig":null,"attributes":[{"value":"/ Do not have unwind info for the given address.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107353,"byte_end":107403,"line_start":386,"line_end":386,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9048},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107505,"byte_end":107522,"line_start":389,"line_end":389,"column_start":5,"column_end":22},"name":"UnsupportedOffset","qualname":"::read::Error::UnsupportedOffset","value":"Error::UnsupportedOffset","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" An offset value was larger than the maximum supported value.\n","sig":null,"attributes":[{"value":"/ An offset value was larger than the maximum supported value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107436,"byte_end":107500,"line_start":388,"line_end":388,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9050},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107593,"byte_end":107615,"line_start":391,"line_end":391,"column_start":5,"column_end":27},"name":"UnknownPointerEncoding","qualname":"::read::Error::UnknownPointerEncoding","value":"Error::UnknownPointerEncoding","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The given pointer encoding is either unknown or invalid.\n","sig":null,"attributes":[{"value":"/ The given pointer encoding is either unknown or invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107528,"byte_end":107588,"line_start":390,"line_end":390,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9052},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107672,"byte_end":107692,"line_start":393,"line_end":393,"column_start":5,"column_end":25},"name":"NoEntryAtGivenOffset","qualname":"::read::Error::NoEntryAtGivenOffset","value":"Error::NoEntryAtGivenOffset","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Did not find an entry at the given offset.\n","sig":null,"attributes":[{"value":"/ Did not find an entry at the given offset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107621,"byte_end":107667,"line_start":392,"line_end":392,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9054},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107741,"byte_end":107758,"line_start":395,"line_end":395,"column_start":5,"column_end":22},"name":"OffsetOutOfBounds","qualname":"::read::Error::OffsetOutOfBounds","value":"Error::OffsetOutOfBounds","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The given offset is out of bounds.\n","sig":null,"attributes":[{"value":"/ The given offset is out of bounds.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107698,"byte_end":107736,"line_start":394,"line_end":394,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9056},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107807,"byte_end":107826,"line_start":397,"line_end":397,"column_start":5,"column_end":24},"name":"UnknownAugmentation","qualname":"::read::Error::UnknownAugmentation","value":"Error::UnknownAugmentation","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Found an unknown CFI augmentation.\n","sig":null,"attributes":[{"value":"/ Found an unknown CFI augmentation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107764,"byte_end":107802,"line_start":396,"line_end":396,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9058},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107890,"byte_end":107916,"line_start":399,"line_end":399,"column_start":5,"column_end":31},"name":"UnsupportedPointerEncoding","qualname":"::read::Error::UnsupportedPointerEncoding","value":"Error::UnsupportedPointerEncoding","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" We do not support the given pointer encoding yet.\n","sig":null,"attributes":[{"value":"/ We do not support the given pointer encoding yet.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107832,"byte_end":107885,"line_start":398,"line_end":398,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9060},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107977,"byte_end":107996,"line_start":401,"line_end":401,"column_start":5,"column_end":24},"name":"UnsupportedRegister","qualname":"::read::Error::UnsupportedRegister","value":"Error::UnsupportedRegister(u64)","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Registers larger than `u16` are not supported.\n","sig":null,"attributes":[{"value":"/ Registers larger than `u16` are not supported.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":107922,"byte_end":107972,"line_start":400,"line_end":400,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9063},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108085,"byte_end":108105,"line_start":403,"line_end":403,"column_start":5,"column_end":25},"name":"TooManyRegisterRules","qualname":"::read::Error::TooManyRegisterRules","value":"Error::TooManyRegisterRules","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The CFI program defined more register rules than we have storage for.\n","sig":null,"attributes":[{"value":"/ The CFI program defined more register rules than we have storage for.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108007,"byte_end":108080,"line_start":402,"line_end":402,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9065},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108216,"byte_end":108225,"line_start":406,"line_end":406,"column_start":5,"column_end":14},"name":"StackFull","qualname":"::read::Error::StackFull","value":"Error::StackFull","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Attempted to push onto the CFI or evaluation stack, but it was already\n at full capacity.\n","sig":null,"attributes":[{"value":"/ Attempted to push onto the CFI or evaluation stack, but it was already","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108111,"byte_end":108185,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ at full capacity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108190,"byte_end":108211,"line_start":405,"line_end":405,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9067},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108363,"byte_end":108388,"line_start":409,"line_end":409,"column_start":5,"column_end":30},"name":"VariableLengthSearchTable","qualname":"::read::Error::VariableLengthSearchTable","value":"Error::VariableLengthSearchTable","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` binary search table claims to be variable-length encoded,\n which makes binary search impossible.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame_hdr` binary search table claims to be variable-length encoded,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108231,"byte_end":108312,"line_start":407,"line_end":407,"column_start":5,"column_end":86}},{"value":"/ which makes binary search impossible.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108317,"byte_end":108358,"line_start":408,"line_end":408,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9069},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108458,"byte_end":108477,"line_start":411,"line_end":411,"column_start":5,"column_end":24},"name":"UnsupportedUnitType","qualname":"::read::Error::UnsupportedUnitType","value":"Error::UnsupportedUnitType","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" The `DW_UT_*` value for this unit is not supported yet.\n","sig":null,"attributes":[{"value":"/ The `DW_UT_*` value for this unit is not supported yet.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108394,"byte_end":108453,"line_start":410,"line_end":410,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9071},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108540,"byte_end":108563,"line_start":413,"line_end":413,"column_start":5,"column_end":28},"name":"UnsupportedAddressIndex","qualname":"::read::Error::UnsupportedAddressIndex","value":"Error::UnsupportedAddressIndex","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Ranges using AddressIndex are not supported yet.\n","sig":null,"attributes":[{"value":"/ Ranges using AddressIndex are not supported yet.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108483,"byte_end":108535,"line_start":412,"line_end":412,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9073},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108630,"byte_end":108652,"line_start":415,"line_end":415,"column_start":5,"column_end":27},"name":"UnsupportedSegmentSize","qualname":"::read::Error::UnsupportedSegmentSize","value":"Error::UnsupportedSegmentSize","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Nonzero segment selector sizes aren't supported yet.\n","sig":null,"attributes":[{"value":"/ Nonzero segment selector sizes aren't supported yet.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108569,"byte_end":108625,"line_start":414,"line_end":414,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9075},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108728,"byte_end":108742,"line_start":417,"line_end":417,"column_start":5,"column_end":19},"name":"MissingUnitDie","qualname":"::read::Error::MissingUnitDie","value":"Error::MissingUnitDie","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" A compilation unit or type unit is missing its top level DIE.\n","sig":null,"attributes":[{"value":"/ A compilation unit or type unit is missing its top level DIE.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108658,"byte_end":108723,"line_start":416,"line_end":416,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9077},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108798,"byte_end":108822,"line_start":419,"line_end":419,"column_start":5,"column_end":29},"name":"UnsupportedAttributeForm","qualname":"::read::Error::UnsupportedAttributeForm","value":"Error::UnsupportedAttributeForm","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" A DIE attribute used an unsupported form.\n","sig":null,"attributes":[{"value":"/ A DIE attribute used an unsupported form.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108748,"byte_end":108793,"line_start":418,"line_end":418,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9079},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108879,"byte_end":108905,"line_start":421,"line_end":421,"column_start":5,"column_end":31},"name":"MissingFileEntryFormatPath","qualname":"::read::Error::MissingFileEntryFormatPath","value":"Error::MissingFileEntryFormatPath","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Missing DW_LNCT_path in file entry format.\n","sig":null,"attributes":[{"value":"/ Missing DW_LNCT_path in file entry format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108828,"byte_end":108874,"line_start":420,"line_end":420,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9081},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108968,"byte_end":108996,"line_start":423,"line_end":423,"column_start":5,"column_end":33},"name":"ExpectedStringAttributeValue","qualname":"::read::Error::ExpectedStringAttributeValue","value":"Error::ExpectedStringAttributeValue","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Expected an attribute value to be a string form.\n","sig":null,"attributes":[{"value":"/ Expected an attribute value to be a string form.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":108911,"byte_end":108963,"line_start":422,"line_end":422,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9083},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109063,"byte_end":109083,"line_start":425,"line_end":425,"column_start":5,"column_end":25},"name":"InvalidImplicitConst","qualname":"::read::Error::InvalidImplicitConst","value":"Error::InvalidImplicitConst","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" `DW_FORM_implicit_const` used in an invalid context.\n","sig":null,"attributes":[{"value":"/ `DW_FORM_implicit_const` used in an invalid context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109002,"byte_end":109058,"line_start":424,"line_end":424,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9085},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109136,"byte_end":109160,"line_start":427,"line_end":427,"column_start":5,"column_end":29},"name":"InvalidIndexSectionCount","qualname":"::read::Error::InvalidIndexSectionCount","value":"Error::InvalidIndexSectionCount","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Invalid section count in `.dwp` index.\n","sig":null,"attributes":[{"value":"/ Invalid section count in `.dwp` index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109089,"byte_end":109131,"line_start":426,"line_end":426,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9087},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109210,"byte_end":109231,"line_start":429,"line_end":429,"column_start":5,"column_end":26},"name":"InvalidIndexSlotCount","qualname":"::read::Error::InvalidIndexSlotCount","value":"Error::InvalidIndexSlotCount","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Invalid slot count in `.dwp` index.\n","sig":null,"attributes":[{"value":"/ Invalid slot count in `.dwp` index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109166,"byte_end":109205,"line_start":428,"line_end":428,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9089},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109279,"byte_end":109294,"line_start":431,"line_end":431,"column_start":5,"column_end":20},"name":"InvalidIndexRow","qualname":"::read::Error::InvalidIndexRow","value":"Error::InvalidIndexRow","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Invalid hash row in `.dwp` index.\n","sig":null,"attributes":[{"value":"/ Invalid hash row in `.dwp` index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109237,"byte_end":109274,"line_start":430,"line_end":430,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9091},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109346,"byte_end":109365,"line_start":433,"line_end":433,"column_start":5,"column_end":24},"name":"UnknownIndexSection","qualname":"::read::Error::UnknownIndexSection","value":"Error::UnknownIndexSection","parent":{"krate":0,"index":8930},"children":[],"decl_id":null,"docs":" Unknown section type in `.dwp` index.\n","sig":null,"attributes":[{"value":"/ Unknown section type in `.dwp` index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109300,"byte_end":109341,"line_start":432,"line_end":432,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":8930},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102451,"byte_end":102456,"line_start":271,"line_end":271,"column_start":10,"column_end":15},"name":"Error","qualname":"::read::Error","value":"pub enum Error {\n    Io,\n    PcRelativePointerButSectionBaseIsUndefined,\n    TextRelativePointerButTextBaseIsUndefined,\n    DataRelativePointerButDataBaseIsUndefined,\n    FuncRelativePointerInBadContext,\n    CannotParseOmitPointerEncoding,\n    BadUnsignedLeb128,\n    BadSignedLeb128,\n    AbbreviationTagZero,\n    AttributeFormZero,\n    BadHasChildren,\n    BadLength,\n    UnknownForm,\n    ExpectedZero,\n    DuplicateAbbreviationCode,\n    DuplicateArange,\n    UnknownReservedLength,\n    UnknownVersion(u64),\n    UnknownAbbreviation,\n    UnexpectedEof(ReaderOffsetId),\n    UnexpectedNull,\n    UnknownStandardOpcode(constants::DwLns),\n    UnknownExtendedOpcode(constants::DwLne),\n    UnsupportedAddressSize(u8),\n    UnsupportedOffsetSize(u8),\n    UnsupportedFieldSize(u8),\n    MinimumInstructionLengthZero,\n    MaximumOperationsPerInstructionZero,\n    LineRangeZero,\n    OpcodeBaseZero,\n    BadUtf8,\n    NotCieId,\n    NotCiePointer,\n    NotFdePointer,\n    BadBranchTarget(u64),\n    InvalidPushObjectAddress,\n    NotEnoughStackItems,\n    TooManyIterations,\n    InvalidExpression(constants::DwOp),\n    UnsupportedEvaluation,\n    InvalidPiece,\n    InvalidExpressionTerminator(u64),\n    DivisionByZero,\n    TypeMismatch,\n    IntegralTypeRequired,\n    UnsupportedTypeOperation,\n    InvalidShiftExpression,\n    UnknownCallFrameInstruction(constants::DwCfa),\n    InvalidAddressRange,\n    InvalidLocationAddressRange,\n    CfiInstructionInInvalidContext,\n    PopWithEmptyStack,\n    NoUnwindInfoForAddress,\n    UnsupportedOffset,\n    UnknownPointerEncoding,\n    NoEntryAtGivenOffset,\n    OffsetOutOfBounds,\n    UnknownAugmentation,\n    UnsupportedPointerEncoding,\n    UnsupportedRegister(u64),\n    TooManyRegisterRules,\n    StackFull,\n    VariableLengthSearchTable,\n    UnsupportedUnitType,\n    UnsupportedAddressIndex,\n    UnsupportedSegmentSize,\n    MissingUnitDie,\n    UnsupportedAttributeForm,\n    MissingFileEntryFormatPath,\n    ExpectedStringAttributeValue,\n    InvalidImplicitConst,\n    InvalidIndexSectionCount,\n    InvalidIndexSlotCount,\n    InvalidIndexRow,\n    UnknownIndexSection,\n}","parent":null,"children":[{"krate":0,"index":8931},{"krate":0,"index":8933},{"krate":0,"index":8935},{"krate":0,"index":8937},{"krate":0,"index":8939},{"krate":0,"index":8941},{"krate":0,"index":8943},{"krate":0,"index":8945},{"krate":0,"index":8947},{"krate":0,"index":8949},{"krate":0,"index":8951},{"krate":0,"index":8953},{"krate":0,"index":8955},{"krate":0,"index":8957},{"krate":0,"index":8959},{"krate":0,"index":8961},{"krate":0,"index":8963},{"krate":0,"index":8965},{"krate":0,"index":8968},{"krate":0,"index":8970},{"krate":0,"index":8973},{"krate":0,"index":8975},{"krate":0,"index":8978},{"krate":0,"index":8981},{"krate":0,"index":8984},{"krate":0,"index":8987},{"krate":0,"index":8990},{"krate":0,"index":8992},{"krate":0,"index":8994},{"krate":0,"index":8996},{"krate":0,"index":8998},{"krate":0,"index":9000},{"krate":0,"index":9002},{"krate":0,"index":9004},{"krate":0,"index":9006},{"krate":0,"index":9009},{"krate":0,"index":9011},{"krate":0,"index":9013},{"krate":0,"index":9015},{"krate":0,"index":9018},{"krate":0,"index":9020},{"krate":0,"index":9022},{"krate":0,"index":9025},{"krate":0,"index":9027},{"krate":0,"index":9029},{"krate":0,"index":9031},{"krate":0,"index":9033},{"krate":0,"index":9035},{"krate":0,"index":9038},{"krate":0,"index":9040},{"krate":0,"index":9042},{"krate":0,"index":9044},{"krate":0,"index":9046},{"krate":0,"index":9048},{"krate":0,"index":9050},{"krate":0,"index":9052},{"krate":0,"index":9054},{"krate":0,"index":9056},{"krate":0,"index":9058},{"krate":0,"index":9060},{"krate":0,"index":9063},{"krate":0,"index":9065},{"krate":0,"index":9067},{"krate":0,"index":9069},{"krate":0,"index":9071},{"krate":0,"index":9073},{"krate":0,"index":9075},{"krate":0,"index":9077},{"krate":0,"index":9079},{"krate":0,"index":9081},{"krate":0,"index":9083},{"krate":0,"index":9085},{"krate":0,"index":9087},{"krate":0,"index":9089},{"krate":0,"index":9091}],"decl_id":null,"docs":" An error that occurred when parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred when parsing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":102356,"byte_end":102396,"line_start":269,"line_end":269,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109619,"byte_end":109630,"line_start":445,"line_end":445,"column_start":12,"column_end":23},"name":"description","qualname":"<Error>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" A short description of the error.\n","sig":null,"attributes":[{"value":"/ A short description of the error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109570,"byte_end":109607,"line_start":444,"line_end":444,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118248,"byte_end":118254,"line_start":598,"line_end":598,"column_start":10,"column_end":16},"name":"Result","qualname":"::read::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a parse.\n","sig":null,"attributes":[{"value":"/ The result of a parse.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118212,"byte_end":118238,"line_start":597,"line_end":597,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118708,"byte_end":118715,"line_start":612,"line_end":612,"column_start":11,"column_end":18},"name":"Section","qualname":"::read::Section","value":"Section<R>: From<R>","parent":null,"children":[{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010}],"decl_id":null,"docs":" A convenience trait for loading DWARF sections from object files.  To be\n used like:","sig":null,"attributes":[{"value":"/ A convenience trait for loading DWARF sections from object files.  To be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118287,"byte_end":118363,"line_start":600,"line_end":600,"column_start":1,"column_end":77}},{"value":"/ used like:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118364,"byte_end":118378,"line_start":601,"line_end":601,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118379,"byte_end":118382,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118383,"byte_end":118390,"line_start":603,"line_end":603,"column_start":1,"column_end":8}},{"value":"/ use gimli::{DebugInfo, EndianSlice, LittleEndian, Reader, Section};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118391,"byte_end":118462,"line_start":604,"line_end":604,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118463,"byte_end":118466,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118467,"byte_end":118506,"line_start":606,"line_end":606,"column_start":1,"column_end":40}},{"value":"/ let reader = EndianSlice::new(&buf, LittleEndian);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118507,"byte_end":118561,"line_start":607,"line_end":607,"column_start":1,"column_end":55}},{"value":"/ let loader = |name| -> Result<_, ()> { Ok(reader) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118562,"byte_end":118618,"line_start":608,"line_end":608,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118619,"byte_end":118622,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ let debug_info: DebugInfo<_> = Section::load(loader).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118623,"byte_end":118689,"line_start":610,"line_end":610,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118690,"byte_end":118697,"line_start":611,"line_end":611,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118783,"byte_end":118785,"line_start":614,"line_end":614,"column_start":8,"column_end":10},"name":"id","qualname":"::read::Section::id","value":"pub fn id() -> SectionId","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Returns the section id for this type.\n","sig":null,"attributes":[{"value":"/ Returns the section id for this type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118734,"byte_end":118775,"line_start":613,"line_end":613,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118862,"byte_end":118874,"line_start":617,"line_end":617,"column_start":8,"column_end":20},"name":"section_name","qualname":"::read::Section::section_name","value":"pub fn section_name() -> &'static str","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Returns the ELF section name for this type.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118807,"byte_end":118854,"line_start":616,"line_end":616,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119028,"byte_end":119044,"line_start":623,"line_end":623,"column_start":8,"column_end":24},"name":"dwo_section_name","qualname":"::read::Section::dwo_section_name","value":"pub fn dwo_section_name() -> Option<&'static str>","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Returns the ELF section name (if any) for this type when used in a dwo\n file.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name (if any) for this type when used in a dwo","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118932,"byte_end":119006,"line_start":621,"line_end":621,"column_start":5,"column_end":79}},{"value":"/ file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119011,"byte_end":119020,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119182,"byte_end":119186,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"load","qualname":"::read::Section::load","value":"pub fn load<F, E>(F) -> core::result::Result<Self, E> where\nF: FnOnce(SectionId) -> core::result::Result<R, E>","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Try to load the section using the given loader function.\n","sig":null,"attributes":[{"value":"/ Try to load the section using the given loader function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119114,"byte_end":119174,"line_start":627,"line_end":627,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119407,"byte_end":119413,"line_start":636,"line_end":636,"column_start":8,"column_end":14},"name":"reader","qualname":"::read::Section::reader","value":"pub fn reader(&Self) -> &R where R: Reader","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[{"value":"/ Returns the `Reader` for this section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119357,"byte_end":119399,"line_start":635,"line_end":635,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119569,"byte_end":119578,"line_start":642,"line_end":642,"column_start":8,"column_end":17},"name":"dwp_range","qualname":"::read::Section::dwp_range","value":"pub fn dwp_range(&Self, u32, u32) -> Result<Self> where R: Reader","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Returns the subrange of the section that is the contribution of\n a unit in a `.dwp` file.\n","sig":null,"attributes":[{"value":"/ Returns the subrange of the section that is the contribution of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119461,"byte_end":119528,"line_start":640,"line_end":640,"column_start":5,"column_end":72}},{"value":"/ a unit in a `.dwp` file.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119533,"byte_end":119561,"line_start":641,"line_end":641,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119892,"byte_end":119908,"line_start":653,"line_end":653,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::Section::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(SectionId, R::Offset)> where R: Reader","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[{"value":"/ Returns the `Reader` for this section.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":119842,"byte_end":119884,"line_start":652,"line_end":652,"column_start":5,"column_end":47}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2412,"byte_end":2418,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4161,"byte_end":4173,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8686,"byte_end":8702,"line_start":184,"line_end":184,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8947,"byte_end":8960,"line_start":195,"line_end":195,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9440,"byte_end":9457,"line_start":211,"line_end":211,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9611,"byte_end":9628,"line_start":217,"line_end":217,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9754,"byte_end":9771,"line_start":223,"line_end":223,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11756,"byte_end":11765,"line_start":292,"line_end":292,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14753,"byte_end":14766,"line_start":359,"line_end":359,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54222,"byte_end":54228,"line_start":879,"line_end":879,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66131,"byte_end":66137,"line_start":1335,"line_end":1335,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73279,"byte_end":73292,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73558,"byte_end":73571,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73796,"byte_end":73808,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73909,"byte_end":73921,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74116,"byte_end":74125,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74220,"byte_end":74229,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":127584,"byte_end":127587,"line_start":76,"line_end":76,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":128122,"byte_end":128125,"line_start":94,"line_end":94,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":128445,"byte_end":128453,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":130510,"byte_end":130518,"line_start":176,"line_end":176,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":130944,"byte_end":130952,"line_start":187,"line_end":187,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131045,"byte_end":131053,"line_start":193,"line_end":193,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131149,"byte_end":131157,"line_start":199,"line_end":199,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131479,"byte_end":131487,"line_start":210,"line_end":210,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131803,"byte_end":131811,"line_start":219,"line_end":219,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":132057,"byte_end":132065,"line_start":232,"line_end":232,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":132203,"byte_end":132211,"line_start":241,"line_end":241,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":132271,"byte_end":132279,"line_start":243,"line_end":243,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132697,"byte_end":132706,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134004,"byte_end":134013,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134826,"byte_end":134835,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134984,"byte_end":134993,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138151,"byte_end":138161,"line_start":39,"line_end":39,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138721,"byte_end":138731,"line_start":57,"line_end":57,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139563,"byte_end":139573,"line_start":81,"line_end":81,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139731,"byte_end":139741,"line_start":91,"line_end":91,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140614,"byte_end":140624,"line_start":121,"line_end":121,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140921,"byte_end":140931,"line_start":131,"line_end":131,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142670,"byte_end":142680,"line_start":180,"line_end":180,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142832,"byte_end":142842,"line_start":190,"line_end":190,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142935,"byte_end":142951,"line_start":196,"line_end":196,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144692,"byte_end":144706,"line_start":235,"line_end":235,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147126,"byte_end":147136,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154261,"byte_end":154268,"line_start":501,"line_end":501,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154510,"byte_end":154517,"line_start":510,"line_end":510,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155338,"byte_end":155345,"line_start":534,"line_end":534,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155500,"byte_end":155507,"line_start":544,"line_end":544,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156284,"byte_end":156300,"line_start":575,"line_end":575,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156424,"byte_end":156437,"line_start":585,"line_end":585,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":164062,"byte_end":164072,"line_start":787,"line_end":787,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":165015,"byte_end":165025,"line_start":827,"line_end":827,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":165126,"byte_end":165133,"line_start":831,"line_end":831,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":165942,"byte_end":165949,"line_start":867,"line_end":867,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168097,"byte_end":168110,"line_start":925,"line_end":925,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170805,"byte_end":170819,"line_start":1007,"line_end":1007,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":176499,"byte_end":176511,"line_start":1156,"line_end":1156,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":179044,"byte_end":179060,"line_start":1229,"line_end":1229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":182575,"byte_end":182597,"line_start":1314,"line_end":1314,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185171,"byte_end":185193,"line_start":1398,"line_end":1398,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189780,"byte_end":189808,"line_start":1537,"line_end":1537,"column_start":26,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":192616,"byte_end":192637,"line_start":1619,"line_end":1619,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196747,"byte_end":196768,"line_start":1740,"line_end":1740,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201579,"byte_end":201590,"line_start":1882,"line_end":1882,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":203765,"byte_end":203778,"line_start":1933,"line_end":1933,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204128,"byte_end":204141,"line_start":1943,"line_end":1943,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204250,"byte_end":204263,"line_start":1950,"line_end":1950,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204610,"byte_end":204623,"line_start":1961,"line_end":1961,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":211398,"byte_end":211409,"line_start":2152,"line_end":2152,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":222956,"byte_end":222971,"line_start":2452,"line_end":2452,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":223207,"byte_end":223222,"line_start":2460,"line_end":2460,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":223390,"byte_end":223405,"line_start":2468,"line_end":2468,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":223715,"byte_end":223730,"line_start":2480,"line_end":2480,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":225104,"byte_end":225119,"line_start":2529,"line_end":2529,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":225709,"byte_end":225724,"line_start":2549,"line_end":2549,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226256,"byte_end":226271,"line_start":2572,"line_end":2572,"column_start":44,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226526,"byte_end":226542,"line_start":2580,"line_end":2580,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":227130,"byte_end":227144,"line_start":2599,"line_end":2599,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":227595,"byte_end":227609,"line_start":2611,"line_end":2611,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":227961,"byte_end":227975,"line_start":2623,"line_end":2623,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228269,"byte_end":228283,"line_start":2635,"line_end":2635,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234740,"byte_end":234747,"line_start":2761,"line_end":2761,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234910,"byte_end":234917,"line_start":2770,"line_end":2770,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236719,"byte_end":236731,"line_start":2822,"line_end":2822,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248595,"byte_end":248615,"line_start":3121,"line_end":3121,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256732,"byte_end":256756,"line_start":3333,"line_end":3333,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258412,"byte_end":258419,"line_start":3390,"line_end":3390,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258518,"byte_end":258525,"line_start":3397,"line_end":3397,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258674,"byte_end":258681,"line_start":3406,"line_end":3406,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405613,"byte_end":405618,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410187,"byte_end":410192,"line_start":169,"line_end":169,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426236,"byte_end":426248,"line_start":615,"line_end":615,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434258,"byte_end":434262,"line_start":832,"line_end":832,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440712,"byte_end":440729,"line_start":995,"line_end":995,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":441830,"byte_end":441840,"line_start":1025,"line_end":1025,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442873,"byte_end":442882,"line_start":1057,"line_end":1057,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442988,"byte_end":442997,"line_start":1063,"line_end":1063,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446203,"byte_end":446214,"line_start":25,"line_end":25,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449067,"byte_end":449078,"line_start":111,"line_end":111,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450985,"byte_end":450996,"line_start":170,"line_end":170,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451200,"byte_end":451211,"line_start":180,"line_end":180,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451410,"byte_end":451421,"line_start":190,"line_end":190,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451604,"byte_end":451615,"line_start":200,"line_end":200,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451759,"byte_end":451770,"line_start":209,"line_end":209,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":470973,"byte_end":470984,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471815,"byte_end":471826,"line_start":46,"line_end":46,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472300,"byte_end":472311,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473143,"byte_end":473154,"line_start":85,"line_end":85,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473318,"byte_end":473329,"line_start":95,"line_end":95,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473771,"byte_end":473784,"line_start":114,"line_end":114,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476499,"byte_end":476511,"line_start":192,"line_end":192,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":479518,"byte_end":479528,"line_start":299,"line_end":299,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480431,"byte_end":480441,"line_start":330,"line_end":330,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480560,"byte_end":480570,"line_start":336,"line_end":336,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480669,"byte_end":480679,"line_start":342,"line_end":342,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480699,"byte_end":480709,"line_start":344,"line_end":344,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480998,"byte_end":481008,"line_start":354,"line_end":354,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481307,"byte_end":481317,"line_start":367,"line_end":367,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481694,"byte_end":481716,"line_start":382,"line_end":382,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503701,"byte_end":503713,"line_start":12,"line_end":12,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504535,"byte_end":504547,"line_start":38,"line_end":38,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505162,"byte_end":505174,"line_start":57,"line_end":57,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505996,"byte_end":506008,"line_start":81,"line_end":81,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506160,"byte_end":506172,"line_start":91,"line_end":91,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506459,"byte_end":506475,"line_start":104,"line_end":104,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":507793,"byte_end":507805,"line_start":152,"line_end":152,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511311,"byte_end":511326,"line_start":262,"line_end":262,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":512681,"byte_end":512692,"line_start":306,"line_end":306,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523904,"byte_end":523916,"line_start":16,"line_end":16,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524231,"byte_end":524243,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524395,"byte_end":524407,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524505,"byte_end":524517,"line_start":43,"line_end":43,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524875,"byte_end":524887,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525202,"byte_end":525214,"line_start":69,"line_end":69,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525366,"byte_end":525378,"line_start":79,"line_end":79,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525476,"byte_end":525488,"line_start":85,"line_end":85,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":526056,"byte_end":526065,"line_start":109,"line_end":109,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532533,"byte_end":532557,"line_start":283,"line_end":283,"column_start":38,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542505,"byte_end":542514,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543325,"byte_end":543334,"line_start":44,"line_end":44,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544973,"byte_end":544982,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545806,"byte_end":545815,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545975,"byte_end":545984,"line_start":118,"line_end":118,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546891,"byte_end":546912,"line_start":142,"line_end":142,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":548607,"byte_end":548615,"line_start":195,"line_end":195,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557326,"byte_end":557341,"line_start":405,"line_end":405,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":561991,"byte_end":562006,"line_start":523,"line_end":523,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565165,"byte_end":565181,"line_start":589,"line_end":589,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565479,"byte_end":565495,"line_start":598,"line_end":598,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":567206,"byte_end":567213,"line_start":652,"line_end":652,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582415,"byte_end":582432,"line_start":1077,"line_end":1077,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594425,"byte_end":594446,"line_start":1439,"line_end":1439,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597737,"byte_end":597756,"line_start":1532,"line_end":1532,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":599331,"byte_end":599340,"line_start":1585,"line_end":1585,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602625,"byte_end":602640,"line_start":1683,"line_end":1683,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lists.rs","byte_start":649840,"byte_end":649851,"line_start":11,"line_end":11,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lists.rs","byte_start":650112,"byte_end":650123,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652028,"byte_end":652036,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652824,"byte_end":652832,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652980,"byte_end":652988,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653276,"byte_end":653289,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654117,"byte_end":654130,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654283,"byte_end":654296,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654439,"byte_end":654456,"line_start":105,"line_end":105,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655488,"byte_end":655501,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655827,"byte_end":655840,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656783,"byte_end":656796,"line_start":171,"line_end":171,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":664139,"byte_end":664154,"line_start":402,"line_end":402,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":667642,"byte_end":667656,"line_start":471,"line_end":471,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":669201,"byte_end":669212,"line_start":525,"line_end":525,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":704292,"byte_end":704303,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":704523,"byte_end":704534,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":705100,"byte_end":705115,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":707409,"byte_end":707423,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720148,"byte_end":720156,"line_start":342,"line_end":342,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722120,"byte_end":722129,"line_start":400,"line_end":400,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744384,"byte_end":744394,"line_start":929,"line_end":929,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745757,"byte_end":745770,"line_start":970,"line_end":970,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748358,"byte_end":748369,"line_start":1047,"line_end":1047,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751273,"byte_end":751283,"line_start":1126,"line_end":1126,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752064,"byte_end":752074,"line_start":1149,"line_end":1149,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852861,"byte_end":852874,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853465,"byte_end":853478,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854002,"byte_end":854015,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854856,"byte_end":854869,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855569,"byte_end":855582,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855745,"byte_end":855758,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856187,"byte_end":856204,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857464,"byte_end":857477,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858104,"byte_end":858117,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858637,"byte_end":858650,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859475,"byte_end":859488,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860188,"byte_end":860201,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860364,"byte_end":860377,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860806,"byte_end":860823,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862148,"byte_end":862159,"line_start":18,"line_end":18,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862971,"byte_end":862982,"line_start":41,"line_end":41,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863133,"byte_end":863144,"line_start":51,"line_end":51,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863427,"byte_end":863440,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864280,"byte_end":864293,"line_start":88,"line_end":88,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864446,"byte_end":864459,"line_start":98,"line_end":98,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864619,"byte_end":864636,"line_start":107,"line_end":107,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865674,"byte_end":865684,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866547,"byte_end":866557,"line_start":163,"line_end":163,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867494,"byte_end":867504,"line_start":190,"line_end":190,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872488,"byte_end":872503,"line_start":351,"line_end":351,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":875190,"byte_end":875204,"line_start":408,"line_end":408,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876756,"byte_end":876767,"line_start":462,"line_end":462,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":879796,"byte_end":879804,"line_start":554,"line_end":554,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":881039,"byte_end":881044,"line_start":593,"line_end":593,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904404,"byte_end":904412,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905213,"byte_end":905221,"line_start":39,"line_end":39,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905988,"byte_end":905996,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906816,"byte_end":906824,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906982,"byte_end":906990,"line_start":93,"line_end":93,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907252,"byte_end":907267,"line_start":105,"line_end":105,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908623,"byte_end":908638,"line_start":137,"line_end":137,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909469,"byte_end":909484,"line_start":161,"line_end":161,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909639,"byte_end":909654,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909752,"byte_end":909771,"line_start":177,"line_end":177,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":910909,"byte_end":910921,"line_start":208,"line_end":208,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911764,"byte_end":911776,"line_start":231,"line_end":231,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912082,"byte_end":912094,"line_start":240,"line_end":240,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912916,"byte_end":912928,"line_start":264,"line_end":264,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":913080,"byte_end":913092,"line_start":274,"line_end":274,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":915616,"byte_end":915632,"line_start":22,"line_end":22,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916245,"byte_end":916260,"line_start":39,"line_end":39,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916872,"byte_end":916882,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918092,"byte_end":918101,"line_start":87,"line_end":87,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918912,"byte_end":918921,"line_start":110,"line_end":110,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920093,"byte_end":920102,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920926,"byte_end":920935,"line_start":169,"line_end":169,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921095,"byte_end":921104,"line_start":179,"line_end":179,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921521,"byte_end":921545,"line_start":195,"line_end":195,"column_start":17,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":925162,"byte_end":925170,"line_start":292,"line_end":292,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":926333,"byte_end":926343,"line_start":328,"line_end":328,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":926944,"byte_end":926954,"line_start":354,"line_end":354,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937630,"byte_end":937655,"line_start":670,"line_end":670,"column_start":33,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953328,"byte_end":953337,"line_start":1127,"line_end":1127,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975747,"byte_end":975761,"line_start":1811,"line_end":1811,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995325,"byte_end":995334,"line_start":2291,"line_end":2291,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999582,"byte_end":999592,"line_start":2406,"line_end":2406,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002549,"byte_end":1002562,"line_start":2488,"line_end":2488,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015559,"byte_end":1015570,"line_start":2874,"line_end":2874,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019747,"byte_end":1019762,"line_start":2999,"line_end":2999,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020972,"byte_end":1020987,"line_start":3035,"line_end":3035,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022387,"byte_end":1022397,"line_start":3080,"line_end":3080,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023210,"byte_end":1023220,"line_start":3103,"line_end":3103,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024048,"byte_end":1024058,"line_start":3127,"line_end":3127,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024220,"byte_end":1024230,"line_start":3137,"line_end":3137,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024371,"byte_end":1024381,"line_start":3145,"line_end":3145,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2926}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025560,"byte_end":1025585,"line_start":3182,"line_end":3182,"column_start":17,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135824,"byte_end":1135833,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1138638,"byte_end":1138643,"line_start":152,"line_end":152,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109392,"byte_end":109397,"line_start":436,"line_end":436,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109558,"byte_end":109563,"line_start":443,"line_end":443,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":120123,"byte_end":120131,"line_start":663,"line_end":663,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1809,"byte_end":1818,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":39}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":1992,"byte_end":1998,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":111}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\lib.rs","byte_start":2039,"byte_end":2043,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":145}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":2412,"byte_end":2418,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":4161,"byte_end":4173,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3055},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8686,"byte_end":8702,"line_start":184,"line_end":184,"column_start":21,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3620},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":8947,"byte_end":8960,"line_start":195,"line_end":195,"column_start":21,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3647},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9440,"byte_end":9457,"line_start":211,"line_end":211,"column_start":38,"column_end":55},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3674},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9611,"byte_end":9628,"line_start":217,"line_end":217,"column_start":39,"column_end":56},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3674},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":9754,"byte_end":9771,"line_start":223,"line_end":223,"column_start":9,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":11756,"byte_end":11765,"line_start":292,"line_end":292,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\common.rs","byte_start":14753,"byte_end":14766,"line_start":359,"line_end":359,"column_start":18,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3792},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":54222,"byte_end":54228,"line_start":879,"line_end":879,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\constants.rs","byte_start":66131,"byte_end":66137,"line_start":1335,"line_end":1335,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68960,"byte_end":68965,"line_start":7,"line_end":7,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":9685},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68968,"byte_end":68975,"line_start":7,"line_end":7,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68978,"byte_end":68983,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68986,"byte_end":68990,"line_start":7,"line_end":7,"column_start":48,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":68993,"byte_end":69002,"line_start":7,"line_end":7,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":1,"index":2709},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":69005,"byte_end":69007,"line_start":7,"line_end":7,"column_start":67,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73279,"byte_end":73292,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5997},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73558,"byte_end":73571,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5997},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73796,"byte_end":73808,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":73909,"byte_end":73921,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6016},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74116,"byte_end":74125,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6032},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\endianity.rs","byte_start":74220,"byte_end":74229,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6032},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":126369,"byte_end":126375,"line_start":32,"line_end":32,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":194}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":127584,"byte_end":127587,"line_start":76,"line_end":76,"column_start":27,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":189}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":128122,"byte_end":128125,"line_start":94,"line_end":94,"column_start":23,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":194}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":128445,"byte_end":128453,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":130510,"byte_end":130518,"line_start":176,"line_end":176,"column_start":9,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":130944,"byte_end":130952,"line_start":187,"line_end":187,"column_start":29,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131045,"byte_end":131053,"line_start":193,"line_end":193,"column_start":32,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131149,"byte_end":131157,"line_start":199,"line_end":199,"column_start":35,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131479,"byte_end":131487,"line_start":210,"line_end":210,"column_start":38,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":3289}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":131803,"byte_end":131811,"line_start":219,"line_end":219,"column_start":30,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":132057,"byte_end":132065,"line_start":232,"line_end":232,"column_start":34,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":132203,"byte_end":132211,"line_start":241,"line_end":241,"column_start":27,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\util.rs","byte_start":132271,"byte_end":132279,"line_start":243,"line_end":243,"column_start":35,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":132697,"byte_end":132706,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134004,"byte_end":134013,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134826,"byte_end":134835,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6187},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\addr.rs","byte_start":134984,"byte_end":134993,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6187},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138151,"byte_end":138161,"line_start":39,"line_end":39,"column_start":17,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":138721,"byte_end":138731,"line_start":57,"line_end":57,"column_start":22,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139563,"byte_end":139573,"line_start":81,"line_end":81,"column_start":32,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6201},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":139731,"byte_end":139741,"line_start":91,"line_end":91,"column_start":29,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6201},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140614,"byte_end":140624,"line_start":121,"line_end":121,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":140921,"byte_end":140931,"line_start":131,"line_end":131,"column_start":17,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142670,"byte_end":142680,"line_start":180,"line_end":180,"column_start":32,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6225},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142832,"byte_end":142842,"line_start":190,"line_end":190,"column_start":29,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6225},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":142935,"byte_end":142951,"line_start":196,"line_end":196,"column_start":17,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":144692,"byte_end":144706,"line_start":235,"line_end":235,"column_start":29,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":147126,"byte_end":147136,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154261,"byte_end":154268,"line_start":501,"line_end":501,"column_start":17,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":154510,"byte_end":154517,"line_start":510,"line_end":510,"column_start":22,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155338,"byte_end":155345,"line_start":534,"line_end":534,"column_start":32,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6287},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":155500,"byte_end":155507,"line_start":544,"line_end":544,"column_start":29,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6287},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156123,"byte_end":156127,"line_start":567,"line_end":567,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156130,"byte_end":156135,"line_start":567,"line_end":567,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":9685},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156138,"byte_end":156140,"line_start":567,"line_end":567,"column_start":51,"column_end":53},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156143,"byte_end":156147,"line_start":567,"line_end":567,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":1,"index":2963},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156284,"byte_end":156300,"line_start":575,"line_end":575,"column_start":29,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3620},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":156424,"byte_end":156437,"line_start":585,"line_end":585,"column_start":29,"column_end":42},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3647},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158384,"byte_end":158389,"line_start":635,"line_end":635,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158392,"byte_end":158397,"line_start":635,"line_end":635,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":9685},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":158400,"byte_end":158421,"line_start":635,"line_end":635,"column_start":53,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":459},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":164062,"byte_end":164072,"line_start":787,"line_end":787,"column_start":46,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6201},"to":{"krate":0,"index":459}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":165015,"byte_end":165025,"line_start":827,"line_end":827,"column_start":38,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6201},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":165126,"byte_end":165133,"line_start":831,"line_end":831,"column_start":46,"column_end":53},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6287},"to":{"krate":0,"index":459}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":165942,"byte_end":165949,"line_start":867,"line_end":867,"column_start":38,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6287},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":168097,"byte_end":168110,"line_start":925,"line_end":925,"column_start":6,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":170805,"byte_end":170819,"line_start":1007,"line_end":1007,"column_start":26,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":176499,"byte_end":176511,"line_start":1156,"line_end":1156,"column_start":6,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":179044,"byte_end":179060,"line_start":1229,"line_end":1229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":182575,"byte_end":182597,"line_start":1314,"line_end":1314,"column_start":17,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":185171,"byte_end":185193,"line_start":1398,"line_end":1398,"column_start":17,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":189780,"byte_end":189808,"line_start":1537,"line_end":1537,"column_start":26,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":192616,"byte_end":192637,"line_start":1619,"line_end":1619,"column_start":17,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":196747,"byte_end":196768,"line_start":1740,"line_end":1740,"column_start":17,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201141,"byte_end":201146,"line_start":1868,"line_end":1868,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":604}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":201579,"byte_end":201590,"line_start":1882,"line_end":1882,"column_start":45,"column_end":56},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":8917},"to":{"krate":0,"index":604}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":203765,"byte_end":203778,"line_start":1933,"line_end":1933,"column_start":55,"column_end":68},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6561},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204128,"byte_end":204141,"line_start":1943,"line_end":1943,"column_start":57,"column_end":70},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6561},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204250,"byte_end":204263,"line_start":1950,"line_end":1950,"column_start":17,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":204610,"byte_end":204623,"line_start":1961,"line_end":1961,"column_start":45,"column_end":58},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":211398,"byte_end":211409,"line_start":2152,"line_end":2152,"column_start":55,"column_end":66},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":222956,"byte_end":222971,"line_start":2452,"line_end":2452,"column_start":55,"column_end":70},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":223207,"byte_end":223222,"line_start":2460,"line_end":2460,"column_start":55,"column_end":70},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":223390,"byte_end":223405,"line_start":2468,"line_end":2468,"column_start":57,"column_end":72},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":223715,"byte_end":223730,"line_start":2480,"line_end":2480,"column_start":45,"column_end":60},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":225104,"byte_end":225119,"line_start":2529,"line_end":2529,"column_start":9,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":225709,"byte_end":225724,"line_start":2549,"line_end":2549,"column_start":51,"column_end":66},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226256,"byte_end":226271,"line_start":2572,"line_end":2572,"column_start":44,"column_end":59},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":226526,"byte_end":226542,"line_start":2580,"line_end":2580,"column_start":37,"column_end":53},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6605},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":227130,"byte_end":227144,"line_start":2599,"line_end":2599,"column_start":55,"column_end":69},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6618},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":227595,"byte_end":227609,"line_start":2611,"line_end":2611,"column_start":55,"column_end":69},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6618},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":227961,"byte_end":227975,"line_start":2623,"line_end":2623,"column_start":57,"column_end":71},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6618},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":228269,"byte_end":228283,"line_start":2635,"line_end":2635,"column_start":45,"column_end":59},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234740,"byte_end":234747,"line_start":2761,"line_end":2761,"column_start":29,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6641},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":234910,"byte_end":234917,"line_start":2770,"line_end":2770,"column_start":17,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":236719,"byte_end":236731,"line_start":2822,"line_end":2822,"column_start":17,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":248595,"byte_end":248615,"line_start":3121,"line_end":3121,"column_start":17,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":256732,"byte_end":256756,"line_start":3333,"line_end":3333,"column_start":21,"column_end":45},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258412,"byte_end":258419,"line_start":3390,"line_end":3390,"column_start":18,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6792},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258518,"byte_end":258525,"line_start":3397,"line_end":3397,"column_start":20,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6792},"to":{"krate":1,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\cfi.rs","byte_start":258674,"byte_end":258681,"line_start":3406,"line_end":3406,"column_start":6,"column_end":13},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":405613,"byte_end":405618,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":410187,"byte_end":410192,"line_start":169,"line_end":169,"column_start":17,"column_end":22},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":426236,"byte_end":426248,"line_start":615,"line_end":615,"column_start":17,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":434258,"byte_end":434262,"line_start":832,"line_end":832,"column_start":17,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":440712,"byte_end":440729,"line_start":995,"line_end":995,"column_start":23,"column_end":40},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":441830,"byte_end":441840,"line_start":1025,"line_end":1025,"column_start":23,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":8366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442873,"byte_end":442882,"line_start":1057,"line_end":1057,"column_start":29,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6882},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\dwarf.rs","byte_start":442988,"byte_end":442997,"line_start":1063,"line_end":1063,"column_start":17,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":446203,"byte_end":446214,"line_start":25,"line_end":25,"column_start":22,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":6900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":449067,"byte_end":449078,"line_start":111,"line_end":111,"column_start":22,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":450985,"byte_end":450996,"line_start":170,"line_end":170,"column_start":39,"column_end":50},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6900},"to":{"krate":1,"index":3361}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451200,"byte_end":451211,"line_start":180,"line_end":180,"column_start":50,"column_end":61},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6900},"to":{"krate":1,"index":3361}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451410,"byte_end":451421,"line_start":190,"line_end":190,"column_start":32,"column_end":43},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6900},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451604,"byte_end":451615,"line_start":200,"line_end":200,"column_start":45,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6900},"to":{"krate":1,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\endian_slice.rs","byte_start":451759,"byte_end":451770,"line_start":209,"line_end":209,"column_start":33,"column_end":44},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6900},"to":{"krate":0,"index":1233}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455968,"byte_end":455973,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":9685},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455976,"byte_end":455980,"line_start":25,"line_end":25,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455983,"byte_end":455985,"line_start":25,"line_end":25,"column_start":20,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455988,"byte_end":455991,"line_start":25,"line_end":25,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2745},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":455994,"byte_end":455998,"line_start":25,"line_end":25,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":9892},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456001,"byte_end":456004,"line_start":25,"line_end":25,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3125},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456022,"byte_end":456031,"line_start":25,"line_end":25,"column_start":59,"column_end":68},"kind":"SuperTrait","from":{"krate":1,"index":3156},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":456034,"byte_end":456037,"line_start":25,"line_end":25,"column_start":71,"column_end":74},"kind":"SuperTrait","from":{"krate":1,"index":3130},"to":{"krate":0,"index":1197}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461028,"byte_end":461033,"line_start":215,"line_end":215,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":9685},"to":{"krate":0,"index":1233}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\reader.rs","byte_start":461036,"byte_end":461041,"line_start":215,"line_end":215,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":1233}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":470973,"byte_end":470984,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":471815,"byte_end":471826,"line_start":46,"line_end":46,"column_start":17,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":472300,"byte_end":472311,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473143,"byte_end":473154,"line_start":85,"line_end":85,"column_start":24,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6955},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473318,"byte_end":473329,"line_start":95,"line_end":95,"column_start":21,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6955},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":473771,"byte_end":473784,"line_start":114,"line_end":114,"column_start":6,"column_end":19},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":476499,"byte_end":476511,"line_start":192,"line_end":192,"column_start":6,"column_end":18},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":479518,"byte_end":479528,"line_start":299,"line_end":299,"column_start":6,"column_end":16},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480431,"byte_end":480441,"line_start":330,"line_end":330,"column_start":16,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6994},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480560,"byte_end":480570,"line_start":336,"line_end":336,"column_start":20,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6994},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480669,"byte_end":480679,"line_start":342,"line_end":342,"column_start":13,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6994},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480699,"byte_end":480709,"line_start":344,"line_end":344,"column_start":16,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6994},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":480998,"byte_end":481008,"line_start":354,"line_end":354,"column_start":47,"column_end":57},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6994},"to":{"krate":1,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481307,"byte_end":481317,"line_start":367,"line_end":367,"column_start":44,"column_end":54},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6994},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\abbrev.rs","byte_start":481694,"byte_end":481716,"line_start":382,"line_end":382,"column_start":6,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":503701,"byte_end":503713,"line_start":12,"line_end":12,"column_start":22,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":504535,"byte_end":504547,"line_start":38,"line_end":38,"column_start":17,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505162,"byte_end":505174,"line_start":57,"line_end":57,"column_start":9,"column_end":21},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":505996,"byte_end":506008,"line_start":81,"line_end":81,"column_start":24,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":7020},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506160,"byte_end":506172,"line_start":91,"line_end":91,"column_start":21,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":7020},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":506459,"byte_end":506475,"line_start":104,"line_end":104,"column_start":17,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":7034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":507793,"byte_end":507805,"line_start":152,"line_end":152,"column_start":17,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":7044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":511311,"byte_end":511326,"line_start":262,"line_end":262,"column_start":17,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":7076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\aranges.rs","byte_start":512681,"byte_end":512692,"line_start":306,"line_end":306,"column_start":6,"column_end":17},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":7087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":523904,"byte_end":523916,"line_start":16,"line_end":16,"column_start":22,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524231,"byte_end":524243,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7106},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524395,"byte_end":524407,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7106},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524505,"byte_end":524517,"line_start":43,"line_end":43,"column_start":17,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":524875,"byte_end":524887,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525202,"byte_end":525214,"line_start":69,"line_end":69,"column_start":24,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7120},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525366,"byte_end":525378,"line_start":79,"line_end":79,"column_start":21,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7120},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":525476,"byte_end":525488,"line_start":85,"line_end":85,"column_start":17,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":526056,"byte_end":526065,"line_start":109,"line_end":109,"column_start":17,"column_end":26},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\index.rs","byte_start":532533,"byte_end":532557,"line_start":283,"line_end":283,"column_start":38,"column_end":62},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7152},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":542505,"byte_end":542514,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":543325,"byte_end":543334,"line_start":44,"line_end":44,"column_start":17,"column_end":26},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":544973,"byte_end":544982,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545806,"byte_end":545815,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7182},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":545975,"byte_end":545984,"line_start":118,"line_end":118,"column_start":21,"column_end":30},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7182},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":546891,"byte_end":546912,"line_start":142,"line_end":142,"column_start":44,"column_end":65},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7408},"to":{"krate":0,"index":1676}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":548607,"byte_end":548615,"line_start":195,"line_end":195,"column_start":26,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":7196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":557326,"byte_end":557341,"line_start":405,"line_end":405,"column_start":17,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":561991,"byte_end":562006,"line_start":523,"line_end":523,"column_start":34,"column_end":49},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7213},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565165,"byte_end":565181,"line_start":589,"line_end":589,"column_start":17,"column_end":33},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":565479,"byte_end":565495,"line_start":598,"line_end":598,"column_start":17,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":567206,"byte_end":567213,"line_start":652,"line_end":652,"column_start":6,"column_end":13},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":582415,"byte_end":582432,"line_start":1077,"line_end":1077,"column_start":17,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":594425,"byte_end":594446,"line_start":1439,"line_end":1439,"column_start":17,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":597737,"byte_end":597756,"line_start":1532,"line_end":1532,"column_start":17,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":599331,"byte_end":599340,"line_start":1585,"line_end":1585,"column_start":17,"column_end":26},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\line.rs","byte_start":602625,"byte_end":602640,"line_start":1683,"line_end":1683,"column_start":6,"column_end":21},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lists.rs","byte_start":649840,"byte_end":649851,"line_start":11,"line_end":11,"column_start":18,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7513},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lists.rs","byte_start":650112,"byte_end":650123,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652028,"byte_end":652036,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652824,"byte_end":652832,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7521},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":652980,"byte_end":652988,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7521},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":653276,"byte_end":653289,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654117,"byte_end":654130,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7535},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654283,"byte_end":654296,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7535},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":654439,"byte_end":654456,"line_start":105,"line_end":105,"column_start":14,"column_end":31},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655488,"byte_end":655501,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":7549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":655827,"byte_end":655840,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":7549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":656783,"byte_end":656796,"line_start":171,"line_end":171,"column_start":17,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":664139,"byte_end":664154,"line_start":402,"line_end":402,"column_start":17,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":667642,"byte_end":667656,"line_start":471,"line_end":471,"column_start":17,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\loclists.rs","byte_start":669201,"byte_end":669212,"line_start":525,"line_end":525,"column_start":17,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":704292,"byte_end":704303,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7662},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":704523,"byte_end":704534,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":705100,"byte_end":705115,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\lookup.rs","byte_start":707409,"byte_end":707423,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7712},"to":{"krate":0,"index":2029}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":720148,"byte_end":720156,"line_start":342,"line_end":342,"column_start":17,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":722120,"byte_end":722129,"line_start":400,"line_end":400,"column_start":17,"column_end":26},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":744384,"byte_end":744394,"line_start":929,"line_end":929,"column_start":17,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":8063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":745757,"byte_end":745770,"line_start":970,"line_end":970,"column_start":17,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":748358,"byte_end":748369,"line_start":1047,"line_end":1047,"column_start":42,"column_end":53},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8917},"to":{"krate":0,"index":2133}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":751273,"byte_end":751283,"line_start":1126,"line_end":1126,"column_start":17,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\op.rs","byte_start":752064,"byte_end":752074,"line_start":1149,"line_end":1149,"column_start":42,"column_end":52},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":852861,"byte_end":852874,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":853465,"byte_end":853478,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":8120},"to":{"krate":0,"index":2048}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854002,"byte_end":854015,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":8131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":854856,"byte_end":854869,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":8131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855569,"byte_end":855582,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":8131},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":855745,"byte_end":855758,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":8131},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubnames.rs","byte_start":856187,"byte_end":856204,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":857464,"byte_end":857477,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858104,"byte_end":858117,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":8151},"to":{"krate":0,"index":2048}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":858637,"byte_end":858650,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":8162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":859475,"byte_end":859488,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":8162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860188,"byte_end":860201,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":8162},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860364,"byte_end":860377,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":8162},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\pubtypes.rs","byte_start":860806,"byte_end":860823,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":8172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862148,"byte_end":862159,"line_start":18,"line_end":18,"column_start":22,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":8182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":862971,"byte_end":862982,"line_start":41,"line_end":41,"column_start":24,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":8182},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863133,"byte_end":863144,"line_start":51,"line_end":51,"column_start":21,"column_end":32},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":8182},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":863427,"byte_end":863440,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":8196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864280,"byte_end":864293,"line_start":88,"line_end":88,"column_start":24,"column_end":37},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":8196},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864446,"byte_end":864459,"line_start":98,"line_end":98,"column_start":21,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":8196},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":864619,"byte_end":864636,"line_start":107,"line_end":107,"column_start":14,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":865674,"byte_end":865684,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":8210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":866547,"byte_end":866557,"line_start":163,"line_end":163,"column_start":9,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":8210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":867494,"byte_end":867504,"line_start":190,"line_end":190,"column_start":17,"column_end":27},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":8210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":872488,"byte_end":872503,"line_start":351,"line_end":351,"column_start":23,"column_end":38},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":8249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":875190,"byte_end":875204,"line_start":408,"line_end":408,"column_start":17,"column_end":31},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":8241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":876756,"byte_end":876767,"line_start":462,"line_end":462,"column_start":17,"column_end":28},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":8279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":879796,"byte_end":879804,"line_start":554,"line_end":554,"column_start":6,"column_end":14},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":8288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\rnglists.rs","byte_start":881039,"byte_end":881044,"line_start":593,"line_end":593,"column_start":6,"column_end":11},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":8306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":904404,"byte_end":904412,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":8324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905213,"byte_end":905221,"line_start":39,"line_end":39,"column_start":17,"column_end":25},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":905988,"byte_end":905996,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906816,"byte_end":906824,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":8324},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":906982,"byte_end":906990,"line_start":93,"line_end":93,"column_start":21,"column_end":29},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":8324},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":907252,"byte_end":907267,"line_start":105,"line_end":105,"column_start":17,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":8338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":908623,"byte_end":908638,"line_start":137,"line_end":137,"column_start":9,"column_end":24},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":8338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909469,"byte_end":909484,"line_start":161,"line_end":161,"column_start":24,"column_end":39},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":8338},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909639,"byte_end":909654,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":8338},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":909752,"byte_end":909771,"line_start":177,"line_end":177,"column_start":14,"column_end":33},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":910909,"byte_end":910921,"line_start":208,"line_end":208,"column_start":22,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":8352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":911764,"byte_end":911776,"line_start":231,"line_end":231,"column_start":17,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912082,"byte_end":912094,"line_start":240,"line_end":240,"column_start":9,"column_end":21},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":8352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":912916,"byte_end":912928,"line_start":264,"line_end":264,"column_start":24,"column_end":36},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":8352},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\str.rs","byte_start":913080,"byte_end":913092,"line_start":274,"line_end":274,"column_start":21,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":8352},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":915616,"byte_end":915632,"line_start":22,"line_end":22,"column_start":23,"column_end":39},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916245,"byte_end":916260,"line_start":39,"line_end":39,"column_start":23,"column_end":38},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":916872,"byte_end":916882,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":8366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918092,"byte_end":918101,"line_start":87,"line_end":87,"column_start":22,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":8399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":918912,"byte_end":918921,"line_start":110,"line_end":110,"column_start":17,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":8399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920093,"byte_end":920102,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":8399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":920926,"byte_end":920935,"line_start":169,"line_end":169,"column_start":24,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":8399},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921095,"byte_end":921104,"line_start":179,"line_end":179,"column_start":21,"column_end":30},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":8399},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":921521,"byte_end":921545,"line_start":195,"line_end":195,"column_start":17,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":8413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":925162,"byte_end":925170,"line_start":292,"line_end":292,"column_start":14,"column_end":22},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":8423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":926333,"byte_end":926343,"line_start":328,"line_end":328,"column_start":17,"column_end":27},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":8460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":926944,"byte_end":926954,"line_start":354,"line_end":354,"column_start":17,"column_end":27},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":8460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":937630,"byte_end":937655,"line_start":670,"line_end":670,"column_start":33,"column_end":58},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":8495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":953328,"byte_end":953337,"line_start":1127,"line_end":1127,"column_start":17,"column_end":26},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":8684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":975747,"byte_end":975761,"line_start":1811,"line_end":1811,"column_start":17,"column_end":31},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":8517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":995325,"byte_end":995334,"line_start":2291,"line_end":2291,"column_start":41,"column_end":50},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":8707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":999582,"byte_end":999592,"line_start":2406,"line_end":2406,"column_start":33,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":8732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1002549,"byte_end":1002562,"line_start":2488,"line_end":2488,"column_start":33,"column_end":46},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":8750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1015559,"byte_end":1015570,"line_start":2874,"line_end":2874,"column_start":33,"column_end":44},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":8769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1019747,"byte_end":1019762,"line_start":2999,"line_end":2999,"column_start":40,"column_end":55},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":8789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1020972,"byte_end":1020987,"line_start":3035,"line_end":3035,"column_start":40,"column_end":55},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":8802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1022387,"byte_end":1022397,"line_start":3080,"line_end":3080,"column_start":22,"column_end":32},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":8816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1023210,"byte_end":1023220,"line_start":3103,"line_end":3103,"column_start":9,"column_end":19},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":8816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024048,"byte_end":1024058,"line_start":3127,"line_end":3127,"column_start":24,"column_end":34},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":8816},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024220,"byte_end":1024230,"line_start":3137,"line_end":3137,"column_start":21,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":8816},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1024371,"byte_end":1024381,"line_start":3145,"line_end":3145,"column_start":17,"column_end":27},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":8816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\unit.rs","byte_start":1025560,"byte_end":1025585,"line_start":3182,"line_end":3182,"column_start":17,"column_end":42},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":8830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1135824,"byte_end":1135833,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":8840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\value.rs","byte_start":1138638,"byte_end":1138643,"line_start":152,"line_end":152,"column_start":6,"column_end":11},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":8874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109392,"byte_end":109397,"line_start":436,"line_end":436,"column_start":23,"column_end":28},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":8930},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":109558,"byte_end":109563,"line_start":443,"line_end":443,"column_start":6,"column_end":11},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":8930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":118720,"byte_end":118724,"line_start":612,"line_end":612,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2963},"to":{"krate":0,"index":3000}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.26.2\\src\\read\\mod.rs","byte_start":120123,"byte_end":120131,"line_start":663,"line_end":663,"column_start":6,"column_end":14},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3076},"to":{"krate":4294967295,"index":4294967295}}]}