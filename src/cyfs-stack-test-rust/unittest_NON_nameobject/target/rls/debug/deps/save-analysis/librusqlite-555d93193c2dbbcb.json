{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rusqlite","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blob\"","--cfg","feature=\"bundled\"","--cfg","feature=\"modern_sqlite\"","-C","metadata=555d93193c2dbbcb","-C","extra-filename=-555d93193c2dbbcb","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--extern","bitflags=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libbitflags-119d3dde1facfd5c.rmeta","--extern","fallible_iterator=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libfallible_iterator-c04d3d283577cec7.rmeta","--extern","fallible_streaming_iterator=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libfallible_streaming_iterator-6a8d6e62c6c7e8b0.rmeta","--extern","hashlink=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libhashlink-acc3ece37a083b18.rmeta","--extern","libsqlite3_sys=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\liblibsqlite3_sys-a8a5d28f8ff487c0.rmeta","--extern","memchr=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libmemchr-01bfb5c46bf73bfe.rmeta","--extern","smallvec=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libsmallvec-1f1418ce04e1aeee.rmeta","--cap-lints","allow","-L","native=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\build\\libsqlite3-sys-d63e2fa2c04ee4a8\\out","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\librusqlite-555d93193c2dbbcb.rmeta"},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[2271126195359364917,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":16,"id":{"name":"libsqlite3_sys","disambiguator":[8292679584662183561,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":17,"id":{"name":"hashlink","disambiguator":[7506826979361848686,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":18,"id":{"name":"hashbrown","disambiguator":[15554257960859661528,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":19,"id":{"name":"ahash","disambiguator":[17898762009964794847,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":20,"id":{"name":"once_cell","disambiguator":[14722822818971705044,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":21,"id":{"name":"getrandom","disambiguator":[5717737880744688327,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":22,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","num":23,"id":{"name":"fallible_iterator","disambiguator":[12326410294915836715,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","num":24,"id":{"name":"fallible_streaming_iterator","disambiguator":[4314539045709424627,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","num":25,"id":{"name":"smallvec","disambiguator":[15543606612870660554,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":26,"id":{"name":"bitflags","disambiguator":[3297404274272602299,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":0,"byte_end":67082,"line_start":1,"line_end":2016,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1467,"byte_end":1481,"line_start":53,"line_end":53,"column_start":9,"column_end":23},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1960,"byte_end":1975,"line_start":73,"line_end":73,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2000,"byte_end":2006,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"Column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2030,"byte_end":2035,"line_start":75,"line_end":75,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":93},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2057,"byte_end":2066,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2184,"byte_end":2200,"line_start":79,"line_end":79,"column_start":25,"column_end":41},"alias_span":null,"name":"params_from_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2202,"byte_end":2208,"line_start":79,"line_end":79,"column_start":43,"column_end":49},"alias_span":null,"name":"Params","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2210,"byte_end":2224,"line_start":79,"line_end":79,"column_start":51,"column_end":65},"alias_span":null,"name":"ParamsFromIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2248,"byte_end":2259,"line_start":80,"line_end":80,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2261,"byte_end":2264,"line_start":80,"line_end":80,"column_start":35,"column_end":38},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2266,"byte_end":2276,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2278,"byte_end":2281,"line_start":80,"line_end":80,"column_start":52,"column_end":55},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2283,"byte_end":2291,"line_start":80,"line_end":80,"column_start":57,"column_end":65},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2293,"byte_end":2297,"line_start":80,"line_end":80,"column_start":67,"column_end":71},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2327,"byte_end":2336,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2338,"byte_end":2353,"line_start":81,"line_end":81,"column_start":39,"column_end":54},"alias_span":null,"name":"StatementStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2385,"byte_end":2397,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2399,"byte_end":2408,"line_start":82,"line_end":82,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2410,"byte_end":2421,"line_start":82,"line_end":82,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2536},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2423,"byte_end":2442,"line_start":82,"line_end":82,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2467,"byte_end":2472,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2498,"byte_end":2499,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281546,"byte_end":281553,"line_start":72,"line_end":72,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281555,"byte_end":281567,"line_start":72,"line_end":72,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281569,"byte_end":281582,"line_start":72,"line_end":72,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281608,"byte_end":281613,"line_start":73,"line_end":73,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281615,"byte_end":281626,"line_start":73,"line_end":73,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2695},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281650,"byte_end":281655,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281682,"byte_end":281690,"line_start":75,"line_end":75,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":1091}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":0,"byte_end":67082,"line_start":1,"line_end":2016,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":184},{"krate":0,"index":282},{"krate":0,"index":327},{"krate":0,"index":390},{"krate":0,"index":414},{"krate":0,"index":480},{"krate":0,"index":580},{"krate":0,"index":617},{"krate":0,"index":690},{"krate":0,"index":740},{"krate":0,"index":870},{"krate":0,"index":1021},{"krate":0,"index":1091},{"krate":0,"index":1320},{"krate":0,"index":1329},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":2810},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1480},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1532},{"krate":0,"index":2827},{"krate":0,"index":2833},{"krate":0,"index":1534},{"krate":0,"index":1539},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2879},{"krate":0,"index":2910},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1552}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"/ Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":80,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":179,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{params, Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":191,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":239,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":243,"byte_end":263,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ struct Person {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":264,"byte_end":283,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/     id: i32,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":284,"byte_end":300,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":301,"byte_end":322,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/     data: Option<Vec<u8>>,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":323,"byte_end":353,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":354,"byte_end":359,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":360,"byte_end":363,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":364,"byte_end":393,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":394,"byte_end":443,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":444,"byte_end":447,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/     conn.execute(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":448,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/         \"CREATE TABLE person (","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":470,"byte_end":504,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                   id              INTEGER PRIMARY KEY,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":505,"byte_end":563,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/                   name            TEXT NOT NULL,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":564,"byte_end":616,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/                   data            BLOB","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":617,"byte_end":659,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/                   )\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":660,"byte_end":685,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/         [],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":686,"byte_end":701,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     )?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":702,"byte_end":713,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/     let me = Person {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":714,"byte_end":739,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/         id: 0,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":740,"byte_end":758,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         name: \"Steven\".to_string(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":759,"byte_end":798,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/         data: None,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":799,"byte_end":822,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":823,"byte_end":833,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     conn.execute(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":834,"byte_end":855,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         \"INSERT INTO person (name, data) VALUES (?1, ?2)\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":856,"byte_end":918,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/         params![me.name, me.data],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":919,"byte_end":957,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     )?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":958,"byte_end":969,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":970,"byte_end":973,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT id, name, data FROM person\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":974,"byte_end":1048,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/     let person_iter = stmt.query_map([], |row| {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1049,"byte_end":1101,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/         Ok(Person {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1102,"byte_end":1125,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/             id: row.get(0)?,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1126,"byte_end":1158,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/             name: row.get(1)?,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1159,"byte_end":1193,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/             data: row.get(2)?,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1194,"byte_end":1228,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/         })","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1229,"byte_end":1243,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/     })?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1244,"byte_end":1256,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1257,"byte_end":1260,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     for person in person_iter {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1261,"byte_end":1296,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/         println!(\"Found person {:?}\", person.unwrap());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1297,"byte_end":1356,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1357,"byte_end":1366,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1367,"byte_end":1381,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1382,"byte_end":1387,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1388,"byte_end":1395,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1396,"byte_end":1418,"line_start":50,"line_end":50,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67468,"byte_end":67481,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[{"value":"/ An error from an underlying SQLite call.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67419,"byte_end":67463,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67646,"byte_end":67670,"line_start":20,"line_end":20,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[{"value":"/ Error reported when attempting to open a connection when SQLite was","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67516,"byte_end":67587,"line_start":18,"line_end":18,"column_start":5,"column_end":76}},{"value":"/ configured to allow single-threaded use only.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67592,"byte_end":67641,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67806,"byte_end":67830,"line_start":24,"line_end":24,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but it cannot","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67677,"byte_end":67752,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ be converted to the requested Rust type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67757,"byte_end":67801,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68166,"byte_end":68189,"line_start":30,"line_end":30,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[{"value":"/ Error when SQLite gives us an integral value outside the range of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67897,"byte_end":67970,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ requested type (e.g., trying to get the value 1000 into a `u8`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67975,"byte_end":68043,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ The associated `usize` is the column index,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68048,"byte_end":68095,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ and the associated `i64` is the value returned by SQLite.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68100,"byte_end":68161,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68252,"byte_end":68261,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[{"value":"/ Error converting a string to UTF-8.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68208,"byte_end":68247,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68389,"byte_end":68397,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[{"value":"/ Error converting a string to a C-compatible string because it contained","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68284,"byte_end":68359,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ an embedded nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68364,"byte_end":68384,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68533,"byte_end":68553,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[{"value":"/ Error when using SQL named parameters and passing a parameter name not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68426,"byte_end":68500,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ present in the SQL.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68505,"byte_end":68528,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68618,"byte_end":68629,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[{"value":"/ Error converting a file path to a string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68568,"byte_end":68613,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68743,"byte_end":68765,"line_start":48,"line_end":48,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error returned when an [`execute`](crate::Connection::execute) call\n returns rows.\n","sig":null,"attributes":[{"value":"/ Error returned when an [`execute`](crate::Connection::execute) call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68645,"byte_end":68716,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ returns rows.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68721,"byte_end":68738,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68928,"byte_end":68947,"line_start":52,"line_end":52,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for [`query_row`](crate::Connection::query_row)) did not return any.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to return at least one row (e.g.,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68772,"byte_end":68846,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ for [`query_row`](crate::Connection::query_row)) did not return any.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68851,"byte_end":68923,"line_start":51,"line_end":51,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69077,"byte_end":69095,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the index","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68954,"byte_end":69029,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ is out of range for the statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69034,"byte_end":69072,"line_start":55,"line_end":55,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69228,"byte_end":69245,"line_start":60,"line_end":60,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a named column is requested, but no column","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69109,"byte_end":69179,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ matches the name for the statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69184,"byte_end":69223,"line_start":59,"line_end":59,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69432,"byte_end":69449,"line_start":65,"line_end":65,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, String, Type)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69260,"byte_end":69334,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ of the result in that column cannot be converted to the requested","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69339,"byte_end":69408,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ Rust type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69413,"byte_end":69427,"line_start":64,"line_end":64,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69583,"byte_end":69603,"line_start":69,"line_end":69,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to insert one row did not insert","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69477,"byte_end":69550,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ any or insert many.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69555,"byte_end":69578,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70649,"byte_end":70671,"line_start":92,"line_end":92,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error available for the implementors of the\n [`ToSql`](crate::types::ToSql) trait.\n","sig":null,"attributes":[{"value":"/ Error available for the implementors of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70551,"byte_end":70598,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/ [`ToSql`](crate::types::ToSql) trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70603,"byte_end":70644,"line_start":91,"line_end":91,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70789,"byte_end":70801,"line_start":95,"line_end":95,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[{"value":"/ Error when the SQL is not a `SELECT`, is not read-only.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70725,"byte_end":70784,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1604},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71674,"byte_end":71691,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"name":"MultipleStatement","qualname":"::error::Error::MultipleStatement","value":"Error::MultipleStatement","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the SQL contains multiple statements.\n","sig":null,"attributes":[{"value":"/ Error when the SQL contains multiple statements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71617,"byte_end":71669,"line_start":117,"line_end":117,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71905,"byte_end":71926,"line_start":122,"line_end":122,"column_start":5,"column_end":26},"name":"InvalidParameterCount","qualname":"::error::Error::InvalidParameterCount","value":"Error::InvalidParameterCount(usize, usize)","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Error when the number of bound parameters does not match the number of\n parameters in the query. The first `usize` is how many parameters were\n given, the 2nd is how many were expected.\n","sig":null,"attributes":[{"value":"/ Error when the number of bound parameters does not match the number of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71697,"byte_end":71771,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ parameters in the query. The first `usize` is how many parameters were","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71776,"byte_end":71850,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ given, the 2nd is how many were expected.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71855,"byte_end":71900,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72252,"byte_end":72265,"line_start":130,"line_end":130,"column_start":5,"column_end":18},"name":"BlobSizeError","qualname":"::error::Error::BlobSizeError","value":"Error::BlobSizeError","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Returned from various functions in the Blob IO positional API. For\n example,\n [`Blob::raw_read_at_exact`](crate::blob::Blob::raw_read_at_exact) will\n return it if the blob has insufficient data.\n","sig":null,"attributes":[{"value":"/ Returned from various functions in the Blob IO positional API. For","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71947,"byte_end":72017,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ example,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72022,"byte_end":72034,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/ [`Blob::raw_read_at_exact`](crate::blob::Blob::raw_read_at_exact) will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72039,"byte_end":72113,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ return it if the blob has insufficient data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72118,"byte_end":72166,"line_start":127,"line_end":127,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"blob\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72171,"byte_end":72195,"line_start":128,"line_end":128,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67407,"byte_end":67412,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    SqliteFailure(ffi::Error, Option<String>),\n    SqliteSingleThreadedMode,\n    FromSqlConversionFailure(usize, Type,\n            Box<dyn error::Error + Send + Sync + 'static>),\n    IntegralValueOutOfRange(usize, i64),\n    Utf8Error(str::Utf8Error),\n    NulError(::std::ffi::NulError),\n    InvalidParameterName(String),\n    InvalidPath(PathBuf),\n    ExecuteReturnedResults,\n    QueryReturnedNoRows,\n    InvalidColumnIndex(usize),\n    InvalidColumnName(String),\n    InvalidColumnType(usize, String, Type),\n    StatementChangedRows(usize),\n    ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>),\n    InvalidQuery,\n    MultipleStatement,\n    InvalidParameterCount(usize, usize),\n    BlobSizeError,\n}","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1565},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1610}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from rusqlite.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67278,"byte_end":67325,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"allow(clippy :: enum_variant_names)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67343,"byte_end":67379,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67380,"byte_end":67397,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blob","qualname":"::blob","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":248},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":280}],"decl_id":null,"docs":" Incremental BLOB I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"blob\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2607,"byte_end":2631,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ Incremental BLOB I/O.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81666,"byte_end":81691,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81692,"byte_end":81695,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that SQLite does not provide API-level access to change the size of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81696,"byte_end":81774,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ BLOB; that must be performed through SQL statements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81775,"byte_end":81831,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81832,"byte_end":81835,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are two choices for how to perform IO on a [`Blob`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81836,"byte_end":81898,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81899,"byte_end":81902,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ 1. The implementations it provides of the `std::io::Read`, `std::io::Write`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81903,"byte_end":81983,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/    and `std::io::Seek` traits.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":81984,"byte_end":82018,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82019,"byte_end":82022,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ 2. A positional IO API, e.g. [`Blob::read_at`], [`Blob::write_at`] and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82023,"byte_end":82097,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/    similar.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82098,"byte_end":82113,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82114,"byte_end":82117,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Documenting these in order:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82118,"byte_end":82149,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82150,"byte_end":82153,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## 1. `std::io` trait implementations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82154,"byte_end":82196,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82197,"byte_end":82200,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Blob` conforms to `std::io::Read`, `std::io::Write`, and `std::io::Seek`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82201,"byte_end":82279,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ so it plays nicely with other types that build on these (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82280,"byte_end":82348,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ `std::io::BufReader` and `std::io::BufWriter`). However, you must be careful","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82349,"byte_end":82429,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ with the size of the blob. For example, when using a `BufWriter`, the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82430,"byte_end":82503,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ `BufWriter` will accept more data than the `Blob` will allow, so make sure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82504,"byte_end":82582,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to call `flush` and check for errors. (See the unit tests in this module for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82583,"byte_end":82663,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ an example.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82664,"byte_end":82680,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82681,"byte_end":82684,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## 2. Positional IO","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82685,"byte_end":82708,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82709,"byte_end":82712,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Blob`s also offer a `pread` / `pwrite`-style positional IO api in the form","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82713,"byte_end":82792,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ of [`Blob::read_at`], [`Blob::write_at`], [`Blob::raw_read_at`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82793,"byte_end":82861,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ [`Blob::read_at_exact`], and [`Blob::raw_read_at_exact`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82862,"byte_end":82923,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82924,"byte_end":82927,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ These APIs all take the position to read from or write to from as a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":82928,"byte_end":82999,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ parameter, instead of using an internal `pos` value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83000,"byte_end":83056,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83057,"byte_end":83060,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ### Positional IO Read Variants","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83061,"byte_end":83096,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83097,"byte_end":83100,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ For the `read` functions, there are several functions provided:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83101,"byte_end":83168,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83169,"byte_end":83172,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - [`Blob::read_at`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83173,"byte_end":83196,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ - [`Blob::raw_read_at`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83197,"byte_end":83224,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ - [`Blob::read_at_exact`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83225,"byte_end":83254,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ - [`Blob::raw_read_at_exact`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83255,"byte_end":83288,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83289,"byte_end":83292,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ These can be divided along two axes: raw/not raw, and exact/inexact:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83293,"byte_end":83365,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83366,"byte_end":83369,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ 1. Raw/not raw refers to the type of the destination buffer. The raw","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83370,"byte_end":83442,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/    functions take a `&mut [MaybeUninit<u8>]` as the destination buffer,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83443,"byte_end":83518,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/    where the \"normal\" functions take a `&mut [u8]`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83519,"byte_end":83574,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83575,"byte_end":83578,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/    Using `MaybeUninit` here can be more efficient in some cases, but is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83579,"byte_end":83654,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/    often inconvenient, so both are provided.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83655,"byte_end":83703,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83704,"byte_end":83707,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 2. Exact/inexact refers to to whether or not the entire buffer must be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83708,"byte_end":83782,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/    filled in order for the call to be considered a success.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83783,"byte_end":83846,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83847,"byte_end":83850,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/    The \"exact\" functions require the provided buffer be entirely filled, or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83851,"byte_end":83930,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/    they return an error, whereas the \"inexact\" functions read as much out of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":83931,"byte_end":84011,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/    the blob as is available, and return how much they were able to read.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84012,"byte_end":84088,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84089,"byte_end":84092,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/    The inexact functions are preferable if you do not know the size of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84093,"byte_end":84171,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/    blob already, and the exact functions are preferable if you do.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84172,"byte_end":84242,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84243,"byte_end":84246,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Comparison to using the `std::io` traits:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84247,"byte_end":84296,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84297,"byte_end":84300,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ In general, the positional methods offer the following Pro/Cons compared to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84301,"byte_end":84380,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ using the implementation `std::io::{Read, Write, Seek}` we provide for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84381,"byte_end":84455,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ `Blob`:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84456,"byte_end":84467,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84468,"byte_end":84471,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ 1. (Pro) There is no need to first seek to a position in order to perform IO","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84472,"byte_end":84552,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/    on it as the position is a parameter.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84553,"byte_end":84597,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84598,"byte_end":84601,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ 2. (Pro) `Blob`'s positional read functions don't mutate the blob in any","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84602,"byte_end":84678,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/    way, and take `&self`. No `&mut` access required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84679,"byte_end":84735,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84736,"byte_end":84739,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ 3. (Pro) Positional IO functions return `Err(rusqlite::Error)` on failure,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84740,"byte_end":84818,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/    rather than `Err(std::io::Error)`. Returning `rusqlite::Error` is more","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84819,"byte_end":84896,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/    accurate and convenient.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84897,"byte_end":84928,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84929,"byte_end":84932,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/    Note that for the `std::io` API, no data is lost however, and it can be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":84933,"byte_end":85011,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/    recovered with `io_err.downcast::<rusqlite::Error>()` (this can be easy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85012,"byte_end":85090,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/    to forget, though).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85091,"byte_end":85117,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85118,"byte_end":85121,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ 4. (Pro, for now). A `raw` version of the read API exists which can allow","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85122,"byte_end":85199,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/    reading into a `&mut [MaybeUninit<u8>]` buffer, which avoids a potential","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85200,"byte_end":85279,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/    costly initialization step. (However, `std::io` traits will certainly","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85280,"byte_end":85356,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/    gain this someday, which is why this is only a \"Pro, for now\").","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85357,"byte_end":85427,"line_start":86,"line_end":86,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85428,"byte_end":85431,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ 5. (Con) The set of functions is more bare-bones than what is offered in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85432,"byte_end":85508,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/    `std::io`, which has a number of adapters, handy algorithms, further","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85509,"byte_end":85584,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/    traits.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85585,"byte_end":85599,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85600,"byte_end":85603,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ 6. (Con) No meaningful interoperability with other crates, so if you need","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85604,"byte_end":85681,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/    that you must use `std::io`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85682,"byte_end":85717,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85718,"byte_end":85721,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ To generalize: the `std::io` traits are useful because they conform to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85722,"byte_end":85798,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ standard interface that a lot of code knows how to handle, however that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85799,"byte_end":85874,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ interface is not a perfect fit for [`Blob`], so another small set of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85875,"byte_end":85947,"line_start":97,"line_end":97,"column_start":1,"column_end":73}},{"value":"/ functions is provided as well.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85948,"byte_end":85982,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85983,"byte_end":85986,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Example (`std::io`)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":85987,"byte_end":86012,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86013,"byte_end":86016,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86017,"byte_end":86028,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ # use rusqlite::blob::ZeroBlob;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86029,"byte_end":86064,"line_start":103,"line_end":103,"column_start":1,"column_end":36}},{"value":"/ # use rusqlite::{Connection, DatabaseName};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86065,"byte_end":86112,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86113,"byte_end":86141,"line_start":105,"line_end":105,"column_start":1,"column_end":29}},{"value":"/ # use std::io::{Read, Seek, SeekFrom, Write};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86142,"byte_end":86191,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86192,"byte_end":86239,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/ let db = Connection::open_in_memory()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86240,"byte_end":86283,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ db.execute_batch(\"CREATE TABLE test_table (content BLOB);\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86284,"byte_end":86349,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86350,"byte_end":86353,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // Insert a BLOB into the `content` column of `test_table`. Note that the Blob","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86354,"byte_end":86436,"line_start":111,"line_end":111,"column_start":1,"column_end":83}},{"value":"/ // I/O API provides no way of inserting or resizing BLOBs in the DB -- this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86437,"byte_end":86516,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ // must be done via SQL.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86517,"byte_end":86545,"line_start":113,"line_end":113,"column_start":1,"column_end":29}},{"value":"/ db.execute(\"INSERT INTO test_table (content) VALUES (ZEROBLOB(10))\", [])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86546,"byte_end":86624,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86625,"byte_end":86628,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ // Get the row id off the BLOB we just inserted.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86629,"byte_end":86681,"line_start":116,"line_end":116,"column_start":1,"column_end":53}},{"value":"/ let rowid = db.last_insert_rowid();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86682,"byte_end":86721,"line_start":117,"line_end":117,"column_start":1,"column_end":40}},{"value":"/ // Open the BLOB we just inserted for IO.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86722,"byte_end":86767,"line_start":118,"line_end":118,"column_start":1,"column_end":46}},{"value":"/ let mut blob = db.blob_open(DatabaseName::Main, \"test_table\", \"content\", rowid, false)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86768,"byte_end":86860,"line_start":119,"line_end":119,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86861,"byte_end":86864,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ // Write some data into the blob. Make sure to test that the number of bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86865,"byte_end":86945,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ // written matches what you expect; if you try to write too much, the data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":86946,"byte_end":87024,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ // will be truncated to the size of the BLOB.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87025,"byte_end":87074,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ let bytes_written = blob.write(b\"01234567\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87075,"byte_end":87124,"line_start":124,"line_end":124,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(bytes_written, 8);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87125,"byte_end":87158,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87159,"byte_end":87162,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // Move back to the start and read into a local buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87163,"byte_end":87222,"line_start":127,"line_end":127,"column_start":1,"column_end":60}},{"value":"/ // Same guidance - make sure you check the number of bytes read!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87223,"byte_end":87291,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/ blob.seek(SeekFrom::Start(0))?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87292,"byte_end":87327,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"/ let mut buf = [0u8; 20];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87328,"byte_end":87356,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"/ let bytes_read = blob.read(&mut buf[..])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87357,"byte_end":87403,"line_start":131,"line_end":131,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(bytes_read, 10); // note we read 10 bytes because the blob has size 10","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87404,"byte_end":87489,"line_start":132,"line_end":132,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87490,"byte_end":87493,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ // Insert another BLOB, this time using a parameter passed in from","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87494,"byte_end":87564,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ // rust (potentially with a dynamic size).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87565,"byte_end":87611,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ db.execute(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87612,"byte_end":87627,"line_start":136,"line_end":136,"column_start":1,"column_end":16}},{"value":"/     \"INSERT INTO test_table (content) VALUES (?)\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87628,"byte_end":87682,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/     [ZeroBlob(64)],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87683,"byte_end":87706,"line_start":138,"line_end":138,"column_start":1,"column_end":24}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87707,"byte_end":87714,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87715,"byte_end":87718,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ // given a new row ID, we can reopen the blob on that row","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87719,"byte_end":87780,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/ let rowid = db.last_insert_rowid();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87781,"byte_end":87820,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ blob.reopen(rowid)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87821,"byte_end":87845,"line_start":143,"line_end":143,"column_start":1,"column_end":25}},{"value":"/ // Just check that the size is right.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87846,"byte_end":87887,"line_start":144,"line_end":144,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(blob.len(), 64);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87888,"byte_end":87919,"line_start":145,"line_end":145,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87920,"byte_end":87932,"line_start":146,"line_end":146,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87933,"byte_end":87940,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87941,"byte_end":87948,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87949,"byte_end":87952,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Example (Positional)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87953,"byte_end":87979,"line_start":150,"line_end":150,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87980,"byte_end":87983,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87984,"byte_end":87995,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"/ # use rusqlite::blob::ZeroBlob;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":87996,"byte_end":88031,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/ # use rusqlite::{Connection, DatabaseName};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88032,"byte_end":88079,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88080,"byte_end":88108,"line_start":155,"line_end":155,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88109,"byte_end":88156,"line_start":156,"line_end":156,"column_start":1,"column_end":48}},{"value":"/ let db = Connection::open_in_memory()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88157,"byte_end":88200,"line_start":157,"line_end":157,"column_start":1,"column_end":44}},{"value":"/ db.execute_batch(\"CREATE TABLE test_table (content BLOB);\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88201,"byte_end":88266,"line_start":158,"line_end":158,"column_start":1,"column_end":66}},{"value":"/ // Insert a blob into the `content` column of `test_table`. Note that the Blob","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88267,"byte_end":88349,"line_start":159,"line_end":159,"column_start":1,"column_end":83}},{"value":"/ // I/O API provides no way of inserting or resizing blobs in the DB -- this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88350,"byte_end":88429,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ // must be done via SQL.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88430,"byte_end":88458,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"/ db.execute(\"INSERT INTO test_table (content) VALUES (ZEROBLOB(10))\", [])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88459,"byte_end":88537,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ // Get the row id off the blob we just inserted.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88538,"byte_end":88590,"line_start":163,"line_end":163,"column_start":1,"column_end":53}},{"value":"/ let rowid = db.last_insert_rowid();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88591,"byte_end":88630,"line_start":164,"line_end":164,"column_start":1,"column_end":40}},{"value":"/ // Open the blob we just inserted for IO.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88631,"byte_end":88676,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let mut blob = db.blob_open(DatabaseName::Main, \"test_table\", \"content\", rowid, false)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88677,"byte_end":88769,"line_start":166,"line_end":166,"column_start":1,"column_end":93}},{"value":"/ // Write some data into the blob.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88770,"byte_end":88807,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ blob.write_at(b\"ABCDEF\", 2)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88808,"byte_end":88841,"line_start":168,"line_end":168,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88842,"byte_end":88845,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ // Read the whole blob into a local buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88846,"byte_end":88893,"line_start":170,"line_end":170,"column_start":1,"column_end":48}},{"value":"/ let mut buf = [0u8; 10];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88894,"byte_end":88922,"line_start":171,"line_end":171,"column_start":1,"column_end":29}},{"value":"/ blob.read_at_exact(&mut buf, 0)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88923,"byte_end":88960,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(&buf, b\"\\0\\0ABCDEF\\0\\0\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":88961,"byte_end":89001,"line_start":173,"line_end":173,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89002,"byte_end":89005,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ // Insert another blob, this time using a parameter passed in from","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89006,"byte_end":89076,"line_start":175,"line_end":175,"column_start":1,"column_end":71}},{"value":"/ // rust (potentially with a dynamic size).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89077,"byte_end":89123,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ db.execute(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89124,"byte_end":89139,"line_start":177,"line_end":177,"column_start":1,"column_end":16}},{"value":"/     \"INSERT INTO test_table (content) VALUES (?)\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89140,"byte_end":89194,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/     [ZeroBlob(64)],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89195,"byte_end":89218,"line_start":179,"line_end":179,"column_start":1,"column_end":24}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89219,"byte_end":89226,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89227,"byte_end":89230,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ // given a new row ID, we can reopen the blob on that row","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89231,"byte_end":89292,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ let rowid = db.last_insert_rowid();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89293,"byte_end":89332,"line_start":183,"line_end":183,"column_start":1,"column_end":40}},{"value":"/ blob.reopen(rowid)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89333,"byte_end":89357,"line_start":184,"line_end":184,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(blob.len(), 64);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89358,"byte_end":89389,"line_start":185,"line_end":185,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89390,"byte_end":89402,"line_start":186,"line_end":186,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89403,"byte_end":89410,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89411,"byte_end":89418,"line_start":188,"line_end":188,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101804,"byte_end":101812,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"write_at","qualname":"<Blob>::write_at","value":"pub fn write_at(&mut Self, &[u8], usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write `buf` to `self` starting at `write_start`, returning an error if\n `write_start + buf.len()` is past the end of the blob.","sig":null,"attributes":[{"value":"/ Write `buf` to `self` starting at `write_start`, returning an error if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":100941,"byte_end":101015,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ `write_start + buf.len()` is past the end of the blob.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101020,"byte_end":101078,"line_start":12,"line_end":12,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101083,"byte_end":101086,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If an error is returned, no data is written.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101091,"byte_end":101139,"line_start":14,"line_end":14,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101144,"byte_end":101147,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Note: the blob cannot be resized using this function -- that must be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101152,"byte_end":101224,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/ done using SQL (for example, an `UPDATE` statement).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101229,"byte_end":101285,"line_start":17,"line_end":17,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101290,"byte_end":101293,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Note: This is part of the positional I/O API, and thus takes an absolute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101298,"byte_end":101374,"line_start":19,"line_end":19,"column_start":5,"column_end":81}},{"value":"/ position write to, instead of using the internal position that can be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101379,"byte_end":101452,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ manipulated by the `std::io` traits.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101457,"byte_end":101497,"line_start":21,"line_end":21,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101502,"byte_end":101505,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Unlike the similarly named [`FileExt::write_at`][fext_write_at] function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101510,"byte_end":101586,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ (from `std::os::unix`), it's always an error to perform a \"short write\".","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101591,"byte_end":101667,"line_start":24,"line_end":24,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101672,"byte_end":101675,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ [fext_write_at]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#tymethod.write_at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101680,"byte_end":101778,"line_start":26,"line_end":26,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":101783,"byte_end":101792,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103281,"byte_end":103293,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"write_all_at","qualname":"<Blob>::write_all_at","value":"pub fn write_all_at(&mut Self, &[u8], usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" An alias for `write_at` provided for compatibility with the conceptually\n equivalent [`std::os::unix::FileExt::write_all_at`][write_all_at]\n function from libstd:","sig":null,"attributes":[{"value":"/ An alias for `write_at` provided for compatibility with the conceptually","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":102963,"byte_end":103039,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ equivalent [`std::os::unix::FileExt::write_all_at`][write_all_at]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103044,"byte_end":103113,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ function from libstd:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103118,"byte_end":103143,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103148,"byte_end":103151,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [write_all_at]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.write_all_at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103156,"byte_end":103255,"line_start":61,"line_end":61,"column_start":5,"column_end":104}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103260,"byte_end":103269,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104178,"byte_end":104185,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"read_at","qualname":"<Blob>::read_at","value":"pub fn read_at(&Self, &mut [u8], usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read as much as possible from `offset` to `offset + buf.len()` out of\n `self`, writing into `buf`. On success, returns the number of bytes\n written.","sig":null,"attributes":[{"value":"/ Read as much as possible from `offset` to `offset + buf.len()` out of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103404,"byte_end":103477,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ `self`, writing into `buf`. On success, returns the number of bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103482,"byte_end":103553,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ written.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103558,"byte_end":103570,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103575,"byte_end":103578,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If there's insufficient data in `self`, then the returned value will be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103583,"byte_end":103658,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ less than `buf.len()`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103663,"byte_end":103689,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103694,"byte_end":103697,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ See also [`Blob::raw_read_at`], which can take an uninitialized buffer,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103702,"byte_end":103777,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ or [`Blob::read_at_exact`] which returns an error if the entire `buf` is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103782,"byte_end":103858,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ not read.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103863,"byte_end":103876,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103881,"byte_end":103884,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note: This is part of the positional I/O API, and thus takes an absolute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103889,"byte_end":103965,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ position to read from, instead of using the internal position that can","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":103970,"byte_end":104044,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ be manipulated by the `std::io` traits. Consequently, it does not change","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104049,"byte_end":104125,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ that value either.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104130,"byte_end":104152,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104157,"byte_end":104166,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105303,"byte_end":105314,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"raw_read_at","qualname":"<Blob>::raw_read_at","value":"pub fn raw_read_at<'a>(&Self, &'a mut [MaybeUninit<u8>], usize)\n-> Result<&'a mut [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Read as much as possible from `offset` to `offset + buf.len()` out of\n `self`, writing into `buf`. On success, returns the portion of `buf`\n which was initialized by this call.","sig":null,"attributes":[{"value":"/ Read as much as possible from `offset` to `offset + buf.len()` out of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104565,"byte_end":104638,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ `self`, writing into `buf`. On success, returns the portion of `buf`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104643,"byte_end":104715,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ which was initialized by this call.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104720,"byte_end":104759,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104764,"byte_end":104767,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If there's insufficient data in `self`, then the returned value will be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104772,"byte_end":104847,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ shorter than `buf`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104852,"byte_end":104875,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104880,"byte_end":104883,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See also [`Blob::read_at`], which takes a `&mut [u8]` buffer instead of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104888,"byte_end":104963,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ a slice of `MaybeUninit<u8>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":104968,"byte_end":105001,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105006,"byte_end":105009,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note: This is part of the positional I/O API, and thus takes an absolute","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105014,"byte_end":105090,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ position to read from, instead of using the internal position that can","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105095,"byte_end":105169,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ be manipulated by the `std::io` traits. Consequently, it does not change","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105174,"byte_end":105250,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ that value either.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105255,"byte_end":105277,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":105282,"byte_end":105291,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":107738,"byte_end":107751,"line_start":167,"line_end":167,"column_start":12,"column_end":25},"name":"read_at_exact","qualname":"<Blob>::read_at_exact","value":"pub fn read_at_exact(&Self, &mut [u8], usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Blob::read_at`], but returns a `BlobSizeError` if `buf`\n is not fully initialized.\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Blob::read_at`], but returns a `BlobSizeError` if `buf`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":107603,"byte_end":107678,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ is not fully initialized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":107683,"byte_end":107712,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":107717,"byte_end":107726,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":108120,"byte_end":108137,"line_start":179,"line_end":179,"column_start":12,"column_end":29},"name":"raw_read_at_exact","qualname":"<Blob>::raw_read_at_exact","value":"pub fn raw_read_at_exact<'a>(&Self, &'a mut [MaybeUninit<u8>], usize)\n-> Result<&'a mut [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Blob::raw_read_at`], but returns a `BlobSizeError` if\n `buf` is not fully initialized.\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Blob::raw_read_at`], but returns a `BlobSizeError` if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":107981,"byte_end":108054,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ `buf` is not fully initialized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":108059,"byte_end":108094,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":108099,"byte_end":108108,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89701,"byte_end":89705,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"Blob","qualname":"::blob::Blob","value":"Blob {  }","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" Handle to an open BLOB. See\n [`rusqlite::blob`](crate::blob) documentation for in-depth discussion.\n","sig":null,"attributes":[{"value":"/ Handle to an open BLOB. See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89583,"byte_end":89614,"line_start":199,"line_end":199,"column_start":1,"column_end":32}},{"value":"/ [`rusqlite::blob`](crate::blob) documentation for in-depth discussion.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89615,"byte_end":89689,"line_start":200,"line_end":200,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":90173,"byte_end":90182,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"blob_open","qualname":"<Connection>::blob_open","value":"pub fn blob_open<'a>(&'a Self, DatabaseName, &str, &str, i64, bool)\n-> Result<Blob>","parent":null,"children":[],"decl_id":null,"docs":" Open a handle to the BLOB located in `row_id`,\n `column`, `table` in database `db`.","sig":null,"attributes":[{"value":"/ Open a handle to the BLOB located in `row_id`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89857,"byte_end":89907,"line_start":209,"line_end":209,"column_start":5,"column_end":55}},{"value":"/ `column`, `table` in database `db`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89912,"byte_end":89951,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89956,"byte_end":89959,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89964,"byte_end":89977,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89982,"byte_end":89985,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `db`/`table`/`column` cannot be converted to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89990,"byte_end":90061,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/ C-compatible string or if the underlying SQLite BLOB open call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":90066,"byte_end":90132,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":90137,"byte_end":90147,"line_start":216,"line_end":216,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":90152,"byte_end":90161,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91189,"byte_end":91195,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"reopen","qualname":"<Blob>::reopen","value":"pub fn reopen(&mut Self, i64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Move a BLOB handle to a new row.","sig":null,"attributes":[{"value":"/ Move a BLOB handle to a new row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91018,"byte_end":91054,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91059,"byte_end":91062,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91067,"byte_end":91080,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91085,"byte_end":91088,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite BLOB reopen call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91093,"byte_end":91163,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91168,"byte_end":91177,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91526,"byte_end":91530,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"size","qualname":"<Blob>::size","value":"pub fn size(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Return the size in bytes of the BLOB.\n","sig":null,"attributes":[{"value":"/ Return the size in bytes of the BLOB.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91443,"byte_end":91484,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91489,"byte_end":91498,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91503,"byte_end":91514,"line_start":268,"line_end":268,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91703,"byte_end":91706,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"len","qualname":"<Blob>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the current size in bytes of the BLOB.\n","sig":null,"attributes":[{"value":"/ Return the current size in bytes of the BLOB.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91612,"byte_end":91661,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91666,"byte_end":91675,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91680,"byte_end":91691,"line_start":275,"line_end":275,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91890,"byte_end":91898,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Blob>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the BLOB is empty.\n","sig":null,"attributes":[{"value":"/ Return true if the BLOB is empty.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91811,"byte_end":91848,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91853,"byte_end":91862,"line_start":282,"line_end":282,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91867,"byte_end":91878,"line_start":283,"line_end":283,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92292,"byte_end":92297,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"close","qualname":"<Blob>::close","value":"pub fn close(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close a BLOB handle.","sig":null,"attributes":[{"value":"/ Close a BLOB handle.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91952,"byte_end":91976,"line_start":288,"line_end":288,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91981,"byte_end":91984,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Calling `close` explicitly is not required (the BLOB will be closed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91989,"byte_end":92060,"line_start":290,"line_end":290,"column_start":5,"column_end":76}},{"value":"/ when the `Blob` is dropped), but it is available so you can get any","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92065,"byte_end":92136,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ errors that occur.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92141,"byte_end":92163,"line_start":292,"line_end":292,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92168,"byte_end":92171,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92176,"byte_end":92189,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92194,"byte_end":92197,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite close call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92202,"byte_end":92266,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92271,"byte_end":92280,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95839,"byte_end":95847,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"ZeroBlob","qualname":"::blob::ZeroBlob","value":"","parent":null,"children":[],"decl_id":null,"docs":" BLOB of length N that is filled with zeroes.","sig":null,"attributes":[{"value":"/ BLOB of length N that is filled with zeroes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95545,"byte_end":95593,"line_start":405,"line_end":405,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95594,"byte_end":95597,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Zeroblobs are intended to serve as placeholders for BLOBs whose content is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95598,"byte_end":95676,"line_start":407,"line_end":407,"column_start":1,"column_end":79}},{"value":"/ later written using incremental BLOB I/O routines.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95677,"byte_end":95731,"line_start":408,"line_end":408,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95732,"byte_end":95735,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ A negative value for the zeroblob results in a zero-length BLOB.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95736,"byte_end":95804,"line_start":410,"line_end":410,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95848,"byte_end":95855,"line_start":412,"line_end":412,"column_start":21,"column_end":28},"name":"0","qualname":"::blob::ZeroBlob::0","value":"i32","parent":{"krate":0,"index":1614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112642,"byte_end":112654,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"pub fn busy_timeout(&Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[{"value":"/ Set a busy handler that sleeps for a specified amount of time when a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":111893,"byte_end":111965,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ table is locked. The handler will sleep multiple times until at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":111970,"byte_end":112037,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ least \"ms\" milliseconds of sleeping have accumulated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112042,"byte_end":112099,"line_start":15,"line_end":15,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112104,"byte_end":112107,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Calling this routine with an argument equal to zero turns off all busy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112112,"byte_end":112186,"line_start":17,"line_end":17,"column_start":5,"column_end":79}},{"value":"/ handlers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112191,"byte_end":112204,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112209,"byte_end":112212,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler for a particular database","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112217,"byte_end":112286,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ connection at any given moment. If another busy handler was defined","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112291,"byte_end":112362,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ (using [`busy_handler`](Connection::busy_handler)) prior to calling this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112367,"byte_end":112443,"line_start":22,"line_end":22,"column_start":5,"column_end":81}},{"value":"/ routine, that other busy handler is cleared.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112448,"byte_end":112496,"line_start":23,"line_end":23,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112501,"byte_end":112504,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Newly created connections currently have a default busy timeout of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112509,"byte_end":112579,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ 5000ms, but this may be subject to change.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112584,"byte_end":112630,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":114188,"byte_end":114200,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"pub fn busy_handler(&Self, Option<fn(: i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[{"value":"/ Register a callback to handle `SQLITE_BUSY` errors.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":112988,"byte_end":113043,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113048,"byte_end":113051,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If the busy callback is `None`, then `SQLITE_BUSY` is returned","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113056,"byte_end":113122,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ immediately upon encountering the lock. The argument to the busy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113127,"byte_end":113195,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ handler callback is the number of times that the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113200,"byte_end":113252,"line_start":41,"line_end":41,"column_start":5,"column_end":57}},{"value":"/ busy handler has been invoked previously for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113257,"byte_end":113309,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/ same locking event. If the busy callback returns `false`, then no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113314,"byte_end":113383,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ additional attempts are made to access the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113388,"byte_end":113434,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/ database and `SQLITE_BUSY` is returned to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113439,"byte_end":113488,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/ application. If the callback returns `true`, then another attempt","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113493,"byte_end":113562,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ is made to access the database and the cycle repeats.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113567,"byte_end":113624,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113629,"byte_end":113632,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler defined for each database","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113637,"byte_end":113706,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ connection. Setting a new busy handler clears any previously set","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113711,"byte_end":113779,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ handler. Note that calling [`busy_timeout()`](Connection::busy_timeout)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113784,"byte_end":113859,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ or evaluating `PRAGMA busy_timeout=N` will change the busy handler","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113864,"byte_end":113934,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ and thus clear any previously set busy handler.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113939,"byte_end":113990,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":113995,"byte_end":113998,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Newly created connections default to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":114003,"byte_end":114045,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ [`busy_timeout()`](Connection::busy_timeout) handler with a timeout","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":114050,"byte_end":114121,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ of 5000ms, although this is subject to change.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":114126,"byte_end":114176,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119578,"byte_end":119592,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"pub fn prepare_cached(&Self, &str) -> Result<CachedStatement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n [`prepare_cached`](Connection::prepare_cached) once it is dropped.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution, returning a previously prepared","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118449,"byte_end":118523,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (but not currently in-use) statement if one is available. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118528,"byte_end":118593,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/ returned statement will be cached for reuse by future calls to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118598,"byte_end":118664,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ [`prepare_cached`](Connection::prepare_cached) once it is dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118669,"byte_end":118739,"line_start":14,"line_end":14,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118744,"byte_end":118747,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118752,"byte_end":118770,"line_start":16,"line_end":16,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118775,"byte_end":118816,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118821,"byte_end":118880,"line_start":18,"line_end":18,"column_start":5,"column_end":64}},{"value":"/     {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118885,"byte_end":118894,"line_start":19,"line_end":19,"column_start":5,"column_end":14}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118899,"byte_end":118987,"line_start":20,"line_end":20,"column_start":5,"column_end":93}},{"value":"/         stmt.execute([\"Joe Smith\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118992,"byte_end":119033,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119038,"byte_end":119047,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/     {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119052,"byte_end":119061,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"/         // This will return the same underlying SQLite statement handle without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119066,"byte_end":119149,"line_start":24,"line_end":24,"column_start":5,"column_end":88}},{"value":"/         // having to prepare it again.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119154,"byte_end":119196,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119201,"byte_end":119289,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/         stmt.execute([\"Bob Jones\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119294,"byte_end":119335,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119340,"byte_end":119349,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119354,"byte_end":119368,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119373,"byte_end":119378,"line_start":30,"line_end":30,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119383,"byte_end":119390,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119395,"byte_end":119398,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119403,"byte_end":119416,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119421,"byte_end":119424,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119429,"byte_end":119504,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119509,"byte_end":119552,"line_start":36,"line_end":36,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119557,"byte_end":119566,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120033,"byte_end":120070,"line_start":48,"line_end":48,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"pub fn set_prepared_statement_cache_capacity(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of cached prepared statements this connection","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119689,"byte_end":119761,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ will hold. By default, a connection will hold a relatively small","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119766,"byte_end":119834,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ number of cached statements. If you need more, or know that you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119839,"byte_end":119906,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ will not use cached statements, you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119911,"byte_end":119950,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ can set the capacity manually using this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":119955,"byte_end":120007,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120012,"byte_end":120021,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120244,"byte_end":120274,"line_start":54,"line_end":54,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"pub fn flush_prepared_statement_cache(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[{"value":"/ Remove/finalize all prepared statements currently in the cache.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120151,"byte_end":120218,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120223,"byte_end":120232,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120791,"byte_end":120806,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[{"value":"/ Cacheable statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120583,"byte_end":120607,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120608,"byte_end":120611,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Statement will return automatically to the cache by default.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120612,"byte_end":120676,"line_start":68,"line_end":68,"column_start":1,"column_end":65}},{"value":"/ If you want the statement to be discarded, call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120677,"byte_end":120728,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/ [`discard()`](CachedStatement::discard) on it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120729,"byte_end":120779,"line_start":70,"line_end":70,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121861,"byte_end":121868,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement>::discard","value":"pub fn discard(Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n [`Connection`]'s collection of cached statements.\n","sig":null,"attributes":[{"value":"/ Discard the statement, preventing it from being returned to its","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121710,"byte_end":121777,"line_start":111,"line_end":111,"column_start":5,"column_end":72}},{"value":"/ [`Connection`]'s collection of cached statements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121782,"byte_end":121835,"line_start":112,"line_end":112,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121840,"byte_end":121849,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128533,"byte_end":128539,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Column","qualname":"::column::Column","value":"Column {  }","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623}],"decl_id":null,"docs":" Information about a column of a SQLite query.\n","sig":null,"attributes":[{"value":"/ Information about a column of a SQLite query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128455,"byte_end":128504,"line_start":5,"line_end":5,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128708,"byte_end":128712,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<Column>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the column.\n","sig":null,"attributes":[{"value":"/ Returns the name of the column.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128631,"byte_end":128666,"line_start":13,"line_end":13,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128671,"byte_end":128680,"line_start":14,"line_end":14,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128685,"byte_end":128696,"line_start":15,"line_end":15,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128860,"byte_end":128869,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"decl_type","qualname":"<Column>::decl_type","value":"pub fn decl_type(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the column (`None` for expression).\n","sig":null,"attributes":[{"value":"/ Returns the type of the column (`None` for expression).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128759,"byte_end":128818,"line_start":20,"line_end":20,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128823,"byte_end":128832,"line_start":21,"line_end":21,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128837,"byte_end":128848,"line_start":22,"line_end":22,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129224,"byte_end":129236,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement>::column_names","value":"pub fn column_names(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.","sig":null,"attributes":[{"value":"/ Get all the column names in the result set of the prepared statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128952,"byte_end":129025,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129030,"byte_end":129033,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129038,"byte_end":129110,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129115,"byte_end":129183,"line_start":32,"line_end":32,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129188,"byte_end":129212,"line_start":33,"line_end":33,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129790,"byte_end":129802,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement>::column_count","value":"pub fn column_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.","sig":null,"attributes":[{"value":"/ Return the number of columns in the result set returned by the prepared","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129483,"byte_end":129558,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129563,"byte_end":129577,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129582,"byte_end":129585,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129590,"byte_end":129662,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129667,"byte_end":129735,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129740,"byte_end":129764,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":129769,"byte_end":129778,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131505,"byte_end":131516,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Statement>::column_name","value":"pub fn column_name(&Self, usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name assigned to a particular column in the result set\n returned by the prepared statement.","sig":null,"attributes":[{"value":"/ Returns the name assigned to a particular column in the result set","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":130971,"byte_end":131041,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ returned by the prepared statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131046,"byte_end":131085,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131090,"byte_end":131093,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131098,"byte_end":131170,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131175,"byte_end":131243,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131248,"byte_end":131272,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131277,"byte_end":131280,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131285,"byte_end":131299,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131304,"byte_end":131307,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131312,"byte_end":131384,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131389,"byte_end":131419,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131424,"byte_end":131427,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Panics when column name is not valid UTF-8.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131432,"byte_end":131479,"line_start":93,"line_end":93,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131484,"byte_end":131493,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132377,"byte_end":132389,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement>::column_index","value":"pub fn column_index(&Self, &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[{"value":"/ Returns the column index in the result set for a given column name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131803,"byte_end":131874,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131879,"byte_end":131882,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If there is no AS clause then the name of the column is unspecified and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131887,"byte_end":131962,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ may change from one release of SQLite to the next.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":131967,"byte_end":132021,"line_start":107,"line_end":107,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132026,"byte_end":132029,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132034,"byte_end":132106,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132111,"byte_end":132179,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132184,"byte_end":132208,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132213,"byte_end":132216,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132221,"byte_end":132234,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132239,"byte_end":132242,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Will return an `Error::InvalidColumnName` when there is no column with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132247,"byte_end":132321,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ the specified `name`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132326,"byte_end":132351,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":132356,"byte_end":132365,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":477}],"decl_id":null,"docs":" Configure database connections\n","sig":null,"attributes":[{"value":"/ Configure database connections","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":136881,"byte_end":136915,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137513,"byte_end":137540,"line_start":19,"line_end":19,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_FKEY","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Enable or disable the enforcement of foreign key constraints.\n","sig":null,"attributes":[{"value":"/ Enable or disable the enforcement of foreign key constraints.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137443,"byte_end":137508,"line_start":18,"line_end":18,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137589,"byte_end":137619,"line_start":21,"line_end":21,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_ENABLE_TRIGGER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Enable or disable triggers.\n","sig":null,"attributes":[{"value":"/ Enable or disable triggers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137553,"byte_end":137584,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137757,"byte_end":137794,"line_start":24,"line_end":24,"column_start":5,"column_end":42},"name":"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Enable or disable the fts3_tokenizer() function which is part of the\n FTS3 full-text search engine extension.\n","sig":null,"attributes":[{"value":"/ Enable or disable the fts3_tokenizer() function which is part of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137632,"byte_end":137704,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ FTS3 full-text search engine extension.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137709,"byte_end":137752,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137972,"byte_end":138004,"line_start":28,"line_end":28,"column_start":5,"column_end":37},"name":"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","value":"DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" In WAL mode, enable or disable the checkpoint operation before closing\n the connection.\n","sig":null,"attributes":[{"value":"/ In WAL mode, enable or disable the checkpoint operation before closing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137869,"byte_end":137943,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ the connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137948,"byte_end":137967,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138106,"byte_end":138133,"line_start":30,"line_end":30,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_QPSG","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the query planner stability guarantee (QPSG).\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the query planner stability guarantee (QPSG).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138027,"byte_end":138101,"line_start":29,"line_end":29,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138297,"byte_end":138324,"line_start":33,"line_end":33,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_TRIGGER_EQP","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","value":"DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Includes or excludes output for any operations performed by trigger\n programs from the output of EXPLAIN QUERY PLAN commands.\n","sig":null,"attributes":[{"value":"/ Includes or excludes output for any operations performed by trigger","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138156,"byte_end":138227,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ programs from the output of EXPLAIN QUERY PLAN commands.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138232,"byte_end":138292,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138485,"byte_end":138515,"line_start":36,"line_end":36,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_RESET_DATABASE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_RESET_DATABASE","value":"DbConfig::SQLITE_DBCONFIG_RESET_DATABASE","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"reset\" flag for a database connection.\n Run VACUUM with this flag set to reset the database.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"reset\" flag for a database connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138347,"byte_end":138419,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ Run VACUUM with this flag set to reset the database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138424,"byte_end":138480,"line_start":35,"line_end":35,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138609,"byte_end":138634,"line_start":38,"line_end":38,"column_start":5,"column_end":30},"name":"SQLITE_DBCONFIG_DEFENSIVE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DEFENSIVE","value":"DbConfig::SQLITE_DBCONFIG_DEFENSIVE","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"defensive\" flag for a database connection.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"defensive\" flag for a database connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138528,"byte_end":138604,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138756,"byte_end":138787,"line_start":41,"line_end":41,"column_start":5,"column_end":36},"name":"SQLITE_DBCONFIG_WRITABLE_SCHEMA","qualname":"::config::DbConfig::SQLITE_DBCONFIG_WRITABLE_SCHEMA","value":"DbConfig::SQLITE_DBCONFIG_WRITABLE_SCHEMA","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"writable_schema\" flag.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"writable_schema\" flag.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138657,"byte_end":138713,"line_start":39,"line_end":39,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138718,"byte_end":138751,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138944,"byte_end":138978,"line_start":45,"line_end":45,"column_start":5,"column_end":39},"name":"SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","value":"DbConfig::SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the legacy behavior of the ALTER TABLE RENAME\n command.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the legacy behavior of the ALTER TABLE RENAME","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138810,"byte_end":138884,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ command.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138889,"byte_end":138901,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138906,"byte_end":138939,"line_start":44,"line_end":44,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139154,"byte_end":139177,"line_start":49,"line_end":49,"column_start":5,"column_end":28},"name":"SQLITE_DBCONFIG_DQS_DML","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DQS_DML","value":"DbConfig::SQLITE_DBCONFIG_DQS_DML","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the legacy double-quoted string literal\n misfeature for DML statements only.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the legacy double-quoted string literal","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":138999,"byte_end":139067,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ misfeature for DML statements only.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139072,"byte_end":139111,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139116,"byte_end":139149,"line_start":48,"line_end":48,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139350,"byte_end":139373,"line_start":53,"line_end":53,"column_start":5,"column_end":28},"name":"SQLITE_DBCONFIG_DQS_DDL","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DQS_DDL","value":"DbConfig::SQLITE_DBCONFIG_DQS_DDL","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the legacy double-quoted string literal\n misfeature for DDL statements.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the legacy double-quoted string literal","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139200,"byte_end":139268,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ misfeature for DDL statements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139273,"byte_end":139307,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139312,"byte_end":139345,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139467,"byte_end":139494,"line_start":56,"line_end":56,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_VIEW","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_VIEW","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_VIEW","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Enable or disable views.\n","sig":null,"attributes":[{"value":"/ Enable or disable views.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139396,"byte_end":139424,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139429,"byte_end":139462,"line_start":55,"line_end":55,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139617,"byte_end":139651,"line_start":59,"line_end":59,"column_start":5,"column_end":39},"name":"SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","qualname":"::config::DbConfig::SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","value":"DbConfig::SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Activates or deactivates the legacy file format flag.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the legacy file format flag.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139517,"byte_end":139574,"line_start":57,"line_end":57,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139579,"byte_end":139612,"line_start":58,"line_end":58,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139852,"byte_end":139882,"line_start":63,"line_end":63,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_TRUSTED_SCHEMA","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRUSTED_SCHEMA","value":"DbConfig::SQLITE_DBCONFIG_TRUSTED_SCHEMA","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Tells SQLite to assume that database schemas (the contents of the\n sqlite_master tables) are untainted by malicious content.\n","sig":null,"attributes":[{"value":"/ Tells SQLite to assume that database schemas (the contents of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139674,"byte_end":139743,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ sqlite_master tables) are untainted by malicious content.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139748,"byte_end":139809,"line_start":61,"line_end":61,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139814,"byte_end":139847,"line_start":62,"line_end":62,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137308,"byte_end":137316,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"DbConfig","qualname":"::config::DbConfig","value":"pub enum DbConfig {\n    SQLITE_DBCONFIG_ENABLE_FKEY = ,\n    SQLITE_DBCONFIG_ENABLE_TRIGGER = ,\n    SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = ,\n    SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = ,\n    SQLITE_DBCONFIG_ENABLE_QPSG = ,\n    SQLITE_DBCONFIG_TRIGGER_EQP = ,\n    SQLITE_DBCONFIG_RESET_DATABASE = ,\n    SQLITE_DBCONFIG_DEFENSIVE = ,\n    SQLITE_DBCONFIG_WRITABLE_SCHEMA = ,\n    SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = ,\n    SQLITE_DBCONFIG_DQS_DML = ,\n    SQLITE_DBCONFIG_DQS_DDL = ,\n    SQLITE_DBCONFIG_ENABLE_VIEW = ,\n    SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = ,\n    SQLITE_DBCONFIG_TRUSTED_SCHEMA = ,\n}","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474}],"decl_id":null,"docs":" Database Connection Configuration Options\n See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.\n","sig":null,"attributes":[{"value":"/ Database Connection Configuration Options","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137018,"byte_end":137063,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137064,"byte_end":137182,"line_start":10,"line_end":10,"column_start":1,"column_end":119}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137183,"byte_end":137195,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137196,"byte_end":137242,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137243,"byte_end":137260,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":137261,"byte_end":137298,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140811,"byte_end":140820,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"db_config","qualname":"<Connection>::db_config","value":"pub fn db_config(&Self, DbConfig) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current value of a `config`.","sig":null,"attributes":[{"value":"/ Returns the current value of a `config`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139926,"byte_end":139970,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139975,"byte_end":139978,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FKEY`: return `false` or `true` to indicate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139983,"byte_end":140056,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/   whether FK enforcement is off or on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140061,"byte_end":140102,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_TRIGGER`: return `false` or `true` to indicate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140107,"byte_end":140183,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/   whether triggers are disabled or enabled","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140188,"byte_end":140234,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER`: return `false` or `true` to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140239,"byte_end":140313,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/   indicate whether `fts3_tokenizer` are disabled or enabled","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140318,"byte_end":140381,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ - `SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE`: return `false` to indicate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140386,"byte_end":140454,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/   checkpoints-on-close are not disabled or `true` if they are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140459,"byte_end":140524,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_QPSG`: return `false` or `true` to indicate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140529,"byte_end":140602,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/   whether the QPSG is disabled or enabled","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140607,"byte_end":140652,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/ - `SQLITE_DBCONFIG_TRIGGER_EQP`: return `false` to indicate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140657,"byte_end":140720,"line_start":79,"line_end":79,"column_start":5,"column_end":68}},{"value":"/   output-for-trigger are not disabled or `true` if it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140725,"byte_end":140785,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":140790,"byte_end":140799,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141958,"byte_end":141971,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"set_db_config","qualname":"<Connection>::set_db_config","value":"pub fn set_db_config(&Self, DbConfig, bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Make configuration changes to a database connection","sig":null,"attributes":[{"value":"/ Make configuration changes to a database connection","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141152,"byte_end":141207,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141212,"byte_end":141215,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FKEY`: `false` to disable FK enforcement,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141220,"byte_end":141291,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/   `true` to enable FK enforcement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141296,"byte_end":141333,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_TRIGGER`: `false` to disable triggers, `true`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141338,"byte_end":141413,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/   to enable triggers","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141418,"byte_end":141442,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER`: `false` to disable","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141447,"byte_end":141512,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/   `fts3_tokenizer()`, `true` to enable `fts3_tokenizer()`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141517,"byte_end":141578,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/ - `SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE`: `false` (the default) to enable","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141583,"byte_end":141656,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   checkpoints-on-close, `true` to disable them","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141661,"byte_end":141711,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_QPSG`: `false` to disable the QPSG, `true` to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141716,"byte_end":141791,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/   enable QPSG","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141796,"byte_end":141813,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/ - `SQLITE_DBCONFIG_TRIGGER_EQP`: `false` to disable output for trigger","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141818,"byte_end":141892,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/   programs, `true` to enable it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141897,"byte_end":141932,"line_start":109,"line_end":109,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":141937,"byte_end":141946,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157431,"byte_end":157437,"line_start":6,"line_end":6,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::params::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" This trait exists just to ensure that the only impls of `trait Params`\n that are allowed are ones in this crate.\n","sig":null,"attributes":[{"value":"/ This trait exists just to ensure that the only impls of `trait Params`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157293,"byte_end":157367,"line_start":4,"line_end":4,"column_start":5,"column_end":79}},{"value":"/ that are allowed are ones in this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157372,"byte_end":157416,"line_start":5,"line_end":5,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163422,"byte_end":163428,"line_start":157,"line_end":157,"column_start":11,"column_end":17},"name":"Params","qualname":"::params::Params","value":"Params: Sealed","parent":null,"children":[{"krate":0,"index":597}],"decl_id":null,"docs":" Trait used for [sets of parameter][params] passed into SQL\n statements/queries.","sig":null,"attributes":[{"value":"/ Trait used for [sets of parameter][params] passed into SQL","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157464,"byte_end":157526,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ statements/queries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157527,"byte_end":157550,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157551,"byte_end":157554,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [params]: https://www.sqlite.org/c3ref/bind_blob.html","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157555,"byte_end":157612,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157613,"byte_end":157616,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note: Currently, this trait can only be implemented inside this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157617,"byte_end":157691,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ Additionally, it's methods (which are `doc(hidden)`) should currently not be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157692,"byte_end":157772,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ considered part of the stable API, although it's possible they will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157773,"byte_end":157844,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ stabilize in the future.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157845,"byte_end":157873,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157874,"byte_end":157877,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Passing parameters to SQLite","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157878,"byte_end":157912,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157913,"byte_end":157916,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Many functions in this library let you pass parameters to SQLite. Doing this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157917,"byte_end":157997,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ lets you avoid any risk of SQL injection, and is simpler than escaping","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":157998,"byte_end":158072,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ things manually. Aside from deprecated functions and a few helpers, this is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158073,"byte_end":158152,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ indicated by the function taking a generic argument that implements `Params`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158153,"byte_end":158233,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ (this trait).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158234,"byte_end":158251,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158252,"byte_end":158255,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Positional parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158256,"byte_end":158284,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158285,"byte_end":158288,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For cases where you want to pass a list of parameters where the number of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158289,"byte_end":158366,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ parameters is known at compile time, this can be done in one of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158367,"byte_end":158438,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ following ways:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158439,"byte_end":158458,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158459,"byte_end":158462,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Using the [`rusqlite::params!`](crate::params!) macro, e.g.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158463,"byte_end":158528,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/   `thing.query(rusqlite::params![1, \"foo\", bar])`. This is mostly useful for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158529,"byte_end":158609,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/   heterogeneous lists of parameters, or lists where the number of parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158610,"byte_end":158690,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/   exceeds 32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158691,"byte_end":158708,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158709,"byte_end":158712,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - For small heterogeneous lists of parameters, they can either be passed as:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158713,"byte_end":158793,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158794,"byte_end":158797,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     - an array, as in `thing.query([1i32, 2, 3, 4])` or `thing.query([\"foo\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158798,"byte_end":158878,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/       \"bar\", \"baz\"])`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158879,"byte_end":158905,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158906,"byte_end":158909,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     - a reference to an array of references, as in `thing.query(&[\"foo\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158910,"byte_end":158986,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/       \"bar\", \"baz\"])` or `thing.query(&[&1i32, &2, &3])`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":158987,"byte_end":159048,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159049,"byte_end":159052,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/         (Note: in this case we don't implement this for slices for coherence","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159053,"byte_end":159133,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/         reasons, so it really is only for the \"reference to array\" types —","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159134,"byte_end":159214,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/         hence why the number of parameters must be <= 32 or you need to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159215,"byte_end":159290,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/         reach for `rusqlite::params!`)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159291,"byte_end":159333,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159334,"byte_end":159337,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     Unfortunately, in the current design it's not possible to allow this for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159338,"byte_end":159418,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/     references to arrays of non-references (e.g. `&[1i32, 2, 3]`). Code like","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159419,"byte_end":159499,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/     this should instead either use `params!`, an array literal, a `&[&dyn","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159500,"byte_end":159577,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/     ToSql]` or if none of those work, [`ParamsFromIter`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159578,"byte_end":159639,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159640,"byte_end":159643,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - As a slice of `ToSql` trait object references, e.g. `&[&dyn ToSql]`. This","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159644,"byte_end":159723,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/   is mostly useful for passing parameter lists around as arguments without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159724,"byte_end":159802,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/   having every function take a generic `P: Params`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159803,"byte_end":159858,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159859,"byte_end":159862,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Example (positional)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159863,"byte_end":159891,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159892,"byte_end":159895,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159896,"byte_end":159914,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159915,"byte_end":159964,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":159965,"byte_end":160018,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (a, b) VALUES (?, ?)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160019,"byte_end":160097,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160098,"byte_end":160101,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Using `rusqlite::params!`:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160102,"byte_end":160139,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(params![1i32, \"blah\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160140,"byte_end":160185,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160186,"byte_end":160189,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     // array literal — non-references","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160190,"byte_end":160233,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     stmt.execute([2i32, 3i32])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160234,"byte_end":160270,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160271,"byte_end":160274,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // array literal — references","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160275,"byte_end":160314,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/     stmt.execute([\"foo\", \"bar\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160315,"byte_end":160353,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160354,"byte_end":160357,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/     // Slice literal, references:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160358,"byte_end":160395,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(&[&2i32, &3i32])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160396,"byte_end":160435,"line_start":78,"line_end":78,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160436,"byte_end":160439,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     // Note: The types behind the references don't have to be `Sized`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160440,"byte_end":160513,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/     stmt.execute(&[\"foo\", \"bar\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160514,"byte_end":160553,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160554,"byte_end":160557,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // However, this doesn't work (see above):","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160558,"byte_end":160608,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/     // stmt.execute(&[1i32, 2i32])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160609,"byte_end":160649,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160650,"byte_end":160664,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160665,"byte_end":160670,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160671,"byte_end":160678,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160679,"byte_end":160682,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Named parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160683,"byte_end":160706,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160707,"byte_end":160710,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ SQLite lets you name parameters using a number of conventions (\":foo\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160711,"byte_end":160785,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ \"@foo\", \"$foo\"). You can pass named parameters in to SQLite using rusqlite","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160786,"byte_end":160864,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ in a few ways:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160865,"byte_end":160883,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160884,"byte_end":160887,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ - Using the [`rusqlite::named_params!`](crate::named_params!) macro, as in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160888,"byte_end":160966,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/   `stmt.execute(named_params!{ \":name\": \"foo\", \":age\": 99 })`. Similar to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":160967,"byte_end":161044,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/   the `params` macro, this is most useful for heterogeneous lists of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161045,"byte_end":161117,"line_start":97,"line_end":97,"column_start":1,"column_end":73}},{"value":"/   parameters, or lists where the number of parameters exceeds 32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161118,"byte_end":161187,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161188,"byte_end":161191,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - As a slice of `&[(&str, &dyn ToSql)]`. This is what essentially all of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161192,"byte_end":161268,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/   these boil down to in the end, conceptually at least. In theory you can","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161269,"byte_end":161346,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/   pass this as `stmt`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161347,"byte_end":161373,"line_start":102,"line_end":102,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161374,"byte_end":161377,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - As array references, similar to the positional params. This looks like","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161378,"byte_end":161454,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/   `thing.query(&[(\":foo\", &1i32), (\":bar\", &2i32)])` or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161455,"byte_end":161514,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/   `thing.query(&[(\":foo\", \"abc\"), (\":bar\", \"def\")])`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161515,"byte_end":161572,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161573,"byte_end":161576,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Note: Unbound named parameters will be left to the value they previously","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161577,"byte_end":161653,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ were bound with, falling back to `NULL` for parameters which have never been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161654,"byte_end":161734,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ bound.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161735,"byte_end":161745,"line_start":110,"line_end":110,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161746,"byte_end":161749,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ### Example (named)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161750,"byte_end":161773,"line_start":112,"line_end":112,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161774,"byte_end":161777,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161778,"byte_end":161796,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161797,"byte_end":161852,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ fn insert(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161853,"byte_end":161901,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (key, value) VALUES (:key, :value)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161902,"byte_end":161994,"line_start":117,"line_end":117,"column_start":1,"column_end":93}},{"value":"/     // Using `rusqlite::params!`:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":161995,"byte_end":162032,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(named_params! { \":key\": \"one\", \":val\": 2 })?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162033,"byte_end":162099,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // Alternatively:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162100,"byte_end":162125,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/     stmt.execute(&[(\":key\", \"three\"), (\":val\", \"four\")])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162126,"byte_end":162188,"line_start":121,"line_end":121,"column_start":1,"column_end":63}},{"value":"/     // Or:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162189,"byte_end":162203,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/     stmt.execute(&[(\":key\", &100), (\":val\", &200)])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162204,"byte_end":162261,"line_start":123,"line_end":123,"column_start":1,"column_end":58}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162262,"byte_end":162276,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162277,"byte_end":162282,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162283,"byte_end":162290,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162291,"byte_end":162294,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ## No parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162295,"byte_end":162315,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162316,"byte_end":162319,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ You can just use an empty array literal for no params. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162320,"byte_end":162382,"line_start":130,"line_end":130,"column_start":1,"column_end":63}},{"value":"/ `rusqlite::NO_PARAMS` constant which was so common in previous versions of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162383,"byte_end":162461,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ this library is no longer needed (and is now deprecated).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162462,"byte_end":162523,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162524,"byte_end":162527,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ### Example (no parameters)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162528,"byte_end":162559,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162560,"byte_end":162563,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162564,"byte_end":162582,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162583,"byte_end":162632,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/ fn delete_all_users(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162633,"byte_end":162691,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/     // Just use an empty array (e.g. `[]`) for no params.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162692,"byte_end":162753,"line_start":139,"line_end":139,"column_start":1,"column_end":62}},{"value":"/     conn.execute(\"DELETE FROM users\", [])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162754,"byte_end":162801,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162802,"byte_end":162816,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162817,"byte_end":162822,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162823,"byte_end":162830,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162831,"byte_end":162834,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Dynamic parameter list","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162835,"byte_end":162864,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162865,"byte_end":162868,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ If you have a number of parameters which is unknown at compile time (for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162869,"byte_end":162945,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ example, building a dynamic query at runtime), you have two choices:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":162946,"byte_end":163018,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163019,"byte_end":163022,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ - Use a `&[&dyn ToSql]`, which is nice if you have one otherwise might be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163023,"byte_end":163100,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/   annoying.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163101,"byte_end":163116,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/ - Use the [`ParamsFromIter`] type. This essentially lets you wrap an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163117,"byte_end":163189,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/   iterator some `T: ToSql` with something that implements `Params`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163190,"byte_end":163261,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163262,"byte_end":163265,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ A lot of the considerations here are similar either way, so you should see","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163266,"byte_end":163344,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ the [`ParamsFromIter`] documentation for more info / examples.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163345,"byte_end":163411,"line_start":156,"line_end":156,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163759,"byte_end":163768,"line_start":166,"line_end":166,"column_start":8,"column_end":17},"name":"__bind_in","qualname":"::params::Params::__bind_in","value":"pub fn __bind_in(Self, &mut Statement) -> Result<()>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169679,"byte_end":169693,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"ParamsFromIter","qualname":"::params::ParamsFromIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter type which allows any iterator over [`ToSql`] values to implement\n [`Params`].","sig":null,"attributes":[{"value":"/ Adapter type which allows any iterator over [`ToSql`] values to implement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166235,"byte_end":166312,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ [`Params`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166313,"byte_end":166328,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166329,"byte_end":166332,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`params_from_iter`] function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166333,"byte_end":166397,"line_start":236,"line_end":236,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166398,"byte_end":166401,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ This can be useful if you have something like an `&[String]` (of unknown","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166402,"byte_end":166478,"line_start":238,"line_end":238,"column_start":1,"column_end":77}},{"value":"/ length), and you want to use them with an API that wants something","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166479,"byte_end":166549,"line_start":239,"line_end":239,"column_start":1,"column_end":71}},{"value":"/ implementing `Params`. This way, you can avoid having to allocate storage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166550,"byte_end":166627,"line_start":240,"line_end":240,"column_start":1,"column_end":78}},{"value":"/ for something like a `&[&dyn ToSql]`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166628,"byte_end":166669,"line_start":241,"line_end":241,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166670,"byte_end":166673,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ This essentially is only ever actually needed when dynamically generating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166674,"byte_end":166751,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ SQL — static SQL (by definition) has the number of parameters known","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166752,"byte_end":166825,"line_start":244,"line_end":244,"column_start":1,"column_end":72}},{"value":"/ statically. As dynamically generating SQL is itself pretty advanced, this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166826,"byte_end":166903,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ API is itself for advanced use cases (See \"Realistic use case\" in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166904,"byte_end":166977,"line_start":246,"line_end":246,"column_start":1,"column_end":74}},{"value":"/ examples).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166978,"byte_end":166992,"line_start":247,"line_end":247,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166993,"byte_end":166996,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":166997,"byte_end":167010,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167011,"byte_end":167014,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ## Basic usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167015,"byte_end":167033,"line_start":251,"line_end":251,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167034,"byte_end":167037,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167038,"byte_end":167056,"line_start":253,"line_end":253,"column_start":1,"column_end":19}},{"value":"/ use rusqlite::{params_from_iter, Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167057,"byte_end":167114,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167115,"byte_end":167150,"line_start":255,"line_end":255,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167151,"byte_end":167154,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn query(conn: &Connection, ids: &BTreeSet<String>) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167155,"byte_end":167226,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/     assert_eq!(ids.len(), 3, \"Unrealistic sample code\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167227,"byte_end":167287,"line_start":258,"line_end":258,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167288,"byte_end":167291,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM users WHERE id IN (?, ?, ?)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167292,"byte_end":167374,"line_start":260,"line_end":260,"column_start":1,"column_end":83}},{"value":"/     let _rows = stmt.query(params_from_iter(ids.iter()))?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167375,"byte_end":167437,"line_start":261,"line_end":261,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167438,"byte_end":167441,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     // use _rows...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167442,"byte_end":167465,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167466,"byte_end":167480,"line_start":264,"line_end":264,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167481,"byte_end":167486,"line_start":265,"line_end":265,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167487,"byte_end":167494,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167495,"byte_end":167498,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ## Realistic use case","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167499,"byte_end":167524,"line_start":268,"line_end":268,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167525,"byte_end":167528,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Here's how you'd use `ParamsFromIter` to call [`Statement::exists`] with a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167529,"byte_end":167607,"line_start":270,"line_end":270,"column_start":1,"column_end":79}},{"value":"/ dynamic number of parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167608,"byte_end":167641,"line_start":271,"line_end":271,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167642,"byte_end":167645,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167646,"byte_end":167664,"line_start":273,"line_end":273,"column_start":1,"column_end":19}},{"value":"/ use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167665,"byte_end":167704,"line_start":274,"line_end":274,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167705,"byte_end":167708,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ pub fn any_active_users(conn: &Connection, usernames: &[String]) -> Result<bool> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167709,"byte_end":167795,"line_start":276,"line_end":276,"column_start":1,"column_end":87}},{"value":"/     if usernames.is_empty() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167796,"byte_end":167829,"line_start":277,"line_end":277,"column_start":1,"column_end":34}},{"value":"/         return Ok(false);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167830,"byte_end":167859,"line_start":278,"line_end":278,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167860,"byte_end":167869,"line_start":279,"line_end":279,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167870,"byte_end":167873,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/     // Note: `repeat_vars` never returns anything attacker-controlled, so","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167874,"byte_end":167951,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/     // it's fine to use it in a dynamically-built SQL string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":167952,"byte_end":168017,"line_start":282,"line_end":282,"column_start":1,"column_end":66}},{"value":"/     let vars = repeat_vars(usernames.len());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168018,"byte_end":168066,"line_start":283,"line_end":283,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168067,"byte_end":168070,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/     let sql = format!(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168071,"byte_end":168097,"line_start":285,"line_end":285,"column_start":1,"column_end":27}},{"value":"/         // In practice this would probably be better as an `EXISTS` query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168098,"byte_end":168176,"line_start":286,"line_end":286,"column_start":1,"column_end":79}},{"value":"/         \"SELECT 1 FROM user WHERE is_active AND name IN ({}) LIMIT 1\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168177,"byte_end":168251,"line_start":287,"line_end":287,"column_start":1,"column_end":75}},{"value":"/         vars,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168252,"byte_end":168269,"line_start":288,"line_end":288,"column_start":1,"column_end":18}},{"value":"/     );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168270,"byte_end":168280,"line_start":289,"line_end":289,"column_start":1,"column_end":11}},{"value":"/     let mut stmt = conn.prepare(&sql)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168281,"byte_end":168324,"line_start":290,"line_end":290,"column_start":1,"column_end":44}},{"value":"/     stmt.exists(rusqlite::params_from_iter(usernames))","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168325,"byte_end":168383,"line_start":291,"line_end":291,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168384,"byte_end":168389,"line_start":292,"line_end":292,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168390,"byte_end":168393,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ // Helper function to return a comma-separated sequence of `?`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168394,"byte_end":168461,"line_start":294,"line_end":294,"column_start":1,"column_end":68}},{"value":"/ // - `repeat_vars(0) => panic!(...)`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168462,"byte_end":168502,"line_start":295,"line_end":295,"column_start":1,"column_end":41}},{"value":"/ // - `repeat_vars(1) => \"?\"`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168503,"byte_end":168535,"line_start":296,"line_end":296,"column_start":1,"column_end":33}},{"value":"/ // - `repeat_vars(2) => \"?,?\"`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168536,"byte_end":168570,"line_start":297,"line_end":297,"column_start":1,"column_end":35}},{"value":"/ // - `repeat_vars(3) => \"?,?,?\"`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168571,"byte_end":168607,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ // - ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168608,"byte_end":168620,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"/ fn repeat_vars(count: usize) -> String {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168621,"byte_end":168665,"line_start":300,"line_end":300,"column_start":1,"column_end":45}},{"value":"/     assert_ne!(count, 0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168666,"byte_end":168695,"line_start":301,"line_end":301,"column_start":1,"column_end":30}},{"value":"/     let mut s = \"?,\".repeat(count);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168696,"byte_end":168735,"line_start":302,"line_end":302,"column_start":1,"column_end":40}},{"value":"/     // Remove trailing comma","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168736,"byte_end":168768,"line_start":303,"line_end":303,"column_start":1,"column_end":33}},{"value":"/     s.pop();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168769,"byte_end":168785,"line_start":304,"line_end":304,"column_start":1,"column_end":17}},{"value":"/     s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168786,"byte_end":168795,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168796,"byte_end":168801,"line_start":306,"line_end":306,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168802,"byte_end":168809,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168810,"byte_end":168813,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ That is fairly complex, and even so would need even more work to be fully","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168814,"byte_end":168891,"line_start":309,"line_end":309,"column_start":1,"column_end":78}},{"value":"/ production-ready:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168892,"byte_end":168913,"line_start":310,"line_end":310,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168914,"byte_end":168917,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ - production code should ensure `usernames` isn't so large that it will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168918,"byte_end":168993,"line_start":312,"line_end":312,"column_start":1,"column_end":76}},{"value":"/   surpass [`conn.limit(Limit::SQLITE_LIMIT_VARIABLE_NUMBER)`][limits]),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":168994,"byte_end":169069,"line_start":313,"line_end":313,"column_start":1,"column_end":76}},{"value":"/   chunking if too large. (Note that the limits api requires rusqlite to have","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169070,"byte_end":169150,"line_start":314,"line_end":314,"column_start":1,"column_end":81}},{"value":"/   the \"limits\" feature).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169151,"byte_end":169179,"line_start":315,"line_end":315,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169180,"byte_end":169183,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ - `repeat_vars` can be implemented in a way that avoids needing to allocate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169184,"byte_end":169263,"line_start":317,"line_end":317,"column_start":1,"column_end":80}},{"value":"/   a String.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169264,"byte_end":169279,"line_start":318,"line_end":318,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169280,"byte_end":169283,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ - Etc...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169284,"byte_end":169296,"line_start":320,"line_end":320,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169297,"byte_end":169300,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [limits]: crate::Connection::limit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169301,"byte_end":169339,"line_start":322,"line_end":322,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169340,"byte_end":169343,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ This complexity reflects the fact that `ParamsFromIter` is mainly intended","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169344,"byte_end":169422,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ for advanced use cases — most of the time you should know how many","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169423,"byte_end":169495,"line_start":325,"line_end":325,"column_start":1,"column_end":71}},{"value":"/ parameters you have statically (and if you don't, you're either doing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169496,"byte_end":169569,"line_start":326,"line_end":326,"column_start":1,"column_end":74}},{"value":"/ something tricky, or should take a moment to think about the design).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169570,"byte_end":169643,"line_start":327,"line_end":327,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169806,"byte_end":169822,"line_start":334,"line_end":334,"column_start":8,"column_end":24},"name":"params_from_iter","qualname":"::params::params_from_iter","value":"pub fn params_from_iter<I>(I) -> ParamsFromIter<I> where I: IntoIterator,\nI::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Constructor function for a [`ParamsFromIter`]. See its documentation for\n more.\n","sig":null,"attributes":[{"value":"/ Constructor function for a [`ParamsFromIter`]. See its documentation for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169702,"byte_end":169778,"line_start":331,"line_end":331,"column_start":1,"column_end":77}},{"value":"/ more.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169779,"byte_end":169788,"line_start":332,"line_end":332,"column_start":1,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169789,"byte_end":169798,"line_start":333,"line_end":333,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174746,"byte_end":174764,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"pragma_query_value","qualname":"<Connection>::pragma_query_value","value":"pub fn pragma_query_value<T, F>(&Self, Option<DatabaseName>, &str, F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current value of `pragma_name`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174410,"byte_end":174455,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174460,"byte_end":174463,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return multiple rows/values which cannot be retrieved","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174468,"byte_end":174543,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ with this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174548,"byte_end":174569,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174574,"byte_end":174577,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174582,"byte_end":174678,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ `SELECT user_version FROM pragma_user_version;`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174683,"byte_end":174734,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175310,"byte_end":175322,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"pragma_query","qualname":"<Connection>::pragma_query","value":"pub fn pragma_query<F>(&Self, Option<DatabaseName>, &str, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current rows/values of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current rows/values of `pragma_name`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175091,"byte_end":175142,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175147,"byte_end":175150,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175155,"byte_end":175251,"line_start":184,"line_end":184,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_collation_list;`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175256,"byte_end":175298,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":176277,"byte_end":176283,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"pragma","qualname":"<Connection>::pragma","value":"pub fn pragma<F, V>(&Self, Option<DatabaseName>, &str, V, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>, V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Query the current value(s) of `pragma_name` associated to\n `pragma_value`.","sig":null,"attributes":[{"value":"/ Query the current value(s) of `pragma_name` associated to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175831,"byte_end":175892,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ `pragma_value`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175897,"byte_end":175916,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175921,"byte_end":175924,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method can be used with query-only pragmas which need an argument","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":175929,"byte_end":176003,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ (e.g. `table_info('one_tbl')`) or pragmas which returns value(s)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":176008,"byte_end":176076,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ (e.g. `integrity_check`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":176081,"byte_end":176110,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":176115,"byte_end":176118,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":176123,"byte_end":176219,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_table_info(?);`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":176224,"byte_end":176265,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177264,"byte_end":177277,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"pragma_update","qualname":"<Connection>::pragma_update","value":"pub fn pragma_update<V>(&Self, Option<DatabaseName>, &str, V) -> Result<()>\nwhere V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name`.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177104,"byte_end":177141,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177146,"byte_end":177149,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return the updated value which cannot be retrieved","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177154,"byte_end":177226,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ with this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177231,"byte_end":177252,"line_start":246,"line_end":246,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177981,"byte_end":178004,"line_start":269,"line_end":269,"column_start":12,"column_end":35},"name":"pragma_update_and_check","qualname":"<Connection>::pragma_update_and_check","value":"pub fn pragma_update_and_check<F, T,\nV>(&Self, Option<DatabaseName>, &str, V, F) -> Result<T> where F: FnOnce(&Row)\n-> Result<T>, V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name` and return the updated value.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name` and return the updated value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177830,"byte_end":177896,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177901,"byte_end":177904,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Only few pragmas automatically return the updated value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":177909,"byte_end":177969,"line_start":268,"line_end":268,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190614,"byte_end":190618,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An handle for the resulting rows of a query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190489,"byte_end":190537,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"must_use = \"Rows is lazy and will do nothing unless consumed\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190538,"byte_end":190602,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191648,"byte_end":191652,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows>::next","value":"pub fn next(&mut Self) -> Result<Option<&Row>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Ok(Some(Row))` if\n there is another row, `Err(...)` if there was an error\n getting the next row, and `Ok(None)` if all rows have been retrieved.","sig":null,"attributes":[{"value":"/ Attempt to get the next row from the query. Returns `Ok(Some(Row))` if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190874,"byte_end":190948,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ there is another row, `Err(...)` if there was an error","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190953,"byte_end":191011,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/ getting the next row, and `Ok(None)` if all rows have been retrieved.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191016,"byte_end":191089,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191094,"byte_end":191097,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191102,"byte_end":191113,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191118,"byte_end":191121,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This interface is not compatible with Rust's `Iterator` trait, because","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191126,"byte_end":191200,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ the lifetime of the returned row is tied to the lifetime of `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191205,"byte_end":191276,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ This is a fallible \"streaming iterator\". For a more natural interface,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191281,"byte_end":191355,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ consider using [`query_map`](crate::Statement::query_map) or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191360,"byte_end":191424,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/ [`query_and_then`](crate::Statement::query_and_then) instead, which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191429,"byte_end":191500,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ return types that implement `Iterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191505,"byte_end":191548,"line_start":34,"line_end":34,"column_start":5,"column_end":48}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191553,"byte_end":191593,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191627,"byte_end":191636,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192217,"byte_end":192220,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"map","qualname":"<Rows>::map","value":"pub fn map<F, B>(Self, F) -> Map where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`Map`], which\n implements `FallibleIterator`.\n ```rust,no_run\n use fallible_iterator::FallibleIterator;\n # use rusqlite::{Result, Statement};\n fn query(stmt: &mut Statement) -> Result<Vec<i64>> {\n     let rows = stmt.query([])?;\n     rows.map(|r| r.get(0)).collect()\n }\n ```\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`Map`], which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191759,"byte_end":191818,"line_start":42,"line_end":42,"column_start":5,"column_end":64}},{"value":"/ implements `FallibleIterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191823,"byte_end":191857,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191862,"byte_end":191880,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191885,"byte_end":191929,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/ # use rusqlite::{Result, Statement};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191934,"byte_end":191974,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ fn query(stmt: &mut Statement) -> Result<Vec<i64>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":191979,"byte_end":192035,"line_start":47,"line_end":47,"column_start":5,"column_end":61}},{"value":"/     let rows = stmt.query([])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192040,"byte_end":192075,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/     rows.map(|r| r.get(0)).collect()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192080,"byte_end":192120,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192125,"byte_end":192130,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192135,"byte_end":192142,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192196,"byte_end":192205,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192477,"byte_end":192483,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"mapped","qualname":"<Rows>::mapped","value":"pub fn mapped<F, B>(Self, F) -> MappedRows where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`MappedRows`], which\n implements `Iterator`.\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`MappedRows`], which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192354,"byte_end":192420,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ implements `Iterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192425,"byte_end":192451,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192456,"byte_end":192465,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192834,"byte_end":192842,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Rows>::and_then","value":"pub fn and_then<F, T, E>(Self, F) -> AndThenRows where F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows` with a fallible function, converting it to a\n [`AndThenRows`], which implements `Iterator` (instead of\n `FallibleStreamingIterator`).\n","sig":null,"attributes":[{"value":"/ Map over this `Rows` with a fallible function, converting it to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192636,"byte_end":192705,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ [`AndThenRows`], which implements `Iterator` (instead of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192710,"byte_end":192770,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/ `FallibleStreamingIterator`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192775,"byte_end":192808,"line_start":73,"line_end":73,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":192813,"byte_end":192822,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193074,"byte_end":193080,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Rows>::as_ref","value":"pub fn as_ref(&Self) -> Option<&Statement>","parent":null,"children":[],"decl_id":null,"docs":" Give access to the underlying statement\n","sig":null,"attributes":[{"value":"/ Give access to the underlying statement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193003,"byte_end":193046,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193051,"byte_end":193062,"line_start":83,"line_end":83,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193819,"byte_end":193822,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"Map","qualname":"::row::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" `F` is used to transform the _streaming_ iterator into a _fallible_\n iterator.\n","sig":null,"attributes":[{"value":"/ `F` is used to transform the _streaming_ iterator into a _fallible_","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193656,"byte_end":193727,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193728,"byte_end":193741,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193742,"byte_end":193807,"line_start":116,"line_end":116,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194419,"byte_end":194429,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194193,"byte_end":194251,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194252,"byte_end":194255,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ `F` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194256,"byte_end":194327,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194328,"byte_end":194341,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194342,"byte_end":194407,"line_start":142,"line_end":142,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194996,"byte_end":195007,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query, with an Error type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194816,"byte_end":194893,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ unifying with Error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194894,"byte_end":194918,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194919,"byte_end":194984,"line_start":166,"line_end":166,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":196988,"byte_end":196991,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":837}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[{"value":"/ A single result row of a query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":196941,"byte_end":196976,"line_start":242,"line_end":242,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197560,"byte_end":197570,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"get_unwrap","qualname":"<Row>::get_unwrap","value":"pub fn get_unwrap<I: RowIndex, T: FromSql>(&Self, I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197079,"byte_end":197138,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197143,"byte_end":197146,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197151,"byte_end":197165,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197170,"byte_end":197173,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Panics if calling [`row.get(idx)`](Row::get) would return an error,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197178,"byte_end":197249,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ including:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197254,"byte_end":197268,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197273,"byte_end":197276,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ * If the underlying SQLite column type is not a valid type as a source","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197281,"byte_end":197355,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/   for `T`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197360,"byte_end":197373,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ * If the underlying SQLite integral value is outside the range","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197378,"byte_end":197444,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/   representable by `T`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197449,"byte_end":197475,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ * If `idx` is outside the range of columns in the returned query","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197480,"byte_end":197548,"line_start":259,"line_end":259,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198366,"byte_end":198369,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"get","qualname":"<Row>::get","value":"pub fn get<I: RowIndex, T: FromSql>(&Self, I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197660,"byte_end":197719,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197724,"byte_end":197727,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197732,"byte_end":197746,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197751,"byte_end":197754,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnType` if the underlying SQLite column","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197759,"byte_end":197832,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ type is not a valid type as a source for `T`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197837,"byte_end":197886,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197891,"byte_end":197894,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197899,"byte_end":197971,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197976,"byte_end":198006,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198011,"byte_end":198014,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198019,"byte_end":198091,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198096,"byte_end":198118,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198123,"byte_end":198126,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the result type is i128 (which requires the `i128_blob` feature to be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198131,"byte_end":198207,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ enabled), and the underlying SQLite column is a blob whose size is not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198212,"byte_end":198286,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ 16 bytes, `Error::InvalidColumnType` will also be returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":198291,"byte_end":198354,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199886,"byte_end":199893,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Row>::get_ref","value":"pub fn get_ref<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199163,"byte_end":199238,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199243,"byte_end":199301,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199306,"byte_end":199309,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199314,"byte_end":199389,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199394,"byte_end":199466,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ it can be somewhat difficult to use, and most callers will be better","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199471,"byte_end":199543,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ served by [`get`](Row::get) or [`get_unwrap`](Row::get_unwrap).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199548,"byte_end":199615,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199620,"byte_end":199623,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199628,"byte_end":199642,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199647,"byte_end":199650,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199655,"byte_end":199727,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199732,"byte_end":199762,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199767,"byte_end":199770,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199775,"byte_end":199847,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":199852,"byte_end":199874,"line_start":313,"line_end":313,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200999,"byte_end":201013,"line_start":338,"line_end":338,"column_start":12,"column_end":26},"name":"get_ref_unwrap","qualname":"<Row>::get_ref_unwrap","value":"pub fn get_ref_unwrap<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200264,"byte_end":200339,"line_start":323,"line_end":323,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200344,"byte_end":200402,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200407,"byte_end":200410,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200415,"byte_end":200490,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200495,"byte_end":200567,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ it can be difficult to use, and most callers will be better served by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200572,"byte_end":200645,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ [`get`](Row::get) or [`get_unwrap`](Row::get_unwrap).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200650,"byte_end":200707,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200712,"byte_end":200715,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200720,"byte_end":200734,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200739,"byte_end":200742,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Panics if calling [`row.get_ref(idx)`](Row::get_ref) would return an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200747,"byte_end":200819,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/ error, including:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200824,"byte_end":200845,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200850,"byte_end":200853,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ * If `idx` is outside the range of columns in the returned query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200858,"byte_end":200927,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ * If `idx` is not a valid column name for this row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":200932,"byte_end":200987,"line_start":337,"line_end":337,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201234,"byte_end":201249,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row>::get_raw_checked","value":"pub fn get_raw_checked<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [`get_ref`](Row::get_ref).\n","sig":null,"attributes":[{"value":"/ Renamed to [`get_ref`](Row::get_ref).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201106,"byte_end":201147,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"deprecated = \"Use [`get_ref`](Row::get_ref) instead.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201152,"byte_end":201208,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201213,"byte_end":201222,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201497,"byte_end":201504,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row>::get_raw","value":"pub fn get_raw<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [`get_ref_unwrap`](Row::get_ref_unwrap).\n","sig":null,"attributes":[{"value":"/ Renamed to [`get_ref_unwrap`](Row::get_ref_unwrap).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201341,"byte_end":201396,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"deprecated = \"Use [`get_ref_unwrap`](Row::get_ref_unwrap) instead.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201401,"byte_end":201471,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201476,"byte_end":201485,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201872,"byte_end":201878,"line_start":366,"line_end":366,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::row::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" This trait exists just to ensure that the only impls of `trait Params`\n that are allowed are ones in this crate.\n","sig":null,"attributes":[{"value":"/ This trait exists just to ensure that the only impls of `trait Params`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201734,"byte_end":201808,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ that are allowed are ones in this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201813,"byte_end":201857,"line_start":365,"line_end":365,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202078,"byte_end":202086,"line_start":374,"line_end":374,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex: sealed::Sealed","parent":null,"children":[{"krate":0,"index":863}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.","sig":null,"attributes":[{"value":"/ A trait implemented by types that can index into columns of a row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201942,"byte_end":202012,"line_start":371,"line_end":371,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202013,"byte_end":202016,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ It is only implemented for `usize` and `&str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202017,"byte_end":202067,"line_start":373,"line_end":373,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202209,"byte_end":202212,"line_start":377,"line_end":377,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"pub fn idx(&Self, &Statement) -> Result<usize>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[{"value":"/ Returns the index of the appropriate column, or `None` if no such","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202109,"byte_end":202178,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ column exists.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202183,"byte_end":202201,"line_start":376,"line_end":376,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207779,"byte_end":207788,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[{"value":"/ A prepared statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207742,"byte_end":207767,"line_start":17,"line_end":17,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210308,"byte_end":210315,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement>::execute","value":"pub fn execute<P: Params>(&mut Self, P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[{"value":"/ Execute the prepared statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207890,"byte_end":207925,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207930,"byte_end":207933,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207938,"byte_end":208013,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208018,"byte_end":208054,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208059,"byte_end":208062,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208067,"byte_end":208081,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208086,"byte_end":208089,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208094,"byte_end":208132,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208137,"byte_end":208140,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208145,"byte_end":208163,"line_start":33,"line_end":33,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208168,"byte_end":208217,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208222,"byte_end":208275,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"/     let mut stmt = conn.prepare(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208280,"byte_end":208361,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/     // The `rusqlite::params!` macro is mostly useful when the parameters do not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208366,"byte_end":208450,"line_start":37,"line_end":37,"column_start":5,"column_end":89}},{"value":"/     // all have the same type, or if there are more than 32 parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208455,"byte_end":208529,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/     // at once.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208534,"byte_end":208553,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/     stmt.execute(params![1i32])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208558,"byte_end":208595,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/     // However, it's not required, many cases are fine as:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208600,"byte_end":208662,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/     stmt.execute(&[&2i32])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208667,"byte_end":208699,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/     // Or even:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208704,"byte_end":208723,"line_start":43,"line_end":43,"column_start":5,"column_end":24}},{"value":"/     stmt.execute([2i32])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208728,"byte_end":208758,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208763,"byte_end":208777,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208782,"byte_end":208787,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208792,"byte_end":208799,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208804,"byte_end":208807,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ### Use with named parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208812,"byte_end":208845,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208850,"byte_end":208853,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208858,"byte_end":208876,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208881,"byte_end":208936,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/ fn insert(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208941,"byte_end":208989,"line_start":53,"line_end":53,"column_start":5,"column_end":53}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (key, value) VALUES (:key, :value)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":208994,"byte_end":209086,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/     // The `rusqlite::named_params!` macro (like `params!`) is useful for heterogeneous","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209091,"byte_end":209182,"line_start":55,"line_end":55,"column_start":5,"column_end":96}},{"value":"/     // sets of parameters (where all parameters are not the same type), or for queries","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209187,"byte_end":209277,"line_start":56,"line_end":56,"column_start":5,"column_end":95}},{"value":"/     // with many (more than 32) statically known parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209282,"byte_end":209346,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/     stmt.execute(named_params! { \":key\": \"one\", \":val\": 2 })?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209351,"byte_end":209417,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/     // However, named parameters can also be passed like:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209422,"byte_end":209483,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/     stmt.execute(&[(\":key\", \"three\"), (\":val\", \"four\")])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209488,"byte_end":209550,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     // Or even: (note that a &T is required for the value type, currently)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209555,"byte_end":209633,"line_start":61,"line_end":61,"column_start":5,"column_end":83}},{"value":"/     stmt.execute(&[(\":key\", &100), (\":val\", &200)])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209638,"byte_end":209695,"line_start":62,"line_end":62,"column_start":5,"column_end":62}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209700,"byte_end":209714,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209719,"byte_end":209724,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209729,"byte_end":209736,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209741,"byte_end":209744,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ### Use without parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209749,"byte_end":209779,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209784,"byte_end":209787,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209792,"byte_end":209810,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209815,"byte_end":209864,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/ fn delete_all(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209869,"byte_end":209921,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/     let mut stmt = conn.prepare(\"DELETE FROM users\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209926,"byte_end":209984,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/     stmt.execute([])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209989,"byte_end":210015,"line_start":73,"line_end":73,"column_start":5,"column_end":31}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210020,"byte_end":210034,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210039,"byte_end":210044,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210049,"byte_end":210056,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210061,"byte_end":210064,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210069,"byte_end":210082,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210087,"byte_end":210090,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210095,"byte_end":210168,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210173,"byte_end":210244,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210249,"byte_end":210282,"line_start":82,"line_end":82,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210287,"byte_end":210296,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211366,"byte_end":211379,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement>::execute_named","value":"pub fn execute_named(&mut Self, &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s).","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210457,"byte_end":210516,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210521,"byte_end":210524,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::execute`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210529,"byte_end":210602,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210607,"byte_end":210656,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210661,"byte_end":210664,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210669,"byte_end":210743,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210748,"byte_end":210820,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `execute_named`, or `NULL` if they have never","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210825,"byte_end":210898,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ been bound.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210903,"byte_end":210918,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210923,"byte_end":210926,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210931,"byte_end":211006,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211011,"byte_end":211047,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211052,"byte_end":211055,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211060,"byte_end":211073,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211078,"byte_end":211081,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211086,"byte_end":211159,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211164,"byte_end":211235,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211240,"byte_end":211273,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"deprecated = \"You can use `execute` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211278,"byte_end":211340,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211345,"byte_end":211354,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212045,"byte_end":212051,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement>::insert","value":"pub fn insert<P: Params>(&mut Self, P) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[{"value":"/ Execute an INSERT and return the ROWID.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211481,"byte_end":211524,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211529,"byte_end":211532,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211537,"byte_end":211547,"line_start":115,"line_end":115,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211552,"byte_end":211555,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211560,"byte_end":211609,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/ [`execute()`](Statement::execute) intended for queries that insert a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211614,"byte_end":211686,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ single item. It is possible to misuse this function in a way that it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211691,"byte_end":211763,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ cannot detect, such as by calling it on a statement which _updates_","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211768,"byte_end":211839,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ a single item rather than inserting one. Please don't do that.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211844,"byte_end":211910,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211915,"byte_end":211918,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211923,"byte_end":211936,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211941,"byte_end":211944,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if no row is inserted or many rows are inserted.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":211949,"byte_end":212019,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212024,"byte_end":212033,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215247,"byte_end":215252,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement>::query","value":"pub fn query<P: Params>(&mut Self, P) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement, returning a handle to the resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212304,"byte_end":212375,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ rows.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212380,"byte_end":212389,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212394,"byte_end":212397,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Due to lifetime restrictions, the rows handle returned by `query` does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212402,"byte_end":212476,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ not implement the `Iterator` trait. Consider using","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212481,"byte_end":212535,"line_start":139,"line_end":139,"column_start":5,"column_end":59}},{"value":"/ [`query_map`](Statement::query_map) or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212540,"byte_end":212582,"line_start":140,"line_end":140,"column_start":5,"column_end":47}},{"value":"/ [`query_and_then`](Statement::query_and_then) instead, which do.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212587,"byte_end":212655,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212660,"byte_end":212663,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212668,"byte_end":212682,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212687,"byte_end":212690,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ### Use without parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212695,"byte_end":212725,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212730,"byte_end":212733,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212738,"byte_end":212756,"line_start":147,"line_end":147,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212761,"byte_end":212802,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212807,"byte_end":212867,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212872,"byte_end":212936,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/     let mut rows = stmt.query([])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212941,"byte_end":212980,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212985,"byte_end":212988,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":212993,"byte_end":213028,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213033,"byte_end":213077,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/         names.push(row.get(0)?);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213082,"byte_end":213118,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213123,"byte_end":213132,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213137,"byte_end":213140,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213145,"byte_end":213162,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213167,"byte_end":213172,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213177,"byte_end":213184,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213189,"byte_end":213192,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213197,"byte_end":213235,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213240,"byte_end":213243,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213248,"byte_end":213266,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213271,"byte_end":213312,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection, name: &str) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213317,"byte_end":213376,"line_start":166,"line_end":166,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = ?\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213381,"byte_end":213455,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/     let mut rows = stmt.query(rusqlite::params![name])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213460,"byte_end":213520,"line_start":168,"line_end":168,"column_start":5,"column_end":65}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213525,"byte_end":213569,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213574,"byte_end":213592,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213597,"byte_end":213606,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213611,"byte_end":213625,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213630,"byte_end":213635,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213640,"byte_end":213647,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213652,"byte_end":213655,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Or, equivalently (but without the [`params!`] macro).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213660,"byte_end":213717,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213722,"byte_end":213725,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213730,"byte_end":213748,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213753,"byte_end":213794,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection, name: &str) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213799,"byte_end":213858,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = ?\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213863,"byte_end":213937,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/     let mut rows = stmt.query([name])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213942,"byte_end":213985,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":213990,"byte_end":214034,"line_start":183,"line_end":183,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214039,"byte_end":214057,"line_start":184,"line_end":184,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214062,"byte_end":214071,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214076,"byte_end":214090,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214095,"byte_end":214100,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214105,"byte_end":214112,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214117,"byte_end":214120,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ### Use with named parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214125,"byte_end":214158,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214163,"byte_end":214166,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214171,"byte_end":214189,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214194,"byte_end":214235,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214240,"byte_end":214287,"line_start":194,"line_end":194,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214292,"byte_end":214370,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query(&[(\":name\", \"one\")])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214375,"byte_end":214431,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214436,"byte_end":214480,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214485,"byte_end":214503,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214508,"byte_end":214517,"line_start":199,"line_end":199,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214522,"byte_end":214536,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214541,"byte_end":214546,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214551,"byte_end":214558,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214563,"byte_end":214566,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params!` macro is provided for syntactic convenience,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214571,"byte_end":214645,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214650,"byte_end":214704,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214709,"byte_end":214712,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214717,"byte_end":214735,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214740,"byte_end":214795,"line_start":208,"line_end":208,"column_start":5,"column_end":60}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214800,"byte_end":214847,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214852,"byte_end":214930,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query(named_params! { \":name\": \"one\" })?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":214935,"byte_end":215004,"line_start":211,"line_end":211,"column_start":5,"column_end":74}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215009,"byte_end":215053,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215058,"byte_end":215076,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215081,"byte_end":215090,"line_start":214,"line_end":214,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215095,"byte_end":215109,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215114,"byte_end":215119,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215124,"byte_end":215131,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215136,"byte_end":215139,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215144,"byte_end":215158,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215163,"byte_end":215166,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215171,"byte_end":215221,"line_start":221,"line_end":221,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215226,"byte_end":215235,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216054,"byte_end":216065,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement>::query_named","value":"pub fn query_named(&mut Self, &[(&str, &dyn ToSql)]) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215380,"byte_end":215451,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ handle for the resulting rows.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215456,"byte_end":215490,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215495,"byte_end":215498,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::query`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215503,"byte_end":215574,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215579,"byte_end":215628,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215633,"byte_end":215636,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215641,"byte_end":215715,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215720,"byte_end":215792,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `query_named`, or `NULL` if they have never been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215797,"byte_end":215873,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ bound.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215878,"byte_end":215888,"line_start":237,"line_end":237,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215893,"byte_end":215896,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215901,"byte_end":215914,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215919,"byte_end":215922,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215927,"byte_end":215977,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":215982,"byte_end":216042,"line_start":242,"line_end":242,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217660,"byte_end":217669,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement>::query_map","value":"pub fn query_map<T, P, F>(&mut Self, P, F) -> Result<MappedRows<, F>> where\nP: Params, F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216168,"byte_end":216242,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ rows, returning an iterator over the mapped function results.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216247,"byte_end":216312,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216317,"byte_end":216320,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `f` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216325,"byte_end":216396,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216401,"byte_end":216414,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216419,"byte_end":216422,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `stmt.query(params)?.mapped(f)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216427,"byte_end":216485,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216490,"byte_end":216493,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216498,"byte_end":216512,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216517,"byte_end":216520,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional params","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216525,"byte_end":216559,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216564,"byte_end":216567,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216572,"byte_end":216590,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216595,"byte_end":216636,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216641,"byte_end":216701,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216706,"byte_end":216770,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/     let rows = stmt.query_map([], |row| row.get(0))?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216775,"byte_end":216832,"line_start":263,"line_end":263,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216837,"byte_end":216840,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216845,"byte_end":216880,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216885,"byte_end":216918,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216923,"byte_end":216960,"line_start":267,"line_end":267,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216965,"byte_end":216974,"line_start":268,"line_end":268,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216979,"byte_end":216982,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":216987,"byte_end":217004,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217009,"byte_end":217014,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217019,"byte_end":217026,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217031,"byte_end":217034,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ### Use with named params","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217039,"byte_end":217068,"line_start":274,"line_end":274,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217073,"byte_end":217076,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217081,"byte_end":217099,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217104,"byte_end":217145,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217150,"byte_end":217210,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217215,"byte_end":217294,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_map(&[(\":id\", &\"one\")], |row| row.get(0))?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217299,"byte_end":217372,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217377,"byte_end":217380,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217385,"byte_end":217420,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217425,"byte_end":217458,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217463,"byte_end":217500,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217505,"byte_end":217514,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217519,"byte_end":217522,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217527,"byte_end":217544,"line_start":287,"line_end":287,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217549,"byte_end":217554,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217559,"byte_end":217566,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217571,"byte_end":217585,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217590,"byte_end":217593,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217598,"byte_end":217648,"line_start":292,"line_end":292,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218720,"byte_end":218735,"line_start":320,"line_end":320,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement>::query_map_named","value":"pub fn query_map_named<T, F>(&mut Self, &[(&str, &dyn ToSql)], F)\n-> Result<MappedRows<, F>> where F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217877,"byte_end":217949,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":217954,"byte_end":218023,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ query's rows.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218028,"byte_end":218045,"line_start":303,"line_end":303,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218050,"byte_end":218053,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::query_map`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218058,"byte_end":218133,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218138,"byte_end":218187,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218192,"byte_end":218195,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218200,"byte_end":218257,"line_start":308,"line_end":308,"column_start":5,"column_end":62}},{"value":"/ are not included in `params`, they will continue to use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218262,"byte_end":218325,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ most-recently bound value from a previous call to `query_named`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218330,"byte_end":218398,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ or `NULL` if they have never been bound.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218403,"byte_end":218447,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218452,"byte_end":218455,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ `f` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218460,"byte_end":218531,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218536,"byte_end":218549,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218554,"byte_end":218557,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218562,"byte_end":218576,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218581,"byte_end":218584,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218589,"byte_end":218639,"line_start":318,"line_end":318,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query_map` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218644,"byte_end":218708,"line_start":319,"line_end":319,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220738,"byte_end":220752,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement>::query_and_then","value":"pub fn query_and_then<T, E, P, F>(&mut Self, P, F) -> Result<AndThenRows<, F>>\nwhere P: Params, E: convert::From<Error>, F: FnMut(&Row) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":218952,"byte_end":219026,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ rows, where the function returns a `Result` with `Error` type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219031,"byte_end":219096,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/ implementing `std::convert::From<Error>` (so errors can be unified).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219101,"byte_end":219173,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219178,"byte_end":219181,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `stmt.query(params)?.and_then(f)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219186,"byte_end":219246,"line_start":335,"line_end":335,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219251,"byte_end":219254,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219259,"byte_end":219273,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219278,"byte_end":219281,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ### Use with named params","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219286,"byte_end":219315,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219320,"byte_end":219323,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219328,"byte_end":219346,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219351,"byte_end":219392,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"/ struct Person {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219397,"byte_end":219416,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219421,"byte_end":219442,"line_start":344,"line_end":344,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219447,"byte_end":219453,"line_start":345,"line_end":345,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219458,"byte_end":219461,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn name_to_person(name: String) -> Result<Person> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219466,"byte_end":219521,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/     // ... check for valid name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219526,"byte_end":219561,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     Ok(Person { name })","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219566,"byte_end":219593,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219598,"byte_end":219603,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219608,"byte_end":219611,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<Person>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219616,"byte_end":219676,"line_start":352,"line_end":352,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219681,"byte_end":219760,"line_start":353,"line_end":353,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_and_then(&[(\":id\", \"one\")], |row| name_to_person(row.get(0)?))?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219765,"byte_end":219859,"line_start":354,"line_end":354,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219864,"byte_end":219867,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219872,"byte_end":219909,"line_start":356,"line_end":356,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219914,"byte_end":219949,"line_start":357,"line_end":357,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":219954,"byte_end":219995,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220000,"byte_end":220009,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220014,"byte_end":220017,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220022,"byte_end":220041,"line_start":361,"line_end":361,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220046,"byte_end":220051,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220056,"byte_end":220063,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220068,"byte_end":220071,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional params","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220076,"byte_end":220110,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220115,"byte_end":220118,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220123,"byte_end":220141,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220146,"byte_end":220187,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220192,"byte_end":220252,"line_start":369,"line_end":369,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = ?\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220257,"byte_end":220334,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/     let rows = stmt.query_and_then([\"one\"], |row| row.get::<_, String>(0))?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220339,"byte_end":220419,"line_start":371,"line_end":371,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220424,"byte_end":220427,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220432,"byte_end":220469,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220474,"byte_end":220509,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220514,"byte_end":220555,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220560,"byte_end":220569,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220574,"byte_end":220577,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220582,"byte_end":220601,"line_start":378,"line_end":378,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220606,"byte_end":220611,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220616,"byte_end":220623,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220628,"byte_end":220631,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220636,"byte_end":220649,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220654,"byte_end":220657,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220662,"byte_end":220712,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":220717,"byte_end":220726,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221761,"byte_end":221781,"line_start":412,"line_end":412,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement>::query_and_then_named","value":"pub fn query_and_then_named<T, E, F>(&mut Self, &[(&str, &dyn ToSql)], F)\n-> Result<AndThenRows<, F>> where E: convert::From<Error>, F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221002,"byte_end":221074,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221079,"byte_end":221148,"line_start":396,"line_end":396,"column_start":5,"column_end":74}},{"value":"/ query's rows.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221153,"byte_end":221170,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221175,"byte_end":221178,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221183,"byte_end":221232,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/ [`Statement::query_and_then`], which can now take named parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221237,"byte_end":221307,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221312,"byte_end":221325,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221330,"byte_end":221333,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221338,"byte_end":221412,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221417,"byte_end":221489,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `query_named`, or `NULL` if they have never been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221494,"byte_end":221570,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ bound.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221575,"byte_end":221585,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221590,"byte_end":221593,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221598,"byte_end":221612,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221617,"byte_end":221620,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221625,"byte_end":221675,"line_start":410,"line_end":410,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query_and_then` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":221680,"byte_end":221749,"line_start":411,"line_end":411,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222208,"byte_end":222214,"line_start":427,"line_end":427,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement>::exists","value":"pub fn exists<P: Params>(&mut Self, P) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[{"value":"/ Return `true` if a query in the SQL statement it executes returns one","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222043,"byte_end":222116,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ or more rows and `false` if the SQL returns an empty set.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222121,"byte_end":222182,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222187,"byte_end":222196,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223015,"byte_end":223024,"line_start":448,"line_end":448,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement>::query_row","value":"pub fn query_row<T, P, F>(&mut Self, P, F) -> Result<T> where P: Params,\nF: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222385,"byte_end":222455,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222460,"byte_end":222475,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222480,"byte_end":222483,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222488,"byte_end":222561,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222566,"byte_end":222578,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222583,"byte_end":222586,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222591,"byte_end":222664,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222669,"byte_end":222710,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ [`.optional()`](crate::OptionalExtension::optional) on the result of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222715,"byte_end":222787,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>` (requires that the trait","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222792,"byte_end":222854,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/ `rusqlite::OptionalExtension` is imported).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222859,"byte_end":222906,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222911,"byte_end":222914,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222919,"byte_end":222932,"line_start":445,"line_end":445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222937,"byte_end":222940,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":222945,"byte_end":223003,"line_start":447,"line_end":447,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224195,"byte_end":224210,"line_start":479,"line_end":479,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Statement>::query_row_named","value":"pub fn query_row_named<T, F>(&mut Self, &[(&str, &dyn ToSql)], F) -> Result<T>\nwhere F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223252,"byte_end":223325,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223330,"byte_end":223366,"line_start":459,"line_end":459,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223371,"byte_end":223374,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223379,"byte_end":223428,"line_start":461,"line_end":461,"column_start":5,"column_end":54}},{"value":"/ [`Statement::query_and_then`], which can now take named parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223433,"byte_end":223503,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223508,"byte_end":223521,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223526,"byte_end":223529,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223534,"byte_end":223607,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223612,"byte_end":223624,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223629,"byte_end":223632,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223637,"byte_end":223710,"line_start":468,"line_end":468,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223715,"byte_end":223756,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ [`.optional()`](crate::OptionalExtension::optional) on the result of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223761,"byte_end":223833,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>` (requires that the trait","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223838,"byte_end":223900,"line_start":471,"line_end":471,"column_start":5,"column_end":67}},{"value":"/ `rusqlite::OptionalExtension` is imported).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223905,"byte_end":223952,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223957,"byte_end":223960,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223965,"byte_end":223978,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223983,"byte_end":223986,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":223991,"byte_end":224066,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224071,"byte_end":224114,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `query_row` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224119,"byte_end":224183,"line_start":478,"line_end":478,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224658,"byte_end":224666,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement>::finalize","value":"pub fn finalize(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[{"value":"/ Consumes the statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224381,"byte_end":224408,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224413,"byte_end":224416,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224421,"byte_end":224489,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224494,"byte_end":224535,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224540,"byte_end":224543,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224548,"byte_end":224561,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224566,"byte_end":224569,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224574,"byte_end":224632,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224637,"byte_end":224646,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225485,"byte_end":225500,"line_start":519,"line_end":519,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement>::parameter_index","value":"pub fn parameter_index(&Self, &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the (one-based) index of an SQL parameter given its name.","sig":null,"attributes":[{"value":"/ Return the (one-based) index of an SQL parameter given its name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224729,"byte_end":224797,"line_start":499,"line_end":499,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224802,"byte_end":224805,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Note that the initial \":\" or \"$\" or \"@\" or \"?\" used to specify the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224810,"byte_end":224880,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ parameter is included as part of the name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224885,"byte_end":224931,"line_start":502,"line_end":502,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224936,"byte_end":224939,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224944,"byte_end":224962,"line_start":504,"line_end":504,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":224967,"byte_end":225008,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225013,"byte_end":225062,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225067,"byte_end":225144,"line_start":507,"line_end":507,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_index(\":example\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225149,"byte_end":225203,"line_start":508,"line_end":508,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(index, Some(1));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225208,"byte_end":225243,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225248,"byte_end":225262,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225267,"byte_end":225272,"line_start":511,"line_end":511,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225277,"byte_end":225284,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225289,"byte_end":225292,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225297,"byte_end":225310,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225315,"byte_end":225318,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Will return Err if `name` is invalid. Will return Ok(None) if the name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225323,"byte_end":225397,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ is valid but not a bound parameter of this statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225402,"byte_end":225459,"line_start":517,"line_end":517,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225464,"byte_end":225473,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226243,"byte_end":226257,"line_start":541,"line_end":541,"column_start":12,"column_end":26},"name":"parameter_name","qualname":"<Statement>::parameter_name","value":"pub fn parameter_name(&Self, usize) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the SQL parameter name given its (one-based) index (the inverse\n of [`Statement::parameter_index`]).","sig":null,"attributes":[{"value":"/ Return the SQL parameter name given its (one-based) index (the inverse","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225607,"byte_end":225681,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ of [`Statement::parameter_index`]).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225686,"byte_end":225725,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225730,"byte_end":225733,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225738,"byte_end":225756,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225761,"byte_end":225802,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225807,"byte_end":225856,"line_start":528,"line_end":528,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225861,"byte_end":225938,"line_start":529,"line_end":529,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_name(1);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225943,"byte_end":225986,"line_start":530,"line_end":530,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(index, Some(\":example\"));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":225991,"byte_end":226035,"line_start":531,"line_end":531,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226040,"byte_end":226054,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226059,"byte_end":226064,"line_start":533,"line_end":533,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226069,"byte_end":226076,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226081,"byte_end":226084,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226089,"byte_end":226102,"line_start":536,"line_end":536,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226107,"byte_end":226110,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if the column index is out of bounds or if the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226115,"byte_end":226184,"line_start":538,"line_end":538,"column_start":5,"column_end":74}},{"value":"/ parameter is positional.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226189,"byte_end":226217,"line_start":539,"line_end":539,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":226222,"byte_end":226231,"line_start":540,"line_end":540,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227671,"byte_end":227686,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"parameter_count","qualname":"<Statement>::parameter_count","value":"pub fn parameter_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of parameters that can be bound to this statement.\n","sig":null,"attributes":[{"value":"/ Return the number of parameters that can be bound to this statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227573,"byte_end":227645,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227650,"byte_end":227659,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229345,"byte_end":229363,"line_start":630,"line_end":630,"column_start":12,"column_end":30},"name":"raw_bind_parameter","qualname":"<Statement>::raw_bind_parameter","value":"pub fn raw_bind_parameter<T: ToSql>(&mut Self, usize, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to directly bind a parameter to a given index.","sig":null,"attributes":[{"value":"/ Low level API to directly bind a parameter to a given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227757,"byte_end":227821,"line_start":591,"line_end":591,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227826,"byte_end":227829,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the index is one-based, that is, the first parameter index is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227834,"byte_end":227909,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ 1 and not 0. This is consistent with the SQLite API and the values given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227914,"byte_end":227990,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ to parameters bound as `?NNN`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":227995,"byte_end":228029,"line_start":595,"line_end":595,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228034,"byte_end":228037,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ The valid values for `one_based_col_index` begin at `1`, and end at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228042,"byte_end":228113,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/ [`Statement::parameter_count`], inclusive.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228118,"byte_end":228164,"line_start":598,"line_end":598,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228169,"byte_end":228172,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228177,"byte_end":228190,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228195,"byte_end":228198,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used, but is available for special cases","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228203,"byte_end":228276,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ such as:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228281,"byte_end":228293,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228298,"byte_end":228301,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ - binding parameters where a gap exists.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228306,"byte_end":228350,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/ - binding named and positional parameters in the same query.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228355,"byte_end":228419,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/ - separating parameter binding from query execution.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228424,"byte_end":228480,"line_start":607,"line_end":607,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228485,"byte_end":228488,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Statements that have had their parameters bound this way should be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228493,"byte_end":228563,"line_start":609,"line_end":609,"column_start":5,"column_end":75}},{"value":"/ queried or executed by [`Statement::raw_query`] or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228568,"byte_end":228622,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/ [`Statement::raw_execute`]. Other functions are not guaranteed to work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228627,"byte_end":228702,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228707,"byte_end":228710,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228715,"byte_end":228728,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228733,"byte_end":228736,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228741,"byte_end":228759,"line_start":615,"line_end":615,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228764,"byte_end":228805,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228810,"byte_end":228857,"line_start":617,"line_end":617,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test WHERE name = :name AND value > ?2\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228862,"byte_end":228955,"line_start":618,"line_end":618,"column_start":5,"column_end":98}},{"value":"/     let name_index = stmt.parameter_index(\":name\")?.expect(\"No such parameter\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":228960,"byte_end":229044,"line_start":619,"line_end":619,"column_start":5,"column_end":89}},{"value":"/     stmt.raw_bind_parameter(name_index, \"foo\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229049,"byte_end":229101,"line_start":620,"line_end":620,"column_start":5,"column_end":57}},{"value":"/     stmt.raw_bind_parameter(2, 100)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229106,"byte_end":229147,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/     let mut rows = stmt.raw_query();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229152,"byte_end":229192,"line_start":622,"line_end":622,"column_start":5,"column_end":45}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229197,"byte_end":229241,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229246,"byte_end":229264,"line_start":624,"line_end":624,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229269,"byte_end":229278,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229283,"byte_end":229297,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229302,"byte_end":229307,"line_start":627,"line_end":627,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229312,"byte_end":229319,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229324,"byte_end":229333,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230274,"byte_end":230285,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"raw_execute","qualname":"<Statement>::raw_execute","value":"pub fn raw_execute(&mut Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to execute a statement given that all parameters were\n bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to execute a statement given that all parameters were","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229658,"byte_end":229729,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229734,"byte_end":229802,"line_start":641,"line_end":641,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229807,"byte_end":229810,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229815,"byte_end":229828,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229833,"byte_end":229836,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229841,"byte_end":229900,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229905,"byte_end":229908,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229913,"byte_end":229980,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::execute`] family should be preferred.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":229985,"byte_end":230056,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230061,"byte_end":230064,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230069,"byte_end":230082,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230087,"byte_end":230090,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the executed statement returns rows (in which case","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230095,"byte_end":230170,"line_start":652,"line_end":652,"column_start":5,"column_end":80}},{"value":"/ `query` should be used instead), or the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230175,"byte_end":230248,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230253,"byte_end":230262,"line_start":654,"line_end":654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230921,"byte_end":230930,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"raw_query","qualname":"<Statement>::raw_query","value":"pub fn raw_query(&mut Self) -> Rows","parent":null,"children":[],"decl_id":null,"docs":" Low level API to get `Rows` for this query given that all parameters\n were bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to get `Rows` for this query given that all parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230372,"byte_end":230444,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ were bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230449,"byte_end":230522,"line_start":660,"line_end":660,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230527,"byte_end":230530,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230535,"byte_end":230548,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230553,"byte_end":230556,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230561,"byte_end":230620,"line_start":664,"line_end":664,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230625,"byte_end":230628,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230633,"byte_end":230700,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::query`] family should be preferred.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230705,"byte_end":230774,"line_start":667,"line_end":667,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230779,"byte_end":230782,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Note that if the SQL does not return results, [`Statement::raw_execute`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230787,"byte_end":230863,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ should be used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230868,"byte_end":230895,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":230900,"byte_end":230909,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":234805,"byte_end":234817,"line_start":779,"line_end":779,"column_start":12,"column_end":24},"name":"expanded_sql","qualname":"<Statement>::expanded_sql","value":"pub fn expanded_sql(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string containing the SQL text of prepared statement with\n bound parameters expanded.\n","sig":null,"attributes":[{"value":"/ Returns a string containing the SQL text of prepared statement with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":234588,"byte_end":234659,"line_start":775,"line_end":775,"column_start":5,"column_end":76}},{"value":"/ bound parameters expanded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":234664,"byte_end":234694,"line_start":776,"line_end":776,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":234699,"byte_end":234732,"line_start":777,"line_end":777,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":235050,"byte_end":235060,"line_start":787,"line_end":787,"column_start":12,"column_end":22},"name":"get_status","qualname":"<Statement>::get_status","value":"pub fn get_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the value for one of the status counters for this statement.\n","sig":null,"attributes":[{"value":"/ Get the value for one of the status counters for this statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":234956,"byte_end":235024,"line_start":785,"line_end":785,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":235029,"byte_end":235038,"line_start":786,"line_end":786,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":235305,"byte_end":235317,"line_start":794,"line_end":794,"column_start":12,"column_end":24},"name":"reset_status","qualname":"<Statement>::reset_status","value":"pub fn reset_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Reset the value of one of the status counters for this statement,\n returning the value it had before resetting.\n","sig":null,"attributes":[{"value":"/ Reset the value of one of the status counters for this statement,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":235157,"byte_end":235226,"line_start":791,"line_end":791,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":235231,"byte_end":235240,"line_start":792,"line_end":792,"column_start":5,"column_end":14}},{"value":"/ returning the value it had before resetting.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":235245,"byte_end":235293,"line_start":793,"line_end":793,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240048,"byte_end":240060,"line_start":938,"line_end":938,"column_start":5,"column_end":17},"name":"FullscanStep","qualname":"::statement::StatementStatus::FullscanStep","value":"StatementStatus::FullscanStep","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239994,"byte_end":240043,"line_start":937,"line_end":937,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240115,"byte_end":240119,"line_start":940,"line_end":940,"column_start":5,"column_end":9},"name":"Sort","qualname":"::statement::StatementStatus::Sort","value":"StatementStatus::Sort","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_SORT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_SORT","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240070,"byte_end":240110,"line_start":939,"line_end":939,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240179,"byte_end":240188,"line_start":942,"line_end":942,"column_start":5,"column_end":14},"name":"AutoIndex","qualname":"::statement::StatementStatus::AutoIndex","value":"StatementStatus::AutoIndex","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_AUTOINDEX","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240129,"byte_end":240174,"line_start":941,"line_end":941,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240246,"byte_end":240252,"line_start":944,"line_end":944,"column_start":5,"column_end":11},"name":"VmStep","qualname":"::statement::StatementStatus::VmStep","value":"StatementStatus::VmStep","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_VM_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_VM_STEP","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240198,"byte_end":240241,"line_start":943,"line_end":943,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240312,"byte_end":240321,"line_start":946,"line_end":946,"column_start":5,"column_end":14},"name":"RePrepare","qualname":"::statement::StatementStatus::RePrepare","value":"StatementStatus::RePrepare","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_REPREPARE\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_REPREPARE","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240262,"byte_end":240307,"line_start":945,"line_end":945,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240375,"byte_end":240378,"line_start":948,"line_end":948,"column_start":5,"column_end":8},"name":"Run","qualname":"::statement::StatementStatus::Run","value":"StatementStatus::Run","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_RUN\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_RUN","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240331,"byte_end":240370,"line_start":947,"line_end":947,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240440,"byte_end":240450,"line_start":950,"line_end":950,"column_start":5,"column_end":15},"name":"FilterMiss","qualname":"::statement::StatementStatus::FilterMiss","value":"StatementStatus::FilterMiss","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FILTER_MISS\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FILTER_MISS","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240388,"byte_end":240435,"line_start":949,"line_end":949,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240511,"byte_end":240520,"line_start":952,"line_end":952,"column_start":5,"column_end":14},"name":"FilterHit","qualname":"::statement::StatementStatus::FilterHit","value":"StatementStatus::FilterHit","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FILTER_HIT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FILTER_HIT","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240460,"byte_end":240506,"line_start":951,"line_end":951,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240578,"byte_end":240585,"line_start":954,"line_end":954,"column_start":5,"column_end":12},"name":"MemUsed","qualname":"::statement::StatementStatus::MemUsed","value":"StatementStatus::MemUsed","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_MEMUSED\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_MEMUSED","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":240530,"byte_end":240573,"line_start":953,"line_end":953,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239972,"byte_end":239987,"line_start":936,"line_end":936,"column_start":10,"column_end":25},"name":"StatementStatus","qualname":"::statement::StatementStatus","value":"pub enum StatementStatus {\n    FullscanStep = ,\n    Sort = ,\n    AutoIndex = ,\n    VmStep = ,\n    RePrepare = ,\n    Run = ,\n    FilterMiss = ,\n    FilterHit = ,\n    MemUsed = ,\n}","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2524}],"decl_id":null,"docs":" Prepared statement status counters.","sig":null,"attributes":[{"value":"/ Prepared statement status counters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239661,"byte_end":239700,"line_start":926,"line_end":926,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239701,"byte_end":239704,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ See `https://www.sqlite.org/c3ref/c_stmtstatus_counter.html`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239705,"byte_end":239769,"line_start":928,"line_end":928,"column_start":1,"column_end":65}},{"value":"/ for explanations of each.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239770,"byte_end":239799,"line_start":929,"line_end":929,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239800,"byte_end":239803,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ Note that depending on your version of SQLite, all of these","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239804,"byte_end":239867,"line_start":931,"line_end":931,"column_start":1,"column_end":64}},{"value":"/ may not be available.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239868,"byte_end":239893,"line_start":932,"line_end":932,"column_start":1,"column_end":26}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239894,"byte_end":239906,"line_start":933,"line_end":933,"column_start":1,"column_end":13}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":239945,"byte_end":239962,"line_start":935,"line_end":935,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256681,"byte_end":256689,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" DEFERRED means that the transaction does not actually start until the\n database is first accessed.\n","sig":null,"attributes":[{"value":"/ DEFERRED means that the transaction does not actually start until the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256567,"byte_end":256640,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ database is first accessed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256645,"byte_end":256676,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256825,"byte_end":256834,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" IMMEDIATE cause the database connection to start a new write\n immediately, without waiting for a writes statement.\n","sig":null,"attributes":[{"value":"/ IMMEDIATE cause the database connection to start a new write","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256695,"byte_end":256759,"line_start":12,"line_end":12,"column_start":5,"column_end":69}},{"value":"/ immediately, without waiting for a writes statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256764,"byte_end":256820,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256963,"byte_end":256972,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" EXCLUSIVE prevents other database connections from reading the database\n while the transaction is underway.\n","sig":null,"attributes":[{"value":"/ EXCLUSIVE prevents other database connections from reading the database","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256840,"byte_end":256915,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ while the transaction is underway.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256920,"byte_end":256958,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2536},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256541,"byte_end":256560,"line_start":8,"line_end":8,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"pub enum TransactionBehavior { Deferred, Immediate, Exclusive, }","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2539},{"krate":0,"index":2541}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"/ Options for transaction behavior. See [BEGIN","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256367,"byte_end":256415,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/ TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256416,"byte_end":256490,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256514,"byte_end":256531,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257201,"byte_end":257209,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[{"value":"/ Roll back the changes. This is the default.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257149,"byte_end":257196,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257244,"byte_end":257250,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[{"value":"/ Commit the changes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257216,"byte_end":257239,"line_start":27,"line_end":27,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257390,"byte_end":257396,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[{"value":"/ Do not commit or roll back changes - this will leave the transaction or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257257,"byte_end":257332,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ savepoint open, so should be used with care.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257337,"byte_end":257385,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257475,"byte_end":257480,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[{"value":"/ Panic. Used to enforce intentional behavior during development.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257403,"byte_end":257470,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257130,"byte_end":257142,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"pub enum DropBehavior { Rollback, Commit, Ignore, Panic, }","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2549},{"krate":0,"index":2551},{"krate":0,"index":2553}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"/ Options for how a Transaction or Savepoint should behave when it is dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":256977,"byte_end":257057,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257103,"byte_end":257120,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258289,"byte_end":258300,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[{"value":"/ Represents a transaction on a database connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257485,"byte_end":257539,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257540,"byte_end":257543,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257544,"byte_end":257555,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257556,"byte_end":257559,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Transactions will roll back by default. Use `commit` method to explicitly","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257560,"byte_end":257637,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ commit the transaction, or use `set_drop_behavior` to change what happens","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257638,"byte_end":257715,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ when the transaction is dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257716,"byte_end":257752,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257753,"byte_end":257756,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257757,"byte_end":257771,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257772,"byte_end":257775,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257776,"byte_end":257794,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257795,"byte_end":257836,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257837,"byte_end":257908,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257909,"byte_end":257980,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":257981,"byte_end":258042,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258043,"byte_end":258080,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258081,"byte_end":258084,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258085,"byte_end":258153,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258154,"byte_end":258222,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258223,"byte_end":258226,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258227,"byte_end":258246,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258247,"byte_end":258252,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258253,"byte_end":258260,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259152,"byte_end":259161,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[{"value":"/ Represents a savepoint on a database connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258375,"byte_end":258427,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258428,"byte_end":258431,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258432,"byte_end":258443,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258444,"byte_end":258447,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Savepoints will roll back by default. Use `commit` method to explicitly","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258448,"byte_end":258523,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ commit the savepoint, or use `set_drop_behavior` to change what happens","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258524,"byte_end":258599,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ when the savepoint is dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258600,"byte_end":258634,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258635,"byte_end":258638,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258639,"byte_end":258653,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258654,"byte_end":258657,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258658,"byte_end":258676,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258677,"byte_end":258718,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258719,"byte_end":258790,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258791,"byte_end":258862,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258863,"byte_end":258924,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258925,"byte_end":258960,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258961,"byte_end":258964,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":258965,"byte_end":259033,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259034,"byte_end":259102,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259103,"byte_end":259106,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     sp.commit()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259107,"byte_end":259126,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259127,"byte_end":259132,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259133,"byte_end":259140,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259687,"byte_end":259690,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction>::new","value":"pub fn new(&mut Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.","sig":null,"attributes":[{"value":"/ Begin a new transaction. Cannot be nested; see `savepoint` for nested","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259318,"byte_end":259391,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ transactions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259396,"byte_end":259413,"line_start":100,"line_end":100,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259418,"byte_end":259421,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Even though we don't mutate the connection, we take a `&mut Connection`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259426,"byte_end":259501,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ so as to prevent nested transactions on the same connection. For cases","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259506,"byte_end":259580,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ where this is unacceptable, [`Transaction::new_unchecked`] is available.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259585,"byte_end":259661,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259666,"byte_end":259675,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260142,"byte_end":260155,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Transaction>::new_unchecked","value":"pub fn new_unchecked(&Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction, failing if a transaction is open.","sig":null,"attributes":[{"value":"/ Begin a new transaction, failing if a transaction is open.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259829,"byte_end":259891,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259896,"byte_end":259899,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If a transaction is already open, this will return an error. Where","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259904,"byte_end":259974,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ possible, [`Transaction::new`] should be preferred, as it provides a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259979,"byte_end":260051,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ compile-time guarantee that transactions are not nested.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260056,"byte_end":260116,"line_start":114,"line_end":114,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260121,"byte_end":260130,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261502,"byte_end":261511,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[{"value":"/ Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260651,"byte_end":260739,"line_start":131,"line_end":131,"column_start":5,"column_end":93}},{"value":"/ transactions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260744,"byte_end":260761,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260766,"byte_end":260769,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260774,"byte_end":260785,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260790,"byte_end":260793,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Just like outer level transactions, savepoint transactions rollback by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260798,"byte_end":260872,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ default.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260877,"byte_end":260889,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260894,"byte_end":260897,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260902,"byte_end":260916,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260921,"byte_end":260924,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260929,"byte_end":260947,"line_start":141,"line_end":141,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260952,"byte_end":260993,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ # fn perform_queries_part_1_succeeds(_conn: &Connection) -> bool { true }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":260998,"byte_end":261075,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261080,"byte_end":261141,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/     let mut tx = conn.transaction()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261146,"byte_end":261187,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261192,"byte_end":261195,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261200,"byte_end":261209,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/         let sp = tx.savepoint()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261214,"byte_end":261251,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/         if perform_queries_part_1_succeeds(&sp) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261256,"byte_end":261309,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/             sp.commit()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261314,"byte_end":261343,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261348,"byte_end":261361,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/         // otherwise, sp will rollback","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261366,"byte_end":261408,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261413,"byte_end":261422,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261427,"byte_end":261430,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261435,"byte_end":261454,"line_start":155,"line_end":155,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261459,"byte_end":261464,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261469,"byte_end":261476,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261481,"byte_end":261490,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261706,"byte_end":261725,"line_start":165,"line_end":165,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[{"value":"/ Create a new savepoint with a custom savepoint name. See `savepoint()`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261605,"byte_end":261680,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261685,"byte_end":261694,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261993,"byte_end":262006,"line_start":173,"line_end":173,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the transaction when it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261860,"byte_end":261934,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261939,"byte_end":261951,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261956,"byte_end":261965,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":261970,"byte_end":261981,"line_start":172,"line_end":172,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262185,"byte_end":262202,"line_start":180,"line_end":180,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the transaction to perform the specified action when it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262070,"byte_end":262142,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262147,"byte_end":262159,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262164,"byte_end":262173,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262392,"byte_end":262398,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a transaction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262300,"byte_end":262366,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262371,"byte_end":262380,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262676,"byte_end":262684,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction>::rollback","value":"pub fn rollback(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and rolls back a transaction.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262581,"byte_end":262650,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262655,"byte_end":262664,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263146,"byte_end":263152,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the transaction, committing or rolling back according to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262873,"byte_end":262946,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262951,"byte_end":262993,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":262998,"byte_end":263001,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263006,"byte_end":263074,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263079,"byte_end":263120,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263125,"byte_end":263134,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":264690,"byte_end":264693,"line_start":275,"line_end":275,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint>::new","value":"pub fn new(&mut Connection) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint. Can be nested.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":264623,"byte_end":264664,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":264669,"byte_end":264678,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":264882,"byte_end":264891,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint>::with_name","value":"pub fn with_name<T: Into<String>>(&mut Connection, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a user-provided savepoint name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":264794,"byte_end":264856,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":264861,"byte_end":264870,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265088,"byte_end":265097,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265033,"byte_end":265062,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265067,"byte_end":265076,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265295,"byte_end":265314,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint with a user-provided savepoint name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265204,"byte_end":265269,"line_start":291,"line_end":291,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265274,"byte_end":265283,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265593,"byte_end":265606,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the savepoint when it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265462,"byte_end":265534,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265539,"byte_end":265551,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265556,"byte_end":265565,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265570,"byte_end":265581,"line_start":300,"line_end":300,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265783,"byte_end":265800,"line_start":308,"line_end":308,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the savepoint to perform the specified action when it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265670,"byte_end":265740,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265745,"byte_end":265757,"line_start":306,"line_end":306,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265762,"byte_end":265771,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265988,"byte_end":265994,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a savepoint.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265898,"byte_end":265962,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":265967,"byte_end":265976,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266486,"byte_end":266494,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint>::rollback","value":"pub fn rollback(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[{"value":"/ A convenience method which rolls back a savepoint.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266233,"byte_end":266287,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266292,"byte_end":266295,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266300,"byte_end":266311,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266316,"byte_end":266319,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Unlike `Transaction`s, savepoints remain active after they have been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266324,"byte_end":266396,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ rolled back, and can be rolled back again or committed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266401,"byte_end":266460,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266465,"byte_end":266474,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266888,"byte_end":266894,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the savepoint, committing or rolling back according to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266617,"byte_end":266688,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266693,"byte_end":266735,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266740,"byte_end":266743,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266748,"byte_end":266816,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266821,"byte_end":266862,"line_start":341,"line_end":341,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":266867,"byte_end":266876,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268702,"byte_end":268713,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"pub fn transaction(&mut Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267676,"byte_end":267741,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267746,"byte_end":267749,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The transaction defaults to rolling back when it is dropped. If you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267754,"byte_end":267825,"line_start":381,"line_end":381,"column_start":5,"column_end":76}},{"value":"/ want the transaction to commit, you must call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267830,"byte_end":267879,"line_start":382,"line_end":382,"column_start":5,"column_end":54}},{"value":"/ [`commit`](Transaction::commit) or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267884,"byte_end":267922,"line_start":383,"line_end":383,"column_start":5,"column_end":43}},{"value":"/ [`set_drop_behavior(DropBehavior::Commit)`](Transaction::set_drop_behavior).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267927,"byte_end":268007,"line_start":384,"line_end":384,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268012,"byte_end":268015,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268020,"byte_end":268034,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268039,"byte_end":268042,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268047,"byte_end":268065,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268070,"byte_end":268111,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268116,"byte_end":268187,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268192,"byte_end":268263,"line_start":391,"line_end":391,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268268,"byte_end":268329,"line_start":392,"line_end":392,"column_start":5,"column_end":66}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268334,"byte_end":268371,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268376,"byte_end":268379,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268384,"byte_end":268452,"line_start":395,"line_end":395,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268457,"byte_end":268525,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268530,"byte_end":268533,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268538,"byte_end":268557,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268562,"byte_end":268567,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268572,"byte_end":268579,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268584,"byte_end":268587,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268592,"byte_end":268605,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268610,"byte_end":268613,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268618,"byte_end":268676,"line_start":404,"line_end":404,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268681,"byte_end":268690,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269066,"byte_end":269091,"line_start":418,"line_end":418,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"pub fn transaction_with_behavior(&mut Self, TransactionBehavior)\n-> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[{"value":"/ Begin a new transaction with a specified behavior.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268827,"byte_end":268881,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268886,"byte_end":268889,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ See [`transaction`](Connection::transaction).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268894,"byte_end":268943,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268948,"byte_end":268951,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268956,"byte_end":268969,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268974,"byte_end":268977,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":268982,"byte_end":269040,"line_start":416,"line_end":416,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269045,"byte_end":269054,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270550,"byte_end":270571,"line_start":456,"line_end":456,"column_start":12,"column_end":33},"name":"unchecked_transaction","qualname":"<Connection>::unchecked_transaction","value":"pub fn unchecked_transaction(&Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269238,"byte_end":269303,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269308,"byte_end":269311,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Attempt to open a nested transaction will result in a SQLite error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269316,"byte_end":269387,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ `Connection::transaction` prevents this at compile time by taking `&mut","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269392,"byte_end":269467,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ self`, but `Connection::unchecked_transaction()` may be used to defer","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269472,"byte_end":269545,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ the checking until runtime.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269550,"byte_end":269581,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269586,"byte_end":269589,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::transaction`] and [`Transaction::new_unchecked`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269594,"byte_end":269664,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/ (which can be used if the default transaction behavior is undesirable).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269669,"byte_end":269744,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269749,"byte_end":269752,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269757,"byte_end":269771,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269776,"byte_end":269779,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269784,"byte_end":269802,"line_start":437,"line_end":437,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269807,"byte_end":269848,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269853,"byte_end":269875,"line_start":439,"line_end":439,"column_start":5,"column_end":27}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269880,"byte_end":269951,"line_start":440,"line_end":440,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":269956,"byte_end":270027,"line_start":441,"line_end":441,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: Rc<Connection>) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270032,"byte_end":270092,"line_start":442,"line_end":442,"column_start":5,"column_end":65}},{"value":"/     let tx = conn.unchecked_transaction()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270097,"byte_end":270144,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270149,"byte_end":270152,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270157,"byte_end":270225,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270230,"byte_end":270298,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270303,"byte_end":270306,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270311,"byte_end":270330,"line_start":448,"line_end":448,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270335,"byte_end":270340,"line_start":449,"line_end":449,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270345,"byte_end":270352,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270357,"byte_end":270360,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270365,"byte_end":270378,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270383,"byte_end":270386,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails. The specific","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270391,"byte_end":270462,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/ error returned if transactions are nested is currently unspecified.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270467,"byte_end":270538,"line_start":455,"line_end":455,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271706,"byte_end":271715,"line_start":487,"line_end":487,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new savepoint with the default behavior (DEFERRED).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270691,"byte_end":270754,"line_start":460,"line_end":460,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270759,"byte_end":270762,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The savepoint defaults to rolling back when it is dropped. If you want","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270767,"byte_end":270841,"line_start":462,"line_end":462,"column_start":5,"column_end":79}},{"value":"/ the savepoint to commit, you must call [`commit`](Savepoint::commit) or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270846,"byte_end":270921,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ [`set_drop_behavior(DropBehavior::Commit)`](Savepoint::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270926,"byte_end":270985,"line_start":464,"line_end":464,"column_start":5,"column_end":64}},{"value":"/ set_drop_behavior).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":270990,"byte_end":271013,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271018,"byte_end":271021,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271026,"byte_end":271040,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271045,"byte_end":271048,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271053,"byte_end":271071,"line_start":469,"line_end":469,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271076,"byte_end":271117,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271122,"byte_end":271193,"line_start":471,"line_end":471,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271198,"byte_end":271269,"line_start":472,"line_end":472,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271274,"byte_end":271335,"line_start":473,"line_end":473,"column_start":5,"column_end":66}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271340,"byte_end":271375,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271380,"byte_end":271383,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271388,"byte_end":271456,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271461,"byte_end":271529,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271534,"byte_end":271537,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/     sp.commit()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271542,"byte_end":271561,"line_start":479,"line_end":479,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271566,"byte_end":271571,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271576,"byte_end":271583,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271588,"byte_end":271591,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271596,"byte_end":271609,"line_start":483,"line_end":483,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271614,"byte_end":271617,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271622,"byte_end":271680,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271685,"byte_end":271694,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":272023,"byte_end":272042,"line_start":499,"line_end":499,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a specified name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271794,"byte_end":271842,"line_start":491,"line_end":491,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271847,"byte_end":271850,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ See [`savepoint`](Connection::savepoint).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271855,"byte_end":271900,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271905,"byte_end":271908,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271913,"byte_end":271926,"line_start":495,"line_end":495,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271931,"byte_end":271934,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":271939,"byte_end":271997,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":272002,"byte_end":272011,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1175},{"krate":0,"index":1242},{"krate":0,"index":1272},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":1318}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[{"value":"/ Traits dealing with SQLite data types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":278738,"byte_end":278780,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":278781,"byte_end":278784,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ SQLite uses a [dynamic type system](https://www.sqlite.org/datatype3.html). Implementations of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":278785,"byte_end":278883,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ the [`ToSql`] and [`FromSql`] traits are provided for the basic types that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":278884,"byte_end":278962,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ SQLite provides methods for:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":278963,"byte_end":278995,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":278996,"byte_end":278999,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Strings (`String` and `&str`)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279000,"byte_end":279035,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/ * Blobs (`Vec<u8>` and `&[u8]`)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279036,"byte_end":279071,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/ * Numbers","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279072,"byte_end":279085,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279086,"byte_end":279089,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The number situation is a little complicated due to the fact that all","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279090,"byte_end":279163,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ numbers in SQLite are stored as `INTEGER` (`i64`) or `REAL` (`f64`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279164,"byte_end":279236,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279237,"byte_end":279240,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ToSql`] and [`FromSql`] are implemented for all primitive number types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279241,"byte_end":279318,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ [`FromSql`] has different behaviour depending on the SQL and Rust types, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279319,"byte_end":279399,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ the value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279400,"byte_end":279414,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279415,"byte_end":279418,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `INTEGER` to integer: returns an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279419,"byte_end":279457,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/   [`Error::IntegralValueOutOfRange`](crate::Error::IntegralValueOutOfRange)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279458,"byte_end":279537,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/   error if the value does not fit in the Rust type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279538,"byte_end":279593,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ * `REAL` to integer: always returns an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279594,"byte_end":279636,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/   [`Error::InvalidColumnType`](crate::Error::InvalidColumnType) error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279637,"byte_end":279711,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ * `INTEGER` to float: casts using `as` operator. Never fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279712,"byte_end":279777,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ * `REAL` to float: casts using `as` operator. Never fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279778,"byte_end":279840,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279841,"byte_end":279844,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`ToSql`] always succeeds except when storing a `u64` or `usize` value that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279845,"byte_end":279924,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ cannot fit in an `INTEGER` (`i64`). Also note that SQLite ignores column","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":279925,"byte_end":280001,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ types, so if you store an `i64` in a column with type `REAL` it will be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280002,"byte_end":280077,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ stored as an `INTEGER`, not a `REAL`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280078,"byte_end":280119,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280120,"byte_end":280123,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the `time` feature is enabled, implementations are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280124,"byte_end":280181,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ provided for `time::OffsetDateTime` that use the RFC 3339 date/time format,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280182,"byte_end":280261,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ `\"%Y-%m-%dT%H:%M:%S.%fZ\"`, to store time values as strings.  These values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280262,"byte_end":280339,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ can be parsed by SQLite's builtin","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280340,"byte_end":280377,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ [datetime](https://www.sqlite.org/lang_datefunc.html) functions.  If you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280378,"byte_end":280454,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ want different storage for datetimes, you can use a newtype.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":280455,"byte_end":280519,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`ToSql`] and [`FromSql`] are also implemented for `Option<T>` where `T`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281307,"byte_end":281383,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ implements [`ToSql`] or [`FromSql`] for the cases where you want to know if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281384,"byte_end":281463,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ a value was NULL (which gets translated to `None`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":281464,"byte_end":281519,"line_start":70,"line_end":70,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295181,"byte_end":295192,"line_start":12,"line_end":12,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when an SQLite value is requested, but the type of the result","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295049,"byte_end":295120,"line_start":10,"line_end":10,"column_start":5,"column_end":76}},{"value":"/ cannot be converted to the requested Rust type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295125,"byte_end":295176,"line_start":11,"line_end":11,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295301,"byte_end":295311,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[{"value":"/ Error when the i64 value returned by SQLite cannot be stored into the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295199,"byte_end":295272,"line_start":14,"line_end":14,"column_start":5,"column_end":78}},{"value":"/ requested type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295277,"byte_end":295296,"line_start":15,"line_end":15,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295450,"byte_end":295465,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"InvalidBlobSize","qualname":"::types::from_sql::FromSqlError::InvalidBlobSize","value":"FromSqlError::InvalidBlobSize { expected_size, blob_size }","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" Error when the blob result returned by SQLite cannot be stored into the\n requested type due to a size mismatch.\n","sig":null,"attributes":[{"value":"/ Error when the blob result returned by SQLite cannot be stored into the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295323,"byte_end":295398,"line_start":18,"line_end":18,"column_start":5,"column_end":80}},{"value":"/ requested type due to a size mismatch.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295403,"byte_end":295445,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295713,"byte_end":295718,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" An error case available for implementors of the [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ An error case available for implementors of the [`FromSql`] trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295638,"byte_end":295708,"line_start":27,"line_end":27,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295030,"byte_end":295042,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"pub enum FromSqlError {\n    InvalidType,\n    OutOfRange(i64),\n    InvalidBlobSize {\n            expected_size: usize,\n            blob_size: usize,\n        },\n    Other(Box<dyn Error + Send + Sync + 'static>),\n}","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582}],"decl_id":null,"docs":" Enum listing possible errors from [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from [`FromSql`] trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":294929,"byte_end":294985,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295003,"byte_end":295020,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297374,"byte_end":297387,"line_start":82,"line_end":82,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ Result type for implementors of the [`FromSql`] trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297306,"byte_end":297364,"line_start":81,"line_end":81,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297492,"byte_end":297499,"line_start":85,"line_end":85,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":1144}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be created from a SQLite value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297419,"byte_end":297481,"line_start":84,"line_end":84,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297563,"byte_end":297576,"line_start":87,"line_end":87,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"pub fn column_result(ValueRef) -> FromSqlResult<Self>","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":" Converts SQLite value into Rust value.\n","sig":null,"attributes":[{"value":"/ Converts SQLite value into Rust value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297513,"byte_end":297555,"line_start":86,"line_end":86,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303247,"byte_end":303255,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef)","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ A borrowed SQLite-representable value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303200,"byte_end":303242,"line_start":13,"line_end":13,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303321,"byte_end":303326,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ An owned SQLite-representable value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303276,"byte_end":303316,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303492,"byte_end":303500,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"ZeroBlob","qualname":"::types::to_sql::ToSqlOutput::ZeroBlob","value":"ToSqlOutput::ZeroBlob(i32)","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" A BLOB of the given length that is filled with\n zeroes.\n","sig":null,"attributes":[{"value":"/ A BLOB of the given length that is filled with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303340,"byte_end":303390,"line_start":19,"line_end":19,"column_start":5,"column_end":55}},{"value":"/ zeroes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303395,"byte_end":303406,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"cfg(feature = \"blob\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303411,"byte_end":303435,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303178,"byte_end":303189,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"pub enum ToSqlOutput<'a> { Borrowed(ValueRef), Owned(Value), ZeroBlob(i32), }","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementers of the\n [`ToSql`] trait.\n","sig":null,"attributes":[{"value":"/ `ToSqlOutput` represents the possible output types for implementers of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303016,"byte_end":303094,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ [`ToSql`] trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303095,"byte_end":303115,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303151,"byte_end":303168,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305736,"byte_end":305741,"line_start":99,"line_end":99,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":1207}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values. Returns\n [`Error::ToSqlConversionFailure`] if the conversion fails.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into SQLite values. Returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305591,"byte_end":305662,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ [`Error::ToSqlConversionFailure`] if the conversion fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305663,"byte_end":305725,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305795,"byte_end":305801,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"pub fn to_sql(&Self) -> Result<ToSqlOutput>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Converts Rust value to SQLite value\n","sig":null,"attributes":[{"value":"/ Converts Rust value to SQLite value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305748,"byte_end":305787,"line_start":100,"line_end":100,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314496,"byte_end":314500,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314459,"byte_end":314491,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314545,"byte_end":314552,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314506,"byte_end":314540,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314609,"byte_end":314613,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314563,"byte_end":314604,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314660,"byte_end":314664,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314624,"byte_end":314655,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314714,"byte_end":314718,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314678,"byte_end":314709,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2695},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314447,"byte_end":314452,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"pub enum Value { Null, Integer(i64), Real(f64), Text(String), Blob(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[{"value":"/ Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314176,"byte_end":314268,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ dictated by SQLite (not by the caller).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314269,"byte_end":314312,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314313,"byte_end":314316,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`ValueRef`](crate::types::ValueRef) for a non-owning dynamic type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314317,"byte_end":314391,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314392,"byte_end":314402,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316830,"byte_end":316839,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316748,"byte_end":316788,"line_start":130,"line_end":130,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316793,"byte_end":316802,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316807,"byte_end":316818,"line_start":132,"line_end":132,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317493,"byte_end":317497,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317456,"byte_end":317488,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317542,"byte_end":317549,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317503,"byte_end":317537,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317606,"byte_end":317610,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317560,"byte_end":317601,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317657,"byte_end":317661,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a [u8])","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317621,"byte_end":317652,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317713,"byte_end":317717,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317677,"byte_end":317708,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317437,"byte_end":317445,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"pub enum ValueRef<'a> {\n    Null,\n    Integer(i64),\n    Real(f64),\n    Text(&'a [u8]),\n    Blob(&'a [u8]),\n}","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"/ A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317187,"byte_end":317273,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ memory backing this value is owned by SQLite.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317274,"byte_end":317323,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317324,"byte_end":317327,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`Value`](Value) for an owning dynamic type value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317328,"byte_end":317386,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317838,"byte_end":317847,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317756,"byte_end":317796,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317801,"byte_end":317810,"line_start":24,"line_end":24,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317815,"byte_end":317826,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318352,"byte_end":318358,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef>::as_i64","value":"pub fn as_i64(&Self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Integer`, returns the integral value. Otherwise,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318162,"byte_end":318233,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318238,"byte_end":318298,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318303,"byte_end":318326,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318331,"byte_end":318340,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318761,"byte_end":318775,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"as_i64_or_null","qualname":"<ValueRef>::as_i64_or_null","value":"pub fn as_i64_or_null(&Self) -> FromSqlResult<Option<i64>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Integer`, returns the integral value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318525,"byte_end":318567,"line_start":49,"line_end":49,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Integer`, returns the integral value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318572,"byte_end":318632,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318637,"byte_end":318707,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318712,"byte_end":318735,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318740,"byte_end":318749,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319189,"byte_end":319195,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef>::as_f64","value":"pub fn as_f64(&Self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Real`, returns the floating point value. Otherwise,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318996,"byte_end":319070,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319075,"byte_end":319135,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319140,"byte_end":319163,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319168,"byte_end":319177,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319598,"byte_end":319612,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"as_f64_or_null","qualname":"<ValueRef>::as_f64_or_null","value":"pub fn as_f64_or_null(&Self) -> FromSqlResult<Option<f64>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Real`, returns the floating point value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319359,"byte_end":319401,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Real`, returns the floating point value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319406,"byte_end":319469,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319474,"byte_end":319544,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319549,"byte_end":319572,"line_start":76,"line_end":76,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319577,"byte_end":319586,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320006,"byte_end":320012,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef>::as_str","value":"pub fn as_str(&Self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Text`, returns the string value. Otherwise, returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319830,"byte_end":319904,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319909,"byte_end":319980,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":319985,"byte_end":319994,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320505,"byte_end":320519,"line_start":103,"line_end":103,"column_start":12,"column_end":26},"name":"as_str_or_null","qualname":"<ValueRef>::as_str_or_null","value":"pub fn as_str_or_null(&Self) -> FromSqlResult<Option<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Text`, returns the string value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320274,"byte_end":320316,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Text`, returns the string value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320321,"byte_end":320376,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320381,"byte_end":320451,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320456,"byte_end":320479,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320484,"byte_end":320493,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321016,"byte_end":321023,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef>::as_blob","value":"pub fn as_blob(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Blob`, returns the byte slice. Otherwise, returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320842,"byte_end":320914,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320919,"byte_end":320990,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":320995,"byte_end":321004,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321421,"byte_end":321436,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"as_blob_or_null","qualname":"<ValueRef>::as_blob_or_null","value":"pub fn as_blob_or_null(&Self) -> FromSqlResult<Option<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Blob`, returns the byte slice.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321192,"byte_end":321234,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Blob`, returns the byte slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321239,"byte_end":321292,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321297,"byte_end":321367,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321372,"byte_end":321395,"line_start":126,"line_end":126,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321400,"byte_end":321409,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321804,"byte_end":321812,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ValueRef>::as_bytes","value":"pub fn as_bytes(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte slice that makes up this ValueRef if it's either\n [`ValueRef::Blob`] or [`ValueRef::Text`].\n","sig":null,"attributes":[{"value":"/ Returns the byte slice that makes up this ValueRef if it's either","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321659,"byte_end":321728,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ [`ValueRef::Blob`] or [`ValueRef::Text`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321733,"byte_end":321778,"line_start":137,"line_end":137,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":321783,"byte_end":321792,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322186,"byte_end":322202,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"as_bytes_or_null","qualname":"<ValueRef>::as_bytes_or_null","value":"pub fn as_bytes_or_null(&Self) -> FromSqlResult<Option<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is [`ValueRef::Blob`] or [`ValueRef::Text`] returns the byte\n slice that makes up this value\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322000,"byte_end":322042,"line_start":146,"line_end":146,"column_start":5,"column_end":47}},{"value":"/ If `self` is [`ValueRef::Blob`] or [`ValueRef::Text`] returns the byte","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322047,"byte_end":322121,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ slice that makes up this value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322126,"byte_end":322160,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322165,"byte_end":322174,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282485,"byte_end":282489,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"/ Empty struct that can be used to fill in a query parameter as `NULL`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282114,"byte_end":282187,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282188,"byte_end":282191,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282192,"byte_end":282206,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282207,"byte_end":282210,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282211,"byte_end":282229,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282230,"byte_end":282271,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ # use rusqlite::types::{Null};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282272,"byte_end":282306,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282307,"byte_end":282310,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ fn insert_null(conn: &Connection) -> Result<usize> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282311,"byte_end":282367,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/     conn.execute(\"INSERT INTO people (name) VALUES (?)\", [Null])","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282368,"byte_end":282436,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282437,"byte_end":282442,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282443,"byte_end":282450,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282654,"byte_end":282658,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" NULL\n","sig":null,"attributes":[{"value":"/ NULL","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282641,"byte_end":282649,"line_start":115,"line_end":115,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282694,"byte_end":282701,"line_start":118,"line_end":118,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282664,"byte_end":282689,"line_start":117,"line_end":117,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282749,"byte_end":282753,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" 64-bit IEEE floating point number\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE floating point number","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282707,"byte_end":282744,"line_start":119,"line_end":119,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282774,"byte_end":282778,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" String\n","sig":null,"attributes":[{"value":"/ String","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282759,"byte_end":282769,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282797,"byte_end":282801,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" BLOB\n","sig":null,"attributes":[{"value":"/ BLOB","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282784,"byte_end":282792,"line_start":123,"line_end":123,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282630,"byte_end":282634,"line_start":114,"line_end":114,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"pub enum Type { Null, Integer, Real, Text, Blob, }","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774}],"decl_id":null,"docs":" SQLite data types.\n See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).\n","sig":null,"attributes":[{"value":"/ SQLite data types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282492,"byte_end":282514,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"/ See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282515,"byte_end":282585,"line_start":112,"line_end":112,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326018,"byte_end":326032,"line_start":10,"line_end":10,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"pub fn version_number() -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as an integer; e.g., `3016002` for version","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":325812,"byte_end":325885,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ 3.16.2.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":325886,"byte_end":325897,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":325898,"byte_end":325901,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion_number()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":325902,"byte_end":325988,"line_start":7,"line_end":7,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":325989,"byte_end":325998,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":325999,"byte_end":326010,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326289,"byte_end":326296,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"pub fn version() -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326095,"byte_end":326175,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326176,"byte_end":326179,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326180,"byte_end":326259,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326260,"byte_end":326269,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":326270,"byte_end":326281,"line_start":18,"line_end":18,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4196,"byte_end":4205,"line_start":146,"line_end":146,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&dyn ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter][sqlite-varparam].","sig":null,"attributes":[{"value":"/ To be used when your statement has no [parameter][sqlite-varparam].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3881,"byte_end":3952,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3953,"byte_end":3956,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [sqlite-varparam]: https://sqlite.org/lang_expr.html#varparam","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3957,"byte_end":4022,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4023,"byte_end":4026,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is deprecated in favor of using an empty array literal.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4027,"byte_end":4091,"line_start":144,"line_end":144,"column_start":1,"column_end":65}},{"value":"deprecated =\n\"Use an empty array instead; `stmt.execute(NO_PARAMS)` => `stmt.execute([])`\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4092,"byte_end":4185,"line_start":145,"line_end":145,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6225,"byte_end":6231,"line_start":221,"line_end":221,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[{"value":"/ A typedef of the result returned by many methods.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6162,"byte_end":6215,"line_start":220,"line_end":220,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6337,"byte_end":6354,"line_start":224,"line_end":224,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":1456}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[{"value":"/ See the [method documentation](#tymethod.optional).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6271,"byte_end":6326,"line_start":223,"line_end":223,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6645,"byte_end":6653,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"pub fn optional(Self) -> Result<Option<T>>","parent":{"krate":0,"index":1454},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[{"value":"/ Converts a `Result<T>` into a `Result<Option<T>>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6364,"byte_end":6418,"line_start":225,"line_end":225,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6423,"byte_end":6426,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ By default, Rusqlite treats 0 rows being returned from a query that is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6431,"byte_end":6505,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ expected to return 1 row as an error. This method will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6510,"byte_end":6568,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/ handle that error, and give you back an `Option<T>` instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6573,"byte_end":6637,"line_start":229,"line_end":229,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8723,"byte_end":8727,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[{"value":"/ The main database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8696,"byte_end":8718,"line_start":297,"line_end":297,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8810,"byte_end":8814,"line_start":301,"line_end":301,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[{"value":"/ The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8734,"byte_end":8805,"line_start":300,"line_end":300,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8890,"byte_end":8898,"line_start":304,"line_end":304,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[{"value":"/ A database that has been attached via \"ATTACH DATABASE ...\".","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8821,"byte_end":8885,"line_start":303,"line_end":303,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8673,"byte_end":8685,"line_start":296,"line_end":296,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"pub enum DatabaseName<'a> { Main, Temp, Attached(&'a str), }","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"/ Name for a database within a SQLite connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8582,"byte_end":8633,"line_start":294,"line_end":294,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8964,"byte_end":8971,"line_start":308,"line_end":308,"column_start":11,"column_end":18},"name":"MAIN_DB","qualname":"::MAIN_DB","value":"DatabaseName","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for [`DatabaseName::Main`].\n","sig":null,"attributes":[{"value":"/ Shorthand for [`DatabaseName::Main`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8912,"byte_end":8953,"line_start":307,"line_end":307,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9070,"byte_end":9077,"line_start":311,"line_end":311,"column_start":11,"column_end":18},"name":"TEMP_DB","qualname":"::TEMP_DB","value":"DatabaseName","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for [`DatabaseName::Temp`].\n","sig":null,"attributes":[{"value":"/ Shorthand for [`DatabaseName::Temp`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9018,"byte_end":9059,"line_start":310,"line_end":310,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9744,"byte_end":9754,"line_start":334,"line_end":334,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[{"value":"/ A connection to a SQLite database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9694,"byte_end":9732,"line_start":333,"line_end":333,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10746,"byte_end":10750,"line_start":372,"line_end":372,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"pub fn open<P: AsRef<Path>>(P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10028,"byte_end":10075,"line_start":350,"line_end":350,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10080,"byte_end":10083,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ `Connection::open(path)` is equivalent to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10088,"byte_end":10133,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ `Connection::open_with_flags(path,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10138,"byte_end":10176,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/ OpenFlags::SQLITE_OPEN_READ_WRITE |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10181,"byte_end":10220,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/ OpenFlags::SQLITE_OPEN_CREATE)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10225,"byte_end":10261,"line_start":355,"line_end":355,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10266,"byte_end":10269,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10274,"byte_end":10292,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10297,"byte_end":10338,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ fn open_my_db() -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10343,"byte_end":10378,"line_start":359,"line_end":359,"column_start":5,"column_end":40}},{"value":"/     let path = \"./my_db.db3\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10383,"byte_end":10416,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/     let db = Connection::open(&path)?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10421,"byte_end":10463,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"/     println!(\"{}\", db.is_autocommit());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10468,"byte_end":10511,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10516,"byte_end":10530,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10535,"byte_end":10540,"line_start":364,"line_end":364,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10545,"byte_end":10552,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10557,"byte_end":10560,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10565,"byte_end":10578,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10583,"byte_end":10586,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10591,"byte_end":10660,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10665,"byte_end":10720,"line_start":370,"line_end":370,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10725,"byte_end":10734,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11088,"byte_end":11102,"line_start":383,"line_end":383,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"pub fn open_in_memory() -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10902,"byte_end":10960,"line_start":377,"line_end":377,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10965,"byte_end":10968,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10973,"byte_end":10986,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10991,"byte_end":10994,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10999,"byte_end":11062,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11067,"byte_end":11076,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11607,"byte_end":11622,"line_start":398,"line_end":398,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"pub fn open_with_flags<P: AsRef<Path>>(P, OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11235,"byte_end":11282,"line_start":388,"line_end":388,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11287,"byte_end":11290,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11295,"byte_end":11386,"line_start":390,"line_end":390,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11391,"byte_end":11413,"line_start":391,"line_end":391,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11418,"byte_end":11421,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11426,"byte_end":11439,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11444,"byte_end":11447,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11452,"byte_end":11521,"line_start":395,"line_end":395,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11526,"byte_end":11581,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11586,"byte_end":11595,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12456,"byte_end":12479,"line_start":418,"line_end":418,"column_start":12,"column_end":35},"name":"open_with_flags_and_vfs","qualname":"<Connection>::open_with_flags_and_vfs","value":"pub fn open_with_flags_and_vfs<P: AsRef<Path>>(P, OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database using the specific flags and\n vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database using the specific flags and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12022,"byte_end":12097,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ vfs name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12102,"byte_end":12115,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12120,"byte_end":12123,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12128,"byte_end":12219,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12224,"byte_end":12246,"line_start":411,"line_end":411,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12251,"byte_end":12254,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12259,"byte_end":12272,"line_start":413,"line_end":413,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12277,"byte_end":12280,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if either `path` or `vfs` cannot be converted to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12285,"byte_end":12357,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/ C-compatible string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12362,"byte_end":12430,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12435,"byte_end":12444,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13288,"byte_end":13313,"line_start":441,"line_end":441,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"pub fn open_in_memory_with_flags(OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12971,"byte_end":13029,"line_start":432,"line_end":432,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13034,"byte_end":13037,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13042,"byte_end":13133,"line_start":434,"line_end":434,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13138,"byte_end":13160,"line_start":435,"line_end":435,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13165,"byte_end":13168,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13173,"byte_end":13186,"line_start":437,"line_end":437,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13191,"byte_end":13194,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13199,"byte_end":13262,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13267,"byte_end":13276,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13850,"byte_end":13883,"line_start":456,"line_end":456,"column_start":12,"column_end":45},"name":"open_in_memory_with_flags_and_vfs","qualname":"<Connection>::open_in_memory_with_flags_and_vfs","value":"pub fn open_in_memory_with_flags_and_vfs(OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database using the specific\n flags and vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database using the specific","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13422,"byte_end":13498,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ flags and vfs name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13503,"byte_end":13526,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13531,"byte_end":13534,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13539,"byte_end":13630,"line_start":448,"line_end":448,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13635,"byte_end":13657,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13662,"byte_end":13665,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13670,"byte_end":13683,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13688,"byte_end":13691,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `vfs` cannot be converted to a C-compatible","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13696,"byte_end":13764,"line_start":453,"line_end":453,"column_start":5,"column_end":73}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13769,"byte_end":13824,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13829,"byte_end":13838,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14658,"byte_end":14671,"line_start":481,"line_end":481,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"pub fn execute_batch(&Self, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[{"value":"/ Convenience method to run multiple SQL statements (that cannot take any","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14016,"byte_end":14091,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ parameters).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14096,"byte_end":14112,"line_start":461,"line_end":461,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14117,"byte_end":14120,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14125,"byte_end":14139,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14144,"byte_end":14147,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14152,"byte_end":14170,"line_start":465,"line_end":465,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14175,"byte_end":14216,"line_start":466,"line_end":466,"column_start":5,"column_end":46}},{"value":"/ fn create_tables(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14221,"byte_end":14276,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/     conn.execute_batch(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14281,"byte_end":14308,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/         \"BEGIN;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14313,"byte_end":14332,"line_start":469,"line_end":469,"column_start":5,"column_end":24}},{"value":"/          CREATE TABLE foo(x INTEGER);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14337,"byte_end":14378,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/          CREATE TABLE bar(y TEXT);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14383,"byte_end":14421,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/          COMMIT;\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14426,"byte_end":14448,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/     )","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14453,"byte_end":14462,"line_start":473,"line_end":473,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14467,"byte_end":14472,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14477,"byte_end":14484,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14489,"byte_end":14492,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14497,"byte_end":14510,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14515,"byte_end":14518,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14523,"byte_end":14598,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14603,"byte_end":14646,"line_start":480,"line_end":480,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16882,"byte_end":16889,"line_start":549,"line_end":549,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"pub fn execute<P: Params>(&Self, &str, P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15209,"byte_end":15278,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15283,"byte_end":15286,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15291,"byte_end":15366,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15371,"byte_end":15407,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15412,"byte_end":15415,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15420,"byte_end":15434,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15439,"byte_end":15442,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ### With positional params","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15447,"byte_end":15477,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15482,"byte_end":15485,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15490,"byte_end":15508,"line_start":507,"line_end":507,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15513,"byte_end":15546,"line_start":508,"line_end":508,"column_start":5,"column_end":38}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15551,"byte_end":15590,"line_start":509,"line_end":509,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\", [1i32]) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15595,"byte_end":15675,"line_start":510,"line_end":510,"column_start":5,"column_end":85}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15680,"byte_end":15749,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15754,"byte_end":15813,"line_start":512,"line_end":512,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15818,"byte_end":15827,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15832,"byte_end":15837,"line_start":514,"line_end":514,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15842,"byte_end":15849,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15854,"byte_end":15857,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ### With positional params of varying types","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15862,"byte_end":15909,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15914,"byte_end":15917,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15922,"byte_end":15940,"line_start":519,"line_end":519,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{params, Connection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15945,"byte_end":15986,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15991,"byte_end":16030,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16035,"byte_end":16062,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/         \"UPDATE foo SET bar = 'baz' WHERE qux = ?1 AND quux = ?2\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16067,"byte_end":16137,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/         params![1i32, 1.5f64],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16142,"byte_end":16176,"line_start":524,"line_end":524,"column_start":5,"column_end":39}},{"value":"/     ) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16181,"byte_end":16192,"line_start":525,"line_end":525,"column_start":5,"column_end":16}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16197,"byte_end":16266,"line_start":526,"line_end":526,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16271,"byte_end":16330,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16335,"byte_end":16344,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16349,"byte_end":16354,"line_start":529,"line_end":529,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16359,"byte_end":16366,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16371,"byte_end":16374,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ### With named params","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16379,"byte_end":16404,"line_start":532,"line_end":532,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16409,"byte_end":16412,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16417,"byte_end":16435,"line_start":534,"line_end":534,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16440,"byte_end":16481,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16486,"byte_end":16537,"line_start":536,"line_end":536,"column_start":5,"column_end":56}},{"value":"/     conn.execute(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16542,"byte_end":16563,"line_start":537,"line_end":537,"column_start":5,"column_end":26}},{"value":"/         \"INSERT INTO test (name) VALUES (:name)\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16568,"byte_end":16621,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"/         &[(\":name\", \"one\")],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16626,"byte_end":16658,"line_start":539,"line_end":539,"column_start":5,"column_end":37}},{"value":"/     )","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16663,"byte_end":16672,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16677,"byte_end":16682,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16687,"byte_end":16694,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16699,"byte_end":16702,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16707,"byte_end":16720,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16725,"byte_end":16728,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16733,"byte_end":16808,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16813,"byte_end":16856,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16861,"byte_end":16870,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17333,"byte_end":17337,"line_start":560,"line_end":560,"column_start":12,"column_end":16},"name":"path","qualname":"<Connection>::path","value":"pub fn path(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the database file, if one exists and is known.","sig":null,"attributes":[{"value":"/ Returns the path to the database file, if one exists and is known.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17076,"byte_end":17146,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17151,"byte_end":17154,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Note that in some cases [PRAGMA","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17159,"byte_end":17194,"line_start":556,"line_end":556,"column_start":5,"column_end":40}},{"value":"/ database_list](https://sqlite.org/pragma.html#pragma_database_list) is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17199,"byte_end":17273,"line_start":557,"line_end":557,"column_start":5,"column_end":79}},{"value":"/ likely to be more robust.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17278,"byte_end":17307,"line_start":558,"line_end":558,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17312,"byte_end":17321,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17875,"byte_end":17888,"line_start":575,"line_end":575,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"pub fn execute_named(&Self, &str, &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17404,"byte_end":17477,"line_start":564,"line_end":564,"column_start":5,"column_end":78}},{"value":"/ named parameter(s).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17482,"byte_end":17505,"line_start":565,"line_end":565,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17510,"byte_end":17513,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17518,"byte_end":17593,"line_start":567,"line_end":567,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17598,"byte_end":17634,"line_start":568,"line_end":568,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17639,"byte_end":17642,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17647,"byte_end":17660,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17665,"byte_end":17668,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17673,"byte_end":17748,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17753,"byte_end":17796,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `execute` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17801,"byte_end":17863,"line_start":574,"line_end":574,"column_start":5,"column_end":67}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18025,"byte_end":18046,"line_start":577,"line_end":577,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18422,"byte_end":18439,"line_start":589,"line_end":589,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"pub fn last_insert_rowid(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[{"value":"/ Get the SQLite rowid of the most recent successful INSERT.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18208,"byte_end":18270,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18275,"byte_end":18278,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_last_insert_rowid](https://www.sqlite.org/c3ref/last_insert_rowid.html) under","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18283,"byte_end":18378,"line_start":586,"line_end":586,"column_start":5,"column_end":100}},{"value":"/ the hood.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18383,"byte_end":18396,"line_start":587,"line_end":587,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18401,"byte_end":18410,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19461,"byte_end":19470,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"pub fn query_row<T, P, F>(&Self, &str, P, F) -> Result<T> where P: Params,\nF: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18516,"byte_end":18586,"line_start":593,"line_end":593,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18591,"byte_end":18606,"line_start":594,"line_end":594,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18611,"byte_end":18614,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18619,"byte_end":18633,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18638,"byte_end":18641,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18646,"byte_end":18664,"line_start":598,"line_end":598,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result, Connection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18669,"byte_end":18710,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18715,"byte_end":18777,"line_start":600,"line_end":600,"column_start":5,"column_end":67}},{"value":"/     conn.query_row(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18782,"byte_end":18805,"line_start":601,"line_end":601,"column_start":5,"column_end":28}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18810,"byte_end":18874,"line_start":602,"line_end":602,"column_start":5,"column_end":69}},{"value":"/         [],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18879,"byte_end":18894,"line_start":603,"line_end":603,"column_start":5,"column_end":20}},{"value":"/         |row| row.get(0),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18899,"byte_end":18928,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18933,"byte_end":18942,"line_start":605,"line_end":605,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18947,"byte_end":18952,"line_start":606,"line_end":606,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18957,"byte_end":18964,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18969,"byte_end":18972,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18977,"byte_end":19050,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19055,"byte_end":19067,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19072,"byte_end":19075,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19080,"byte_end":19153,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19158,"byte_end":19230,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19235,"byte_end":19273,"line_start":614,"line_end":614,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19278,"byte_end":19281,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19286,"byte_end":19299,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19304,"byte_end":19307,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19312,"byte_end":19387,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19392,"byte_end":19435,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19440,"byte_end":19449,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20390,"byte_end":20405,"line_start":646,"line_end":646,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"pub fn query_row_named<T, F>(&Self, &str, &[(&str, &dyn ToSql)], F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19724,"byte_end":19797,"line_start":631,"line_end":631,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19802,"byte_end":19838,"line_start":632,"line_end":632,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19843,"byte_end":19846,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19851,"byte_end":19924,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19929,"byte_end":19941,"line_start":635,"line_end":635,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19946,"byte_end":19949,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19954,"byte_end":20027,"line_start":637,"line_end":637,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20032,"byte_end":20104,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20109,"byte_end":20147,"line_start":639,"line_end":639,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20152,"byte_end":20155,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20160,"byte_end":20173,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20178,"byte_end":20181,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20186,"byte_end":20261,"line_start":643,"line_end":643,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20266,"byte_end":20309,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `query_row` with named params now.\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20314,"byte_end":20378,"line_start":645,"line_end":645,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21505,"byte_end":21523,"line_start":679,"line_end":679,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"pub fn query_row_and_then<T, E, P, F>(&Self, &str, P, F) -> Result<T, E> where\nP: Params, F: FnOnce(&Row) -> Result<T, E>, E: convert::From<Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20588,"byte_end":20658,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/ single row, and execute a mapping via `f` on that returned row with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20663,"byte_end":20734,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ the possibility of failure. The `Result` type of `f` must implement","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20739,"byte_end":20810,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/ `std::convert::From<Error>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20815,"byte_end":20847,"line_start":656,"line_end":656,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20852,"byte_end":20855,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20860,"byte_end":20874,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20879,"byte_end":20882,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20887,"byte_end":20905,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result, Connection};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20910,"byte_end":20951,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20956,"byte_end":21018,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/     conn.query_row_and_then(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21023,"byte_end":21055,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21060,"byte_end":21124,"line_start":664,"line_end":664,"column_start":5,"column_end":69}},{"value":"/         [],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21129,"byte_end":21144,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/         |row| row.get(0),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21149,"byte_end":21178,"line_start":666,"line_end":666,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21183,"byte_end":21192,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21197,"byte_end":21202,"line_start":668,"line_end":668,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21207,"byte_end":21214,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21219,"byte_end":21222,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21227,"byte_end":21300,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21305,"byte_end":21317,"line_start":672,"line_end":672,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21322,"byte_end":21325,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21330,"byte_end":21343,"line_start":674,"line_end":674,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21348,"byte_end":21351,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21356,"byte_end":21431,"line_start":676,"line_end":676,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21436,"byte_end":21479,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21484,"byte_end":21493,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22496,"byte_end":22503,"line_start":711,"line_end":711,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"pub fn prepare(&Self, &str) -> Result<Statement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21891,"byte_end":21933,"line_start":692,"line_end":692,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21938,"byte_end":21941,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21946,"byte_end":21960,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21965,"byte_end":21968,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21973,"byte_end":21991,"line_start":696,"line_end":696,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21996,"byte_end":22037,"line_start":697,"line_end":697,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22042,"byte_end":22101,"line_start":698,"line_end":698,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22106,"byte_end":22183,"line_start":699,"line_end":699,"column_start":5,"column_end":82}},{"value":"/     stmt.execute([\"Joe Smith\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22188,"byte_end":22225,"line_start":700,"line_end":700,"column_start":5,"column_end":42}},{"value":"/     stmt.execute([\"Bob Jones\"])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22230,"byte_end":22267,"line_start":701,"line_end":701,"column_start":5,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22272,"byte_end":22286,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22291,"byte_end":22296,"line_start":703,"line_end":703,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22301,"byte_end":22308,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22313,"byte_end":22316,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22321,"byte_end":22334,"line_start":706,"line_end":706,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22339,"byte_end":22342,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22347,"byte_end":22422,"line_start":708,"line_end":708,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22427,"byte_end":22470,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22475,"byte_end":22484,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22991,"byte_end":22996,"line_start":725,"line_end":725,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"pub fn close(Self) -> Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[{"value":"/ Close the SQLite connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22608,"byte_end":22640,"line_start":715,"line_end":715,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22645,"byte_end":22648,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This is functionally equivalent to the `Drop` implementation for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22653,"byte_end":22721,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ `Connection` except that on failure, it returns an error and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22726,"byte_end":22794,"line_start":718,"line_end":718,"column_start":5,"column_end":73}},{"value":"/ connection itself (presumably so closing can be attempted again).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22799,"byte_end":22868,"line_start":719,"line_end":719,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22873,"byte_end":22876,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22881,"byte_end":22894,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22899,"byte_end":22902,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22907,"byte_end":22965,"line_start":723,"line_end":723,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22970,"byte_end":22979,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28618,"byte_end":28624,"line_start":867,"line_end":867,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"pub unsafe fn handle(&Self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[{"value":"/ Get access to the underlying SQLite database connection handle.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28067,"byte_end":28134,"line_start":853,"line_end":853,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28139,"byte_end":28142,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28147,"byte_end":28160,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28165,"byte_end":28168,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ You should not need to use this function. If you do need to, please","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28173,"byte_end":28244,"line_start":857,"line_end":857,"column_start":5,"column_end":76}},{"value":"/ [open an issue on the rusqlite repository](https://github.com/rusqlite/rusqlite/issues) and describe","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28249,"byte_end":28353,"line_start":858,"line_end":858,"column_start":5,"column_end":109}},{"value":"/ your use case.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28358,"byte_end":28376,"line_start":859,"line_end":859,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28381,"byte_end":28384,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28389,"byte_end":28401,"line_start":861,"line_end":861,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28406,"byte_end":28409,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it gives you raw access","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28414,"byte_end":28473,"line_start":863,"line_end":863,"column_start":5,"column_end":64}},{"value":"/ to the SQLite connection, and what you do with it could impact the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28478,"byte_end":28548,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ safety of this `Connection`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28553,"byte_end":28585,"line_start":865,"line_end":865,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28590,"byte_end":28599,"line_start":866,"line_end":866,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29026,"byte_end":29037,"line_start":880,"line_end":880,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Connection>::from_handle","value":"pub unsafe fn from_handle(*mut ffi::sqlite3) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Connection` from a raw handle.","sig":null,"attributes":[{"value":"/ Create a `Connection` from a raw handle.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28696,"byte_end":28740,"line_start":871,"line_end":871,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28745,"byte_end":28748,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ The underlying SQLite database connection handle will not be closed when","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28753,"byte_end":28829,"line_start":873,"line_end":873,"column_start":5,"column_end":81}},{"value":"/ the returned connection is dropped/closed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28834,"byte_end":28880,"line_start":874,"line_end":874,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28885,"byte_end":28888,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28893,"byte_end":28905,"line_start":876,"line_end":876,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28910,"byte_end":28913,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may impact the Connection.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28918,"byte_end":28993,"line_start":878,"line_end":878,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28998,"byte_end":29007,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29497,"byte_end":29517,"line_start":893,"line_end":893,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"pub fn get_interrupt_handle(&Self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[{"value":"/ Get access to a handle that can be used to interrupt long running","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29365,"byte_end":29434,"line_start":890,"line_end":890,"column_start":5,"column_end":74}},{"value":"/ queries from another thread.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29439,"byte_end":29471,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29476,"byte_end":29485,"line_start":892,"line_end":892,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30089,"byte_end":30102,"line_start":913,"line_end":913,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"pub fn is_autocommit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[{"value":"/ Test for auto-commit mode.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29991,"byte_end":30021,"line_start":910,"line_end":910,"column_start":5,"column_end":35}},{"value":"/ Autocommit mode is on by default.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30026,"byte_end":30063,"line_start":911,"line_end":911,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30068,"byte_end":30077,"line_start":912,"line_end":912,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30374,"byte_end":30381,"line_start":921,"line_end":921,"column_start":12,"column_end":19},"name":"is_busy","qualname":"<Connection>::is_busy","value":"pub fn is_busy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if all associated prepared statements have been reset.\n","sig":null,"attributes":[{"value":"/ Determine if all associated prepared statements have been reset.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30172,"byte_end":30240,"line_start":917,"line_end":917,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30245,"byte_end":30254,"line_start":918,"line_end":918,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30259,"byte_end":30292,"line_start":919,"line_end":919,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30606,"byte_end":30617,"line_start":928,"line_end":928,"column_start":12,"column_end":23},"name":"cache_flush","qualname":"<Connection>::cache_flush","value":"pub fn cache_flush(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush caches to disk mid-transaction\n","sig":null,"attributes":[{"value":"/ Flush caches to disk mid-transaction","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30445,"byte_end":30485,"line_start":925,"line_end":925,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"modern_sqlite\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30490,"byte_end":30523,"line_start":926,"line_end":926,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31353,"byte_end":31358,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"Batch","qualname":"::Batch","value":"Batch {  }","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832}],"decl_id":null,"docs":" Batch iterator\n ```rust\n use rusqlite::{Batch, Connection, Result};","sig":null,"attributes":[{"value":"/ Batch iterator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30896,"byte_end":30914,"line_start":941,"line_end":941,"column_start":1,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30915,"byte_end":30926,"line_start":942,"line_end":942,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{Batch, Connection, Result};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30927,"byte_end":30973,"line_start":943,"line_end":943,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30974,"byte_end":30977,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30978,"byte_end":31007,"line_start":945,"line_end":945,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31008,"byte_end":31057,"line_start":946,"line_end":946,"column_start":1,"column_end":50}},{"value":"/     let sql = r\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31058,"byte_end":31078,"line_start":947,"line_end":947,"column_start":1,"column_end":21}},{"value":"/     CREATE TABLE tbl1 (col);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31079,"byte_end":31111,"line_start":948,"line_end":948,"column_start":1,"column_end":33}},{"value":"/     CREATE TABLE tbl2 (col);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31112,"byte_end":31144,"line_start":949,"line_end":949,"column_start":1,"column_end":33}},{"value":"/     \";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31145,"byte_end":31155,"line_start":950,"line_end":950,"column_start":1,"column_end":11}},{"value":"/     let mut batch = Batch::new(&conn, sql);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31156,"byte_end":31203,"line_start":951,"line_end":951,"column_start":1,"column_end":48}},{"value":"/     while let Some(mut stmt) = batch.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31204,"byte_end":31254,"line_start":952,"line_end":952,"column_start":1,"column_end":51}},{"value":"/         stmt.execute([])?;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31255,"byte_end":31285,"line_start":953,"line_end":953,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31286,"byte_end":31295,"line_start":954,"line_end":954,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31296,"byte_end":31310,"line_start":955,"line_end":955,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31311,"byte_end":31316,"line_start":956,"line_end":956,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31317,"byte_end":31324,"line_start":957,"line_end":957,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31513,"byte_end":31516,"line_start":967,"line_end":967,"column_start":12,"column_end":15},"name":"new","qualname":"<Batch>::new","value":"pub fn new(&'conn Connection, &'sql str) -> Batch","parent":null,"children":[],"decl_id":null,"docs":" Constructor\n","sig":null,"attributes":[{"value":"/ Constructor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31486,"byte_end":31501,"line_start":966,"line_end":966,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31806,"byte_end":31810,"line_start":975,"line_end":975,"column_start":12,"column_end":16},"name":"next","qualname":"<Batch>::next","value":"pub fn next(&mut Self) -> Result<Option<Statement>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates on each batch statements.","sig":null,"attributes":[{"value":"/ Iterates on each batch statements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31630,"byte_end":31668,"line_start":971,"line_end":971,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31673,"byte_end":31676,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` when batch is completed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31681,"byte_end":31728,"line_start":973,"line_end":973,"column_start":5,"column_end":52}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31733,"byte_end":31773,"line_start":974,"line_end":974,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32705,"byte_end":32714,"line_start":1006,"line_end":1006,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":2838}],"decl_id":null,"docs":" Flags for opening SQLite database connections.\n See [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14244628,"byte_end":14244637,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32882,"byte_end":32903,"line_start":1009,"line_end":1009,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database is opened in read-only mode.\n If the database does not already exist, an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33199,"byte_end":33221,"line_start":1013,"line_end":1013,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database is opened for reading and writing if possible,\n or reading only if the file is write protected by the operating system.\n In either case the database must already exist, otherwise an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33334,"byte_end":33352,"line_start":1015,"line_end":1015,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database is created if it does not already exist\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33475,"byte_end":33490,"line_start":1017,"line_end":1017,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The filename can be interpreted as a URI if this flag is set.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33596,"byte_end":33614,"line_start":1019,"line_end":1019,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database will be opened as an in-memory database.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33735,"byte_end":33755,"line_start":1021,"line_end":1021,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The new database connection will use the \"multi-thread\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33885,"byte_end":33907,"line_start":1023,"line_end":1023,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The new database connection will use the \"serialized\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34012,"byte_end":34036,"line_start":1025,"line_end":1025,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database is opened shared cache enabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34125,"byte_end":34150,"line_start":1027,"line_end":1027,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database is opened shared cache disabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34252,"byte_end":34272,"line_start":1029,"line_end":1029,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NOFOLLOW","qualname":"::OpenFlags::SQLITE_OPEN_NOFOLLOW","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The database filename is not allowed to be a symbolic link.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34337,"byte_end":34358,"line_start":1031,"line_end":1031,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_EXRESCODE","qualname":"::OpenFlags::SQLITE_OPEN_EXRESCODE","value":"Self","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Extended result codes.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35635,"byte_end":35663,"line_start":1063,"line_end":1063,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"pub unsafe fn bypass_sqlite_initialization()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[{"value":"/ rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34626,"byte_end":34704,"line_start":1044,"line_end":1044,"column_start":1,"column_end":79}},{"value":"/ later. If you are running against a SQLite older than that, rusqlite","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34705,"byte_end":34777,"line_start":1045,"line_end":1045,"column_start":1,"column_end":73}},{"value":"/ attempts to ensure safety by performing configuration and initialization of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34778,"byte_end":34857,"line_start":1046,"line_end":1046,"column_start":1,"column_end":80}},{"value":"/ SQLite itself the first time you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34858,"byte_end":34894,"line_start":1047,"line_end":1047,"column_start":1,"column_end":37}},{"value":"/ attempt to open a connection. By default, rusqlite panics if that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34895,"byte_end":34964,"line_start":1048,"line_end":1048,"column_start":1,"column_end":70}},{"value":"/ initialization fails, since that could mean SQLite has been initialized in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34965,"byte_end":35043,"line_start":1049,"line_end":1049,"column_start":1,"column_end":79}},{"value":"/ single-thread mode.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35044,"byte_end":35067,"line_start":1050,"line_end":1050,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35068,"byte_end":35071,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ If you are encountering that panic _and_ can ensure that SQLite has been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35072,"byte_end":35148,"line_start":1052,"line_end":1052,"column_start":1,"column_end":77}},{"value":"/ initialized in either multi-thread or serialized mode, call this function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35149,"byte_end":35226,"line_start":1053,"line_end":1053,"column_start":1,"column_end":78}},{"value":"/ prior to attempting to open a connection and rusqlite's initialization","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35227,"byte_end":35301,"line_start":1054,"line_end":1054,"column_start":1,"column_end":75}},{"value":"/ process will by skipped.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35302,"byte_end":35330,"line_start":1055,"line_end":1055,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35331,"byte_end":35334,"line_start":1056,"line_end":1056,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35335,"byte_end":35347,"line_start":1057,"line_end":1057,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35348,"byte_end":35351,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because if you call it and SQLite has actually been","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35352,"byte_end":35431,"line_start":1059,"line_end":1059,"column_start":1,"column_end":80}},{"value":"/ configured to run in single-thread mode,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35432,"byte_end":35476,"line_start":1060,"line_end":1060,"column_start":1,"column_end":45}},{"value":"/ you may encounter memory errors or data corruption or any number of terrible","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35477,"byte_end":35557,"line_start":1061,"line_end":1061,"column_start":1,"column_end":81}},{"value":"/ things that should not be possible when you're using Rust.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35558,"byte_end":35620,"line_start":1062,"line_end":1062,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35789,"byte_end":35804,"line_start":1068,"line_end":1068,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":1547}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[{"value":"/ Allows interrupting a long-running computation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35726,"byte_end":35777,"line_start":1067,"line_end":1067,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":36113,"byte_end":36122,"line_start":1078,"line_end":1078,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"pub fn interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[{"value":"/ Interrupt the query currently executing on another thread. This will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35962,"byte_end":36034,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ cause that query to fail with a `SQLITE3_INTERRUPT` error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":36039,"byte_end":36101,"line_start":1077,"line_end":1077,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72289,"byte_end":72294,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74739,"byte_end":74744,"line_start":180,"line_end":180,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74878,"byte_end":74883,"line_start":187,"line_end":187,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75204,"byte_end":75209,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75928,"byte_end":75933,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":79393,"byte_end":79398,"line_start":291,"line_end":291,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":100923,"byte_end":100927,"line_start":10,"line_end":10,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89840,"byte_end":89850,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91003,"byte_end":91007,"line_start":250,"line_end":250,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92572,"byte_end":92576,"line_start":310,"line_end":310,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":93394,"byte_end":93398,"line_start":335,"line_end":335,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":94574,"byte_end":94578,"line_start":370,"line_end":370,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95463,"byte_end":95467,"line_start":398,"line_end":398,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95874,"byte_end":95882,"line_start":414,"line_end":414,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":111876,"byte_end":111886,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":114928,"byte_end":114943,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118432,"byte_end":118442,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120564,"byte_end":120578,"line_start":64,"line_end":64,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120911,"byte_end":120926,"line_start":76,"line_end":76,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121100,"byte_end":121115,"line_start":85,"line_end":85,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121253,"byte_end":121268,"line_start":92,"line_end":92,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121478,"byte_end":121493,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121921,"byte_end":121935,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128614,"byte_end":128620,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128932,"byte_end":128941,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139909,"byte_end":139919,"line_start":66,"line_end":66,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":144838,"byte_end":144853,"line_start":40,"line_end":40,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":144863,"byte_end":144878,"line_start":42,"line_end":42,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":153702,"byte_end":153717,"line_start":313,"line_end":313,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169952,"byte_end":169966,"line_start":342,"line_end":342,"column_start":20,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":170041,"byte_end":170055,"line_start":349,"line_end":349,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":170461,"byte_end":170464,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174297,"byte_end":174300,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174393,"byte_end":174403,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":184503,"byte_end":184515,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":190201,"byte_end":190213,"line_start":229,"line_end":229,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190726,"byte_end":190730,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193158,"byte_end":193162,"line_start":89,"line_end":89,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193575,"byte_end":193579,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193903,"byte_end":193906,"line_start":122,"line_end":122,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194504,"byte_end":194514,"line_start":148,"line_end":148,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":195085,"byte_end":195096,"line_start":172,"line_end":172,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":196141,"byte_end":196145,"line_start":207,"line_end":207,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197062,"byte_end":197065,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201633,"byte_end":201636,"line_start":357,"line_end":357,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207870,"byte_end":207879,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":975},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":236255,"byte_end":236264,"line_start":826,"line_end":826,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":236678,"byte_end":236687,"line_start":841,"line_end":841,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":236803,"byte_end":236812,"line_start":849,"line_end":849,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259296,"byte_end":259307,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263674,"byte_end":263685,"line_start":232,"line_end":232,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263841,"byte_end":263852,"line_start":242,"line_end":242,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263936,"byte_end":263945,"line_start":249,"line_end":249,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267401,"byte_end":267410,"line_start":361,"line_end":361,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267566,"byte_end":267575,"line_start":371,"line_end":371,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267659,"byte_end":267669,"line_start":378,"line_end":378,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295782,"byte_end":295794,"line_start":31,"line_end":31,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":296449,"byte_end":296461,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297103,"byte_end":297115,"line_start":71,"line_end":71,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299154,"byte_end":299160,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299318,"byte_end":299321,"line_start":156,"line_end":156,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299484,"byte_end":299486,"line_start":163,"line_end":163,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299651,"byte_end":299654,"line_start":170,"line_end":170,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299808,"byte_end":299811,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":300917,"byte_end":300923,"line_start":215,"line_end":215,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":301166,"byte_end":301171,"line_start":225,"line_end":225,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303791,"byte_end":303802,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305101,"byte_end":305112,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305884,"byte_end":305887,"line_start":104,"line_end":104,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":306035,"byte_end":306038,"line_start":111,"line_end":111,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":306191,"byte_end":306193,"line_start":118,"line_end":118,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":306348,"byte_end":306351,"line_start":125,"line_end":125,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":308324,"byte_end":308330,"line_start":206,"line_end":206,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":308596,"byte_end":308599,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":309027,"byte_end":309032,"line_start":241,"line_end":241,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":309169,"byte_end":309175,"line_start":248,"line_end":248,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314752,"byte_end":314757,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314855,"byte_end":314860,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314972,"byte_end":314977,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":315990,"byte_end":315995,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316097,"byte_end":316102,"line_start":88,"line_end":88,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316208,"byte_end":316213,"line_start":95,"line_end":95,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316315,"byte_end":316320,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316426,"byte_end":316431,"line_start":109,"line_end":109,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316543,"byte_end":316548,"line_start":116,"line_end":116,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316736,"byte_end":316741,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317737,"byte_end":317745,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318143,"byte_end":318151,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322471,"byte_end":322476,"line_start":159,"line_end":159,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322980,"byte_end":322988,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":323122,"byte_end":323130,"line_start":182,"line_end":182,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":323255,"byte_end":323263,"line_start":189,"line_end":189,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":323670,"byte_end":323678,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282828,"byte_end":282832,"line_start":127,"line_end":127,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\param_cache.rs","byte_start":327214,"byte_end":327229,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":329198,"byte_end":329210,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":331443,"byte_end":331455,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":331560,"byte_end":331572,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":331751,"byte_end":331763,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":332051,"byte_end":332063,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":332211,"byte_end":332223,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":335357,"byte_end":335375,"line_start":39,"line_end":39,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":339895,"byte_end":339913,"line_start":157,"line_end":157,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":340053,"byte_end":340071,"line_start":164,"line_end":164,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":340221,"byte_end":340239,"line_start":170,"line_end":170,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6718,"byte_end":6724,"line_start":233,"line_end":233,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9373,"byte_end":9385,"line_start":321,"line_end":321,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9869,"byte_end":9879,"line_start":340,"line_end":340,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9898,"byte_end":9908,"line_start":342,"line_end":342,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10011,"byte_end":10021,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30713,"byte_end":30723,"line_start":933,"line_end":933,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31461,"byte_end":31466,"line_start":965,"line_end":965,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32352,"byte_end":32357,"line_start":994,"line_end":994,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34400,"byte_end":34409,"line_start":1035,"line_end":1035,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35875,"byte_end":35890,"line_start":1072,"line_end":1072,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35915,"byte_end":35930,"line_start":1073,"line_end":1073,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35940,"byte_end":35955,"line_start":1075,"line_end":1075,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2688,"byte_end":2692,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2833,"byte_end":2839,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":414}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3553,"byte_end":3558,"line_start":127,"line_end":127,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1091}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72289,"byte_end":72294,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74739,"byte_end":74744,"line_start":180,"line_end":180,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74878,"byte_end":74883,"line_start":187,"line_end":187,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75204,"byte_end":75209,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75928,"byte_end":75933,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":79393,"byte_end":79398,"line_start":291,"line_end":291,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1553},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\pos_io.rs","byte_start":100923,"byte_end":100927,"line_start":10,"line_end":10,"column_start":13,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":89840,"byte_end":89850,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":91003,"byte_end":91007,"line_start":250,"line_end":250,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":92572,"byte_end":92576,"line_start":310,"line_end":310,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":248},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":93394,"byte_end":93398,"line_start":335,"line_end":335,"column_start":20,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":248},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":94574,"byte_end":94578,"line_start":370,"line_end":370,"column_start":19,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":248},"to":{"krate":1,"index":4798}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95463,"byte_end":95467,"line_start":398,"line_end":398,"column_start":15,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\blob\\mod.rs","byte_start":95874,"byte_end":95882,"line_start":414,"line_end":414,"column_start":16,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1614},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":111876,"byte_end":111886,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":114928,"byte_end":114943,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":118432,"byte_end":118442,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120564,"byte_end":120578,"line_start":64,"line_end":64,"column_start":22,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":361},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":120911,"byte_end":120926,"line_start":76,"line_end":76,"column_start":23,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121100,"byte_end":121115,"line_start":85,"line_end":85,"column_start":26,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121253,"byte_end":121268,"line_start":92,"line_end":92,"column_start":15,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121478,"byte_end":121493,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":121921,"byte_end":121935,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128614,"byte_end":128620,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":128932,"byte_end":128941,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":139909,"byte_end":139919,"line_start":66,"line_end":66,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":144838,"byte_end":144853,"line_start":40,"line_end":40,"column_start":22,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":144863,"byte_end":144878,"line_start":42,"line_end":42,"column_start":6,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":153702,"byte_end":153717,"line_start":313,"line_end":313,"column_start":15,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":163430,"byte_end":163436,"line_start":157,"line_end":157,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":592},"to":{"krate":0,"index":596}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":169952,"byte_end":169966,"line_start":342,"line_end":342,"column_start":20,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2278},"to":{"krate":0,"index":592}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":170041,"byte_end":170055,"line_start":349,"line_end":349,"column_start":20,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2278},"to":{"krate":0,"index":596}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":170461,"byte_end":170464,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174297,"byte_end":174300,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":174393,"byte_end":174403,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":184503,"byte_end":184515,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":190201,"byte_end":190213,"line_start":229,"line_end":229,"column_start":15,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2288},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":190726,"byte_end":190730,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193158,"byte_end":193162,"line_start":89,"line_end":89,"column_start":13,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193575,"byte_end":193579,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":193903,"byte_end":193906,"line_start":122,"line_end":122,"column_start":33,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":795},"to":{"krate":23,"index":59}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":194504,"byte_end":194514,"line_start":148,"line_end":148,"column_start":25,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":195085,"byte_end":195096,"line_start":172,"line_end":172,"column_start":28,"column_end":39},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":817},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":196141,"byte_end":196145,"line_start":207,"line_end":207,"column_start":43,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":770},"to":{"krate":24,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":197062,"byte_end":197065,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":201633,"byte_end":201636,"line_start":357,"line_end":357,"column_start":41,"column_end":44},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":835},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":202096,"byte_end":202102,"line_start":374,"line_end":374,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":859},"to":{"krate":0,"index":862}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":207870,"byte_end":207879,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":236255,"byte_end":236264,"line_start":826,"line_end":826,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":236678,"byte_end":236687,"line_start":841,"line_end":841,"column_start":15,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":236803,"byte_end":236812,"line_start":849,"line_end":849,"column_start":6,"column_end":15},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":259296,"byte_end":259307,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263674,"byte_end":263685,"line_start":232,"line_end":232,"column_start":16,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2566},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263841,"byte_end":263852,"line_start":242,"line_end":242,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2566},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":263936,"byte_end":263945,"line_start":249,"line_end":249,"column_start":6,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267401,"byte_end":267410,"line_start":361,"line_end":361,"column_start":16,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267566,"byte_end":267575,"line_start":371,"line_end":371,"column_start":15,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":267659,"byte_end":267669,"line_start":378,"line_end":378,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":295782,"byte_end":295794,"line_start":31,"line_end":31,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":296449,"byte_end":296461,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297103,"byte_end":297115,"line_start":71,"line_end":71,"column_start":16,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2573},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":297501,"byte_end":297506,"line_start":85,"line_end":85,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299154,"byte_end":299160,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299318,"byte_end":299321,"line_start":156,"line_end":156,"column_start":18,"column_end":21},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299484,"byte_end":299486,"line_start":163,"line_end":163,"column_start":27,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":4659},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299651,"byte_end":299654,"line_start":170,"line_end":170,"column_start":29,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":299808,"byte_end":299811,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":300917,"byte_end":300923,"line_start":215,"line_end":215,"column_start":30,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":301166,"byte_end":301171,"line_start":225,"line_end":225,"column_start":18,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2695},"to":{"krate":0,"index":1143}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":303791,"byte_end":303802,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2614},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305101,"byte_end":305112,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2614},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":305884,"byte_end":305887,"line_start":104,"line_end":104,"column_start":45,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":678},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":306035,"byte_end":306038,"line_start":111,"line_end":111,"column_start":35,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":306191,"byte_end":306193,"line_start":118,"line_end":118,"column_start":44,"column_end":46},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":4659},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":306348,"byte_end":306351,"line_start":125,"line_end":125,"column_start":46,"column_end":49},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":308324,"byte_end":308330,"line_start":206,"line_end":206,"column_start":16,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":308596,"byte_end":308599,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"kind":{"Impl":{"id":94}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":309027,"byte_end":309032,"line_start":241,"line_end":241,"column_start":16,"column_end":21},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2695},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":309169,"byte_end":309175,"line_start":248,"line_end":248,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314752,"byte_end":314757,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314855,"byte_end":314860,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":314972,"byte_end":314977,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":315990,"byte_end":315995,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316097,"byte_end":316102,"line_start":88,"line_end":88,"column_start":20,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316208,"byte_end":316213,"line_start":95,"line_end":95,"column_start":20,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316315,"byte_end":316320,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316426,"byte_end":316431,"line_start":109,"line_end":109,"column_start":24,"column_end":29},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316543,"byte_end":316548,"line_start":116,"line_end":116,"column_start":29,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":316736,"byte_end":316741,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":317737,"byte_end":317745,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":318143,"byte_end":318151,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322471,"byte_end":322476,"line_start":159,"line_end":159,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2695},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":322980,"byte_end":322988,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":323122,"byte_end":323130,"line_start":182,"line_end":182,"column_start":29,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":323255,"byte_end":323263,"line_start":189,"line_end":189,"column_start":30,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":323670,"byte_end":323678,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":282828,"byte_end":282832,"line_start":127,"line_end":127,"column_start":23,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2765},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\param_cache.rs","byte_start":327214,"byte_end":327229,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":329198,"byte_end":329210,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":331443,"byte_end":331455,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":331560,"byte_end":331572,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":331751,"byte_end":331763,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":332051,"byte_end":332063,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":332211,"byte_end":332223,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":335357,"byte_end":335375,"line_start":39,"line_end":39,"column_start":6,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":339895,"byte_end":339913,"line_start":157,"line_end":157,"column_start":15,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":340053,"byte_end":340071,"line_start":164,"line_end":164,"column_start":26,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\sqlite_string.rs","byte_start":340221,"byte_end":340239,"line_start":170,"line_end":170,"column_start":28,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6718,"byte_end":6724,"line_start":233,"line_end":233,"column_start":34,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1451},"to":{"krate":0,"index":1454}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9373,"byte_end":9385,"line_start":321,"line_end":321,"column_start":6,"column_end":18},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9869,"byte_end":9879,"line_start":340,"line_end":340,"column_start":22,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9898,"byte_end":9908,"line_start":342,"line_end":342,"column_start":15,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10011,"byte_end":10021,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30713,"byte_end":30723,"line_start":933,"line_end":933,"column_start":21,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31461,"byte_end":31466,"line_start":965,"line_end":965,"column_start":19,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32352,"byte_end":32357,"line_start":994,"line_end":994,"column_start":26,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2827},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34400,"byte_end":34409,"line_start":1035,"line_end":1035,"column_start":18,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2837},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35875,"byte_end":35890,"line_start":1072,"line_end":1072,"column_start":22,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1546},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35915,"byte_end":35930,"line_start":1073,"line_end":1073,"column_start":22,"column_end":37},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1546},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35940,"byte_end":35955,"line_start":1075,"line_end":1075,"column_start":6,"column_end":21},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1546},"to":{"krate":4294967295,"index":4294967295}}]}