{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","widestring","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=a4b05ab9344b4fb5","-C","extra-filename=-a4b05ab9344b4fb5","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libwidestring-a4b05ab9344b4fb5.rmeta"},"prelude":{"crate_id":{"name":"widestring","disambiguator":[5343780669737573456,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":0,"byte_end":18691,"line_start":1,"line_end":467,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":45207},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24734,"byte_end":24745,"line_start":12,"line_end":12,"column_start":21,"column_end":32},"alias_span":null,"name":"DecodeUtf16","value":"","parent":{"krate":0,"index":61}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11561,"byte_end":11572,"line_start":230,"line_end":230,"column_start":16,"column_end":27},"alias_span":null,"name":"NulError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11675,"byte_end":11689,"line_start":233,"line_end":233,"column_start":16,"column_end":30},"alias_span":null,"name":"FromUtf32Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11742,"byte_end":11757,"line_start":236,"line_end":236,"column_start":16,"column_end":31},"alias_span":null,"name":"MissingNulError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11776,"byte_end":11783,"line_start":238,"line_end":238,"column_start":17,"column_end":24},"alias_span":null,"name":"U16CStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11785,"byte_end":11792,"line_start":238,"line_end":238,"column_start":26,"column_end":33},"alias_span":null,"name":"U32CStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11794,"byte_end":11799,"line_start":238,"line_end":238,"column_start":35,"column_end":40},"alias_span":null,"name":"UCStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11801,"byte_end":11809,"line_start":238,"line_end":238,"column_start":42,"column_end":50},"alias_span":null,"name":"WideCStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11906,"byte_end":11916,"line_start":241,"line_end":241,"column_start":20,"column_end":30},"alias_span":null,"name":"U16CString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11918,"byte_end":11928,"line_start":241,"line_end":241,"column_start":32,"column_end":42},"alias_span":null,"name":"U32CString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11930,"byte_end":11938,"line_start":241,"line_end":241,"column_start":44,"column_end":52},"alias_span":null,"name":"UCString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11940,"byte_end":11951,"line_start":241,"line_end":241,"column_start":54,"column_end":65},"alias_span":null,"name":"WideCString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11969,"byte_end":11975,"line_start":242,"line_end":242,"column_start":16,"column_end":22},"alias_span":null,"name":"U16Str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11977,"byte_end":11983,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"alias_span":null,"name":"U32Str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11985,"byte_end":11989,"line_start":242,"line_end":242,"column_start":32,"column_end":36},"alias_span":null,"name":"UStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11991,"byte_end":11998,"line_start":242,"line_end":242,"column_start":38,"column_end":45},"alias_span":null,"name":"WideStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12094,"byte_end":12103,"line_start":245,"line_end":245,"column_start":19,"column_end":28},"alias_span":null,"name":"U16String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12105,"byte_end":12114,"line_start":245,"line_end":245,"column_start":30,"column_end":39},"alias_span":null,"name":"U32String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12116,"byte_end":12123,"line_start":245,"line_end":245,"column_start":41,"column_end":48},"alias_span":null,"name":"UString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12125,"byte_end":12135,"line_start":245,"line_end":245,"column_start":50,"column_end":60},"alias_span":null,"name":"WideString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":4793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12942,"byte_end":12954,"line_start":280,"line_end":280,"column_start":21,"column_end":33},"alias_span":null,"name":"decode_utf16","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":0,"byte_end":18691,"line_start":1,"line_end":467,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":61},{"krate":0,"index":193},{"krate":0,"index":212},{"krate":0,"index":421},{"krate":0,"index":721},{"krate":0,"index":909},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453}],"decl_id":null,"docs":" A wide string FFI module for converting to and from wide string variants.","sig":null,"attributes":[{"value":"/ A wide string FFI module for converting to and from wide string variants.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides multiple types of wide strings: [`U16String`], [`U16CString`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":82,"byte_end":169,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ [`U32String`], and [`U32CString`]. These types are backed by two generic implementations","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":170,"byte_end":262,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ parameterized by element size: [`UString<C>`] and [`UCString<C>`]. The `UCString` types are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":263,"byte_end":358,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ analogous to the standard [`CString`] FFI type, while the `UString` types are analogous to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":359,"byte_end":453,"line_start":6,"line_end":6,"column_start":1,"column_end":95}},{"value":"/ [`OsString`]. Otherwise, `U16` and `U32` types differ only in character width.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":454,"byte_end":536,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":537,"byte_end":540,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For [`U16String`] and [`U32String`], no guarantees are made about the underlying string data;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":541,"byte_end":638,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ they are simply a sequence of UTF-16 *code units* or UTF-32 code points, both of which may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":639,"byte_end":736,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ ill-formed or contain nul values. [`U16CString`] and [`U32CString`], on the other hand, are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":737,"byte_end":832,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ aware of nul values and are guaranteed to be terminated with a nul value (unless unchecked","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":833,"byte_end":927,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ methods are used to construct the strings). Because [`U16CString`] and [`U32CString`] are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":928,"byte_end":1021,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ C-style, nul-terminated strings, they will have no interior nul values. All four string types","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1022,"byte_end":1119,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ may still have unpaired UTF-16 surrogates or invalid UTF-32 code points; ill-formed data is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1120,"byte_end":1215,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ preserved until conversion to a basic Rust [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1216,"byte_end":1274,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1275,"byte_end":1278,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use [`U16String`] or [`U32String`] when you simply need to pass-through strings, or when you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1279,"byte_end":1375,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ know or don't care if you're not dealing with a nul-terminated string, such as when string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1376,"byte_end":1470,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ lengths are provided and you are only reading strings from FFI, not writing them out to a FFI.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1471,"byte_end":1569,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1570,"byte_end":1573,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Use [`U16CString`] or [`U32CString`] when you must properly handle nul values, and must deal","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1574,"byte_end":1670,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ with nul-terminated C-style wide strings, such as when you pass strings into FFI functions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1671,"byte_end":1766,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1767,"byte_end":1770,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Relationship to other Rust Strings","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1771,"byte_end":1811,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1812,"byte_end":1815,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Standard Rust strings [`String`] and [`str`] are well-formed Unicode data encoded as UTF-8. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1816,"byte_end":1915,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ standard strings provide proper handling of Unicode and ensure strong safety guarantees.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":1916,"byte_end":2008,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2009,"byte_end":2012,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`CString`] and [`CStr`] are strings used for C FFI. They handle nul-terminated C-style","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2013,"byte_end":2104,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ strings. However, they do not have a builtin encoding, and  conversions between C-style and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2105,"byte_end":2200,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ other Rust strings must specifically encode and decode the strings, and handle possibly invalid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2201,"byte_end":2300,"line_start":32,"line_end":32,"column_start":1,"column_end":100}},{"value":"/ encoding data. They are safe to use only in passing string-like data back and forth from C APIs","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2301,"byte_end":2400,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/ but do not provide any other guarantees, so may not be well-formed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2401,"byte_end":2472,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2473,"byte_end":2476,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`OsString`] and [`OsStr`] are also strings for use with FFI. Unlike [`CString`], they do no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2477,"byte_end":2573,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ special handling of nul values, but instead have an OS-specified encoding. While, for example,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2574,"byte_end":2672,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/ on Linux systems this is usually the UTF-8 encoding, this is not the case for every platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2673,"byte_end":2770,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ The encoding may not even be 8-bit: on Windows, [`OsString`] uses a malformed encoding sometimes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2771,"byte_end":2871,"line_start":39,"line_end":39,"column_start":1,"column_end":101}},{"value":"/ referred to as \"WTF-8\". In any case, like [`CString`], [`OsString`] has no additional guarantees","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2872,"byte_end":2972,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"/ and may not be well-formed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":2973,"byte_end":3004,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3005,"byte_end":3008,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Due to the loss of safety of these other string types, conversion to standard Rust [`String`] is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3009,"byte_end":3109,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ lossy, and may require knowledge of the underlying encoding, including platform-specific","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3110,"byte_end":3202,"line_start":44,"line_end":44,"column_start":1,"column_end":93}},{"value":"/ quirks.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3203,"byte_end":3214,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3215,"byte_end":3218,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The wide strings in this crate are roughly based on the principles of the string types in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3219,"byte_end":3312,"line_start":47,"line_end":47,"column_start":1,"column_end":94}},{"value":"/ [`std::ffi`], though there are differences. [`U16String`], [`U32String`], [`U16Str`], and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3313,"byte_end":3406,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ [`U32Str`] are roughly similar in role to [`OsString`] and [`OsStr`], while [`U16CString`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3407,"byte_end":3502,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ [`U32CString`], [`U16CStr`], and [`U32CStr`] are roughly similar in role to [`CString`] and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3503,"byte_end":3598,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ [`CStr`]. Conversion to FFI string types is generally very straight forward and safe, while","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3599,"byte_end":3694,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ conversion directly between standard Rust [`String`] is a lossy conversion just as [`OsString`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3695,"byte_end":3794,"line_start":52,"line_end":52,"column_start":1,"column_end":100}},{"value":"/ is.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3795,"byte_end":3802,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3803,"byte_end":3806,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`U16String`] and [`U16CString`] are treated as though they use UTF-16 encoding, even if they","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3807,"byte_end":3904,"line_start":55,"line_end":55,"column_start":1,"column_end":98}},{"value":"/ may contain unpaired surrogates. [`U32String`] and [`U32CString`] are treated as though they use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":3905,"byte_end":4005,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/ UTF-32 encoding, even if they may contain values outside the valid Unicode character range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4006,"byte_end":4101,"line_start":57,"line_end":57,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4102,"byte_end":4105,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Remarks on UTF-16 Code Units","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4106,"byte_end":4140,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4141,"byte_end":4144,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ *Code units* are the 16-bit units that comprise UTF-16 sequences. Code units","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4145,"byte_end":4225,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ can specify Unicode code points either as single units or in *surrogate pairs*. Because every","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4226,"byte_end":4323,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ code unit might be part of a surrogate pair, many regular string operations, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4324,"byte_end":4414,"line_start":63,"line_end":63,"column_start":1,"column_end":91}},{"value":"/ indexing into a wide string, writing to a wide string, or even iterating a wide string should","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4415,"byte_end":4512,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ be handled with care and are greatly discouraged. Some operations have safer alternatives","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4513,"byte_end":4606,"line_start":65,"line_end":65,"column_start":1,"column_end":94}},{"value":"/ provided, such as Unicode code point iteration instead of code unit iteration. Always keep in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4607,"byte_end":4704,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ mind that the number of code units (`len()`) of a wide string is **not** equivalent to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4705,"byte_end":4799,"line_start":67,"line_end":67,"column_start":1,"column_end":95}},{"value":"/ number of Unicode characters in the string, merely the length of the UTF-16 encoding sequence.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4800,"byte_end":4898,"line_start":68,"line_end":68,"column_start":1,"column_end":99}},{"value":"/ In fact, Unicode code points do not even have a one-to-one mapping with characters!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4899,"byte_end":4986,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4987,"byte_end":4990,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ UTF-32 simply encodes Unicode code points as-is in 32-bit values, but Unicode character code","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":4991,"byte_end":5087,"line_start":71,"line_end":71,"column_start":1,"column_end":97}},{"value":"/ points are reserved only for 21-bits. Again, Unicode code points do not have a one-to-one","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5088,"byte_end":5181,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/ mapping with the concept of a visual character glyph.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5182,"byte_end":5239,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5240,"byte_end":5243,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # FFI with C/C++ `wchar_t`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5244,"byte_end":5274,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5275,"byte_end":5278,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ C/C++'s `wchar_t` (and C++'s corresponding `widestring`) varies in size depending on compiler","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5279,"byte_end":5376,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ and platform. Typically, `wchar_t` is 16-bits on Windows and 32-bits on most Unix-based","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5377,"byte_end":5468,"line_start":78,"line_end":78,"column_start":1,"column_end":92}},{"value":"/ platforms. For convenience when using `wchar_t`-based FFI's, type aliases for the corresponding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5469,"byte_end":5568,"line_start":79,"line_end":79,"column_start":1,"column_end":100}},{"value":"/ string types are provided: [`WideString`] aliases [`U16String`] on Windows or [`U32String`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5569,"byte_end":5664,"line_start":80,"line_end":80,"column_start":1,"column_end":96}},{"value":"/ elsewhere, [`WideCString`] aliases [`U16CString`] or [`U32CString`], etc. The [`WideChar`] alias","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5665,"byte_end":5765,"line_start":81,"line_end":81,"column_start":1,"column_end":101}},{"value":"/ is also provided, aliasing [`u16`] or [`u32`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5766,"byte_end":5816,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5817,"byte_end":5820,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ When not interacting with a FFI using `wchar_t`, it is recommended to use the string types","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5821,"byte_end":5915,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ directly rather than via the wide alias.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5916,"byte_end":5960,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5961,"byte_end":5964,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This crate supports `no_std` when default features are disabled. The `std` and `alloc` features","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":5965,"byte_end":6064,"line_start":87,"line_end":87,"column_start":1,"column_end":100}},{"value":"/ (enabled by default) enable the [`U16String`], [`U32String`], [`U16CString`], and [`U32CString`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6065,"byte_end":6165,"line_start":88,"line_end":88,"column_start":1,"column_end":101}},{"value":"/ types and aliases. Other types do not require allocation and can be used in a `no_std`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6166,"byte_end":6256,"line_start":89,"line_end":89,"column_start":1,"column_end":91}},{"value":"/ environment.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6257,"byte_end":6273,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6274,"byte_end":6277,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6278,"byte_end":6294,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6295,"byte_end":6298,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ This crate uses the term legacy ASCII term \"nul\" to refer to Unicode code point `U+0000 NULL`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6299,"byte_end":6396,"line_start":94,"line_end":94,"column_start":1,"column_end":98}},{"value":"/ and its associated code unit representation as zero-value bytes. This is to disambiguate this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6397,"byte_end":6494,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/ zero value from null pointer values. C-style strings end in a nul value, while regular Rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6495,"byte_end":6590,"line_start":96,"line_end":96,"column_start":1,"column_end":96}},{"value":"/ strings allow interior nul values and are not terminated with nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6591,"byte_end":6661,"line_start":97,"line_end":97,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6662,"byte_end":6665,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6666,"byte_end":6680,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6681,"byte_end":6684,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ The following example uses [`U16String`] to get Windows error messages, since `FormatMessageW`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6685,"byte_end":6783,"line_start":101,"line_end":101,"column_start":1,"column_end":99}},{"value":"/ returns a string length for us and we don't need to pass error messages into other FFI","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6784,"byte_end":6874,"line_start":102,"line_end":102,"column_start":1,"column_end":91}},{"value":"/ functions so we don't need to worry about nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6875,"byte_end":6932,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6933,"byte_end":6936,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6937,"byte_end":6948,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(any(not(windows), not(feature = \"alloc\")))]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":6949,"byte_end":7004,"line_start":106,"line_end":106,"column_start":1,"column_end":56}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7005,"byte_end":7023,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ # extern crate winapi;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7024,"byte_end":7050,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/ # extern crate widestring;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7051,"byte_end":7081,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(all(windows, feature = \"alloc\"))]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7082,"byte_end":7127,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7128,"byte_end":7145,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"/ use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7146,"byte_end":7230,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7231,"byte_end":7324,"line_start":113,"line_end":113,"column_start":1,"column_end":94}},{"value":"/ use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7325,"byte_end":7363,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7364,"byte_end":7406,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/ use std::ptr;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7407,"byte_end":7424,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7425,"byte_end":7455,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/ # use winapi::shared::minwindef::DWORD;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7456,"byte_end":7499,"line_start":118,"line_end":118,"column_start":1,"column_end":44}},{"value":"/ # let error_code: DWORD = 0;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7500,"byte_end":7532,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7533,"byte_end":7536,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ let s: U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7537,"byte_end":7558,"line_start":121,"line_end":121,"column_start":1,"column_end":22}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7559,"byte_end":7571,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7572,"byte_end":7657,"line_start":123,"line_end":123,"column_start":1,"column_end":86}},{"value":"/     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7658,"byte_end":7707,"line_start":124,"line_end":124,"column_start":1,"column_end":50}},{"value":"/     let strlen = FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7708,"byte_end":7772,"line_start":125,"line_end":125,"column_start":1,"column_end":65}},{"value":"/                                 FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7773,"byte_end":7841,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/                                 FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7842,"byte_end":7908,"line_start":127,"line_end":127,"column_start":1,"column_end":67}},{"value":"/                                 ptr::null(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7909,"byte_end":7957,"line_start":128,"line_end":128,"column_start":1,"column_end":49}},{"value":"/                                 error_code, // error code from GetLastError()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":7958,"byte_end":8039,"line_start":129,"line_end":129,"column_start":1,"column_end":82}},{"value":"/                                 0,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8040,"byte_end":8078,"line_start":130,"line_end":130,"column_start":1,"column_end":39}},{"value":"/                                 (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8079,"byte_end":8154,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/                                 0,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8155,"byte_end":8193,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/                                 ptr::null_mut());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8194,"byte_end":8247,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8248,"byte_end":8251,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     // Get the buffer as a wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8252,"byte_end":8294,"line_start":135,"line_end":135,"column_start":1,"column_end":43}},{"value":"/     s = U16String::from_ptr(buffer, strlen as usize);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8295,"byte_end":8352,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/     // Since U16String creates an owned copy, it's safe to free original buffer now","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8353,"byte_end":8440,"line_start":137,"line_end":137,"column_start":1,"column_end":88}},{"value":"/     // If you didn't want an owned copy, you could use &U16Str.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8441,"byte_end":8508,"line_start":138,"line_end":138,"column_start":1,"column_end":68}},{"value":"/     LocalFree(buffer as HLOCAL);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8509,"byte_end":8545,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8546,"byte_end":8551,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8552,"byte_end":8626,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ let message = s.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8627,"byte_end":8665,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/ # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8666,"byte_end":8737,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8738,"byte_end":8745,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8746,"byte_end":8753,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8754,"byte_end":8757,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The following example is the functionally the same, only using [`U16CString`] instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8758,"byte_end":8848,"line_start":147,"line_end":147,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8849,"byte_end":8852,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8853,"byte_end":8864,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(any(not(windows), not(feature = \"alloc\")))]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8865,"byte_end":8920,"line_start":150,"line_end":150,"column_start":1,"column_end":56}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8921,"byte_end":8939,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ # extern crate winapi;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8940,"byte_end":8966,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"/ # extern crate widestring;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8967,"byte_end":8997,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(all(windows, feature = \"alloc\"))]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":8998,"byte_end":9043,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9044,"byte_end":9061,"line_start":155,"line_end":155,"column_start":1,"column_end":18}},{"value":"/ use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9062,"byte_end":9146,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9147,"byte_end":9240,"line_start":157,"line_end":157,"column_start":1,"column_end":94}},{"value":"/ use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9241,"byte_end":9279,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"/ use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9280,"byte_end":9322,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/ use std::ptr;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9323,"byte_end":9340,"line_start":160,"line_end":160,"column_start":1,"column_end":18}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9341,"byte_end":9372,"line_start":161,"line_end":161,"column_start":1,"column_end":32}},{"value":"/ # use winapi::shared::minwindef::DWORD;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9373,"byte_end":9416,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"/ # let error_code: DWORD = 0;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9417,"byte_end":9449,"line_start":163,"line_end":163,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9450,"byte_end":9453,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ let s: U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9454,"byte_end":9476,"line_start":165,"line_end":165,"column_start":1,"column_end":23}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9477,"byte_end":9489,"line_start":166,"line_end":166,"column_start":1,"column_end":13}},{"value":"/     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9490,"byte_end":9575,"line_start":167,"line_end":167,"column_start":1,"column_end":86}},{"value":"/     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9576,"byte_end":9625,"line_start":168,"line_end":168,"column_start":1,"column_end":50}},{"value":"/     FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9626,"byte_end":9677,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/                    FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9678,"byte_end":9733,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/                    FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9734,"byte_end":9787,"line_start":171,"line_end":171,"column_start":1,"column_end":54}},{"value":"/                    ptr::null(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9788,"byte_end":9823,"line_start":172,"line_end":172,"column_start":1,"column_end":36}},{"value":"/                    error_code, // error code from GetLastError()","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9824,"byte_end":9892,"line_start":173,"line_end":173,"column_start":1,"column_end":69}},{"value":"/                    0,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9893,"byte_end":9918,"line_start":174,"line_end":174,"column_start":1,"column_end":26}},{"value":"/                    (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9919,"byte_end":9981,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"/                    0,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":9982,"byte_end":10007,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/                    ptr::null_mut());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10008,"byte_end":10048,"line_start":177,"line_end":177,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10049,"byte_end":10052,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     // Get the buffer as a wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10053,"byte_end":10095,"line_start":179,"line_end":179,"column_start":1,"column_end":43}},{"value":"/     s = U16CString::from_ptr_str(buffer);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10096,"byte_end":10141,"line_start":180,"line_end":180,"column_start":1,"column_end":46}},{"value":"/     // Since U16CString creates an owned copy, it's safe to free original buffer now","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10142,"byte_end":10230,"line_start":181,"line_end":181,"column_start":1,"column_end":89}},{"value":"/     // If you didn't want an owned copy, you could use &U16CStr.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10231,"byte_end":10299,"line_start":182,"line_end":182,"column_start":1,"column_end":69}},{"value":"/     LocalFree(buffer as HLOCAL);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10300,"byte_end":10336,"line_start":183,"line_end":183,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10337,"byte_end":10342,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10343,"byte_end":10417,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/ let message = s.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10418,"byte_end":10456,"line_start":186,"line_end":186,"column_start":1,"column_end":39}},{"value":"/ # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10457,"byte_end":10528,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10529,"byte_end":10536,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10537,"byte_end":10544,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10545,"byte_end":10548,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`OsString`]: std::ffi::OsString","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10549,"byte_end":10585,"line_start":191,"line_end":191,"column_start":1,"column_end":37}},{"value":"/ [`OsStr`]: std::ffi::OsStr","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10586,"byte_end":10616,"line_start":192,"line_end":192,"column_start":1,"column_end":31}},{"value":"/ [`CString`]: std::ffi::CString","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10617,"byte_end":10651,"line_start":193,"line_end":193,"column_start":1,"column_end":35}},{"value":"/ [`CStr`]: std::ffi::CStr","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10652,"byte_end":10680,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, trivial_casts,\ntrivial_numeric_casts, future_incompatible)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":10682,"byte_end":10816,"line_start":196,"line_end":202,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":1454},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":1474},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":38},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" Errors returned by functions in this crate.\n","sig":null,"attributes":[{"value":"/ Errors returned by functions in this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":18693,"byte_end":18740,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19137,"byte_end":19157,"line_start":13,"line_end":13,"column_start":5,"column_end":25},"name":"MissingNulTerminator","qualname":"::error::NulError::MissingNulTerminator","value":"NulError::MissingNulTerminator(MissingNulTerminator)","parent":{"krate":0,"index":1454},"children":[],"decl_id":null,"docs":" A terminating nul value was missing.\n","sig":null,"attributes":[{"value":"/ A terminating nul value was missing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19092,"byte_end":19132,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19226,"byte_end":19237,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"ContainsNul","qualname":"::error::NulError::ContainsNul","value":"NulError::ContainsNul(ContainsNul<C>)","parent":{"krate":0,"index":1454},"children":[],"decl_id":null,"docs":" An interior nul value was found.\n","sig":null,"attributes":[{"value":"/ An interior nul value was found.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19185,"byte_end":19221,"line_start":14,"line_end":14,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19074,"byte_end":19082,"line_start":11,"line_end":11,"column_start":10,"column_end":18},"name":"NulError","qualname":"::error::NulError","value":"pub enum NulError<C> {\n    MissingNulTerminator(MissingNulTerminator),\n    ContainsNul(ContainsNul<C>),\n}","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1459}],"decl_id":null,"docs":" An error returned to indicate a problem with nul values occurred.","sig":null,"attributes":[{"value":"/ An error returned to indicate a problem with nul values occurred.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":18790,"byte_end":18859,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":18860,"byte_end":18863,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The error will either being a [`MissingNulTerminator`] or [`ContainsNul`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":18864,"byte_end":18942,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ The error optionally returns the ownership of the invalid vector whenever a vector was owned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":18943,"byte_end":19040,"line_start":9,"line_end":9,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19513,"byte_end":19521,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<NulError<C>>::into_vec","value":"pub fn into_vec(Self) -> Option<Vec<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of values which generated the error in\n the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of values which generated the error in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19284,"byte_end":19379,"line_start":19,"line_end":19,"column_start":5,"column_end":100}},{"value":"/ the first place.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19384,"byte_end":19404,"line_start":20,"line_end":20,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19409,"byte_end":19418,"line_start":21,"line_end":21,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19423,"byte_end":19448,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20707,"byte_end":20727,"line_start":69,"line_end":69,"column_start":12,"column_end":32},"name":"MissingNulTerminator","qualname":"::error::MissingNulTerminator","value":"MissingNulTerminator {  }","parent":null,"children":[{"krate":0,"index":1469}],"decl_id":null,"docs":" An error returned from to indicate that a terminating nul value was missing.\n","sig":null,"attributes":[{"value":"/ An error returned from to indicate that a terminating nul value was missing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20591,"byte_end":20671,"line_start":67,"line_end":67,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21423,"byte_end":21434,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"ContainsNul","qualname":"::error::ContainsNul","value":"ContainsNul {  }","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"decl_id":null,"docs":" An error returned to indicate that an invalid nul value was found in a string.","sig":null,"attributes":[{"value":"/ An error returned to indicate that an invalid nul value was found in a string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21108,"byte_end":21190,"line_start":88,"line_end":88,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21191,"byte_end":21194,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The error indicates the position in the vector where the nul value was found, as well as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21195,"byte_end":21287,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/ returning the ownership of the invalid vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21288,"byte_end":21338,"line_start":91,"line_end":91,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22181,"byte_end":22193,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"nul_position","qualname":"<ContainsNul<C>>::nul_position","value":"pub fn nul_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the invalid nul value in the slice.\n","sig":null,"attributes":[{"value":"/ Returns the index of the invalid nul value in the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22095,"byte_end":22155,"line_start":124,"line_end":124,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22160,"byte_end":22169,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22471,"byte_end":22479,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ContainsNul<C>>::into_vec","value":"pub fn into_vec(Self) -> Option<Vec<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of values which generated the error in\n the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of values which generated the error in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22242,"byte_end":22337,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ the first place.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22342,"byte_end":22362,"line_start":131,"line_end":131,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22367,"byte_end":22376,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22381,"byte_end":22406,"line_start":133,"line_end":133,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23079,"byte_end":23093,"line_start":154,"line_end":154,"column_start":12,"column_end":26},"name":"FromUtf32Error","qualname":"::error::FromUtf32Error","value":"FromUtf32Error {  }","parent":null,"children":[{"krate":0,"index":1485}],"decl_id":null,"docs":" A possible error value when converting a [`String`] from a [`u32`] string.","sig":null,"attributes":[{"value":"/ A possible error value when converting a [`String`] from a [`u32`] string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22821,"byte_end":22899,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22900,"byte_end":22903,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This error occurs when a [`u32`] value is outside the 21-bit Unicode code point range","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22904,"byte_end":22993,"line_start":151,"line_end":151,"column_start":1,"column_end":90}},{"value":"/ (>`U+10FFFF`) or is a UTF-16 surrogate value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22994,"byte_end":23043,"line_start":152,"line_end":152,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23798,"byte_end":23814,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"DecodeUtf32Error","qualname":"::error::DecodeUtf32Error","value":"DecodeUtf32Error {  }","parent":null,"children":[{"krate":0,"index":1491}],"decl_id":null,"docs":" An error that can be returned when decoding UTF-32 code points.","sig":null,"attributes":[{"value":"/ An error that can be returned when decoding UTF-32 code points.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23551,"byte_end":23618,"line_start":177,"line_end":177,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23619,"byte_end":23622,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This error occurs when a [`u32`] value is outside the 21-bit Unicode code point range","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23623,"byte_end":23712,"line_start":179,"line_end":179,"column_start":1,"column_end":90}},{"value":"/ (>`U+10FFFF`) or is a UTF-16 surrogate value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23713,"byte_end":23762,"line_start":180,"line_end":180,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24011,"byte_end":24029,"line_start":192,"line_end":192,"column_start":12,"column_end":30},"name":"invalid_code_point","qualname":"<DecodeUtf32Error>::invalid_code_point","value":"pub fn invalid_code_point(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the invalid code point value which caused the error.\n","sig":null,"attributes":[{"value":"/ Returns the invalid code point value which caused the error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23935,"byte_end":23999,"line_start":191,"line_end":191,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24417,"byte_end":24432,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"MissingNulError","qualname":"::error::MissingNulError","value":"MissingNulTerminator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `MissingNulTerminator` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24355,"byte_end":24407,"line_start":207,"line_end":207,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":102},{"krate":0,"index":108},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":110},{"krate":0,"index":117},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":119},{"krate":0,"index":125},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1549},{"krate":0,"index":155},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":1552},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":1562},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":191}],"decl_id":null,"docs":" Iterators for working with wide strings.\n","sig":null,"attributes":[{"value":"/ Iterators for working with wide strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24458,"byte_end":24502,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25039,"byte_end":25055,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"name":"DecodeUtf16Lossy","qualname":"::iter::DecodeUtf16Lossy","value":"DecodeUtf16Lossy {  }","parent":null,"children":[{"krate":0,"index":1498}],"decl_id":null,"docs":" An iterator that lossily decodes possibly ill-formed UTF-16 encoded code points from an iterator\n of `u16`s.","sig":null,"attributes":[{"value":"/ An iterator that lossily decodes possibly ill-formed UTF-16 encoded code points from an iterator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24748,"byte_end":24848,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ of `u16`s.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24849,"byte_end":24863,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24864,"byte_end":24867,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Any unpaired UTF-16 surrogate values are replaced by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24868,"byte_end":24924,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ [`U+FFFD REPLACEMENT_CHARACTER`][core::char::REPLACEMENT_CHARACTER] (�).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":24925,"byte_end":25003,"line_start":18,"line_end":18,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25736,"byte_end":25747,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"DecodeUtf32","qualname":"::iter::DecodeUtf32","value":"DecodeUtf32 {  }","parent":null,"children":[{"krate":0,"index":1507}],"decl_id":null,"docs":" An iterator that decodes UTF-32 encoded code points from an iterator of `u32`s.\n","sig":null,"attributes":[{"value":"/ An iterator that decodes UTF-32 encoded code points from an iterator of `u32`s.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25617,"byte_end":25700,"line_start":48,"line_end":48,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26605,"byte_end":26621,"line_start":84,"line_end":84,"column_start":12,"column_end":28},"name":"DecodeUtf32Lossy","qualname":"::iter::DecodeUtf32Lossy","value":"DecodeUtf32Lossy {  }","parent":null,"children":[{"krate":0,"index":1516}],"decl_id":null,"docs":" An iterator that lossily decodes possibly ill-formed UTF-32 encoded code points from an iterator\n of `u32`s.","sig":null,"attributes":[{"value":"/ An iterator that lossily decodes possibly ill-formed UTF-32 encoded code points from an iterator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26325,"byte_end":26425,"line_start":78,"line_end":78,"column_start":1,"column_end":101}},{"value":"/ of `u32`s.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26426,"byte_end":26440,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26441,"byte_end":26444,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Any invalid UTF-32 values are replaced by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26445,"byte_end":26490,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/ [`U+FFFD REPLACEMENT_CHARACTER`][core::char::REPLACEMENT_CHARACTER] (�).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26491,"byte_end":26569,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27427,"byte_end":27437,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"Utf16Chars","qualname":"::iter::Utf16Chars","value":"Utf16Chars {  }","parent":null,"children":[{"krate":0,"index":1525}],"decl_id":null,"docs":" An iterator over decoded [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ An iterator over decoded [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27183,"byte_end":27251,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27252,"byte_end":27255,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chars`][crate::UStr<u16>::chars] method on [`U16Str`] and [`U16CStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27256,"byte_end":27362,"line_start":114,"line_end":114,"column_start":1,"column_end":107}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27363,"byte_end":27398,"line_start":115,"line_end":115,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28594,"byte_end":28604,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"Utf32Chars","qualname":"::iter::Utf32Chars","value":"Utf32Chars {  }","parent":null,"children":[{"krate":0,"index":1531}],"decl_id":null,"docs":" An iterator over decoded [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ An iterator over decoded [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28350,"byte_end":28418,"line_start":157,"line_end":157,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28419,"byte_end":28422,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chars`][crate::UStr<u32>::chars] method on [`U32Str`] and [`U32CStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28423,"byte_end":28529,"line_start":159,"line_end":159,"column_start":1,"column_end":107}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28530,"byte_end":28565,"line_start":160,"line_end":160,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29791,"byte_end":29801,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"CharsLossy","qualname":"::iter::CharsLossy","value":"CharsLossy {  }","parent":null,"children":[{"krate":0,"index":1537}],"decl_id":null,"docs":" A lossy iterator over decoded [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ A lossy iterator over decoded [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29519,"byte_end":29592,"line_start":202,"line_end":202,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29593,"byte_end":29596,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chars`][crate::UStr<u16>::chars] method on [`UStr`][crate::UStr] and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29597,"byte_end":29701,"line_start":204,"line_end":204,"column_start":1,"column_end":105}},{"value":"/ [`UCStr`][crate::UCStr]. See its documentation for more.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29702,"byte_end":29762,"line_start":205,"line_end":205,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":32026,"byte_end":32042,"line_start":288,"line_end":288,"column_start":12,"column_end":28},"name":"Utf16CharIndices","qualname":"::iter::Utf16CharIndices","value":"Utf16CharIndices {  }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"decl_id":null,"docs":" An iterator over the [`char`][prim@char]s of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ An iterator over the [`char`][prim@char]s of a string slice, and their positions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31744,"byte_end":31829,"line_start":283,"line_end":283,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31830,"byte_end":31833,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`char_indices`][crate::UStr<u16>::char_indices] method on [`U16Str`] and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31834,"byte_end":31941,"line_start":285,"line_end":285,"column_start":1,"column_end":108}},{"value":"/ [`U16CStr`]. See its documentation for more.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31942,"byte_end":31990,"line_start":286,"line_end":286,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33496,"byte_end":33517,"line_start":341,"line_end":341,"column_start":12,"column_end":33},"name":"Utf16CharIndicesLossy","qualname":"::iter::Utf16CharIndicesLossy","value":"Utf16CharIndicesLossy {  }","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565}],"decl_id":null,"docs":" A lossy iterator over the [`char`][prim@char]s of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ A lossy iterator over the [`char`][prim@char]s of a string slice, and their positions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33197,"byte_end":33287,"line_start":336,"line_end":336,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33288,"byte_end":33291,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`char_indices_lossy`][crate::UStr<u16>::char_indices_lossy] method on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33292,"byte_end":33396,"line_start":338,"line_end":338,"column_start":1,"column_end":105}},{"value":"/ [`U16Str`] and [`U16CStr`]. See its documentation for more.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33397,"byte_end":33460,"line_start":339,"line_end":339,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ucstr","qualname":"::ucstr","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":273},{"krate":0,"index":325},{"krate":0,"index":333},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418}],"decl_id":null,"docs":" C-style wide string slices.","sig":null,"attributes":[{"value":"/ C-style wide string slices.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35110,"byte_end":35141,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35142,"byte_end":35145,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the [`UCStr`] string slices and related types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35146,"byte_end":35217,"line_start":3,"line_end":3,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36427,"byte_end":36432,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"UCStr","qualname":"::ucstr::UCStr","value":"UCStr {  }","parent":null,"children":[{"krate":0,"index":1574}],"decl_id":null,"docs":" C-style wide string reference for [`UCString`][crate::UCString].","sig":null,"attributes":[{"value":"/ C-style wide string reference for [`UCString`][crate::UCString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35570,"byte_end":35638,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35639,"byte_end":35642,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`UCStr`] is aware of nul values. Unless unchecked conversions are used, all [`UCStr`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35643,"byte_end":35733,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35734,"byte_end":35832,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35833,"byte_end":35929,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":35930,"byte_end":36024,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36025,"byte_end":36037,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36038,"byte_end":36041,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UCStr`] can be converted to and from many other string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36042,"byte_end":36119,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ [`UString`][crate::UString], [`OsString`][std::ffi::OsString], and [`String`], making proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36120,"byte_end":36216,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36217,"byte_end":36247,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36248,"byte_end":36251,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases [`U16CStr`], [`U32CStr`], or [`WideCStr`] to using","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36252,"byte_end":36343,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`UCStr`] directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36344,"byte_end":36367,"line_start":31,"line_end":31,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36550,"byte_end":36553,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<UCStr<C>>::new","value":"pub fn new<S: AsRef<UCStr<C>> + ?Sized>(&S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a [`UCStr`].\n","sig":null,"attributes":[{"value":"/ Coerces a value into a [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36487,"byte_end":36524,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36529,"byte_end":36538,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37851,"byte_end":37863,"line_start":68,"line_end":68,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCStr<C>>::from_ptr_str","value":"pub unsafe fn from_ptr_str<'a>(*const C) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a nul-terminated string pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36631,"byte_end":36695,"line_start":44,"line_end":44,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36700,"byte_end":36703,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36708,"byte_end":36801,"line_start":46,"line_end":46,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36806,"byte_end":36900,"line_start":47,"line_end":47,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36905,"byte_end":36908,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36913,"byte_end":36925,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36930,"byte_end":36933,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36938,"byte_end":37031,"line_start":51,"line_end":51,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37036,"byte_end":37111,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37116,"byte_end":37119,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37124,"byte_end":37214,"line_start":54,"line_end":54,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37219,"byte_end":37309,"line_start":55,"line_end":55,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37314,"byte_end":37388,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37393,"byte_end":37396,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37401,"byte_end":37413,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37418,"byte_end":37421,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37426,"byte_end":37466,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37471,"byte_end":37474,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37479,"byte_end":37491,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37496,"byte_end":37499,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37504,"byte_end":37594,"line_start":64,"line_end":64,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37599,"byte_end":37689,"line_start":65,"line_end":65,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37694,"byte_end":37789,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":37794,"byte_end":37832,"line_start":67,"line_end":67,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39135,"byte_end":39151,"line_start":99,"line_end":99,"column_start":19,"column_end":35},"name":"from_ptr_str_mut","qualname":"<UCStr<C>>::from_ptr_str_mut","value":"pub unsafe fn from_ptr_str_mut<'a>(*mut C) -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable nul-terminated string pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38069,"byte_end":38149,"line_start":77,"line_end":77,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38154,"byte_end":38157,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38162,"byte_end":38255,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38260,"byte_end":38354,"line_start":80,"line_end":80,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38359,"byte_end":38362,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38367,"byte_end":38379,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38384,"byte_end":38387,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38392,"byte_end":38485,"line_start":84,"line_end":84,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38490,"byte_end":38565,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38570,"byte_end":38573,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38578,"byte_end":38672,"line_start":87,"line_end":87,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38677,"byte_end":38680,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38685,"byte_end":38697,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38702,"byte_end":38705,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38710,"byte_end":38750,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38755,"byte_end":38758,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38763,"byte_end":38775,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38780,"byte_end":38783,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38788,"byte_end":38878,"line_start":95,"line_end":95,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38883,"byte_end":38973,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":38978,"byte_end":39073,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39078,"byte_end":39116,"line_start":98,"line_end":98,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40968,"byte_end":40976,"line_start":141,"line_end":141,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCStr<C>>::from_ptr","value":"pub unsafe fn from_ptr<'a>(*const C, usize) -> Result<&'a Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39363,"byte_end":39418,"line_start":108,"line_end":108,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39423,"byte_end":39426,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39431,"byte_end":39518,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39523,"byte_end":39614,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39619,"byte_end":39690,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39695,"byte_end":39698,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39703,"byte_end":39715,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39720,"byte_end":39723,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will scan the pointer string for an interior nul value and error if one is found","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39728,"byte_end":39817,"line_start":116,"line_end":116,"column_start":5,"column_end":94}},{"value":"/ before the nul terminator at `len` offset. To avoid scanning for interior nuls,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39822,"byte_end":39905,"line_start":117,"line_end":117,"column_start":5,"column_end":88}},{"value":"/ [`from_ptr_unchecked`][Self::from_ptr_unchecked] may be used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39910,"byte_end":39983,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39988,"byte_end":39991,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the value at `len` offset is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":39996,"byte_end":40074,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40079,"byte_end":40082,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40087,"byte_end":40099,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40104,"byte_end":40107,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40112,"byte_end":40207,"line_start":124,"line_end":124,"column_start":5,"column_end":100}},{"value":"/ 1` elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40212,"byte_end":40228,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40233,"byte_end":40236,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40241,"byte_end":40331,"line_start":127,"line_end":127,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40336,"byte_end":40426,"line_start":128,"line_end":128,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40431,"byte_end":40505,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40510,"byte_end":40513,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40518,"byte_end":40530,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40535,"byte_end":40538,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40543,"byte_end":40583,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40588,"byte_end":40591,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40596,"byte_end":40608,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40613,"byte_end":40616,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40621,"byte_end":40711,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40716,"byte_end":40806,"line_start":138,"line_end":138,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40811,"byte_end":40906,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":40911,"byte_end":40949,"line_start":140,"line_end":140,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42845,"byte_end":42857,"line_start":185,"line_end":185,"column_start":19,"column_end":31},"name":"from_ptr_mut","qualname":"<UCStr<C>>::from_ptr_mut","value":"pub unsafe fn from_ptr_mut<'a>(*mut C, usize)\n-> Result<&'a mut Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41386,"byte_end":41457,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41462,"byte_end":41465,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41470,"byte_end":41557,"line_start":156,"line_end":156,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41562,"byte_end":41653,"line_start":157,"line_end":157,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41658,"byte_end":41729,"line_start":158,"line_end":158,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41734,"byte_end":41737,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41742,"byte_end":41754,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41759,"byte_end":41762,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This will scan the pointer string for an interior nul value and error if one is found","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41767,"byte_end":41856,"line_start":162,"line_end":162,"column_start":5,"column_end":94}},{"value":"/ before the nul terminator at `len` offset. To avoid scanning for interior nuls,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41861,"byte_end":41944,"line_start":163,"line_end":163,"column_start":5,"column_end":88}},{"value":"/ [`from_ptr_unchecked_mut`][Self::from_ptr_unchecked_mut] may be used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":41949,"byte_end":42030,"line_start":164,"line_end":164,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42035,"byte_end":42038,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the value at `len` offset is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42043,"byte_end":42121,"line_start":166,"line_end":166,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42126,"byte_end":42129,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42134,"byte_end":42146,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42151,"byte_end":42154,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42159,"byte_end":42254,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ 1` elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42259,"byte_end":42275,"line_start":171,"line_end":171,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42280,"byte_end":42283,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42288,"byte_end":42382,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42387,"byte_end":42390,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42395,"byte_end":42407,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42412,"byte_end":42415,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42420,"byte_end":42460,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42465,"byte_end":42468,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42473,"byte_end":42485,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42490,"byte_end":42493,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42498,"byte_end":42588,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42593,"byte_end":42683,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42688,"byte_end":42783,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":42788,"byte_end":42826,"line_start":184,"line_end":184,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44734,"byte_end":44751,"line_start":227,"line_end":227,"column_start":19,"column_end":36},"name":"from_ptr_truncate","qualname":"<UCStr<C>>::from_ptr_truncate","value":"pub unsafe fn from_ptr_truncate<'a>(*const C, usize)\n-> Result<&'a Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a pointer and a length, truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a pointer and a length, truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43273,"byte_end":43368,"line_start":198,"line_end":198,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43373,"byte_end":43376,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. This will scan","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43381,"byte_end":43474,"line_start":200,"line_end":200,"column_start":5,"column_end":98}},{"value":"/ for nul values beginning with `p` until offset `len`. The first nul value will be used as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43479,"byte_end":43572,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ the nul terminator for the string, ignoring any remaining values left before `len`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43577,"byte_end":43664,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43669,"byte_end":43672,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43677,"byte_end":43689,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43694,"byte_end":43697,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If no nul terminator is found after `len` + 1 elements, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43702,"byte_end":43783,"line_start":206,"line_end":206,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43788,"byte_end":43791,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43796,"byte_end":43808,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43813,"byte_end":43816,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43821,"byte_end":43914,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43919,"byte_end":43994,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":43999,"byte_end":44002,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44007,"byte_end":44097,"line_start":213,"line_end":213,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44102,"byte_end":44192,"line_start":214,"line_end":214,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44197,"byte_end":44271,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44276,"byte_end":44279,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44284,"byte_end":44296,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44301,"byte_end":44304,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44309,"byte_end":44349,"line_start":219,"line_end":219,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44354,"byte_end":44357,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44362,"byte_end":44374,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44379,"byte_end":44382,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44387,"byte_end":44477,"line_start":223,"line_end":223,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44482,"byte_end":44572,"line_start":224,"line_end":224,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44577,"byte_end":44672,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":44677,"byte_end":44715,"line_start":226,"line_end":226,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46397,"byte_end":46418,"line_start":268,"line_end":268,"column_start":19,"column_end":40},"name":"from_ptr_truncate_mut","qualname":"<UCStr<C>>::from_ptr_truncate_mut","value":"pub unsafe fn from_ptr_truncate_mut<'a>(*mut C, usize)\n-> Result<&'a mut Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable pointer and a length, truncating at the first\n nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable pointer and a length, truncating at the first","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45082,"byte_end":45177,"line_start":240,"line_end":240,"column_start":5,"column_end":100}},{"value":"/ nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45182,"byte_end":45201,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45206,"byte_end":45209,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. This will scan","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45214,"byte_end":45307,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ for nul values beginning with `p` until offset `len`. The first nul value will be used as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45312,"byte_end":45405,"line_start":244,"line_end":244,"column_start":5,"column_end":98}},{"value":"/ the nul terminator for the string, ignoring any remaining values left before `len`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45410,"byte_end":45497,"line_start":245,"line_end":245,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45502,"byte_end":45505,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45510,"byte_end":45522,"line_start":247,"line_end":247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45527,"byte_end":45530,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ If no nul terminator is found after `len` + 1 elements, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45535,"byte_end":45616,"line_start":249,"line_end":249,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45621,"byte_end":45624,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45629,"byte_end":45641,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45646,"byte_end":45649,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45654,"byte_end":45747,"line_start":253,"line_end":253,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45752,"byte_end":45827,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45832,"byte_end":45835,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45840,"byte_end":45934,"line_start":256,"line_end":256,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45939,"byte_end":45942,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45947,"byte_end":45959,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45964,"byte_end":45967,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":45972,"byte_end":46012,"line_start":260,"line_end":260,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46017,"byte_end":46020,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46025,"byte_end":46037,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46042,"byte_end":46045,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46050,"byte_end":46140,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46145,"byte_end":46235,"line_start":265,"line_end":265,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46240,"byte_end":46335,"line_start":266,"line_end":266,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46340,"byte_end":46378,"line_start":267,"line_end":267,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48254,"byte_end":48272,"line_start":309,"line_end":309,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCStr<C>>::from_ptr_unchecked","value":"pub unsafe fn from_ptr_unchecked<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a pointer and a length without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a pointer and a length without checking for any nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46755,"byte_end":46846,"line_start":281,"line_end":281,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46851,"byte_end":46854,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46859,"byte_end":46946,"line_start":283,"line_end":283,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":46951,"byte_end":47042,"line_start":284,"line_end":284,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47047,"byte_end":47118,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47123,"byte_end":47126,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47131,"byte_end":47143,"line_start":287,"line_end":287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47148,"byte_end":47151,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47156,"byte_end":47251,"line_start":289,"line_end":289,"column_start":5,"column_end":100}},{"value":"/ 1` elements, nor that it has a terminating nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47256,"byte_end":47313,"line_start":290,"line_end":290,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47318,"byte_end":47321,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47326,"byte_end":47416,"line_start":292,"line_end":292,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47421,"byte_end":47511,"line_start":293,"line_end":293,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47516,"byte_end":47590,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47595,"byte_end":47598,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47603,"byte_end":47693,"line_start":296,"line_end":296,"column_start":5,"column_end":95}},{"value":"/ a missing nul terminator at pointer offset `len` + 1 will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47698,"byte_end":47791,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47796,"byte_end":47799,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47804,"byte_end":47816,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47821,"byte_end":47824,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47829,"byte_end":47869,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47874,"byte_end":47877,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47882,"byte_end":47894,"line_start":303,"line_end":303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47899,"byte_end":47902,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":47907,"byte_end":47997,"line_start":305,"line_end":305,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48002,"byte_end":48092,"line_start":306,"line_end":306,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48097,"byte_end":48192,"line_start":307,"line_end":307,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48197,"byte_end":48235,"line_start":308,"line_end":308,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49807,"byte_end":49829,"line_start":342,"line_end":342,"column_start":19,"column_end":41},"name":"from_ptr_unchecked_mut","qualname":"<UCStr<C>>::from_ptr_unchecked_mut","value":"pub unsafe fn from_ptr_unchecked_mut<'a>(*mut C, usize) -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable pointer and a length without checking for any\n nul values.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable pointer and a length without checking for any","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48454,"byte_end":48549,"line_start":315,"line_end":315,"column_start":5,"column_end":100}},{"value":"/ nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48554,"byte_end":48569,"line_start":316,"line_end":316,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48574,"byte_end":48577,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48582,"byte_end":48669,"line_start":318,"line_end":318,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48674,"byte_end":48765,"line_start":319,"line_end":319,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48770,"byte_end":48841,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48846,"byte_end":48849,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48854,"byte_end":48866,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48871,"byte_end":48874,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48879,"byte_end":48974,"line_start":324,"line_end":324,"column_start":5,"column_end":100}},{"value":"/ 1` elements, nor that is has a terminating nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":48979,"byte_end":49036,"line_start":325,"line_end":325,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49041,"byte_end":49044,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49049,"byte_end":49143,"line_start":327,"line_end":327,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49148,"byte_end":49151,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49156,"byte_end":49246,"line_start":329,"line_end":329,"column_start":5,"column_end":95}},{"value":"/ a missing nul terminator at pointer offset `len` + 1 will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49251,"byte_end":49344,"line_start":330,"line_end":330,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49349,"byte_end":49352,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49357,"byte_end":49369,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49374,"byte_end":49377,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49382,"byte_end":49422,"line_start":334,"line_end":334,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49427,"byte_end":49430,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49435,"byte_end":49447,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49452,"byte_end":49455,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49460,"byte_end":49550,"line_start":338,"line_end":338,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49555,"byte_end":49645,"line_start":339,"line_end":339,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49650,"byte_end":49745,"line_start":340,"line_end":340,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":49750,"byte_end":49788,"line_start":341,"line_end":341,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50478,"byte_end":50488,"line_start":358,"line_end":358,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<UCStr<C>>::from_slice","value":"pub fn from_slice(&[C]) -> Result<&Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a slice of values with a terminating nul, checking for invalid\n interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a slice of values with a terminating nul, checking for invalid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50017,"byte_end":50111,"line_start":348,"line_end":348,"column_start":5,"column_end":99}},{"value":"/ interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50116,"byte_end":50140,"line_start":349,"line_end":349,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50145,"byte_end":50148,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ The slice must have at least one item, the nul terminator, even for an empty string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50153,"byte_end":50241,"line_start":351,"line_end":351,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50246,"byte_end":50249,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50254,"byte_end":50266,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50271,"byte_end":50274,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If there are nul values in the slice except for the last value, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50279,"byte_end":50368,"line_start":355,"line_end":355,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50373,"byte_end":50376,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ An error is also returned if the last value of the slice is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50381,"byte_end":50466,"line_start":357,"line_end":357,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51390,"byte_end":51404,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"from_slice_mut","qualname":"<UCStr<C>>::from_slice_mut","value":"pub fn from_slice_mut(&mut [C]) -> Result<&mut Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable slice of values with a terminating nul,\n checking for invalid interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable slice of values with a terminating nul,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":50913,"byte_end":51002,"line_start":371,"line_end":371,"column_start":5,"column_end":94}},{"value":"/ checking for invalid interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51007,"byte_end":51052,"line_start":372,"line_end":372,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51057,"byte_end":51060,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ The slice must have at least one item, the nul terminator, even for an empty string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51065,"byte_end":51153,"line_start":374,"line_end":374,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51158,"byte_end":51161,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51166,"byte_end":51178,"line_start":376,"line_end":376,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51183,"byte_end":51186,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ If there are nul values in the slice except for the last value, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51191,"byte_end":51280,"line_start":378,"line_end":378,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51285,"byte_end":51288,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ An error is also returned if the last value of the slice is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51293,"byte_end":51378,"line_start":380,"line_end":380,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52243,"byte_end":52262,"line_start":402,"line_end":402,"column_start":12,"column_end":31},"name":"from_slice_truncate","qualname":"<UCStr<C>>::from_slice_truncate","value":"pub fn from_slice_truncate(&[C]) -> Result<&Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a slice of values, truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a slice of values, truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51841,"byte_end":51931,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51936,"byte_end":51939,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":51944,"byte_end":52037,"line_start":396,"line_end":396,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the [`UCStr`] slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52042,"byte_end":52127,"line_start":397,"line_end":397,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52132,"byte_end":52135,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52140,"byte_end":52152,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52157,"byte_end":52160,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If there are no nul values in the slice, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52165,"byte_end":52231,"line_start":401,"line_end":401,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52961,"byte_end":52984,"line_start":418,"line_end":418,"column_start":12,"column_end":35},"name":"from_slice_truncate_mut","qualname":"<UCStr<C>>::from_slice_truncate_mut","value":"pub fn from_slice_truncate_mut(&mut [C])\n-> Result<&mut Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable slice of values, truncating at the first nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable slice of values, truncating at the first nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52535,"byte_end":52629,"line_start":409,"line_end":409,"column_start":5,"column_end":99}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52634,"byte_end":52649,"line_start":410,"line_end":410,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52654,"byte_end":52657,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52662,"byte_end":52755,"line_start":412,"line_end":412,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the [`UCStr`] slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52760,"byte_end":52845,"line_start":413,"line_end":413,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52850,"byte_end":52853,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52858,"byte_end":52870,"line_start":415,"line_end":415,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52875,"byte_end":52878,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ If there are no nul values in the slice, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":52883,"byte_end":52949,"line_start":417,"line_end":417,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53717,"byte_end":53737,"line_start":433,"line_end":433,"column_start":19,"column_end":39},"name":"from_slice_unchecked","qualname":"<UCStr<C>>::from_slice_unchecked","value":"pub unsafe fn from_slice_unchecked(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCStr`] from a slice of values without checking for a terminating or interior\n nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCStr`] from a slice of values without checking for a terminating or interior","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53273,"byte_end":53369,"line_start":425,"line_end":425,"column_start":5,"column_end":101}},{"value":"/ nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53374,"byte_end":53389,"line_start":426,"line_end":426,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53394,"byte_end":53397,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53402,"byte_end":53414,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53419,"byte_end":53422,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid [`UCStr`] values when the slice","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53427,"byte_end":53517,"line_start":430,"line_end":430,"column_start":5,"column_end":95}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53522,"byte_end":53609,"line_start":431,"line_end":431,"column_start":5,"column_end":92}},{"value":"/ in the slice. In particular, an empty slice will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53614,"byte_end":53698,"line_start":432,"line_end":432,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54301,"byte_end":54325,"line_start":446,"line_end":446,"column_start":19,"column_end":43},"name":"from_slice_unchecked_mut","qualname":"<UCStr<C>>::from_slice_unchecked_mut","value":"pub unsafe fn from_slice_unchecked_mut(&mut [C]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UCStr`] from a mutable slice of values without checking for a\n terminating or interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UCStr`] from a mutable slice of values without checking for a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53841,"byte_end":53929,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ terminating or interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53934,"byte_end":53973,"line_start":439,"line_end":439,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53978,"byte_end":53981,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":53986,"byte_end":53998,"line_start":441,"line_end":441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54003,"byte_end":54006,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid [`UCStr`] values when the slice","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54011,"byte_end":54101,"line_start":443,"line_end":443,"column_start":5,"column_end":95}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54106,"byte_end":54193,"line_start":444,"line_end":444,"column_start":5,"column_end":92}},{"value":"/ in the slice. In particular, an empty slice will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54198,"byte_end":54282,"line_start":445,"line_end":445,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54623,"byte_end":54634,"line_start":455,"line_end":455,"column_start":12,"column_end":23},"name":"to_ucstring","qualname":"<UCStr<C>>::to_ucstring","value":"pub fn to_ucstring(&Self) -> crate::UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the string reference to a new owned [`UCString`][crate::UCString].\n","sig":null,"attributes":[{"value":"/ Copies the string reference to a new owned [`UCString`][crate::UCString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54437,"byte_end":54514,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54519,"byte_end":54528,"line_start":452,"line_end":452,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54533,"byte_end":54558,"line_start":453,"line_end":453,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56093,"byte_end":56103,"line_start":495,"line_end":495,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UCStr<C>>::to_ustring","value":"pub fn to_ustring(&Self) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the string reference to a new owned [`UString`][crate::UString].","sig":null,"attributes":[{"value":"/ Copies the string reference to a new owned [`UString`][crate::UString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54755,"byte_end":54830,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54835,"byte_end":54838,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ The resulting [`UString`][crate::UString] will **not** have a nul terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54843,"byte_end":54923,"line_start":461,"line_end":461,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54928,"byte_end":54931,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54936,"byte_end":54950,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54955,"byte_end":54958,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54963,"byte_end":54974,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":54979,"byte_end":55010,"line_start":466,"line_end":466,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U16CString::from_str(\"MyString\").unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55015,"byte_end":55073,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/ // Convert U16CString to a U16String","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55078,"byte_end":55118,"line_start":468,"line_end":468,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55123,"byte_end":55157,"line_start":469,"line_end":469,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55162,"byte_end":55165,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // U16CString will have a terminating nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55170,"byte_end":55215,"line_start":471,"line_end":471,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55220,"byte_end":55262,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55267,"byte_end":55307,"line_start":473,"line_end":473,"column_start":5,"column_end":45}},{"value":"/ // The resulting U16String will not have the terminating nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55312,"byte_end":55376,"line_start":474,"line_end":474,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55381,"byte_end":55412,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55417,"byte_end":55455,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55460,"byte_end":55467,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55472,"byte_end":55475,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55480,"byte_end":55491,"line_start":479,"line_end":479,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55496,"byte_end":55527,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U32CString::from_str(\"MyString\").unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55532,"byte_end":55590,"line_start":481,"line_end":481,"column_start":5,"column_end":63}},{"value":"/ // Convert U32CString to a U32String","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55595,"byte_end":55635,"line_start":482,"line_end":482,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55640,"byte_end":55674,"line_start":483,"line_end":483,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55679,"byte_end":55682,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ // U32CString will have a terminating nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55687,"byte_end":55732,"line_start":485,"line_end":485,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55737,"byte_end":55779,"line_start":486,"line_end":486,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55784,"byte_end":55824,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"/ // The resulting U32String will not have the terminating nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55829,"byte_end":55893,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55898,"byte_end":55929,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55934,"byte_end":55972,"line_start":490,"line_end":490,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55977,"byte_end":55984,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":55989,"byte_end":55998,"line_start":492,"line_end":492,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56003,"byte_end":56028,"line_start":493,"line_end":493,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56341,"byte_end":56349,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UCStr<C>>::as_slice","value":"pub fn as_slice(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the underlying code units.","sig":null,"attributes":[{"value":"/ Converts to a slice of the underlying code units.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56195,"byte_end":56248,"line_start":499,"line_end":499,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56253,"byte_end":56256,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The slice will **not** include the nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56261,"byte_end":56315,"line_start":501,"line_end":501,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56320,"byte_end":56329,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56758,"byte_end":56770,"line_start":516,"line_end":516,"column_start":19,"column_end":31},"name":"as_mut_slice","qualname":"<UCStr<C>>::as_mut_slice","value":"pub unsafe fn as_mut_slice(&mut Self) -> &mut [C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable slice of the underlying code units.","sig":null,"attributes":[{"value":"/ Converts to a mutable slice of the underlying code units.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56412,"byte_end":56473,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56478,"byte_end":56481,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ The slice will **not** include the nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56486,"byte_end":56540,"line_start":509,"line_end":509,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56545,"byte_end":56548,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56553,"byte_end":56565,"line_start":511,"line_end":511,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56570,"byte_end":56573,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because you can violate the invariants of this type when mutating the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56578,"byte_end":56673,"line_start":513,"line_end":513,"column_start":5,"column_end":100}},{"value":"/ slice (i.e. by adding interior nul values).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56678,"byte_end":56725,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56730,"byte_end":56739,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56977,"byte_end":56994,"line_start":523,"line_end":523,"column_start":12,"column_end":29},"name":"as_slice_with_nul","qualname":"<UCStr<C>>::as_slice_with_nul","value":"pub fn as_slice_with_nul(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the underlying code units, including the nul terminator.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the underlying code units, including the nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56868,"byte_end":56951,"line_start":521,"line_end":521,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":56956,"byte_end":56965,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57740,"byte_end":57746,"line_start":540,"line_end":540,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UCStr<C>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57043,"byte_end":57083,"line_start":527,"line_end":527,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57088,"byte_end":57091,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the string outlives the pointer this function returns, or else","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57096,"byte_end":57190,"line_start":529,"line_end":529,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57195,"byte_end":57234,"line_start":530,"line_end":530,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57239,"byte_end":57242,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ The caller must also ensure that the memory the pointer (non-transitively) points to is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57247,"byte_end":57338,"line_start":532,"line_end":532,"column_start":5,"column_end":96}},{"value":"/ never written to (except inside an `UnsafeCell`) using this pointer or any pointer derived","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57343,"byte_end":57437,"line_start":533,"line_end":533,"column_start":5,"column_end":99}},{"value":"/ from it. If you need to mutate the contents of the string, use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57442,"byte_end":57508,"line_start":534,"line_end":534,"column_start":5,"column_end":71}},{"value":"/ [`as_mut_ptr`][Self::as_mut_ptr].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57513,"byte_end":57550,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57555,"byte_end":57558,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Modifying the container referenced by this string may cause its buffer to be reallocated,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57563,"byte_end":57656,"line_start":537,"line_end":537,"column_start":5,"column_end":98}},{"value":"/ which would also make any pointers to it invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57661,"byte_end":57714,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57719,"byte_end":57728,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58411,"byte_end":58421,"line_start":557,"line_end":557,"column_start":19,"column_end":29},"name":"as_mut_ptr","qualname":"<UCStr<C>>::as_mut_ptr","value":"pub unsafe fn as_mut_ptr(&mut Self) -> *mut C","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable raw pointer to the string.","sig":null,"attributes":[{"value":"/ Returns a mutable raw pointer to the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57807,"byte_end":57855,"line_start":544,"line_end":544,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57860,"byte_end":57863,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the string outlives the pointer this function returns, or else","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57868,"byte_end":57962,"line_start":546,"line_end":546,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":57967,"byte_end":58006,"line_start":547,"line_end":547,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58011,"byte_end":58014,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Modifying the container referenced by this string may cause its buffer to be reallocated,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58019,"byte_end":58112,"line_start":549,"line_end":549,"column_start":5,"column_end":98}},{"value":"/ which would also make any pointers to it invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58117,"byte_end":58170,"line_start":550,"line_end":550,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58175,"byte_end":58178,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58183,"byte_end":58195,"line_start":552,"line_end":552,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58200,"byte_end":58203,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because you can violate the invariants of this type when mutating the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58208,"byte_end":58303,"line_start":554,"line_end":554,"column_start":5,"column_end":100}},{"value":"/ memory the pointer points to (i.e. by adding interior nul values).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58308,"byte_end":58378,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58383,"byte_end":58392,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59219,"byte_end":59231,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"name":"as_ptr_range","qualname":"<UCStr<C>>::as_ptr_range","value":"pub fn as_ptr_range(&Self) -> Range<*const C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the two raw pointers spanning the string slice.","sig":null,"attributes":[{"value":"/ Returns the two raw pointers spanning the string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58488,"byte_end":58547,"line_start":561,"line_end":561,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58552,"byte_end":58555,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ The returned range is half-open, which means that the end pointer points one past the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58560,"byte_end":58654,"line_start":563,"line_end":563,"column_start":5,"column_end":99}},{"value":"/ element of the slice. This way, an empty slice is represented by two equal pointers, and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58659,"byte_end":58755,"line_start":564,"line_end":564,"column_start":5,"column_end":101}},{"value":"/ difference between the two pointers represents the size of the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58760,"byte_end":58833,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58838,"byte_end":58841,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ See [`as_ptr`][Self::as_ptr] for warnings on using these pointers. The end pointer requires","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58846,"byte_end":58941,"line_start":567,"line_end":567,"column_start":5,"column_end":100}},{"value":"/ extra caution, as it does not point to a valid element in the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":58946,"byte_end":59018,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59023,"byte_end":59026,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This function is useful for interacting with foreign interfaces which use two pointers to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59031,"byte_end":59124,"line_start":570,"line_end":570,"column_start":5,"column_end":98}},{"value":"/ refer to a range of elements in memory, as is common in C++.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59129,"byte_end":59193,"line_start":571,"line_end":571,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59198,"byte_end":59207,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60055,"byte_end":60071,"line_start":589,"line_end":589,"column_start":12,"column_end":28},"name":"as_mut_ptr_range","qualname":"<UCStr<C>>::as_mut_ptr_range","value":"pub fn as_mut_ptr_range(&mut Self) -> Range<*mut C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the two unsafe mutable pointers spanning the string slice.","sig":null,"attributes":[{"value":"/ Returns the two unsafe mutable pointers spanning the string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59305,"byte_end":59375,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59380,"byte_end":59383,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The returned range is half-open, which means that the end pointer points one past the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59388,"byte_end":59482,"line_start":579,"line_end":579,"column_start":5,"column_end":99}},{"value":"/ element of the slice. This way, an empty slice is represented by two equal pointers, and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59487,"byte_end":59583,"line_start":580,"line_end":580,"column_start":5,"column_end":101}},{"value":"/ difference between the two pointers represents the size of the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59588,"byte_end":59661,"line_start":581,"line_end":581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59666,"byte_end":59669,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ See [`as_mut_ptr`][Self::as_mut_ptr] for warnings on using these pointers. The end pointer requires","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59674,"byte_end":59777,"line_start":583,"line_end":583,"column_start":5,"column_end":108}},{"value":"/ extra caution, as it does not point to a valid element in the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59782,"byte_end":59854,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59859,"byte_end":59862,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This function is useful for interacting with foreign interfaces which use two pointers to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59867,"byte_end":59960,"line_start":586,"line_end":586,"column_start":5,"column_end":98}},{"value":"/ refer to a range of elements in memory, as is common in C++.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":59965,"byte_end":60029,"line_start":587,"line_end":587,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60034,"byte_end":60043,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60303,"byte_end":60306,"line_start":596,"line_end":596,"column_start":12,"column_end":15},"name":"len","qualname":"<UCStr<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the string as number of elements (**not** number of bytes)\n **not** including nul terminator.\n","sig":null,"attributes":[{"value":"/ Returns the length of the string as number of elements (**not** number of bytes)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60151,"byte_end":60235,"line_start":593,"line_end":593,"column_start":5,"column_end":89}},{"value":"/ **not** including nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60240,"byte_end":60277,"line_start":594,"line_end":594,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60282,"byte_end":60291,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60474,"byte_end":60482,"line_start":602,"line_end":602,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UCStr<C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string contains no data (i.e. is only the nul terminator).\n","sig":null,"attributes":[{"value":"/ Returns whether this string contains no data (i.e. is only the nul terminator).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60365,"byte_end":60448,"line_start":600,"line_end":600,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60453,"byte_end":60462,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61406,"byte_end":61419,"line_start":630,"line_end":630,"column_start":12,"column_end":25},"name":"into_ucstring","qualname":"<UCStr<C>>::into_ucstring","value":"pub fn into_ucstring(Box<Self>) -> crate::UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<UCStr>`] into a [`UCString`][crate::UCString] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<UCStr>`] into a [`UCString`][crate::UCString] without copying or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60535,"byte_end":60620,"line_start":606,"line_end":606,"column_start":5,"column_end":90}},{"value":"/ allocating.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60625,"byte_end":60640,"line_start":607,"line_end":607,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60645,"byte_end":60648,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60653,"byte_end":60667,"line_start":609,"line_end":609,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60672,"byte_end":60675,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60680,"byte_end":60687,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60692,"byte_end":60723,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60728,"byte_end":60731,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60736,"byte_end":60786,"line_start":614,"line_end":614,"column_start":5,"column_end":55}},{"value":"/ let c_string = U16CString::from_vec(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60791,"byte_end":60851,"line_start":615,"line_end":615,"column_start":5,"column_end":65}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60856,"byte_end":60900,"line_start":616,"line_end":616,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U16CString::from_vec(v).unwrap());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60905,"byte_end":60977,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60982,"byte_end":60989,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":60994,"byte_end":60997,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61002,"byte_end":61009,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61014,"byte_end":61045,"line_start":621,"line_end":621,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61050,"byte_end":61053,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61058,"byte_end":61108,"line_start":623,"line_end":623,"column_start":5,"column_end":55}},{"value":"/ let c_string = U32CString::from_vec(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61113,"byte_end":61173,"line_start":624,"line_end":624,"column_start":5,"column_end":65}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61178,"byte_end":61222,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U32CString::from_vec(v).unwrap());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61227,"byte_end":61299,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61304,"byte_end":61311,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61316,"byte_end":61341,"line_start":628,"line_end":628,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61769,"byte_end":61776,"line_start":641,"line_end":641,"column_start":12,"column_end":19},"name":"as_ustr","qualname":"<UCStr<C>>::as_ustr","value":"pub fn as_ustr(&Self) -> &UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`UStr`] reference to this string reference.","sig":null,"attributes":[{"value":"/ Returns a [`UStr`] reference to this string reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61609,"byte_end":61667,"line_start":637,"line_end":637,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61672,"byte_end":61675,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The [`UStr`] reference will not include the nul-terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61680,"byte_end":61743,"line_start":639,"line_end":639,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61748,"byte_end":61757,"line_start":640,"line_end":640,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62007,"byte_end":62023,"line_start":649,"line_end":649,"column_start":12,"column_end":28},"name":"as_ustr_with_nul","qualname":"<UCStr<C>>::as_ustr_with_nul","value":"pub fn as_ustr_with_nul(&Self) -> &UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`UStr`] reference to this string reference.","sig":null,"attributes":[{"value":"/ Returns a [`UStr`] reference to this string reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61851,"byte_end":61909,"line_start":645,"line_end":645,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61914,"byte_end":61917,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The [`UStr`] reference will include the nul-terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61922,"byte_end":61981,"line_start":647,"line_end":647,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":61986,"byte_end":61995,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62459,"byte_end":62470,"line_start":662,"line_end":662,"column_start":19,"column_end":30},"name":"as_mut_ustr","qualname":"<UCStr<C>>::as_mut_ustr","value":"pub unsafe fn as_mut_ustr(&mut Self) -> &mut UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable [`UStr`] reference to this string reference.","sig":null,"attributes":[{"value":"/ Returns a mutable [`UStr`] reference to this string reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62098,"byte_end":62164,"line_start":653,"line_end":653,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62169,"byte_end":62172,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The [`UStr`] reference will not include the nul-terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62177,"byte_end":62240,"line_start":655,"line_end":655,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62245,"byte_end":62248,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62253,"byte_end":62265,"line_start":657,"line_end":657,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62270,"byte_end":62273,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because you can violate the invariants of this type when mutating the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62278,"byte_end":62373,"line_start":659,"line_end":659,"column_start":5,"column_end":100}},{"value":"/ string (i.e. by adding interior nul values).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62378,"byte_end":62426,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62431,"byte_end":62440,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62649,"byte_end":62666,"line_start":668,"line_end":668,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCStr<C>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_ptr_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62580,"byte_end":62630,"line_start":667,"line_end":667,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62869,"byte_end":62888,"line_start":675,"line_end":675,"column_start":12,"column_end":31},"name":"from_slice_with_nul","qualname":"<UCStr<C>>::from_slice_with_nul","value":"pub fn from_slice_with_nul(&[C]) -> Result<&Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62762,"byte_end":62782,"line_start":672,"line_end":672,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_slice_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":62806,"byte_end":62857,"line_start":674,"line_end":674,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63087,"byte_end":63116,"line_start":681,"line_end":681,"column_start":19,"column_end":48},"name":"from_slice_with_nul_unchecked","qualname":"<UCStr<C>>::from_slice_with_nul_unchecked","value":"pub unsafe fn from_slice_with_nul_unchecked(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_slice_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63016,"byte_end":63068,"line_start":680,"line_end":680,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65160,"byte_end":65167,"line_start":741,"line_end":741,"column_start":12,"column_end":19},"name":"display","qualname":"<UCStr<C>>::display","value":"pub fn display(&Self) -> Display<, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`][std::fmt::Display] for printing strings that\n may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`][std::fmt::Display] for printing strings that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63560,"byte_end":63654,"line_start":697,"line_end":697,"column_start":5,"column_end":99}},{"value":"/ may contain non-Unicode data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63659,"byte_end":63692,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63697,"byte_end":63700,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ A [`UCStr`] might contain ill-formed UTF encoding. This struct implements the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63705,"byte_end":63786,"line_start":700,"line_end":700,"column_start":5,"column_end":86}},{"value":"/ [`Display`][std::fmt::Display] trait in a way that decoding the string is lossy but no heap","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63791,"byte_end":63886,"line_start":701,"line_end":701,"column_start":5,"column_end":100}},{"value":"/ allocations are performed, such as by [`to_string_lossy`][UCStr::to_string_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63891,"byte_end":63977,"line_start":702,"line_end":702,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63982,"byte_end":63985,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ By default, invalid Unicode data is replaced with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":63990,"byte_end":64043,"line_start":704,"line_end":704,"column_start":5,"column_end":58}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). If you wish to simply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64048,"byte_end":64147,"line_start":705,"line_end":705,"column_start":5,"column_end":102}},{"value":"/ skip any invalid Uncode data and forego the replacement, you may use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64152,"byte_end":64228,"line_start":706,"line_end":706,"column_start":5,"column_end":81}},{"value":"/ [alternate formatting][std::fmt#sign0] with `{:#}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64233,"byte_end":64288,"line_start":707,"line_end":707,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64293,"byte_end":64296,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64301,"byte_end":64315,"line_start":709,"line_end":709,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64320,"byte_end":64323,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64328,"byte_end":64344,"line_start":711,"line_end":711,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64349,"byte_end":64352,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64357,"byte_end":64364,"line_start":713,"line_end":713,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CStr;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64369,"byte_end":64397,"line_start":714,"line_end":714,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64402,"byte_end":64405,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64410,"byte_end":64444,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/ let s = U16CStr::from_slice(&[","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64449,"byte_end":64483,"line_start":717,"line_end":717,"column_start":5,"column_end":39}},{"value":"/     0xD834, 0xDD1E, 0x006d, 0x0075, 0x0073, 0xDD1E, 0x0069, 0x0063, 0xD834, 0x0000,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64488,"byte_end":64575,"line_start":718,"line_end":718,"column_start":5,"column_end":92}},{"value":"/ ]).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64580,"byte_end":64596,"line_start":719,"line_end":719,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64601,"byte_end":64604,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{}\", s.display()),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64609,"byte_end":64651,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/ \"𝄞mus�ic�\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64656,"byte_end":64677,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64682,"byte_end":64688,"line_start":723,"line_end":723,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64693,"byte_end":64700,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64705,"byte_end":64708,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Using alternate formatting style to skip invalid values entirely:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64713,"byte_end":64782,"line_start":726,"line_end":726,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64787,"byte_end":64790,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64795,"byte_end":64802,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CStr;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64807,"byte_end":64835,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64840,"byte_end":64843,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64848,"byte_end":64882,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ let s = U16CStr::from_slice(&[","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64887,"byte_end":64921,"line_start":732,"line_end":732,"column_start":5,"column_end":39}},{"value":"/     0xD834, 0xDD1E, 0x006d, 0x0075, 0x0073, 0xDD1E, 0x0069, 0x0063, 0xD834, 0x0000,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":64926,"byte_end":65013,"line_start":733,"line_end":733,"column_start":5,"column_end":92}},{"value":"/ ]).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65018,"byte_end":65034,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65039,"byte_end":65042,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{:#}\", s.display()),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65047,"byte_end":65091,"line_start":736,"line_end":736,"column_start":5,"column_end":49}},{"value":"/ \"𝄞music\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65096,"byte_end":65111,"line_start":737,"line_end":737,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65116,"byte_end":65122,"line_start":738,"line_end":738,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65127,"byte_end":65134,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65139,"byte_end":65148,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66414,"byte_end":66426,"line_start":774,"line_end":774,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u16>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a string reference to an owned [`OsString`][std::ffi::OsString].","sig":null,"attributes":[{"value":"/ Decodes a string reference to an owned [`OsString`][std::ffi::OsString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65256,"byte_end":65332,"line_start":747,"line_end":747,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65337,"byte_end":65340,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`U16CStr`]. Since [`U16CStr`] makes no guarantees that it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65345,"byte_end":65439,"line_start":749,"line_end":749,"column_start":5,"column_end":99}},{"value":"/ is valid UTF-16, there is no guarantee that the resulting [`OsString`][std::ffi::OsString]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65444,"byte_end":65538,"line_start":750,"line_end":750,"column_start":5,"column_end":99}},{"value":"/ will be valid data. The [`OsString`][std::ffi::OsString] will **not** have a nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65543,"byte_end":65627,"line_start":751,"line_end":751,"column_start":5,"column_end":89}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65632,"byte_end":65647,"line_start":752,"line_end":752,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65652,"byte_end":65655,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsString`][std::ffi::OsString] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65660,"byte_end":65751,"line_start":754,"line_end":754,"column_start":5,"column_end":96}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65756,"byte_end":65847,"line_start":755,"line_end":755,"column_start":5,"column_end":96}},{"value":"/ windows) no changes to the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65852,"byte_end":65903,"line_start":756,"line_end":756,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65908,"byte_end":65911,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65916,"byte_end":65930,"line_start":758,"line_end":758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65935,"byte_end":65938,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65943,"byte_end":65954,"line_start":760,"line_end":760,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65959,"byte_end":65990,"line_start":761,"line_end":761,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65995,"byte_end":66022,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66027,"byte_end":66050,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66055,"byte_end":66098,"line_start":764,"line_end":764,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66103,"byte_end":66151,"line_start":765,"line_end":765,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66156,"byte_end":66202,"line_start":766,"line_end":766,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66207,"byte_end":66243,"line_start":767,"line_end":767,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66248,"byte_end":66251,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66256,"byte_end":66297,"line_start":769,"line_end":769,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66302,"byte_end":66309,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66314,"byte_end":66323,"line_start":771,"line_end":771,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66328,"byte_end":66351,"line_start":772,"line_end":772,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67184,"byte_end":67193,"line_start":799,"line_end":799,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u16>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] if it contains valid UTF-16 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66524,"byte_end":66606,"line_start":778,"line_end":778,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66611,"byte_end":66614,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66619,"byte_end":66631,"line_start":780,"line_end":780,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66636,"byte_end":66639,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66644,"byte_end":66712,"line_start":782,"line_end":782,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66717,"byte_end":66720,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66725,"byte_end":66739,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66744,"byte_end":66747,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66752,"byte_end":66763,"line_start":786,"line_end":786,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66768,"byte_end":66799,"line_start":787,"line_end":787,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66804,"byte_end":66827,"line_start":788,"line_end":788,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66832,"byte_end":66875,"line_start":789,"line_end":789,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66880,"byte_end":66928,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66933,"byte_end":66984,"line_start":791,"line_end":791,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":66989,"byte_end":67028,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67033,"byte_end":67036,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67041,"byte_end":67063,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67068,"byte_end":67075,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67080,"byte_end":67089,"line_start":796,"line_end":796,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67094,"byte_end":67119,"line_start":797,"line_end":797,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67936,"byte_end":67951,"line_start":822,"line_end":822,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u16>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] even if it is invalid UTF-16 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] even if it is invalid UTF-16 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67292,"byte_end":67375,"line_start":803,"line_end":803,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67380,"byte_end":67383,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67388,"byte_end":67467,"line_start":805,"line_end":805,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67472,"byte_end":67475,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67480,"byte_end":67494,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67499,"byte_end":67502,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67507,"byte_end":67518,"line_start":809,"line_end":809,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67523,"byte_end":67554,"line_start":810,"line_end":810,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67559,"byte_end":67582,"line_start":811,"line_end":811,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67587,"byte_end":67630,"line_start":812,"line_end":812,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67635,"byte_end":67683,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67688,"byte_end":67739,"line_start":814,"line_end":814,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67744,"byte_end":67780,"line_start":815,"line_end":815,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67785,"byte_end":67788,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67793,"byte_end":67815,"line_start":817,"line_end":817,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67820,"byte_end":67827,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67832,"byte_end":67841,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":67846,"byte_end":67871,"line_start":820,"line_end":820,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68764,"byte_end":68769,"line_start":837,"line_end":837,"column_start":12,"column_end":17},"name":"chars","qualname":"<UCStr<u16>>::chars","value":"pub fn chars(&Self) -> Utf16Chars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68032,"byte_end":68104,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68109,"byte_end":68112,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68117,"byte_end":68209,"line_start":828,"line_end":828,"column_start":5,"column_end":97}},{"value":"/ is an iterator over `Result<char, DecodeUtf16Error>` instead of [`char`][prim@char]s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68214,"byte_end":68302,"line_start":829,"line_end":829,"column_start":5,"column_end":93}},{"value":"/ directly. If you would like a lossy iterator over [`chars`][prim@char]s directly, instead","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68307,"byte_end":68400,"line_start":830,"line_end":830,"column_start":5,"column_end":98}},{"value":"/ use [`chars_lossy`][Self::chars_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68405,"byte_end":68448,"line_start":831,"line_end":831,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68453,"byte_end":68456,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68461,"byte_end":68555,"line_start":833,"line_end":833,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68560,"byte_end":68653,"line_start":834,"line_end":834,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68658,"byte_end":68738,"line_start":835,"line_end":835,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68743,"byte_end":68752,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69530,"byte_end":69541,"line_start":852,"line_end":852,"column_start":12,"column_end":23},"name":"chars_lossy","qualname":"<UCStr<u16>>::chars_lossy","value":"pub fn chars_lossy(&Self) -> CharsLossy","parent":null,"children":[],"decl_id":null,"docs":" Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68845,"byte_end":68922,"line_start":841,"line_end":841,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68927,"byte_end":68930,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":68935,"byte_end":69027,"line_start":843,"line_end":843,"column_start":5,"column_end":97}},{"value":"/ will replace unpaired surrogates with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69032,"byte_end":69073,"line_start":844,"line_end":844,"column_start":5,"column_end":46}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). This is a lossy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69078,"byte_end":69171,"line_start":845,"line_end":845,"column_start":5,"column_end":96}},{"value":"/ version of [`chars`][Self::chars].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69176,"byte_end":69214,"line_start":846,"line_end":846,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69219,"byte_end":69222,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69227,"byte_end":69321,"line_start":848,"line_end":848,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69326,"byte_end":69419,"line_start":849,"line_end":849,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69424,"byte_end":69504,"line_start":850,"line_end":850,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69509,"byte_end":69518,"line_start":851,"line_end":851,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70227,"byte_end":70239,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"char_indices","qualname":"<UCStr<u16>>::char_indices","value":"pub fn char_indices(&Self) -> Utf16CharIndices","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the chars of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ Returns an iterator over the chars of a string slice, and their positions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69619,"byte_end":69697,"line_start":856,"line_end":856,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69702,"byte_end":69705,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69710,"byte_end":69802,"line_start":858,"line_end":858,"column_start":5,"column_end":97}},{"value":"/ is an iterator over `Result<char, DecodeUtf16Error>` as well as their positions, instead of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69807,"byte_end":69902,"line_start":859,"line_end":859,"column_start":5,"column_end":100}},{"value":"/ [`char`][prim@char]s directly. If you would like a lossy indices iterator over","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69907,"byte_end":69989,"line_start":860,"line_end":860,"column_start":5,"column_end":87}},{"value":"/ [`chars`][prim@char]s directly, instead use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":69994,"byte_end":70041,"line_start":861,"line_end":861,"column_start":5,"column_end":52}},{"value":"/ [`char_indices_lossy`][Self::char_indices_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70046,"byte_end":70099,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70104,"byte_end":70107,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The iterator yields tuples. The position is first, the [`char`][prim@char] is second.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70112,"byte_end":70201,"line_start":864,"line_end":864,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70206,"byte_end":70215,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70896,"byte_end":70914,"line_start":880,"line_end":880,"column_start":12,"column_end":30},"name":"char_indices_lossy","qualname":"<UCStr<u16>>::char_indices_lossy","value":"pub fn char_indices_lossy(&Self) -> Utf16CharIndicesLossy","parent":null,"children":[],"decl_id":null,"docs":" Returns a lossy iterator over the chars of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ Returns a lossy iterator over the chars of a string slice, and their positions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70327,"byte_end":70410,"line_start":870,"line_end":870,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70415,"byte_end":70418,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70423,"byte_end":70515,"line_start":872,"line_end":872,"column_start":5,"column_end":97}},{"value":"/ will replace unpaired surrogates with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70520,"byte_end":70561,"line_start":873,"line_end":873,"column_start":5,"column_end":46}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�), as well as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70566,"byte_end":70658,"line_start":874,"line_end":874,"column_start":5,"column_end":95}},{"value":"/ positions of all characters. This is a lossy version of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70663,"byte_end":70722,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/ [`char_indices`][Self::char_indices].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70727,"byte_end":70768,"line_start":876,"line_end":876,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70773,"byte_end":70776,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ The iterator yields tuples. The position is first, the [`char`][prim@char] is second.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70781,"byte_end":70870,"line_start":878,"line_end":878,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":70875,"byte_end":70884,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72282,"byte_end":72299,"line_start":911,"line_end":911,"column_start":19,"column_end":36},"name":"from_char_ptr_str","qualname":"<UCStr<u32>>::from_char_ptr_str","value":"pub unsafe fn from_char_ptr_str<'a>(*const char) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a [`char`] nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a [`char`] nul-terminated string pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71032,"byte_end":71112,"line_start":886,"line_end":886,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71117,"byte_end":71120,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71125,"byte_end":71218,"line_start":888,"line_end":888,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71223,"byte_end":71317,"line_start":889,"line_end":889,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71322,"byte_end":71325,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71330,"byte_end":71342,"line_start":891,"line_end":891,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71347,"byte_end":71350,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71355,"byte_end":71448,"line_start":893,"line_end":893,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71453,"byte_end":71528,"line_start":894,"line_end":894,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71533,"byte_end":71536,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71541,"byte_end":71631,"line_start":896,"line_end":896,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71636,"byte_end":71726,"line_start":897,"line_end":897,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71731,"byte_end":71805,"line_start":898,"line_end":898,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71810,"byte_end":71813,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71818,"byte_end":71830,"line_start":900,"line_end":900,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71835,"byte_end":71838,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71843,"byte_end":71883,"line_start":902,"line_end":902,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71888,"byte_end":71891,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71896,"byte_end":71908,"line_start":904,"line_end":904,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71913,"byte_end":71916,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71921,"byte_end":72011,"line_start":906,"line_end":906,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72016,"byte_end":72106,"line_start":907,"line_end":907,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72111,"byte_end":72206,"line_start":908,"line_end":908,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72211,"byte_end":72249,"line_start":909,"line_end":909,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72254,"byte_end":72263,"line_start":910,"line_end":910,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73485,"byte_end":73506,"line_start":938,"line_end":938,"column_start":19,"column_end":40},"name":"from_char_ptr_str_mut","qualname":"<UCStr<u32>>::from_char_ptr_str_mut","value":"pub unsafe fn from_char_ptr_str_mut<'a>(*mut char) -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable [`char`] nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable [`char`] nul-terminated string pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72389,"byte_end":72485,"line_start":915,"line_end":915,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72490,"byte_end":72493,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72498,"byte_end":72591,"line_start":917,"line_end":917,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72596,"byte_end":72690,"line_start":918,"line_end":918,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72695,"byte_end":72698,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72703,"byte_end":72715,"line_start":920,"line_end":920,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72720,"byte_end":72723,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72728,"byte_end":72821,"line_start":922,"line_end":922,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72826,"byte_end":72901,"line_start":923,"line_end":923,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72906,"byte_end":72909,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":72914,"byte_end":73008,"line_start":925,"line_end":925,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73013,"byte_end":73016,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73021,"byte_end":73033,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73038,"byte_end":73041,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73046,"byte_end":73086,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73091,"byte_end":73094,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73099,"byte_end":73111,"line_start":931,"line_end":931,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73116,"byte_end":73119,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73124,"byte_end":73214,"line_start":933,"line_end":933,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73219,"byte_end":73309,"line_start":934,"line_end":934,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73314,"byte_end":73409,"line_start":935,"line_end":935,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73414,"byte_end":73452,"line_start":936,"line_end":936,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73457,"byte_end":73466,"line_start":937,"line_end":937,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75221,"byte_end":75234,"line_start":975,"line_end":975,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UCStr<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr<'a>(*const char, usize)\n-> Result<&'a Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a [`char`] pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a [`char`] pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73600,"byte_end":73671,"line_start":942,"line_end":942,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73676,"byte_end":73679,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73684,"byte_end":73771,"line_start":944,"line_end":944,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73776,"byte_end":73867,"line_start":945,"line_end":945,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73872,"byte_end":73943,"line_start":946,"line_end":946,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73948,"byte_end":73951,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73956,"byte_end":73968,"line_start":948,"line_end":948,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73973,"byte_end":73976,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ This will scan the pointer string for an interior nul value and error if one is found","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":73981,"byte_end":74070,"line_start":950,"line_end":950,"column_start":5,"column_end":94}},{"value":"/ before the nul terminator at `len` offset. To avoid scanning for interior nuls,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74075,"byte_end":74158,"line_start":951,"line_end":951,"column_start":5,"column_end":88}},{"value":"/ [`from_ptr_unchecked`][Self::from_ptr_unchecked] may be used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74163,"byte_end":74236,"line_start":952,"line_end":952,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74241,"byte_end":74244,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the value at `len` offset is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74249,"byte_end":74327,"line_start":954,"line_end":954,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74332,"byte_end":74335,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74340,"byte_end":74352,"line_start":956,"line_end":956,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74357,"byte_end":74360,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74365,"byte_end":74460,"line_start":958,"line_end":958,"column_start":5,"column_end":100}},{"value":"/ 1` elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74465,"byte_end":74481,"line_start":959,"line_end":959,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74486,"byte_end":74489,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74494,"byte_end":74584,"line_start":961,"line_end":961,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74589,"byte_end":74679,"line_start":962,"line_end":962,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74684,"byte_end":74758,"line_start":963,"line_end":963,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74763,"byte_end":74766,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74771,"byte_end":74783,"line_start":965,"line_end":965,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74788,"byte_end":74791,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74796,"byte_end":74836,"line_start":967,"line_end":967,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74841,"byte_end":74844,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74849,"byte_end":74861,"line_start":969,"line_end":969,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74866,"byte_end":74869,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74874,"byte_end":74964,"line_start":971,"line_end":971,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":74969,"byte_end":75059,"line_start":972,"line_end":972,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75064,"byte_end":75159,"line_start":973,"line_end":973,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75164,"byte_end":75202,"line_start":974,"line_end":974,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76835,"byte_end":76852,"line_start":1010,"line_end":1010,"column_start":19,"column_end":36},"name":"from_char_ptr_mut","qualname":"<UCStr<u32>>::from_char_ptr_mut","value":"pub unsafe fn from_char_ptr_mut<'a>(*mut char, usize)\n-> Result<&'a mut Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable [`char`] pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable [`char`] pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75360,"byte_end":75447,"line_start":979,"line_end":979,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75452,"byte_end":75455,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75460,"byte_end":75547,"line_start":981,"line_end":981,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75552,"byte_end":75643,"line_start":982,"line_end":982,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75648,"byte_end":75719,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75724,"byte_end":75727,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75732,"byte_end":75744,"line_start":985,"line_end":985,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75749,"byte_end":75752,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ This will scan the pointer string for an interior nul value and error if one is found","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75757,"byte_end":75846,"line_start":987,"line_end":987,"column_start":5,"column_end":94}},{"value":"/ before the nul terminator at `len` offset. To avoid scanning for interior nuls,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75851,"byte_end":75934,"line_start":988,"line_end":988,"column_start":5,"column_end":88}},{"value":"/ [`from_ptr_unchecked_mut`][Self::from_ptr_unchecked_mut] may be used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":75939,"byte_end":76020,"line_start":989,"line_end":989,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76025,"byte_end":76028,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the value at `len` offset is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76033,"byte_end":76111,"line_start":991,"line_end":991,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76116,"byte_end":76119,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76124,"byte_end":76136,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76141,"byte_end":76144,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76149,"byte_end":76244,"line_start":995,"line_end":995,"column_start":5,"column_end":100}},{"value":"/ 1` elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76249,"byte_end":76265,"line_start":996,"line_end":996,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76270,"byte_end":76273,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76278,"byte_end":76372,"line_start":998,"line_end":998,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76377,"byte_end":76380,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76385,"byte_end":76397,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76402,"byte_end":76405,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76410,"byte_end":76450,"line_start":1002,"line_end":1002,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76455,"byte_end":76458,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76463,"byte_end":76475,"line_start":1004,"line_end":1004,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76480,"byte_end":76483,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76488,"byte_end":76578,"line_start":1006,"line_end":1006,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76583,"byte_end":76673,"line_start":1007,"line_end":1007,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76678,"byte_end":76773,"line_start":1008,"line_end":1008,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":76778,"byte_end":76816,"line_start":1009,"line_end":1009,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78490,"byte_end":78512,"line_start":1047,"line_end":1047,"column_start":19,"column_end":41},"name":"from_char_ptr_truncate","qualname":"<UCStr<u32>>::from_char_ptr_truncate","value":"pub unsafe fn from_char_ptr_truncate<'a>(*const char, usize)\n-> Result<&'a Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a [`char`] pointer and a length, truncating at the first\n nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a [`char`] pointer and a length, truncating at the first","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77005,"byte_end":77100,"line_start":1017,"line_end":1017,"column_start":5,"column_end":100}},{"value":"/ nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77105,"byte_end":77124,"line_start":1018,"line_end":1018,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77129,"byte_end":77132,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. This will scan","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77137,"byte_end":77230,"line_start":1020,"line_end":1020,"column_start":5,"column_end":98}},{"value":"/ for nul values beginning with `p` until offset `len`. The first nul value will be used as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77235,"byte_end":77328,"line_start":1021,"line_end":1021,"column_start":5,"column_end":98}},{"value":"/ the nul terminator for the string, ignoring any remaining values left before `len`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77333,"byte_end":77420,"line_start":1022,"line_end":1022,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77425,"byte_end":77428,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77433,"byte_end":77445,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77450,"byte_end":77453,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ If no nul terminator is found after `len` + 1 elements, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77458,"byte_end":77539,"line_start":1026,"line_end":1026,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77544,"byte_end":77547,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77552,"byte_end":77564,"line_start":1028,"line_end":1028,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77569,"byte_end":77572,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77577,"byte_end":77670,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77675,"byte_end":77750,"line_start":1031,"line_end":1031,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77755,"byte_end":77758,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77763,"byte_end":77853,"line_start":1033,"line_end":1033,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77858,"byte_end":77948,"line_start":1034,"line_end":1034,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":77953,"byte_end":78027,"line_start":1035,"line_end":1035,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78032,"byte_end":78035,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78040,"byte_end":78052,"line_start":1037,"line_end":1037,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78057,"byte_end":78060,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78065,"byte_end":78105,"line_start":1039,"line_end":1039,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78110,"byte_end":78113,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78118,"byte_end":78130,"line_start":1041,"line_end":1041,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78135,"byte_end":78138,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78143,"byte_end":78233,"line_start":1043,"line_end":1043,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78238,"byte_end":78328,"line_start":1044,"line_end":1044,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78333,"byte_end":78428,"line_start":1045,"line_end":1045,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78433,"byte_end":78471,"line_start":1046,"line_end":1046,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80008,"byte_end":80034,"line_start":1082,"line_end":1082,"column_start":19,"column_end":45},"name":"from_char_ptr_truncate_mut","qualname":"<UCStr<u32>>::from_char_ptr_truncate_mut","value":"pub unsafe fn from_char_ptr_truncate_mut<'a>(*mut char, usize)\n-> Result<&'a mut Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable [`char`] pointer and a length,\n truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable [`char`] pointer and a length,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78677,"byte_end":78764,"line_start":1054,"line_end":1054,"column_start":5,"column_end":92}},{"value":"/ truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78769,"byte_end":78812,"line_start":1055,"line_end":1055,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78817,"byte_end":78820,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. This will scan","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78825,"byte_end":78918,"line_start":1057,"line_end":1057,"column_start":5,"column_end":98}},{"value":"/ for nul values beginning with `p` until offset `len`. The first nul value will be used as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":78923,"byte_end":79016,"line_start":1058,"line_end":1058,"column_start":5,"column_end":98}},{"value":"/ the nul terminator for the string, ignoring any remaining values left before `len`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79021,"byte_end":79108,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79113,"byte_end":79116,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79121,"byte_end":79133,"line_start":1061,"line_end":1061,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79138,"byte_end":79141,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ If no nul terminator is found after `len` + 1 elements, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79146,"byte_end":79227,"line_start":1063,"line_end":1063,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79232,"byte_end":79235,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79240,"byte_end":79252,"line_start":1065,"line_end":1065,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79257,"byte_end":79260,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79265,"byte_end":79358,"line_start":1067,"line_end":1067,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79363,"byte_end":79438,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79443,"byte_end":79446,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79451,"byte_end":79545,"line_start":1070,"line_end":1070,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79550,"byte_end":79553,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79558,"byte_end":79570,"line_start":1072,"line_end":1072,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79575,"byte_end":79578,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79583,"byte_end":79623,"line_start":1074,"line_end":1074,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79628,"byte_end":79631,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79636,"byte_end":79648,"line_start":1076,"line_end":1076,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79653,"byte_end":79656,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79661,"byte_end":79751,"line_start":1078,"line_end":1078,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79756,"byte_end":79846,"line_start":1079,"line_end":1079,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79851,"byte_end":79946,"line_start":1080,"line_end":1080,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":79951,"byte_end":79989,"line_start":1081,"line_end":1081,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81740,"byte_end":81763,"line_start":1119,"line_end":1119,"column_start":19,"column_end":42},"name":"from_char_ptr_unchecked","qualname":"<UCStr<u32>>::from_char_ptr_unchecked","value":"pub unsafe fn from_char_ptr_unchecked<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a [`char`] pointer and a length without checking for any\n nul values.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a [`char`] pointer and a length without checking for any","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80203,"byte_end":80298,"line_start":1089,"line_end":1089,"column_start":5,"column_end":100}},{"value":"/ nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80303,"byte_end":80318,"line_start":1090,"line_end":1090,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80323,"byte_end":80326,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80331,"byte_end":80418,"line_start":1092,"line_end":1092,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80423,"byte_end":80514,"line_start":1093,"line_end":1093,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80519,"byte_end":80590,"line_start":1094,"line_end":1094,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80595,"byte_end":80598,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80603,"byte_end":80615,"line_start":1096,"line_end":1096,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80620,"byte_end":80623,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80628,"byte_end":80723,"line_start":1098,"line_end":1098,"column_start":5,"column_end":100}},{"value":"/ 1` elements, nor that is has a terminating nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80728,"byte_end":80785,"line_start":1099,"line_end":1099,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80790,"byte_end":80793,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80798,"byte_end":80888,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80893,"byte_end":80983,"line_start":1102,"line_end":1102,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":80988,"byte_end":81062,"line_start":1103,"line_end":1103,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81067,"byte_end":81070,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81075,"byte_end":81165,"line_start":1105,"line_end":1105,"column_start":5,"column_end":95}},{"value":"/ a missing nul terminator at pointer offset `len` + 1 will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81170,"byte_end":81263,"line_start":1106,"line_end":1106,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81268,"byte_end":81271,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81276,"byte_end":81288,"line_start":1108,"line_end":1108,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81293,"byte_end":81296,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81301,"byte_end":81341,"line_start":1110,"line_end":1110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81346,"byte_end":81349,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81354,"byte_end":81366,"line_start":1112,"line_end":1112,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81371,"byte_end":81374,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81379,"byte_end":81469,"line_start":1114,"line_end":1114,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81474,"byte_end":81564,"line_start":1115,"line_end":1115,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81569,"byte_end":81664,"line_start":1116,"line_end":1116,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81669,"byte_end":81707,"line_start":1117,"line_end":1117,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81712,"byte_end":81721,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83259,"byte_end":83286,"line_start":1151,"line_end":1151,"column_start":19,"column_end":46},"name":"from_char_ptr_unchecked_mut","qualname":"<UCStr<u32>>::from_char_ptr_unchecked_mut","value":"pub unsafe fn from_char_ptr_unchecked_mut<'a>(*mut char, usize)\n-> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable [`char`] pointer and a length without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable [`char`] pointer and a length without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81876,"byte_end":81970,"line_start":1123,"line_end":1123,"column_start":5,"column_end":99}},{"value":"/ checking for any nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":81975,"byte_end":82007,"line_start":1124,"line_end":1124,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82012,"byte_end":82015,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82020,"byte_end":82107,"line_start":1126,"line_end":1126,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82112,"byte_end":82203,"line_start":1127,"line_end":1127,"column_start":5,"column_end":96}},{"value":"/ that `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82208,"byte_end":82279,"line_start":1128,"line_end":1128,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82284,"byte_end":82287,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82292,"byte_end":82304,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82309,"byte_end":82312,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len +","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82317,"byte_end":82412,"line_start":1132,"line_end":1132,"column_start":5,"column_end":100}},{"value":"/ 1` elements, nor that is has a terminating nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82417,"byte_end":82474,"line_start":1133,"line_end":1133,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82479,"byte_end":82482,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82487,"byte_end":82581,"line_start":1135,"line_end":1135,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82586,"byte_end":82589,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82594,"byte_end":82684,"line_start":1137,"line_end":1137,"column_start":5,"column_end":95}},{"value":"/ a missing nul terminator at pointer offset `len` + 1 will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82689,"byte_end":82782,"line_start":1138,"line_end":1138,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82787,"byte_end":82790,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82795,"byte_end":82807,"line_start":1140,"line_end":1140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82812,"byte_end":82815,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82820,"byte_end":82860,"line_start":1142,"line_end":1142,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82865,"byte_end":82868,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82873,"byte_end":82885,"line_start":1144,"line_end":1144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82890,"byte_end":82893,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82898,"byte_end":82988,"line_start":1146,"line_end":1146,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":82993,"byte_end":83083,"line_start":1147,"line_end":1147,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83088,"byte_end":83183,"line_start":1148,"line_end":1148,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83188,"byte_end":83226,"line_start":1149,"line_end":1149,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83231,"byte_end":83240,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83870,"byte_end":83885,"line_start":1165,"line_end":1165,"column_start":12,"column_end":27},"name":"from_char_slice","qualname":"<UCStr<u32>>::from_char_slice","value":"pub fn from_char_slice(&[char]) -> Result<&Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a [`char`] slice with a terminating nul, checking for\n invalid interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a [`char`] slice with a terminating nul, checking for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83403,"byte_end":83495,"line_start":1155,"line_end":1155,"column_start":5,"column_end":97}},{"value":"/ invalid interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83500,"byte_end":83532,"line_start":1156,"line_end":1156,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83537,"byte_end":83540,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ The slice must have at least one item, the nul terminator, even for an empty string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83545,"byte_end":83633,"line_start":1158,"line_end":1158,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83638,"byte_end":83641,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83646,"byte_end":83658,"line_start":1160,"line_end":1160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83663,"byte_end":83666,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ If there are nul values in the slice except for the last value, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83671,"byte_end":83760,"line_start":1162,"line_end":1162,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83765,"byte_end":83768,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ An error is also returned if the last value of the slice is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":83773,"byte_end":83858,"line_start":1164,"line_end":1164,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84531,"byte_end":84550,"line_start":1180,"line_end":1180,"column_start":12,"column_end":31},"name":"from_char_slice_mut","qualname":"<UCStr<u32>>::from_char_slice_mut","value":"pub fn from_char_slice_mut(&mut [char]) -> Result<&mut Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable [`char`] slice with a terminating nul,\n checking for invalid interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable [`char`] slice with a terminating nul,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84048,"byte_end":84143,"line_start":1170,"line_end":1170,"column_start":5,"column_end":100}},{"value":"/ checking for invalid interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84148,"byte_end":84193,"line_start":1171,"line_end":1171,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84198,"byte_end":84201,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ The slice must have at least one item, the nul terminator, even for an empty string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84206,"byte_end":84294,"line_start":1173,"line_end":1173,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84299,"byte_end":84302,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84307,"byte_end":84319,"line_start":1175,"line_end":1175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84324,"byte_end":84327,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ If there are nul values in the slice except for the last value, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84332,"byte_end":84421,"line_start":1177,"line_end":1177,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84426,"byte_end":84429,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ An error is also returned if the last value of the slice is not a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84434,"byte_end":84519,"line_start":1179,"line_end":1179,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85165,"byte_end":85189,"line_start":1195,"line_end":1195,"column_start":12,"column_end":36},"name":"from_char_slice_truncate","qualname":"<UCStr<u32>>::from_char_slice_truncate","value":"pub fn from_char_slice_truncate(&[char])\n-> Result<&Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a slice of [`char`] values, truncating at the first nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a slice of [`char`] values, truncating at the first nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84725,"byte_end":84819,"line_start":1185,"line_end":1185,"column_start":5,"column_end":99}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84824,"byte_end":84839,"line_start":1186,"line_end":1186,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84844,"byte_end":84847,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84852,"byte_end":84945,"line_start":1188,"line_end":1188,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the [`UCStr`] slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":84950,"byte_end":85035,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85040,"byte_end":85043,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85048,"byte_end":85060,"line_start":1191,"line_end":1191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85065,"byte_end":85068,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ If there are no nul values in the slice, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85073,"byte_end":85139,"line_start":1193,"line_end":1193,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85144,"byte_end":85153,"line_start":1194,"line_end":1194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85824,"byte_end":85852,"line_start":1210,"line_end":1210,"column_start":12,"column_end":40},"name":"from_char_slice_truncate_mut","qualname":"<UCStr<u32>>::from_char_slice_truncate_mut","value":"pub fn from_char_slice_truncate_mut(&mut [char])\n-> Result<&mut Self, MissingNulTerminator>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable slice of [`char`] values, truncating at\n the first nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable slice of [`char`] values, truncating at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85368,"byte_end":85464,"line_start":1200,"line_end":1200,"column_start":5,"column_end":101}},{"value":"/ the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85469,"byte_end":85498,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85503,"byte_end":85506,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85511,"byte_end":85604,"line_start":1203,"line_end":1203,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the [`UCStr`] slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85609,"byte_end":85694,"line_start":1204,"line_end":1204,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85699,"byte_end":85702,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85707,"byte_end":85719,"line_start":1206,"line_end":1206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85724,"byte_end":85727,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ If there are no nul values in the slice, an error is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85732,"byte_end":85798,"line_start":1208,"line_end":1208,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":85803,"byte_end":85812,"line_start":1209,"line_end":1209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86522,"byte_end":86547,"line_start":1226,"line_end":1226,"column_start":19,"column_end":44},"name":"from_char_slice_unchecked","qualname":"<UCStr<u32>>::from_char_slice_unchecked","value":"pub unsafe fn from_char_slice_unchecked(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a string reference from a [`char`] slice without checking for a terminating or\n interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a string reference from a [`char`] slice without checking for a terminating or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86058,"byte_end":86151,"line_start":1217,"line_end":1217,"column_start":5,"column_end":98}},{"value":"/ interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86156,"byte_end":86180,"line_start":1218,"line_end":1218,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86185,"byte_end":86188,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86193,"byte_end":86205,"line_start":1220,"line_end":1220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86210,"byte_end":86213,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid [`UCStr`] values when the slice","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86218,"byte_end":86308,"line_start":1222,"line_end":1222,"column_start":5,"column_end":95}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86313,"byte_end":86400,"line_start":1223,"line_end":1223,"column_start":5,"column_end":92}},{"value":"/ in the slice. In particular, an empty slice will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86405,"byte_end":86489,"line_start":1224,"line_end":1224,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86494,"byte_end":86503,"line_start":1225,"line_end":1225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87166,"byte_end":87195,"line_start":1240,"line_end":1240,"column_start":19,"column_end":48},"name":"from_char_slice_unchecked_mut","qualname":"<UCStr<u32>>::from_char_slice_unchecked_mut","value":"pub unsafe fn from_char_slice_unchecked_mut(&mut [char]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable string reference from a mutable [`char`] slice without checking for a\n terminating or interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a mutable string reference from a mutable [`char`] slice without checking for a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86686,"byte_end":86780,"line_start":1231,"line_end":1231,"column_start":5,"column_end":99}},{"value":"/ terminating or interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86785,"byte_end":86824,"line_start":1232,"line_end":1232,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86829,"byte_end":86832,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86837,"byte_end":86849,"line_start":1234,"line_end":1234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86854,"byte_end":86857,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid [`UCStr`] values when the slice","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86862,"byte_end":86952,"line_start":1236,"line_end":1236,"column_start":5,"column_end":95}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":86957,"byte_end":87044,"line_start":1237,"line_end":1237,"column_start":5,"column_end":92}},{"value":"/ in the slice. In particular, an empty slice will result in an invalid [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87049,"byte_end":87133,"line_start":1238,"line_end":1238,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87138,"byte_end":87147,"line_start":1239,"line_end":1239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88488,"byte_end":88500,"line_start":1272,"line_end":1272,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u32>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a string reference to an owned [`OsString`][std::ffi::OsString].","sig":null,"attributes":[{"value":"/ Decodes a string reference to an owned [`OsString`][std::ffi::OsString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87346,"byte_end":87422,"line_start":1245,"line_end":1245,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87427,"byte_end":87430,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of this reference. Since [`UCStr<u32>`] makes no guarantees that it","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87435,"byte_end":87531,"line_start":1247,"line_end":1247,"column_start":5,"column_end":101}},{"value":"/ is valid UTF-32, there is no guarantee that the resulting [`OsString`][std::ffi::OsString]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87536,"byte_end":87630,"line_start":1248,"line_end":1248,"column_start":5,"column_end":99}},{"value":"/ will be valid data. The [`OsString`][std::ffi::OsString] will **not** have a nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87635,"byte_end":87719,"line_start":1249,"line_end":1249,"column_start":5,"column_end":89}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87724,"byte_end":87739,"line_start":1250,"line_end":1250,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87744,"byte_end":87747,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsString`][std::ffi::OsString] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87752,"byte_end":87843,"line_start":1252,"line_end":1252,"column_start":5,"column_end":96}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms no changes to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87848,"byte_end":87944,"line_start":1253,"line_end":1253,"column_start":5,"column_end":101}},{"value":"/ the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87949,"byte_end":87977,"line_start":1254,"line_end":1254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87982,"byte_end":87985,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":87990,"byte_end":88004,"line_start":1256,"line_end":1256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88009,"byte_end":88012,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88017,"byte_end":88028,"line_start":1258,"line_end":1258,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88033,"byte_end":88064,"line_start":1259,"line_end":1259,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88069,"byte_end":88096,"line_start":1260,"line_end":1260,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88101,"byte_end":88124,"line_start":1261,"line_end":1261,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88129,"byte_end":88172,"line_start":1262,"line_end":1262,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88177,"byte_end":88225,"line_start":1263,"line_end":1263,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88230,"byte_end":88276,"line_start":1264,"line_end":1264,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88281,"byte_end":88317,"line_start":1265,"line_end":1265,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88322,"byte_end":88325,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88330,"byte_end":88371,"line_start":1267,"line_end":1267,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88376,"byte_end":88383,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88388,"byte_end":88397,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88402,"byte_end":88425,"line_start":1270,"line_end":1270,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89241,"byte_end":89250,"line_start":1297,"line_end":1297,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u32>>::to_string","value":"pub fn to_string(&Self) -> Result<String, crate::error::FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] if it contains valid UTF-32 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88581,"byte_end":88663,"line_start":1276,"line_end":1276,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88668,"byte_end":88671,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88676,"byte_end":88688,"line_start":1278,"line_end":1278,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88693,"byte_end":88696,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88701,"byte_end":88769,"line_start":1280,"line_end":1280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88774,"byte_end":88777,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88782,"byte_end":88796,"line_start":1282,"line_end":1282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88801,"byte_end":88804,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88809,"byte_end":88820,"line_start":1284,"line_end":1284,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88825,"byte_end":88856,"line_start":1285,"line_end":1285,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88861,"byte_end":88884,"line_start":1286,"line_end":1286,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88889,"byte_end":88932,"line_start":1287,"line_end":1287,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88937,"byte_end":88985,"line_start":1288,"line_end":1288,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":88990,"byte_end":89041,"line_start":1289,"line_end":1289,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89046,"byte_end":89085,"line_start":1290,"line_end":1290,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89090,"byte_end":89093,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89098,"byte_end":89120,"line_start":1292,"line_end":1292,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89125,"byte_end":89132,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89137,"byte_end":89146,"line_start":1294,"line_end":1294,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89151,"byte_end":89176,"line_start":1295,"line_end":1295,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89998,"byte_end":90013,"line_start":1320,"line_end":1320,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u32>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] even if it is invalid UTF-32 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] even if it is invalid UTF-32 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89354,"byte_end":89437,"line_start":1301,"line_end":1301,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89442,"byte_end":89445,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89450,"byte_end":89529,"line_start":1303,"line_end":1303,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89534,"byte_end":89537,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89542,"byte_end":89556,"line_start":1305,"line_end":1305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89561,"byte_end":89564,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89569,"byte_end":89580,"line_start":1307,"line_end":1307,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89585,"byte_end":89616,"line_start":1308,"line_end":1308,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89621,"byte_end":89644,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89649,"byte_end":89692,"line_start":1310,"line_end":1310,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89697,"byte_end":89745,"line_start":1311,"line_end":1311,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89750,"byte_end":89801,"line_start":1312,"line_end":1312,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89806,"byte_end":89842,"line_start":1313,"line_end":1313,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89847,"byte_end":89850,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89855,"byte_end":89877,"line_start":1315,"line_end":1315,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89882,"byte_end":89889,"line_start":1316,"line_end":1316,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89894,"byte_end":89903,"line_start":1317,"line_end":1317,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":89908,"byte_end":89933,"line_start":1318,"line_end":1318,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90178,"byte_end":90200,"line_start":1326,"line_end":1326,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCStr<u32>>::from_char_ptr_with_nul","value":"pub unsafe fn from_char_ptr_with_nul<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_char_ptr_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90104,"byte_end":90159,"line_start":1325,"line_end":1325,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90416,"byte_end":90440,"line_start":1333,"line_end":1333,"column_start":12,"column_end":36},"name":"from_char_slice_with_nul","qualname":"<UCStr<u32>>::from_char_slice_with_nul","value":"pub fn from_char_slice_with_nul(&[char])\n-> Result<&Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90304,"byte_end":90324,"line_start":1330,"line_end":1330,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_char_slice_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90348,"byte_end":90404,"line_start":1332,"line_end":1332,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90652,"byte_end":90686,"line_start":1339,"line_end":1339,"column_start":19,"column_end":53},"name":"from_char_slice_with_nul_unchecked","qualname":"<UCStr<u32>>::from_char_slice_with_nul_unchecked","value":"pub unsafe fn from_char_slice_with_nul_unchecked(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_char_slice_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90576,"byte_end":90633,"line_start":1338,"line_end":1338,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91504,"byte_end":91509,"line_start":1354,"line_end":1354,"column_start":12,"column_end":17},"name":"chars","qualname":"<UCStr<u32>>::chars","value":"pub fn chars(&Self) -> Utf32Chars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90772,"byte_end":90844,"line_start":1343,"line_end":1343,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90849,"byte_end":90852,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-32, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90857,"byte_end":90949,"line_start":1345,"line_end":1345,"column_start":5,"column_end":97}},{"value":"/ is an iterator over `Result<char, DecodeUtf32Error>` instead of [`char`][prim@char]s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":90954,"byte_end":91042,"line_start":1346,"line_end":1346,"column_start":5,"column_end":93}},{"value":"/ directly. If you would like a lossy iterator over [`chars`][prim@char]s directly, instead","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91047,"byte_end":91140,"line_start":1347,"line_end":1347,"column_start":5,"column_end":98}},{"value":"/ use [`chars_lossy`][Self::chars_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91145,"byte_end":91188,"line_start":1348,"line_end":1348,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91193,"byte_end":91196,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91201,"byte_end":91295,"line_start":1350,"line_end":1350,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91300,"byte_end":91393,"line_start":1351,"line_end":1351,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91398,"byte_end":91478,"line_start":1352,"line_end":1352,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91483,"byte_end":91492,"line_start":1353,"line_end":1353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92290,"byte_end":92301,"line_start":1369,"line_end":1369,"column_start":12,"column_end":23},"name":"chars_lossy","qualname":"<UCStr<u32>>::chars_lossy","value":"pub fn chars_lossy(&Self) -> CharsLossy","parent":null,"children":[],"decl_id":null,"docs":" Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91585,"byte_end":91662,"line_start":1358,"line_end":1358,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91667,"byte_end":91670,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-32, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91675,"byte_end":91767,"line_start":1360,"line_end":1360,"column_start":5,"column_end":97}},{"value":"/ will replace surrogate values or invalid code points with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91772,"byte_end":91833,"line_start":1361,"line_end":1361,"column_start":5,"column_end":66}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). This is a lossy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91838,"byte_end":91931,"line_start":1362,"line_end":1362,"column_start":5,"column_end":96}},{"value":"/ version of [`chars`][Self::chars].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91936,"byte_end":91974,"line_start":1363,"line_end":1363,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91979,"byte_end":91982,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":91987,"byte_end":92081,"line_start":1365,"line_end":1365,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92086,"byte_end":92179,"line_start":1366,"line_end":1366,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92184,"byte_end":92264,"line_start":1367,"line_end":1367,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92269,"byte_end":92278,"line_start":1368,"line_end":1368,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95227,"byte_end":95234,"line_start":1474,"line_end":1474,"column_start":10,"column_end":17},"name":"U16CStr","qualname":"::ucstr::U16CStr","value":"UCStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" C-style string reference for [`U16CString`][crate::U16CString].","sig":null,"attributes":[{"value":"/ C-style string reference for [`U16CString`][crate::U16CString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94545,"byte_end":94612,"line_start":1464,"line_end":1464,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94613,"byte_end":94616,"line_start":1465,"line_end":1465,"column_start":1,"column_end":4}},{"value":"/ [`U16CStr`] is aware of nul values. Unless unchecked conversions are used, all [`U16CStr`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94617,"byte_end":94711,"line_start":1466,"line_end":1466,"column_start":1,"column_end":95}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94712,"byte_end":94810,"line_start":1467,"line_end":1467,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94811,"byte_end":94909,"line_start":1468,"line_end":1468,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94910,"byte_end":95001,"line_start":1469,"line_end":1469,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95002,"byte_end":95005,"line_start":1470,"line_end":1470,"column_start":1,"column_end":4}},{"value":"/ [`U16CStr`] can be converted to and from many other string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95006,"byte_end":95085,"line_start":1471,"line_end":1471,"column_start":1,"column_end":80}},{"value":"/ [`U16String`][crate::U16String], [`OsString`][std::ffi::OsString], and [`String`], making proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95086,"byte_end":95186,"line_start":1472,"line_end":1472,"column_start":1,"column_end":101}},{"value":"/ Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95187,"byte_end":95217,"line_start":1473,"line_end":1473,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95932,"byte_end":95939,"line_start":1486,"line_end":1486,"column_start":10,"column_end":17},"name":"U32CStr","qualname":"::ucstr::U32CStr","value":"UCStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" C-style string reference for [`U32CString`][crate::U32CString].","sig":null,"attributes":[{"value":"/ C-style string reference for [`U32CString`][crate::U32CString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95250,"byte_end":95317,"line_start":1476,"line_end":1476,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95318,"byte_end":95321,"line_start":1477,"line_end":1477,"column_start":1,"column_end":4}},{"value":"/ [`U32CStr`] is aware of nul values. Unless unchecked conversions are used, all [`U32CStr`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95322,"byte_end":95416,"line_start":1478,"line_end":1478,"column_start":1,"column_end":95}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95417,"byte_end":95515,"line_start":1479,"line_end":1479,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95516,"byte_end":95614,"line_start":1480,"line_end":1480,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95615,"byte_end":95706,"line_start":1481,"line_end":1481,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95707,"byte_end":95710,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/ [`U32CStr`] can be converted to and from many other string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95711,"byte_end":95790,"line_start":1483,"line_end":1483,"column_start":1,"column_end":80}},{"value":"/ [`U32String`][crate::U32String], [`OsString`][std::ffi::OsString], and [`String`], making proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95791,"byte_end":95891,"line_start":1484,"line_end":1484,"column_start":1,"column_end":101}},{"value":"/ Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95892,"byte_end":95922,"line_start":1485,"line_end":1485,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96088,"byte_end":96096,"line_start":1490,"line_end":1490,"column_start":10,"column_end":18},"name":"WideCStr","qualname":"::ucstr::WideCStr","value":"UCStr<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`U16CStr`] or [`U32CStr`] depending on platform. Intended to match typical C\n `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for [`U16CStr`] or [`U32CStr`] depending on platform. Intended to match typical C","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":95955,"byte_end":96046,"line_start":1488,"line_end":1488,"column_start":1,"column_end":92}},{"value":"/ `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96047,"byte_end":96078,"line_start":1489,"line_end":1489,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96837,"byte_end":96844,"line_start":1503,"line_end":1503,"column_start":12,"column_end":19},"name":"Display","qualname":"::ucstr::Display","value":"Display {  }","parent":null,"children":[{"krate":0,"index":408}],"decl_id":null,"docs":" Helper struct for printing [`UCStr`] values with [`format!`] and `{}`.","sig":null,"attributes":[{"value":"/ Helper struct for printing [`UCStr`] values with [`format!`] and `{}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96117,"byte_end":96191,"line_start":1492,"line_end":1492,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96192,"byte_end":96195,"line_start":1493,"line_end":1493,"column_start":1,"column_end":4}},{"value":"/ A [`UCStr`] might contain ill-formed UTF encoding. This struct implements the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96196,"byte_end":96277,"line_start":1494,"line_end":1494,"column_start":1,"column_end":82}},{"value":"/ [`Display`][std::fmt::Display] trait in a way that decoding the string is lossy but no heap","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96278,"byte_end":96373,"line_start":1495,"line_end":1495,"column_start":1,"column_end":96}},{"value":"/ allocations are performed, such as by [`to_string_lossy`][UCStr::to_string_lossy]. It is created","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96374,"byte_end":96474,"line_start":1496,"line_end":1496,"column_start":1,"column_end":101}},{"value":"/ by the [`display`][UCStr::display] method on [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96475,"byte_end":96534,"line_start":1497,"line_end":1497,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96535,"byte_end":96538,"line_start":1498,"line_end":1498,"column_start":1,"column_end":4}},{"value":"/ By default, invalid Unicode data is replaced with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96539,"byte_end":96592,"line_start":1499,"line_end":1499,"column_start":1,"column_end":54}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). If you wish to simply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96593,"byte_end":96692,"line_start":1500,"line_end":1500,"column_start":1,"column_end":98}},{"value":"/ skip any invalid Uncode data and forego the replacement, you may use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96693,"byte_end":96769,"line_start":1501,"line_end":1501,"column_start":1,"column_end":77}},{"value":"/ [alternate formatting][std::fmt#sign0] with `{:#}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96770,"byte_end":96825,"line_start":1502,"line_end":1502,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ucstring","qualname":"::ucstring","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":491},{"krate":0,"index":533},{"krate":0,"index":554},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":674},{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"decl_id":null,"docs":" C-style owned, growable wide strings.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11274,"byte_end":11299,"line_start":220,"line_end":220,"column_start":1,"column_end":26}},{"value":"/ C-style owned, growable wide strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98159,"byte_end":98200,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98201,"byte_end":98204,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the [`UCString`] strings and related types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98205,"byte_end":98273,"line_start":3,"line_end":3,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100264,"byte_end":100272,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"UCString","qualname":"::ucstring::UCString","value":"UCString {  }","parent":null,"children":[{"krate":0,"index":1598}],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98556,"byte_end":98645,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98646,"byte_end":98649,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`UCString`] is aware of nul values. Unless unchecked conversions are used, all [`UCString`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98650,"byte_end":98746,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98747,"byte_end":98845,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98846,"byte_end":98942,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":98943,"byte_end":99037,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99038,"byte_end":99050,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99051,"byte_end":99054,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UCString`] can be converted to and from many other string types, including [`UString`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99055,"byte_end":99148,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/ [`OsString`][std::ffi::OsString], and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99149,"byte_end":99243,"line_start":27,"line_end":27,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99244,"byte_end":99247,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases [`U16CString`], [`U32CString`], or [`WideCString`] to using","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99248,"byte_end":99348,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/ this type directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99349,"byte_end":99372,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99373,"byte_end":99376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99377,"byte_end":99391,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99392,"byte_end":99395,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a [`U16CString`] and shows how to convert a [`U16CString`] to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99396,"byte_end":99496,"line_start":34,"line_end":34,"column_start":1,"column_end":101}},{"value":"/ regular Rust [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99497,"byte_end":99525,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99526,"byte_end":99529,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99530,"byte_end":99541,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99542,"byte_end":99573,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99574,"byte_end":99593,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99594,"byte_end":99642,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99643,"byte_end":99691,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99692,"byte_end":99728,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99729,"byte_end":99771,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99772,"byte_end":99805,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99806,"byte_end":99813,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99814,"byte_end":99817,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The same example using [`U32CString`]:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99818,"byte_end":99860,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99861,"byte_end":99864,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99865,"byte_end":99876,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99877,"byte_end":99908,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99909,"byte_end":99928,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99929,"byte_end":99977,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":99978,"byte_end":100026,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100027,"byte_end":100063,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100064,"byte_end":100106,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100107,"byte_end":100140,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100141,"byte_end":100148,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102719,"byte_end":102727,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<UCString<C>>::from_vec","value":"pub fn from_vec<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, ContainsNul<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] from a container of wide character data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100353,"byte_end":100423,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100428,"byte_end":100431,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100436,"byte_end":100529,"line_start":67,"line_end":67,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100534,"byte_end":100607,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100612,"byte_end":100615,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100620,"byte_end":100632,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100637,"byte_end":100640,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value that is not the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100645,"byte_end":100732,"line_start":72,"line_end":72,"column_start":5,"column_end":92}},{"value":"/ terminating nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100737,"byte_end":100757,"line_start":73,"line_end":73,"column_start":5,"column_end":25}},{"value":"/ The returned error will contain the original [`Vec`] as well as the position of the nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100762,"byte_end":100853,"line_start":74,"line_end":74,"column_start":5,"column_end":96}},{"value":"/ value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100858,"byte_end":100868,"line_start":75,"line_end":75,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100873,"byte_end":100876,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100881,"byte_end":100895,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100900,"byte_end":100903,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100908,"byte_end":100919,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100924,"byte_end":100955,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100960,"byte_end":101015,"line_start":81,"line_end":81,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101020,"byte_end":101049,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101054,"byte_end":101097,"line_start":83,"line_end":83,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_vec(v).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101102,"byte_end":101151,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101156,"byte_end":101199,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101204,"byte_end":101211,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101216,"byte_end":101219,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101224,"byte_end":101235,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101240,"byte_end":101271,"line_start":89,"line_end":89,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101276,"byte_end":101331,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101336,"byte_end":101365,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101370,"byte_end":101413,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_vec(v).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101418,"byte_end":101467,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101472,"byte_end":101515,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101520,"byte_end":101527,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101532,"byte_end":101535,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Empty vectors are valid and will return an empty string with a nul terminator:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101540,"byte_end":101622,"line_start":97,"line_end":97,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101627,"byte_end":101630,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101635,"byte_end":101642,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101647,"byte_end":101678,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U16CString::from_vec(vec![]).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101683,"byte_end":101737,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(wcstr, U16CString::default());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101742,"byte_end":101787,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101792,"byte_end":101799,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101804,"byte_end":101807,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101812,"byte_end":101819,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101824,"byte_end":101855,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U32CString::from_vec(vec![]).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101860,"byte_end":101914,"line_start":107,"line_end":107,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(wcstr, U32CString::default());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101919,"byte_end":101964,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101969,"byte_end":101976,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101981,"byte_end":101984,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":101989,"byte_end":102063,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102068,"byte_end":102071,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102076,"byte_end":102087,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102092,"byte_end":102123,"line_start":114,"line_end":114,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 0u16, 104u16, 101u16]; // 'T' NUL 'h' 'e'","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102128,"byte_end":102193,"line_start":115,"line_end":115,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102198,"byte_end":102241,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_vec(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102246,"byte_end":102284,"line_start":117,"line_end":117,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102289,"byte_end":102315,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102320,"byte_end":102373,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102378,"byte_end":102385,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102390,"byte_end":102393,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102398,"byte_end":102409,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102414,"byte_end":102445,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 0u32, 104u32, 101u32]; // 'T' NUL 'h' 'e'","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102450,"byte_end":102515,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102520,"byte_end":102563,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_vec(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102568,"byte_end":102606,"line_start":126,"line_end":126,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102611,"byte_end":102637,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102642,"byte_end":102695,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":102700,"byte_end":102707,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104063,"byte_end":104080,"line_start":164,"line_end":164,"column_start":12,"column_end":29},"name":"from_vec_truncate","qualname":"<UCString<C>>::from_vec_truncate","value":"pub fn from_vec_truncate<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] from a container of wide character data, truncating at the first\n nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] from a container of wide character data, truncating at the first","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103157,"byte_end":103251,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103256,"byte_end":103275,"line_start":141,"line_end":141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103280,"byte_end":103283,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103288,"byte_end":103356,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103361,"byte_end":103364,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103369,"byte_end":103383,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103388,"byte_end":103391,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103396,"byte_end":103407,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103412,"byte_end":103443,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16, 0u16]; // 'T' 'h' 'e' NUL","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103448,"byte_end":103513,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103518,"byte_end":103555,"line_start":150,"line_end":150,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103560,"byte_end":103603,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_vec_truncate(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103608,"byte_end":103657,"line_start":152,"line_end":152,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103662,"byte_end":103705,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103710,"byte_end":103717,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103722,"byte_end":103725,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103730,"byte_end":103741,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103746,"byte_end":103777,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32, 0u32]; // 'T' 'h' 'e' NUL","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103782,"byte_end":103847,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103852,"byte_end":103889,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103894,"byte_end":103937,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_vec_truncate(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103942,"byte_end":103991,"line_start":161,"line_end":161,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":103996,"byte_end":104039,"line_start":162,"line_end":162,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104044,"byte_end":104051,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104890,"byte_end":104908,"line_start":183,"line_end":183,"column_start":19,"column_end":37},"name":"from_vec_unchecked","qualname":"<UCString<C>>::from_vec_unchecked","value":"pub unsafe fn from_vec_unchecked<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] from a vector without checking for interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104347,"byte_end":104432,"line_start":173,"line_end":173,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104437,"byte_end":104440,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104445,"byte_end":104539,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104544,"byte_end":104552,"line_start":176,"line_end":176,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104557,"byte_end":104560,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104565,"byte_end":104577,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104582,"byte_end":104585,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_vec`][Self::from_vec] except that no runtime assertion","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104590,"byte_end":104684,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ is made that `v` contains no interior nul values. Providing a vector with any nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104689,"byte_end":104781,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/ that are not the last value in the vector will result in an invalid [`UCString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":104786,"byte_end":104871,"line_start":182,"line_end":182,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105637,"byte_end":105646,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"from_ustr","qualname":"<UCString<C>>::from_ustr","value":"pub fn from_ustr<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Result<Self, ContainsNul<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] from anything that can be converted to a [`UStr`].","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] from anything that can be converted to a [`UStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105213,"byte_end":105293,"line_start":195,"line_end":195,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105298,"byte_end":105301,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105306,"byte_end":105369,"line_start":197,"line_end":197,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105374,"byte_end":105377,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105382,"byte_end":105394,"line_start":199,"line_end":199,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105399,"byte_end":105402,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value that is not the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105407,"byte_end":105494,"line_start":201,"line_end":201,"column_start":5,"column_end":92}},{"value":"/ terminating nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105499,"byte_end":105519,"line_start":202,"line_end":202,"column_start":5,"column_end":25}},{"value":"/ The returned error will contain a [`Vec`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105524,"byte_end":105611,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105616,"byte_end":105625,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105999,"byte_end":106017,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"from_ustr_truncate","qualname":"<UCString<C>>::from_ustr_truncate","value":"pub fn from_ustr_truncate<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] from anything that can be converted to a [`UStr`], truncating at\n the first nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] from anything that can be converted to a [`UStr`], truncating at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105762,"byte_end":105856,"line_start":209,"line_end":209,"column_start":5,"column_end":99}},{"value":"/ the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105861,"byte_end":105890,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105895,"byte_end":105898,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105903,"byte_end":105973,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":105978,"byte_end":105987,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106601,"byte_end":106620,"line_start":227,"line_end":227,"column_start":19,"column_end":38},"name":"from_ustr_unchecked","qualname":"<UCString<C>>::from_ustr_unchecked","value":"pub unsafe fn from_ustr_unchecked<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] from anything that can be converted to a [`UStr`], without\n scanning for invalid nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] from anything that can be converted to a [`UStr`], without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106118,"byte_end":106206,"line_start":218,"line_end":218,"column_start":5,"column_end":93}},{"value":"/ scanning for invalid nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106211,"byte_end":106247,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106252,"byte_end":106255,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106260,"byte_end":106272,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106277,"byte_end":106280,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_ustr`][Self::from_ustr] except that no runtime assertion","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106285,"byte_end":106381,"line_start":223,"line_end":223,"column_start":5,"column_end":101}},{"value":"/ is made that `v` contains no interior nul values. Providing a string with any nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106386,"byte_end":106478,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ that are not the last value in the vector will result in an invalid [`UCString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106483,"byte_end":106568,"line_start":225,"line_end":225,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106573,"byte_end":106582,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107898,"byte_end":107910,"line_start":256,"line_end":256,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCString<C>>::from_ptr_str","value":"pub unsafe fn from_ptr_str(*const C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`UCString`] copied from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a new [`UCString`] copied from a nul-terminated string pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106722,"byte_end":106800,"line_start":231,"line_end":231,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106805,"byte_end":106808,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106813,"byte_end":106906,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":106911,"byte_end":107005,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107010,"byte_end":107013,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If you wish to avoid copying the string pointer, use [`UCStr::from_ptr_str`] instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107018,"byte_end":107107,"line_start":236,"line_end":236,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107112,"byte_end":107115,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107120,"byte_end":107132,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107137,"byte_end":107140,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107145,"byte_end":107238,"line_start":240,"line_end":240,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107243,"byte_end":107318,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107323,"byte_end":107326,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107331,"byte_end":107421,"line_start":243,"line_end":243,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107426,"byte_end":107429,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107434,"byte_end":107446,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107451,"byte_end":107454,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107459,"byte_end":107499,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107504,"byte_end":107507,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107512,"byte_end":107524,"line_start":249,"line_end":249,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107529,"byte_end":107532,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107537,"byte_end":107627,"line_start":251,"line_end":251,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107632,"byte_end":107722,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107727,"byte_end":107822,"line_start":253,"line_end":253,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107827,"byte_end":107865,"line_start":254,"line_end":254,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107870,"byte_end":107879,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109142,"byte_end":109150,"line_start":286,"line_end":286,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<C>>::from_ptr","value":"pub unsafe fn from_ptr(*const C, usize) -> Result<Self, ContainsNul<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] copied from a pointer and a length, checking for invalid interior\n nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] copied from a pointer and a length, checking for invalid interior","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":107990,"byte_end":108085,"line_start":260,"line_end":260,"column_start":5,"column_end":100}},{"value":"/ nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108090,"byte_end":108105,"line_start":261,"line_end":261,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108110,"byte_end":108113,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108118,"byte_end":108205,"line_start":263,"line_end":263,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. If `len` is `0`, `p` is allowed to be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108210,"byte_end":108303,"line_start":264,"line_end":264,"column_start":5,"column_end":98}},{"value":"/ null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108308,"byte_end":108325,"line_start":265,"line_end":265,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108330,"byte_end":108333,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the pointer data is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108338,"byte_end":108425,"line_start":267,"line_end":267,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108430,"byte_end":108433,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108438,"byte_end":108450,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108455,"byte_end":108458,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This will scan the pointer string for an interior nul value and error if one is found. To","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108463,"byte_end":108556,"line_start":271,"line_end":271,"column_start":5,"column_end":98}},{"value":"/ avoid scanning for interior nuls, [`from_ptr_unchecked`][Self::from_ptr_unchecked] may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108561,"byte_end":108654,"line_start":272,"line_end":272,"column_start":5,"column_end":98}},{"value":"/ used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108659,"byte_end":108676,"line_start":273,"line_end":273,"column_start":5,"column_end":22}},{"value":"/ The returned error will contain a [`Vec`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108681,"byte_end":108768,"line_start":274,"line_end":274,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108773,"byte_end":108776,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108781,"byte_end":108793,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108798,"byte_end":108801,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108806,"byte_end":108900,"line_start":278,"line_end":278,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108905,"byte_end":108918,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108923,"byte_end":108926,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":108931,"byte_end":109021,"line_start":281,"line_end":281,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109026,"byte_end":109029,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109034,"byte_end":109046,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109051,"byte_end":109054,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109059,"byte_end":109123,"line_start":285,"line_end":285,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110390,"byte_end":110407,"line_start":314,"line_end":314,"column_start":19,"column_end":36},"name":"from_ptr_truncate","qualname":"<UCString<C>>::from_ptr_truncate","value":"pub unsafe fn from_ptr_truncate(*const C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] copied from a pointer and a length, truncating at the first nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] copied from a pointer and a length, truncating at the first nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109405,"byte_end":109498,"line_start":295,"line_end":295,"column_start":5,"column_end":98}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109503,"byte_end":109518,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109523,"byte_end":109526,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. This will scan","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109531,"byte_end":109624,"line_start":298,"line_end":298,"column_start":5,"column_end":98}},{"value":"/ for nul values beginning with `p` until offset `len`. The first nul value will be used as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109629,"byte_end":109722,"line_start":299,"line_end":299,"column_start":5,"column_end":98}},{"value":"/ the nul terminator for the string, ignoring any remaining values left before `len`. If no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109727,"byte_end":109820,"line_start":300,"line_end":300,"column_start":5,"column_end":98}},{"value":"/ nul value is found, the whole string of length `len` is used, and a new nul-terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109825,"byte_end":109915,"line_start":301,"line_end":301,"column_start":5,"column_end":95}},{"value":"/ will be added to the resulting string. If `len` is `0`, `p` is allowed to be a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":109920,"byte_end":110016,"line_start":302,"line_end":302,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110021,"byte_end":110024,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110029,"byte_end":110041,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110046,"byte_end":110049,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110054,"byte_end":110148,"line_start":306,"line_end":306,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110153,"byte_end":110166,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110171,"byte_end":110174,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110179,"byte_end":110269,"line_start":309,"line_end":309,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110274,"byte_end":110277,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110282,"byte_end":110294,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110299,"byte_end":110302,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110307,"byte_end":110371,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111597,"byte_end":111615,"line_start":345,"line_end":345,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<C>>::from_ptr_unchecked","value":"pub unsafe fn from_ptr_unchecked(*const C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] copied from a pointer and a length without checking for any nul\n values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] copied from a pointer and a length without checking for any nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110643,"byte_end":110736,"line_start":323,"line_end":323,"column_start":5,"column_end":98}},{"value":"/ values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110741,"byte_end":110752,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110757,"byte_end":110760,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110765,"byte_end":110852,"line_start":326,"line_end":326,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. If `len` is `0`, `p` is allowed to be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110857,"byte_end":110950,"line_start":327,"line_end":327,"column_start":5,"column_end":98}},{"value":"/ null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110955,"byte_end":110972,"line_start":328,"line_end":328,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110977,"byte_end":110980,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the pointer data is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":110985,"byte_end":111072,"line_start":330,"line_end":330,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111077,"byte_end":111080,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111085,"byte_end":111097,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111102,"byte_end":111105,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111110,"byte_end":111204,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111209,"byte_end":111222,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111227,"byte_end":111230,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111235,"byte_end":111325,"line_start":337,"line_end":337,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111330,"byte_end":111333,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111338,"byte_end":111428,"line_start":339,"line_end":339,"column_start":5,"column_end":95}},{"value":"/ will result in an invalid [`UCString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111433,"byte_end":111476,"line_start":340,"line_end":340,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111481,"byte_end":111484,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111489,"byte_end":111501,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111506,"byte_end":111509,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111514,"byte_end":111578,"line_start":344,"line_end":344,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111916,"byte_end":111924,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"as_ucstr","qualname":"<UCString<C>>::as_ucstr","value":"pub fn as_ucstr(&Self) -> &UCStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`UCStr`] reference.\n","sig":null,"attributes":[{"value":"/ Converts to a [`UCStr`] reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111852,"byte_end":111890,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111895,"byte_end":111904,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112069,"byte_end":112081,"line_start":362,"line_end":362,"column_start":12,"column_end":24},"name":"as_mut_ucstr","qualname":"<UCString<C>>::as_mut_ucstr","value":"pub fn as_mut_ucstr(&mut Self) -> &mut UCStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable [`UCStr`] reference.\n","sig":null,"attributes":[{"value":"/ Converts to a mutable [`UCStr`] reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":111997,"byte_end":112043,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112048,"byte_end":112057,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112387,"byte_end":112399,"line_start":371,"line_end":371,"column_start":12,"column_end":24},"name":"into_ustring","qualname":"<UCString<C>>::into_ustring","value":"pub fn into_ustring(Self) -> UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts this string into a [`UString`] without a nul terminator.","sig":null,"attributes":[{"value":"/ Converts this string into a [`UString`] without a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112170,"byte_end":112239,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112244,"byte_end":112247,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The resulting string will **not** contain a nul-terminator, and will contain no other nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112252,"byte_end":112345,"line_start":368,"line_end":368,"column_start":5,"column_end":98}},{"value":"/ values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112350,"byte_end":112361,"line_start":369,"line_end":369,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112366,"byte_end":112375,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112663,"byte_end":112684,"line_start":379,"line_end":379,"column_start":12,"column_end":33},"name":"into_ustring_with_nul","qualname":"<UCString<C>>::into_ustring_with_nul","value":"pub fn into_ustring_with_nul(Self) -> UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts this string into a [`UString`] with a nul terminator.","sig":null,"attributes":[{"value":"/ Converts this string into a [`UString`] with a nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112476,"byte_end":112542,"line_start":375,"line_end":375,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112547,"byte_end":112550,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will contain a nul-terminator and no interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112555,"byte_end":112637,"line_start":377,"line_end":377,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112642,"byte_end":112651,"line_start":378,"line_end":378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113027,"byte_end":113035,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UCString<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the string into a [`Vec`] without a nul terminator, consuming the string in\n the process.","sig":null,"attributes":[{"value":"/ Converts the string into a [`Vec`] without a nul terminator, consuming the string in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112770,"byte_end":112858,"line_start":383,"line_end":383,"column_start":5,"column_end":93}},{"value":"/ the process.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112863,"byte_end":112879,"line_start":384,"line_end":384,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112884,"byte_end":112887,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will **not** contain a nul-terminator, and will contain no other nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112892,"byte_end":112985,"line_start":386,"line_end":386,"column_start":5,"column_end":98}},{"value":"/ values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":112990,"byte_end":113001,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113006,"byte_end":113015,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113339,"byte_end":113356,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"into_vec_with_nul","qualname":"<UCString<C>>::into_vec_with_nul","value":"pub fn into_vec_with_nul(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the string into a [`Vec`], consuming the string in the process.","sig":null,"attributes":[{"value":"/ Converts the string into a [`Vec`], consuming the string in the process.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113142,"byte_end":113218,"line_start":395,"line_end":395,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113223,"byte_end":113226,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will contain a nul-terminator and no interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113231,"byte_end":113313,"line_start":397,"line_end":397,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113318,"byte_end":113327,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113852,"byte_end":113860,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<UCString<C>>::into_raw","value":"pub fn into_raw(Self) -> *mut C","parent":null,"children":[],"decl_id":null,"docs":" Transfers ownership of the string to a C caller.","sig":null,"attributes":[{"value":"/ Transfers ownership of the string to a C caller.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113423,"byte_end":113475,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113480,"byte_end":113483,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113488,"byte_end":113500,"line_start":405,"line_end":405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113505,"byte_end":113508,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The pointer _must_ be returned to Rust and reconstituted using","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113513,"byte_end":113579,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/ [`from_raw`][Self::from_raw] to be properly deallocated. Specifically, one should _not_ use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113584,"byte_end":113679,"line_start":408,"line_end":408,"column_start":5,"column_end":100}},{"value":"/ the standard C `free` function to deallocate this string. Failure to call","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113684,"byte_end":113761,"line_start":409,"line_end":409,"column_start":5,"column_end":82}},{"value":"/ [`from_raw`][Self::from_raw] will lead to a memory leak.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113766,"byte_end":113826,"line_start":410,"line_end":410,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113831,"byte_end":113840,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114573,"byte_end":114581,"line_start":430,"line_end":430,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<UCString<C>>::from_raw","value":"pub unsafe fn from_raw(*mut C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retakes ownership of a [`UCString`] that was transferred to C.","sig":null,"attributes":[{"value":"/ Retakes ownership of a [`UCString`] that was transferred to C.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":113941,"byte_end":114007,"line_start":416,"line_end":416,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114012,"byte_end":114015,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This should only be used in combination with [`into_raw`][Self::into_raw]. To construct a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114020,"byte_end":114113,"line_start":418,"line_end":418,"column_start":5,"column_end":98}},{"value":"/ new [`UCString`] from a pointer, use [`from_ptr_str`][Self::from_ptr_str].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114118,"byte_end":114196,"line_start":419,"line_end":419,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114201,"byte_end":114204,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114209,"byte_end":114221,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114226,"byte_end":114229,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This should only ever be called with a pointer that was earlier obtained by calling","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114234,"byte_end":114321,"line_start":423,"line_end":423,"column_start":5,"column_end":92}},{"value":"/ [`into_raw`][Self::into_raw]. Additionally, the length of the string will be recalculated","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114326,"byte_end":114419,"line_start":424,"line_end":424,"column_start":5,"column_end":98}},{"value":"/ from the pointer by scanning for the nul-terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114424,"byte_end":114480,"line_start":425,"line_end":425,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114485,"byte_end":114488,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114493,"byte_end":114505,"line_start":427,"line_end":427,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114510,"byte_end":114513,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Panics if `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114518,"byte_end":114554,"line_start":429,"line_end":429,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115671,"byte_end":115687,"line_start":466,"line_end":466,"column_start":12,"column_end":28},"name":"into_boxed_ucstr","qualname":"<UCString<C>>::into_boxed_ucstr","value":"pub fn into_boxed_ucstr(Self) -> Box<UCStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this [`UCString`] into a boxed [`UCStr`].","sig":null,"attributes":[{"value":"/ Converts this [`UCString`] into a boxed [`UCStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114880,"byte_end":114934,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114939,"byte_end":114942,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114947,"byte_end":114961,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114966,"byte_end":114969,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114974,"byte_end":114981,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16CString, U16CStr};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":114986,"byte_end":115028,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115033,"byte_end":115036,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115041,"byte_end":115095,"line_start":449,"line_end":449,"column_start":5,"column_end":59}},{"value":"/ let c_string = U16CString::from_vec(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115100,"byte_end":115160,"line_start":450,"line_end":450,"column_start":5,"column_end":65}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115165,"byte_end":115209,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115214,"byte_end":115228,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U16CStr::from_slice(&v).unwrap());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115233,"byte_end":115291,"line_start":453,"line_end":453,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115296,"byte_end":115303,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115308,"byte_end":115311,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115316,"byte_end":115323,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32CString, U32CStr};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115328,"byte_end":115370,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115375,"byte_end":115378,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115383,"byte_end":115437,"line_start":459,"line_end":459,"column_start":5,"column_end":59}},{"value":"/ let c_string = U32CString::from_vec(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115442,"byte_end":115502,"line_start":460,"line_end":460,"column_start":5,"column_end":65}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115507,"byte_end":115551,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115556,"byte_end":115570,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U32CStr::from_slice(&v).unwrap());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115575,"byte_end":115633,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115638,"byte_end":115645,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115650,"byte_end":115659,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115904,"byte_end":115907,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"new","qualname":"<UCString<C>>::new","value":"pub fn new<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, ContainsNul<C>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115808,"byte_end":115828,"line_start":470,"line_end":470,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_vec` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":115852,"byte_end":115892,"line_start":472,"line_end":472,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116106,"byte_end":116123,"line_start":480,"line_end":480,"column_start":12,"column_end":29},"name":"from_vec_with_nul","qualname":"<UCString<C>>::from_vec_with_nul","value":"pub fn from_vec_with_nul<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116001,"byte_end":116021,"line_start":477,"line_end":477,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_vec_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116045,"byte_end":116094,"line_start":479,"line_end":479,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116344,"byte_end":116362,"line_start":487,"line_end":487,"column_start":12,"column_end":30},"name":"from_ustr_with_nul","qualname":"<UCString<C>>::from_ustr_with_nul","value":"pub fn from_ustr_with_nul<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116238,"byte_end":116258,"line_start":484,"line_end":484,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_ustr_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116282,"byte_end":116332,"line_start":486,"line_end":486,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116592,"byte_end":116609,"line_start":494,"line_end":494,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<C>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul(*const C, usize)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116480,"byte_end":116500,"line_start":491,"line_end":491,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_ptr_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116524,"byte_end":116573,"line_start":493,"line_end":493,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116843,"byte_end":116870,"line_start":503,"line_end":503,"column_start":19,"column_end":46},"name":"from_vec_with_nul_unchecked","qualname":"<UCString<C>>::from_vec_with_nul_unchecked","value":"pub unsafe fn from_vec_with_nul_unchecked<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_vec_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116774,"byte_end":116824,"line_start":502,"line_end":502,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117039,"byte_end":117067,"line_start":509,"line_end":509,"column_start":19,"column_end":47},"name":"from_ustr_with_nul_unchecked","qualname":"<UCString<C>>::from_ustr_with_nul_unchecked","value":"pub unsafe fn from_ustr_with_nul_unchecked<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_ustr_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":116969,"byte_end":117020,"line_start":508,"line_end":508,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117238,"byte_end":117265,"line_start":515,"line_end":515,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<C>>::from_ptr_with_nul_unchecked","value":"pub unsafe fn from_ptr_with_nul_unchecked(*const C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_ptr_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117169,"byte_end":117219,"line_start":514,"line_end":514,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118848,"byte_end":118856,"line_start":563,"line_end":563,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u16>>::from_str","value":"pub fn from_str<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, ContainsNul<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16CString`] copied from a [`str`].","sig":null,"attributes":[{"value":"/ Encodes a [`U16CString`] copied from a [`str`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117600,"byte_end":117651,"line_start":528,"line_end":528,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117656,"byte_end":117659,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for nul values, which are invalid anywhere except the final","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117664,"byte_end":117754,"line_start":530,"line_end":530,"column_start":5,"column_end":95}},{"value":"/ character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117759,"byte_end":117773,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117778,"byte_end":117781,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117786,"byte_end":117876,"line_start":533,"line_end":533,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117881,"byte_end":117884,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117889,"byte_end":117901,"line_start":535,"line_end":535,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117906,"byte_end":117909,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value anywhere except the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117914,"byte_end":118005,"line_start":537,"line_end":537,"column_start":5,"column_end":96}},{"value":"/ final position.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118010,"byte_end":118029,"line_start":538,"line_end":538,"column_start":5,"column_end":24}},{"value":"/ The returned error will contain a [`Vec<u16>`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118034,"byte_end":118126,"line_start":539,"line_end":539,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118131,"byte_end":118134,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118139,"byte_end":118153,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118158,"byte_end":118161,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118166,"byte_end":118177,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118182,"byte_end":118213,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118218,"byte_end":118241,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118246,"byte_end":118289,"line_start":546,"line_end":546,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118294,"byte_end":118343,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118348,"byte_end":118393,"line_start":548,"line_end":548,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118398,"byte_end":118405,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118410,"byte_end":118413,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118418,"byte_end":118492,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118497,"byte_end":118500,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118505,"byte_end":118516,"line_start":553,"line_end":553,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118521,"byte_end":118552,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118557,"byte_end":118585,"line_start":555,"line_end":555,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118590,"byte_end":118633,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118638,"byte_end":118676,"line_start":557,"line_end":557,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118681,"byte_end":118707,"line_start":558,"line_end":558,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118712,"byte_end":118765,"line_start":559,"line_end":559,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118770,"byte_end":118777,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118782,"byte_end":118822,"line_start":561,"line_end":561,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":118827,"byte_end":118836,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119840,"byte_end":119858,"line_start":588,"line_end":588,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u16>>::from_str_unchecked","value":"pub unsafe fn from_str_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16CString`] copied from a [`str`], without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Encodes a [`U16CString`] copied from a [`str`], without checking for interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119013,"byte_end":119106,"line_start":568,"line_end":568,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119111,"byte_end":119114,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119119,"byte_end":119209,"line_start":570,"line_end":570,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119214,"byte_end":119217,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119222,"byte_end":119234,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119239,"byte_end":119242,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_str`][Self::from_str] except that no runtime assertion","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119247,"byte_end":119341,"line_start":574,"line_end":574,"column_start":5,"column_end":99}},{"value":"/ is made that `s` contains no interior nul values. Providing a string with nul values that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119346,"byte_end":119439,"line_start":575,"line_end":575,"column_start":5,"column_end":98}},{"value":"/ are not the last character will result in an invalid [`U16CString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119444,"byte_end":119516,"line_start":576,"line_end":576,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119521,"byte_end":119524,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119529,"byte_end":119543,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119548,"byte_end":119551,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119556,"byte_end":119567,"line_start":580,"line_end":580,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119572,"byte_end":119603,"line_start":581,"line_end":581,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119608,"byte_end":119631,"line_start":582,"line_end":582,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119636,"byte_end":119679,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_unchecked(s) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119684,"byte_end":119745,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119750,"byte_end":119795,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119800,"byte_end":119807,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119812,"byte_end":119821,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120579,"byte_end":120596,"line_start":608,"line_end":608,"column_start":12,"column_end":29},"name":"from_str_truncate","qualname":"<UCString<u16>>::from_str_truncate","value":"pub fn from_str_truncate<impl AsRef<str>: AsRef<str>>(impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16CString`] copied from a [`str`], truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Encodes a [`U16CString`] copied from a [`str`], truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":119999,"byte_end":120090,"line_start":593,"line_end":593,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120095,"byte_end":120098,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120103,"byte_end":120173,"line_start":595,"line_end":595,"column_start":5,"column_end":75}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120178,"byte_end":120268,"line_start":596,"line_end":596,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120273,"byte_end":120276,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120281,"byte_end":120295,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120300,"byte_end":120303,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120308,"byte_end":120319,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120324,"byte_end":120355,"line_start":601,"line_end":601,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120360,"byte_end":120388,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120393,"byte_end":120436,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str_truncate(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120441,"byte_end":120490,"line_start":604,"line_end":604,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120495,"byte_end":120541,"line_start":605,"line_end":605,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120546,"byte_end":120553,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120558,"byte_end":120567,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122330,"byte_end":122341,"line_start":653,"line_end":653,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u16>>::from_os_str","value":"pub fn from_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, ContainsNul<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16CString`] copied from anything that can be converted to an\n [`OsStr`][std::ffi::OsStr].","sig":null,"attributes":[{"value":"/ Encodes a [`U16CString`] copied from anything that can be converted to an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120736,"byte_end":120813,"line_start":613,"line_end":613,"column_start":5,"column_end":82}},{"value":"/ [`OsStr`][std::ffi::OsStr].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120818,"byte_end":120849,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120854,"byte_end":120857,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for nul values, which are invalid anywhere except the final","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120862,"byte_end":120952,"line_start":616,"line_end":616,"column_start":5,"column_end":95}},{"value":"/ character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120957,"byte_end":120971,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":120976,"byte_end":121066,"line_start":618,"line_end":618,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121071,"byte_end":121074,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121079,"byte_end":121164,"line_start":620,"line_end":620,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121169,"byte_end":121260,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ windows) no changes to the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121265,"byte_end":121316,"line_start":622,"line_end":622,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121321,"byte_end":121324,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121329,"byte_end":121341,"line_start":624,"line_end":624,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121346,"byte_end":121349,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value anywhere except the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121354,"byte_end":121445,"line_start":626,"line_end":626,"column_start":5,"column_end":96}},{"value":"/ last character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121450,"byte_end":121469,"line_start":627,"line_end":627,"column_start":5,"column_end":24}},{"value":"/ The returned error will contain a [`Vec<u16>`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121474,"byte_end":121566,"line_start":628,"line_end":628,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121571,"byte_end":121574,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121579,"byte_end":121593,"line_start":630,"line_end":630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121598,"byte_end":121601,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121606,"byte_end":121617,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121622,"byte_end":121653,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121658,"byte_end":121681,"line_start":634,"line_end":634,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121686,"byte_end":121729,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121734,"byte_end":121786,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121791,"byte_end":121836,"line_start":637,"line_end":637,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121841,"byte_end":121848,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121853,"byte_end":121856,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121861,"byte_end":121937,"line_start":640,"line_end":640,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121942,"byte_end":121945,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121950,"byte_end":121961,"line_start":642,"line_end":642,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":121966,"byte_end":121997,"line_start":643,"line_end":643,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122002,"byte_end":122030,"line_start":644,"line_end":644,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122035,"byte_end":122078,"line_start":645,"line_end":645,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122083,"byte_end":122124,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122129,"byte_end":122155,"line_start":647,"line_end":647,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122160,"byte_end":122213,"line_start":648,"line_end":648,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122218,"byte_end":122225,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122230,"byte_end":122239,"line_start":650,"line_end":650,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122244,"byte_end":122267,"line_start":651,"line_end":651,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123701,"byte_end":123722,"line_start":684,"line_end":684,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u16>>::from_os_str_unchecked","value":"pub unsafe fn from_os_str_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16CString`] from anything that can be converted to an\n [`OsStr`][std::ffi::OsStr], without checking for nul values.","sig":null,"attributes":[{"value":"/ Encodes a [`U16CString`] from anything that can be converted to an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122504,"byte_end":122574,"line_start":658,"line_end":658,"column_start":5,"column_end":75}},{"value":"/ [`OsStr`][std::ffi::OsStr], without checking for nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122579,"byte_end":122643,"line_start":659,"line_end":659,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122648,"byte_end":122651,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122656,"byte_end":122746,"line_start":661,"line_end":661,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122751,"byte_end":122754,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122759,"byte_end":122844,"line_start":663,"line_end":663,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122849,"byte_end":122940,"line_start":664,"line_end":664,"column_start":5,"column_end":96}},{"value":"/ windows) no changes to the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":122945,"byte_end":122996,"line_start":665,"line_end":665,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123001,"byte_end":123004,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123009,"byte_end":123021,"line_start":667,"line_end":667,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123026,"byte_end":123029,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_os_str`][Self::from_os_str] except that no runtime","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123034,"byte_end":123124,"line_start":669,"line_end":669,"column_start":5,"column_end":95}},{"value":"/ assertion is made that `s` contains no interior nul values. Providing a string with nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123129,"byte_end":123220,"line_start":670,"line_end":670,"column_start":5,"column_end":96}},{"value":"/ values anywhere but the last character will result in an invalid [`U16CString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123225,"byte_end":123309,"line_start":671,"line_end":671,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123314,"byte_end":123317,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123322,"byte_end":123336,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123341,"byte_end":123344,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123349,"byte_end":123360,"line_start":675,"line_end":675,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123365,"byte_end":123396,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123401,"byte_end":123424,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123429,"byte_end":123472,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_unchecked(s) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123477,"byte_end":123541,"line_start":679,"line_end":679,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123546,"byte_end":123591,"line_start":680,"line_end":680,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123596,"byte_end":123603,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123608,"byte_end":123631,"line_start":682,"line_end":682,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124843,"byte_end":124863,"line_start":711,"line_end":711,"column_start":12,"column_end":32},"name":"from_os_str_truncate","qualname":"<UCString<u16>>::from_os_str_truncate","value":"pub fn from_os_str_truncate<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16CString`] copied from anything that can be converted to an\n [`OsStr`][std::ffi::OsStr], truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Encodes a [`U16CString`] copied from anything that can be converted to an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123869,"byte_end":123946,"line_start":689,"line_end":689,"column_start":5,"column_end":82}},{"value":"/ [`OsStr`][std::ffi::OsStr], truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":123951,"byte_end":124022,"line_start":690,"line_end":690,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124027,"byte_end":124030,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124035,"byte_end":124105,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124110,"byte_end":124200,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124205,"byte_end":124208,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124213,"byte_end":124298,"line_start":695,"line_end":695,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124303,"byte_end":124394,"line_start":696,"line_end":696,"column_start":5,"column_end":96}},{"value":"/ windows) no changes to the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124399,"byte_end":124450,"line_start":697,"line_end":697,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124455,"byte_end":124458,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124463,"byte_end":124477,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124482,"byte_end":124485,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124490,"byte_end":124501,"line_start":701,"line_end":701,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124506,"byte_end":124537,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124542,"byte_end":124570,"line_start":703,"line_end":703,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124575,"byte_end":124618,"line_start":704,"line_end":704,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str_truncate(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124623,"byte_end":124675,"line_start":705,"line_end":705,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124680,"byte_end":124726,"line_start":706,"line_end":706,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124731,"byte_end":124738,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124743,"byte_end":124752,"line_start":708,"line_end":708,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":124757,"byte_end":124780,"line_start":709,"line_end":709,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125114,"byte_end":125131,"line_start":719,"line_end":719,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u16>>::from_str_with_nul","value":"pub fn from_str_with_nul<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125009,"byte_end":125029,"line_start":716,"line_end":716,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_str_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125053,"byte_end":125102,"line_start":718,"line_end":718,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125380,"byte_end":125400,"line_start":727,"line_end":727,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u16>>::from_os_str_with_nul","value":"pub fn from_os_str_with_nul<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125244,"byte_end":125267,"line_start":723,"line_end":723,"column_start":5,"column_end":28}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125272,"byte_end":125292,"line_start":724,"line_end":724,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_os_str_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125316,"byte_end":125368,"line_start":726,"line_end":726,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125631,"byte_end":125658,"line_start":735,"line_end":735,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_str_with_nul_unchecked","value":"pub unsafe fn from_str_with_nul_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_str_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125562,"byte_end":125612,"line_start":734,"line_end":734,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125855,"byte_end":125885,"line_start":742,"line_end":742,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_os_str_with_nul_unchecked","value":"pub unsafe fn from_os_str_with_nul_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125736,"byte_end":125759,"line_start":739,"line_end":739,"column_start":5,"column_end":28}},{"value":"deprecated = \"use `from_os_str_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125783,"byte_end":125836,"line_start":741,"line_end":741,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127461,"byte_end":127471,"line_start":783,"line_end":783,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UCString<u32>>::from_chars","value":"pub fn from_chars<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Result<Self, ContainsNul<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32CString`] from a container of character data, checking for invalid nul\n values.","sig":null,"attributes":[{"value":"/ Constructs a [`U32CString`] from a container of character data, checking for invalid nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126001,"byte_end":126093,"line_start":748,"line_end":748,"column_start":5,"column_end":97}},{"value":"/ values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126098,"byte_end":126109,"line_start":749,"line_end":749,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126114,"byte_end":126117,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126122,"byte_end":126215,"line_start":751,"line_end":751,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values anywhere except the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126220,"byte_end":126308,"line_start":752,"line_end":752,"column_start":5,"column_end":93}},{"value":"/ character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126313,"byte_end":126327,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126332,"byte_end":126422,"line_start":754,"line_end":754,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126427,"byte_end":126430,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126435,"byte_end":126447,"line_start":756,"line_end":756,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126452,"byte_end":126455,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value anywhere except the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126460,"byte_end":126551,"line_start":758,"line_end":758,"column_start":5,"column_end":96}},{"value":"/ last character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126556,"byte_end":126575,"line_start":759,"line_end":759,"column_start":5,"column_end":24}},{"value":"/ The returned error will contain the [`Vec<u32>`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126580,"byte_end":126674,"line_start":760,"line_end":760,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126679,"byte_end":126682,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126687,"byte_end":126701,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126706,"byte_end":126709,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126714,"byte_end":126725,"line_start":764,"line_end":764,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126730,"byte_end":126761,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126766,"byte_end":126814,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126819,"byte_end":126886,"line_start":767,"line_end":767,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126891,"byte_end":126934,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars(v).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126939,"byte_end":126990,"line_start":769,"line_end":769,"column_start":5,"column_end":56}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":126995,"byte_end":127038,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127043,"byte_end":127050,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127055,"byte_end":127058,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127063,"byte_end":127137,"line_start":773,"line_end":773,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127142,"byte_end":127145,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127150,"byte_end":127161,"line_start":775,"line_end":775,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127166,"byte_end":127197,"line_start":776,"line_end":776,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"T\\u{0}est\".chars().collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127202,"byte_end":127255,"line_start":777,"line_end":777,"column_start":5,"column_end":58}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127260,"byte_end":127303,"line_start":778,"line_end":778,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127308,"byte_end":127348,"line_start":779,"line_end":779,"column_start":5,"column_end":45}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127353,"byte_end":127379,"line_start":780,"line_end":780,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127384,"byte_end":127437,"line_start":781,"line_end":781,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127442,"byte_end":127449,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128654,"byte_end":128673,"line_start":812,"line_end":812,"column_start":12,"column_end":31},"name":"from_chars_truncate","qualname":"<UCString<u32>>::from_chars_truncate","value":"pub fn from_chars_truncate<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32CString`] from a container of character data, truncating at the first nul\n value.","sig":null,"attributes":[{"value":"/ Constructs a [`U32CString`] from a container of character data, truncating at the first nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127858,"byte_end":127953,"line_start":795,"line_end":795,"column_start":5,"column_end":100}},{"value":"/ value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127958,"byte_end":127968,"line_start":796,"line_end":796,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127973,"byte_end":127976,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":127981,"byte_end":128074,"line_start":798,"line_end":798,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128079,"byte_end":128161,"line_start":799,"line_end":799,"column_start":5,"column_end":87}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128166,"byte_end":128256,"line_start":800,"line_end":800,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128261,"byte_end":128264,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128269,"byte_end":128283,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128288,"byte_end":128291,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128296,"byte_end":128307,"line_start":804,"line_end":804,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128312,"byte_end":128343,"line_start":805,"line_end":805,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\\u{0}\".chars().collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128348,"byte_end":128401,"line_start":806,"line_end":806,"column_start":5,"column_end":58}},{"value":"/ # let cloned: Vec<u32> = v[..4].iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128406,"byte_end":128478,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128483,"byte_end":128526,"line_start":808,"line_end":808,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars_truncate(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128531,"byte_end":128582,"line_start":809,"line_end":809,"column_start":5,"column_end":56}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128587,"byte_end":128630,"line_start":810,"line_end":810,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":128635,"byte_end":128642,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129577,"byte_end":129597,"line_start":834,"line_end":834,"column_start":19,"column_end":39},"name":"from_chars_unchecked","qualname":"<UCString<u32>>::from_chars_unchecked","value":"pub unsafe fn from_chars_unchecked<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32CString`] from character data without checking for nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`U32CString`] from character data without checking for nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129043,"byte_end":129127,"line_start":824,"line_end":824,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129132,"byte_end":129135,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129140,"byte_end":129234,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129239,"byte_end":129247,"line_start":827,"line_end":827,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129252,"byte_end":129255,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129260,"byte_end":129272,"line_start":829,"line_end":829,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129277,"byte_end":129280,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_chars`][Self::from_chars] except that no runtime","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129285,"byte_end":129373,"line_start":831,"line_end":831,"column_start":5,"column_end":93}},{"value":"/ assertion is made that `v` contains no interior nul values. Providing a vector with nul","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129378,"byte_end":129469,"line_start":832,"line_end":832,"column_start":5,"column_end":96}},{"value":"/ values anywhere but the last character will result in an invalid [`U32CString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129474,"byte_end":129558,"line_start":833,"line_end":833,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131242,"byte_end":131250,"line_start":880,"line_end":880,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u32>>::from_str","value":"pub fn from_str<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, ContainsNul<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32CString`] copied from a [`str`], checking for invalid interior nul values.","sig":null,"attributes":[{"value":"/ Encodes a [`U32CString`] copied from a [`str`], checking for invalid interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":129961,"byte_end":130054,"line_start":846,"line_end":846,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130059,"byte_end":130062,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for nul values, which are invalid anywhere except the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130067,"byte_end":130156,"line_start":848,"line_end":848,"column_start":5,"column_end":94}},{"value":"/ character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130161,"byte_end":130175,"line_start":849,"line_end":849,"column_start":5,"column_end":19}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130180,"byte_end":130270,"line_start":850,"line_end":850,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130275,"byte_end":130278,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130283,"byte_end":130295,"line_start":852,"line_end":852,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130300,"byte_end":130303,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value anywhere except the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130308,"byte_end":130399,"line_start":854,"line_end":854,"column_start":5,"column_end":96}},{"value":"/ last character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130404,"byte_end":130423,"line_start":855,"line_end":855,"column_start":5,"column_end":24}},{"value":"/ The returned error will contain a [`Vec<u32>`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130428,"byte_end":130520,"line_start":856,"line_end":856,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130525,"byte_end":130528,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130533,"byte_end":130547,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130552,"byte_end":130555,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130560,"byte_end":130571,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130576,"byte_end":130607,"line_start":861,"line_end":861,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130612,"byte_end":130635,"line_start":862,"line_end":862,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130640,"byte_end":130683,"line_start":863,"line_end":863,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130688,"byte_end":130737,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130742,"byte_end":130787,"line_start":865,"line_end":865,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130792,"byte_end":130799,"line_start":866,"line_end":866,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130804,"byte_end":130807,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130812,"byte_end":130886,"line_start":868,"line_end":868,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130891,"byte_end":130894,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130899,"byte_end":130910,"line_start":870,"line_end":870,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130915,"byte_end":130946,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130951,"byte_end":130979,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":130984,"byte_end":131027,"line_start":873,"line_end":873,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131032,"byte_end":131070,"line_start":874,"line_end":874,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131075,"byte_end":131101,"line_start":875,"line_end":875,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131106,"byte_end":131159,"line_start":876,"line_end":876,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131164,"byte_end":131171,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131176,"byte_end":131216,"line_start":878,"line_end":878,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131221,"byte_end":131230,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132220,"byte_end":132238,"line_start":905,"line_end":905,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u32>>::from_str_unchecked","value":"pub unsafe fn from_str_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32CString`] copied from a [`str`], without checking for nul values.","sig":null,"attributes":[{"value":"/ Encodes a [`U32CString`] copied from a [`str`], without checking for nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131403,"byte_end":131487,"line_start":885,"line_end":885,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131492,"byte_end":131495,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131500,"byte_end":131590,"line_start":887,"line_end":887,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131595,"byte_end":131598,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131603,"byte_end":131615,"line_start":889,"line_end":889,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131620,"byte_end":131623,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_str`][Self::from_str] except that no runtime assertion","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131628,"byte_end":131722,"line_start":891,"line_end":891,"column_start":5,"column_end":99}},{"value":"/ is made that `s` contains invalid nul values. Providing a string with nul values anywhere","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131727,"byte_end":131820,"line_start":892,"line_end":892,"column_start":5,"column_end":98}},{"value":"/ except the last character will result in an invalid [`U32CString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131825,"byte_end":131896,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131901,"byte_end":131904,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131909,"byte_end":131923,"line_start":895,"line_end":895,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131928,"byte_end":131931,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131936,"byte_end":131947,"line_start":897,"line_end":897,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131952,"byte_end":131983,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":131988,"byte_end":132011,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132016,"byte_end":132059,"line_start":900,"line_end":900,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_unchecked(s) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132064,"byte_end":132125,"line_start":901,"line_end":901,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132130,"byte_end":132175,"line_start":902,"line_end":902,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132180,"byte_end":132187,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132192,"byte_end":132201,"line_start":904,"line_end":904,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132955,"byte_end":132972,"line_start":925,"line_end":925,"column_start":12,"column_end":29},"name":"from_str_truncate","qualname":"<UCString<u32>>::from_str_truncate","value":"pub fn from_str_truncate<impl AsRef<str>: AsRef<str>>(impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32CString`] copied from a [`str`], truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Encodes a [`U32CString`] copied from a [`str`], truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132375,"byte_end":132466,"line_start":910,"line_end":910,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132471,"byte_end":132474,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132479,"byte_end":132549,"line_start":912,"line_end":912,"column_start":5,"column_end":75}},{"value":"/ The resulting string will always be nul-terminated even if the original string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132554,"byte_end":132644,"line_start":913,"line_end":913,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132649,"byte_end":132652,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132657,"byte_end":132671,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132676,"byte_end":132679,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132684,"byte_end":132695,"line_start":917,"line_end":917,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132700,"byte_end":132731,"line_start":918,"line_end":918,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132736,"byte_end":132764,"line_start":919,"line_end":919,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132769,"byte_end":132812,"line_start":920,"line_end":920,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str_truncate(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132817,"byte_end":132866,"line_start":921,"line_end":921,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132871,"byte_end":132917,"line_start":922,"line_end":922,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132922,"byte_end":132929,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":132934,"byte_end":132943,"line_start":924,"line_end":924,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134298,"byte_end":134315,"line_start":955,"line_end":955,"column_start":19,"column_end":36},"name":"from_char_ptr_str","qualname":"<UCString<u32>>::from_char_ptr_str","value":"pub unsafe fn from_char_ptr_str(*const char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`UCString`] copied from a nul-terminated [`char`] string pointer.","sig":null,"attributes":[{"value":"/ Constructs a new [`UCString`] copied from a nul-terminated [`char`] string pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133108,"byte_end":133195,"line_start":930,"line_end":930,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133200,"byte_end":133203,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133208,"byte_end":133301,"line_start":932,"line_end":932,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133306,"byte_end":133400,"line_start":933,"line_end":933,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133405,"byte_end":133408,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ If you wish to avoid copying the string pointer, use [`UCStr::from_char_ptr_str`] instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133413,"byte_end":133507,"line_start":935,"line_end":935,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133512,"byte_end":133515,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133520,"byte_end":133532,"line_start":937,"line_end":937,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133537,"byte_end":133540,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133545,"byte_end":133638,"line_start":939,"line_end":939,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133643,"byte_end":133718,"line_start":940,"line_end":940,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133723,"byte_end":133726,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133731,"byte_end":133821,"line_start":942,"line_end":942,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133826,"byte_end":133829,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133834,"byte_end":133846,"line_start":944,"line_end":944,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133851,"byte_end":133854,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133859,"byte_end":133899,"line_start":946,"line_end":946,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133904,"byte_end":133907,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133912,"byte_end":133924,"line_start":948,"line_end":948,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133929,"byte_end":133932,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":133937,"byte_end":134027,"line_start":950,"line_end":950,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134032,"byte_end":134122,"line_start":951,"line_end":951,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134127,"byte_end":134222,"line_start":952,"line_end":952,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134227,"byte_end":134265,"line_start":953,"line_end":953,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134270,"byte_end":134279,"line_start":954,"line_end":954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135572,"byte_end":135585,"line_start":986,"line_end":986,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UCString<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr(*const char, usize)\n-> Result<Self, ContainsNul<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] copied from a [`char`] pointer and a length, checking for invalid\n interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] copied from a [`char`] pointer and a length, checking for invalid","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134397,"byte_end":134492,"line_start":959,"line_end":959,"column_start":5,"column_end":100}},{"value":"/ interior nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134497,"byte_end":134521,"line_start":960,"line_end":960,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134526,"byte_end":134529,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134534,"byte_end":134621,"line_start":962,"line_end":962,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. If `len` is `0`, `p` is allowed to be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134626,"byte_end":134719,"line_start":963,"line_end":963,"column_start":5,"column_end":98}},{"value":"/ null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134724,"byte_end":134741,"line_start":964,"line_end":964,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134746,"byte_end":134749,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the pointer data is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134754,"byte_end":134841,"line_start":966,"line_end":966,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134846,"byte_end":134849,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134854,"byte_end":134866,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134871,"byte_end":134874,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ This will scan the pointer string for an interior nul value and error if one is found. To","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134879,"byte_end":134972,"line_start":970,"line_end":970,"column_start":5,"column_end":98}},{"value":"/ avoid scanning for interior nuls, [`from_ptr_unchecked`][Self::from_ptr_unchecked] may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":134977,"byte_end":135070,"line_start":971,"line_end":971,"column_start":5,"column_end":98}},{"value":"/ used instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135075,"byte_end":135092,"line_start":972,"line_end":972,"column_start":5,"column_end":22}},{"value":"/ The returned error will contain a [`Vec`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135097,"byte_end":135184,"line_start":973,"line_end":973,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135189,"byte_end":135192,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135197,"byte_end":135209,"line_start":975,"line_end":975,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135214,"byte_end":135217,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135222,"byte_end":135316,"line_start":977,"line_end":977,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135321,"byte_end":135334,"line_start":978,"line_end":978,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135339,"byte_end":135342,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135347,"byte_end":135437,"line_start":980,"line_end":980,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135442,"byte_end":135445,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135450,"byte_end":135462,"line_start":982,"line_end":982,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135467,"byte_end":135470,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135475,"byte_end":135539,"line_start":984,"line_end":984,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135544,"byte_end":135553,"line_start":985,"line_end":985,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136714,"byte_end":136736,"line_start":1010,"line_end":1010,"column_start":19,"column_end":41},"name":"from_char_ptr_truncate","qualname":"<UCString<u32>>::from_char_ptr_truncate","value":"pub unsafe fn from_char_ptr_truncate(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] copied from a [`char`] pointer and a length, truncating at the\n first nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] copied from a [`char`] pointer and a length, truncating at the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135706,"byte_end":135798,"line_start":990,"line_end":990,"column_start":5,"column_end":97}},{"value":"/ first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135803,"byte_end":135828,"line_start":991,"line_end":991,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135833,"byte_end":135836,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. This will scan","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135841,"byte_end":135934,"line_start":993,"line_end":993,"column_start":5,"column_end":98}},{"value":"/ for nul values beginning with `p` until offset `len`. The first nul value will be used as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":135939,"byte_end":136032,"line_start":994,"line_end":994,"column_start":5,"column_end":98}},{"value":"/ the nul terminator for the string, ignoring any remaining values left before `len`. If no","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136037,"byte_end":136130,"line_start":995,"line_end":995,"column_start":5,"column_end":98}},{"value":"/ nul value is found, the whole string of length `len` is used, and a new nul-terminator","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136135,"byte_end":136225,"line_start":996,"line_end":996,"column_start":5,"column_end":95}},{"value":"/ will be added to the resulting string. If `len` is `0`, `p` is allowed to be a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136230,"byte_end":136326,"line_start":997,"line_end":997,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136331,"byte_end":136334,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136339,"byte_end":136351,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136356,"byte_end":136359,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136364,"byte_end":136458,"line_start":1001,"line_end":1001,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136463,"byte_end":136476,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136481,"byte_end":136484,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136489,"byte_end":136579,"line_start":1004,"line_end":1004,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136584,"byte_end":136587,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136592,"byte_end":136604,"line_start":1006,"line_end":1006,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136609,"byte_end":136612,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136617,"byte_end":136681,"line_start":1008,"line_end":1008,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136686,"byte_end":136695,"line_start":1009,"line_end":1009,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137803,"byte_end":137826,"line_start":1036,"line_end":1036,"column_start":19,"column_end":42},"name":"from_char_ptr_unchecked","qualname":"<UCString<u32>>::from_char_ptr_unchecked","value":"pub unsafe fn from_char_ptr_unchecked(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UCString`] copied from a [`char`] pointer and a length without checking for\n any nul values.","sig":null,"attributes":[{"value":"/ Constructs a [`UCString`] copied from a [`char`] pointer and a length without checking for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136840,"byte_end":136934,"line_start":1014,"line_end":1014,"column_start":5,"column_end":99}},{"value":"/ any nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136939,"byte_end":136958,"line_start":1015,"line_end":1015,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136963,"byte_end":136966,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":136971,"byte_end":137058,"line_start":1017,"line_end":1017,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. If `len` is `0`, `p` is allowed to be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137063,"byte_end":137156,"line_start":1018,"line_end":1018,"column_start":5,"column_end":98}},{"value":"/ null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137161,"byte_end":137178,"line_start":1019,"line_end":1019,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137183,"byte_end":137186,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the pointer data is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137191,"byte_end":137278,"line_start":1021,"line_end":1021,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137283,"byte_end":137286,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137291,"byte_end":137303,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137308,"byte_end":137311,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137316,"byte_end":137410,"line_start":1025,"line_end":1025,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137415,"byte_end":137428,"line_start":1026,"line_end":1026,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137433,"byte_end":137436,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137441,"byte_end":137531,"line_start":1028,"line_end":1028,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137536,"byte_end":137539,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137544,"byte_end":137634,"line_start":1030,"line_end":1030,"column_start":5,"column_end":95}},{"value":"/ will result in an invalid [`UCString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137639,"byte_end":137682,"line_start":1031,"line_end":1031,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137687,"byte_end":137690,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137695,"byte_end":137707,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137712,"byte_end":137715,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137720,"byte_end":137784,"line_start":1035,"line_end":1035,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139528,"byte_end":139539,"line_start":1080,"line_end":1080,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u32>>::from_os_str","value":"pub fn from_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, ContainsNul<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32CString`] copied from anything that can be converted to an\n [`OsStr`][std::ffi::OsStr], checking for invalid nul values.","sig":null,"attributes":[{"value":"/ Encodes a [`U32CString`] copied from anything that can be converted to an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":137931,"byte_end":138008,"line_start":1040,"line_end":1040,"column_start":5,"column_end":82}},{"value":"/ [`OsStr`][std::ffi::OsStr], checking for invalid nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138013,"byte_end":138077,"line_start":1041,"line_end":1041,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138082,"byte_end":138085,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for nul values, which are invlaid anywhere except the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138090,"byte_end":138179,"line_start":1043,"line_end":1043,"column_start":5,"column_end":94}},{"value":"/ character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138184,"byte_end":138198,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/ The resulting string will always be nul-terminated even if the string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138203,"byte_end":138284,"line_start":1045,"line_end":1045,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138289,"byte_end":138292,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138297,"byte_end":138382,"line_start":1047,"line_end":1047,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms no changes to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138387,"byte_end":138483,"line_start":1048,"line_end":1048,"column_start":5,"column_end":101}},{"value":"/ the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138488,"byte_end":138516,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138521,"byte_end":138524,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138529,"byte_end":138541,"line_start":1051,"line_end":1051,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138546,"byte_end":138549,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value anywhere except the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138554,"byte_end":138645,"line_start":1053,"line_end":1053,"column_start":5,"column_end":96}},{"value":"/ last character.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138650,"byte_end":138669,"line_start":1054,"line_end":1054,"column_start":5,"column_end":24}},{"value":"/ The returned error will contain a [`Vec<u16>`] as well as the position of the nul value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138674,"byte_end":138766,"line_start":1055,"line_end":1055,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138771,"byte_end":138774,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138779,"byte_end":138793,"line_start":1057,"line_end":1057,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138798,"byte_end":138801,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138806,"byte_end":138817,"line_start":1059,"line_end":1059,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138822,"byte_end":138853,"line_start":1060,"line_end":1060,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138858,"byte_end":138881,"line_start":1061,"line_end":1061,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138886,"byte_end":138929,"line_start":1062,"line_end":1062,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138934,"byte_end":138986,"line_start":1063,"line_end":1063,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":138991,"byte_end":139036,"line_start":1064,"line_end":1064,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139041,"byte_end":139048,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139053,"byte_end":139056,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139061,"byte_end":139135,"line_start":1067,"line_end":1067,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139140,"byte_end":139143,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139148,"byte_end":139159,"line_start":1069,"line_end":1069,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139164,"byte_end":139195,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139200,"byte_end":139228,"line_start":1071,"line_end":1071,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139233,"byte_end":139276,"line_start":1072,"line_end":1072,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139281,"byte_end":139322,"line_start":1073,"line_end":1073,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139327,"byte_end":139353,"line_start":1074,"line_end":1074,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139358,"byte_end":139411,"line_start":1075,"line_end":1075,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139416,"byte_end":139423,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139428,"byte_end":139451,"line_start":1077,"line_end":1077,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139507,"byte_end":139516,"line_start":1079,"line_end":1079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140916,"byte_end":140937,"line_start":1112,"line_end":1112,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u32>>::from_os_str_unchecked","value":"pub unsafe fn from_os_str_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32CString`] copied from anything that can be converted to an\n [`OsStr`][std::ffi::OsStr], without checking for nul values.","sig":null,"attributes":[{"value":"/ Encodes a [`U32CString`] copied from anything that can be converted to an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139726,"byte_end":139803,"line_start":1085,"line_end":1085,"column_start":5,"column_end":82}},{"value":"/ [`OsStr`][std::ffi::OsStr], without checking for nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139808,"byte_end":139872,"line_start":1086,"line_end":1086,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139877,"byte_end":139880,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The resulting string will always be nul-terminated even if the string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139885,"byte_end":139966,"line_start":1088,"line_end":1088,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139971,"byte_end":139974,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":139979,"byte_end":140064,"line_start":1090,"line_end":1090,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms no changes to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140069,"byte_end":140165,"line_start":1091,"line_end":1091,"column_start":5,"column_end":101}},{"value":"/ the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140170,"byte_end":140198,"line_start":1092,"line_end":1092,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140203,"byte_end":140206,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140211,"byte_end":140223,"line_start":1094,"line_end":1094,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140228,"byte_end":140231,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to [`from_os_str`][Self::from_os_str] except that no runtime","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140236,"byte_end":140326,"line_start":1096,"line_end":1096,"column_start":5,"column_end":95}},{"value":"/ assertion is made that `s` contains invalid nul values. Providing a string with nul values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140331,"byte_end":140425,"line_start":1097,"line_end":1097,"column_start":5,"column_end":99}},{"value":"/ anywhere except the last character will result in an invalid [`U32CString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140430,"byte_end":140510,"line_start":1098,"line_end":1098,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140515,"byte_end":140518,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140523,"byte_end":140537,"line_start":1100,"line_end":1100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140542,"byte_end":140545,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140550,"byte_end":140561,"line_start":1102,"line_end":1102,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140566,"byte_end":140597,"line_start":1103,"line_end":1103,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140602,"byte_end":140625,"line_start":1104,"line_end":1104,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140630,"byte_end":140673,"line_start":1105,"line_end":1105,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_unchecked(s) };","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140678,"byte_end":140742,"line_start":1106,"line_end":1106,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140747,"byte_end":140792,"line_start":1107,"line_end":1107,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140797,"byte_end":140804,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140809,"byte_end":140832,"line_start":1109,"line_end":1109,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":140888,"byte_end":140897,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142055,"byte_end":142075,"line_start":1139,"line_end":1139,"column_start":12,"column_end":32},"name":"from_os_str_truncate","qualname":"<UCString<u32>>::from_os_str_truncate","value":"pub fn from_os_str_truncate<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32CString`] copied from anything that can be converted to an\n [`OsStr`][std::ffi::OsStr], truncating at the first nul terminator.","sig":null,"attributes":[{"value":"/ Encodes a [`U32CString`] copied from anything that can be converted to an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141108,"byte_end":141185,"line_start":1117,"line_end":1117,"column_start":5,"column_end":82}},{"value":"/ [`OsStr`][std::ffi::OsStr], truncating at the first nul terminator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141190,"byte_end":141261,"line_start":1118,"line_end":1118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141266,"byte_end":141269,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141274,"byte_end":141344,"line_start":1120,"line_end":1120,"column_start":5,"column_end":75}},{"value":"/ The resulting string will always be nul-terminated even if the string is not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141349,"byte_end":141430,"line_start":1121,"line_end":1121,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141435,"byte_end":141438,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141443,"byte_end":141528,"line_start":1123,"line_end":1123,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms no changes to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141533,"byte_end":141629,"line_start":1124,"line_end":1124,"column_start":5,"column_end":101}},{"value":"/ the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141634,"byte_end":141662,"line_start":1125,"line_end":1125,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141667,"byte_end":141670,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141675,"byte_end":141689,"line_start":1127,"line_end":1127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141694,"byte_end":141697,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141702,"byte_end":141713,"line_start":1129,"line_end":1129,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141718,"byte_end":141749,"line_start":1130,"line_end":1130,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141754,"byte_end":141782,"line_start":1131,"line_end":1131,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141787,"byte_end":141830,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str_truncate(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141835,"byte_end":141887,"line_start":1133,"line_end":1133,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141892,"byte_end":141938,"line_start":1134,"line_end":1134,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141943,"byte_end":141950,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":141955,"byte_end":141978,"line_start":1136,"line_end":1136,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142034,"byte_end":142043,"line_start":1138,"line_end":1138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142350,"byte_end":142367,"line_start":1147,"line_end":1147,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u32>>::from_str_with_nul","value":"pub fn from_str_with_nul<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142245,"byte_end":142265,"line_start":1144,"line_end":1144,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_str_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142289,"byte_end":142338,"line_start":1146,"line_end":1146,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142616,"byte_end":142636,"line_start":1155,"line_end":1155,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u32>>::from_os_str_with_nul","value":"pub fn from_os_str_with_nul<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142480,"byte_end":142503,"line_start":1151,"line_end":1151,"column_start":5,"column_end":28}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142508,"byte_end":142528,"line_start":1152,"line_end":1152,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_os_str_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142552,"byte_end":142604,"line_start":1154,"line_end":1154,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142886,"byte_end":142905,"line_start":1164,"line_end":1164,"column_start":12,"column_end":31},"name":"from_chars_with_nul","qualname":"<UCString<u32>>::from_chars_with_nul","value":"pub fn from_chars_with_nul<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142779,"byte_end":142799,"line_start":1161,"line_end":1161,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_chars_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":142823,"byte_end":142874,"line_start":1163,"line_end":1163,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143142,"byte_end":143164,"line_start":1171,"line_end":1171,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCString<u32>>::from_char_ptr_with_nul","value":"pub unsafe fn from_char_ptr_with_nul(*const char, usize)\n-> Result<Self, crate::MissingNulError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143025,"byte_end":143045,"line_start":1168,"line_end":1168,"column_start":5,"column_end":25}},{"value":"deprecated = \"use `from_char_ptr_truncate` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143069,"byte_end":143123,"line_start":1170,"line_end":1170,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143406,"byte_end":143433,"line_start":1180,"line_end":1180,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_str_with_nul_unchecked","value":"pub unsafe fn from_str_with_nul_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_str_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143337,"byte_end":143387,"line_start":1179,"line_end":1179,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143630,"byte_end":143660,"line_start":1187,"line_end":1187,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_os_str_with_nul_unchecked","value":"pub unsafe fn from_os_str_with_nul_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143511,"byte_end":143534,"line_start":1184,"line_end":1184,"column_start":5,"column_end":28}},{"value":"deprecated = \"use `from_os_str_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143558,"byte_end":143611,"line_start":1186,"line_end":1186,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143843,"byte_end":143872,"line_start":1193,"line_end":1193,"column_start":19,"column_end":48},"name":"from_chars_with_nul_unchecked","qualname":"<UCString<u32>>::from_chars_with_nul_unchecked","value":"pub unsafe fn from_chars_with_nul_unchecked<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_chars_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143772,"byte_end":143824,"line_start":1192,"line_end":1192,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144050,"byte_end":144082,"line_start":1199,"line_end":1199,"column_start":19,"column_end":51},"name":"from_char_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_char_ptr_with_nul_unchecked","value":"pub unsafe fn from_char_ptr_with_nul_unchecked(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `from_char_ptr_unchecked` instead\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":143976,"byte_end":144031,"line_start":1198,"line_end":1198,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151920,"byte_end":151930,"line_start":1513,"line_end":1513,"column_start":10,"column_end":20},"name":"U16CString","qualname":"::ucstring::U16CString","value":"UCString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150826,"byte_end":150915,"line_start":1489,"line_end":1489,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150916,"byte_end":150919,"line_start":1490,"line_end":1490,"column_start":1,"column_end":4}},{"value":"/ `U16CString` is aware of nul values. Unless unchecked conversions are used, all `U16CString`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150920,"byte_end":151016,"line_start":1491,"line_end":1491,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151017,"byte_end":151115,"line_start":1492,"line_end":1492,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151116,"byte_end":151214,"line_start":1493,"line_end":1493,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151215,"byte_end":151306,"line_start":1494,"line_end":1494,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151307,"byte_end":151310,"line_start":1495,"line_end":1495,"column_start":1,"column_end":4}},{"value":"/ `U16CString` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151311,"byte_end":151404,"line_start":1496,"line_end":1496,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151405,"byte_end":151475,"line_start":1497,"line_end":1497,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151476,"byte_end":151479,"line_start":1498,"line_end":1498,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151480,"byte_end":151494,"line_start":1499,"line_end":1499,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151495,"byte_end":151498,"line_start":1500,"line_end":1500,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151499,"byte_end":151595,"line_start":1501,"line_end":1501,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151596,"byte_end":151622,"line_start":1502,"line_end":1502,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151623,"byte_end":151626,"line_start":1503,"line_end":1503,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151627,"byte_end":151638,"line_start":1504,"line_end":1504,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151639,"byte_end":151670,"line_start":1505,"line_end":1505,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151671,"byte_end":151690,"line_start":1506,"line_end":1506,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151691,"byte_end":151739,"line_start":1507,"line_end":1507,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151740,"byte_end":151788,"line_start":1508,"line_end":1508,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151789,"byte_end":151825,"line_start":1509,"line_end":1509,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151826,"byte_end":151868,"line_start":1510,"line_end":1510,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151869,"byte_end":151902,"line_start":1511,"line_end":1511,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151903,"byte_end":151910,"line_start":1512,"line_end":1512,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":153041,"byte_end":153051,"line_start":1539,"line_end":1539,"column_start":10,"column_end":20},"name":"U32CString","qualname":"::ucstring::U32CString","value":"UCString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":151949,"byte_end":152036,"line_start":1515,"line_end":1515,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152037,"byte_end":152040,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ `U32CString` is aware of nul values. Unless unchecked conversions are used, all `U32CString`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152041,"byte_end":152137,"line_start":1517,"line_end":1517,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152138,"byte_end":152236,"line_start":1518,"line_end":1518,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152237,"byte_end":152335,"line_start":1519,"line_end":1519,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152336,"byte_end":152427,"line_start":1520,"line_end":1520,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152428,"byte_end":152431,"line_start":1521,"line_end":1521,"column_start":1,"column_end":4}},{"value":"/ `U32CString` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152432,"byte_end":152525,"line_start":1522,"line_end":1522,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152526,"byte_end":152596,"line_start":1523,"line_end":1523,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152597,"byte_end":152600,"line_start":1524,"line_end":1524,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152601,"byte_end":152615,"line_start":1525,"line_end":1525,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152616,"byte_end":152619,"line_start":1526,"line_end":1526,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32CString` and shows how to convert a `U32CString` to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152620,"byte_end":152716,"line_start":1527,"line_end":1527,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152717,"byte_end":152743,"line_start":1528,"line_end":1528,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152744,"byte_end":152747,"line_start":1529,"line_end":1529,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152748,"byte_end":152759,"line_start":1530,"line_end":1530,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152760,"byte_end":152791,"line_start":1531,"line_end":1531,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152792,"byte_end":152811,"line_start":1532,"line_end":1532,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152812,"byte_end":152860,"line_start":1533,"line_end":1533,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152861,"byte_end":152909,"line_start":1534,"line_end":1534,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152910,"byte_end":152946,"line_start":1535,"line_end":1535,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152947,"byte_end":152989,"line_start":1536,"line_end":1536,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":152990,"byte_end":153023,"line_start":1537,"line_end":1537,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":153024,"byte_end":153031,"line_start":1538,"line_end":1538,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":153203,"byte_end":153214,"line_start":1543,"line_end":1543,"column_start":10,"column_end":21},"name":"WideCString","qualname":"::ucstring::WideCString","value":"UCString<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16String` or `U32String` depending on platform. Intended to match typical C\n `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16String` or `U32String` depending on platform. Intended to match typical C","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":153070,"byte_end":153161,"line_start":1541,"line_end":1541,"column_start":1,"column_end":92}},{"value":"/ `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":153162,"byte_end":153193,"line_start":1542,"line_end":1542,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ustr","qualname":"::ustr","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":783},{"krate":0,"index":814},{"krate":0,"index":822},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":867},{"krate":0,"index":871},{"krate":0,"index":875},{"krate":0,"index":880},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Wide string slices.","sig":null,"attributes":[{"value":"/ Wide string slices.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153238,"byte_end":153261,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153262,"byte_end":153265,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the [`UStr`] string slices and related types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153266,"byte_end":153336,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154643,"byte_end":154647,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"UStr","qualname":"::ustr::UStr","value":"UStr {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" String slice reference for [`UString`][crate::UString].","sig":null,"attributes":[{"value":"/ String slice reference for [`UString`][crate::UString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153682,"byte_end":153741,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153742,"byte_end":153745,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`UStr`] is to [`UString`][crate::UString] as [`str`] is to [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153746,"byte_end":153821,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153822,"byte_end":153825,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UStr`] is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153826,"byte_end":153916,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":153917,"byte_end":154012,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154013,"byte_end":154111,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154112,"byte_end":154211,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154212,"byte_end":154215,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`UCStr`][crate::UCStr] should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154216,"byte_end":154301,"line_start":31,"line_end":31,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154302,"byte_end":154305,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`UStr`] can be converted to many other string types, including [`OsString`][std::ffi::OsString]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154306,"byte_end":154406,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/ and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154407,"byte_end":154467,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154468,"byte_end":154471,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases [`U16Str`], [`U32Str`] or [`WideStr`] to using this type","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154472,"byte_end":154569,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154570,"byte_end":154583,"line_start":37,"line_end":37,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154781,"byte_end":154784,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<UStr<C>>::new","value":"pub fn new<S: AsRef<Self> + ?Sized>(&S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a [`UStr`].\n","sig":null,"attributes":[{"value":"/ Coerces a value into a [`UStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154719,"byte_end":154755,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154760,"byte_end":154769,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156018,"byte_end":156026,"line_start":75,"line_end":75,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UStr<C>>::from_ptr","value":"pub unsafe fn from_ptr<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UStr`] from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a [`UStr`] from a pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154858,"byte_end":154912,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154917,"byte_end":154920,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. No copying or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154925,"byte_end":155017,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/ allocation is performed, the resulting value is a direct reference to the pointer bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155022,"byte_end":155114,"line_start":53,"line_end":53,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155119,"byte_end":155122,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155127,"byte_end":155139,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155144,"byte_end":155147,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155152,"byte_end":155246,"line_start":57,"line_end":57,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155251,"byte_end":155264,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155269,"byte_end":155272,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155277,"byte_end":155367,"line_start":60,"line_end":60,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155372,"byte_end":155462,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155467,"byte_end":155541,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155546,"byte_end":155549,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155554,"byte_end":155566,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155571,"byte_end":155574,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155579,"byte_end":155619,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155624,"byte_end":155627,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155632,"byte_end":155644,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155649,"byte_end":155652,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155657,"byte_end":155747,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155752,"byte_end":155842,"line_start":71,"line_end":71,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155847,"byte_end":155942,"line_start":72,"line_end":72,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155947,"byte_end":155985,"line_start":73,"line_end":73,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":155990,"byte_end":155999,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157217,"byte_end":157229,"line_start":104,"line_end":104,"column_start":19,"column_end":31},"name":"from_ptr_mut","qualname":"<UStr<C>>::from_ptr_mut","value":"pub unsafe fn from_ptr_mut<'a>(*mut C, usize) -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UStr`] from a mutable pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UStr`] from a mutable pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156211,"byte_end":156281,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156286,"byte_end":156289,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes. No copying or","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156294,"byte_end":156386,"line_start":83,"line_end":83,"column_start":5,"column_end":97}},{"value":"/ allocation is performed, the resulting value is a direct reference to the pointer bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156391,"byte_end":156483,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156488,"byte_end":156491,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156496,"byte_end":156508,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156513,"byte_end":156516,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156521,"byte_end":156615,"line_start":88,"line_end":88,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156620,"byte_end":156633,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156638,"byte_end":156641,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156646,"byte_end":156740,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156745,"byte_end":156748,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156753,"byte_end":156765,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156770,"byte_end":156773,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156778,"byte_end":156818,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156823,"byte_end":156826,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156831,"byte_end":156843,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156848,"byte_end":156851,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156856,"byte_end":156946,"line_start":99,"line_end":99,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":156951,"byte_end":157041,"line_start":100,"line_end":100,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157046,"byte_end":157141,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157146,"byte_end":157184,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157189,"byte_end":157198,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157602,"byte_end":157612,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<UStr<C>>::from_slice","value":"pub fn from_slice(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UStr`] from a slice of character data.","sig":null,"attributes":[{"value":"/ Constructs a [`UStr`] from a slice of character data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157420,"byte_end":157477,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157482,"byte_end":157485,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice. It may or may not be valid for its encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157490,"byte_end":157576,"line_start":112,"line_end":112,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157581,"byte_end":157590,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157928,"byte_end":157942,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"from_slice_mut","qualname":"<UStr<C>>::from_slice_mut","value":"pub fn from_slice_mut(&mut [C]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`UStr`] from a mutable slice of character data.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`UStr`] from a mutable slice of character data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157730,"byte_end":157803,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157808,"byte_end":157811,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice. It may or may not be valid for its encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157816,"byte_end":157902,"line_start":121,"line_end":121,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":157907,"byte_end":157916,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158252,"byte_end":158262,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UStr<C>>::to_ustring","value":"pub fn to_ustring(&Self) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the string reference to a new owned [`UString`][crate::UString].\n","sig":null,"attributes":[{"value":"/ Copies the string reference to a new owned [`UString`][crate::UString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158068,"byte_end":158143,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158148,"byte_end":158173,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158231,"byte_end":158240,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158414,"byte_end":158422,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UStr<C>>::as_slice","value":"pub fn as_slice(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the string.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158350,"byte_end":158388,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158393,"byte_end":158402,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158529,"byte_end":158541,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<UStr<C>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable slice of the string.\n","sig":null,"attributes":[{"value":"/ Converts to a mutable slice of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158471,"byte_end":158517,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159299,"byte_end":159305,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UStr<C>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158602,"byte_end":158642,"line_start":147,"line_end":147,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158647,"byte_end":158650,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the string outlives the pointer this function returns, or else","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158655,"byte_end":158749,"line_start":149,"line_end":149,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158754,"byte_end":158793,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158798,"byte_end":158801,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The caller must also ensure that the memory the pointer (non-transitively) points to is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158806,"byte_end":158897,"line_start":152,"line_end":152,"column_start":5,"column_end":96}},{"value":"/ never written to (except inside an `UnsafeCell`) using this pointer or any pointer derived","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":158902,"byte_end":158996,"line_start":153,"line_end":153,"column_start":5,"column_end":99}},{"value":"/ from it. If you need to mutate the contents of the string, use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159001,"byte_end":159067,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/ [`as_mut_ptr`][Self::as_mut_ptr].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159072,"byte_end":159109,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159114,"byte_end":159117,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Modifying the container referenced by this string may cause its buffer to be reallocated,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159122,"byte_end":159215,"line_start":157,"line_end":157,"column_start":5,"column_end":98}},{"value":"/ which would also make any pointers to it invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159220,"byte_end":159273,"line_start":158,"line_end":158,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159278,"byte_end":159287,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159763,"byte_end":159773,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<UStr<C>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut C","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable raw pointer to the string.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable raw pointer to the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159366,"byte_end":159422,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159427,"byte_end":159430,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the string outlives the pointer this function returns, or else","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159435,"byte_end":159529,"line_start":166,"line_end":166,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159534,"byte_end":159573,"line_start":167,"line_end":167,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159578,"byte_end":159581,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Modifying the container referenced by this string may cause its buffer to be reallocated,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159586,"byte_end":159679,"line_start":169,"line_end":169,"column_start":5,"column_end":98}},{"value":"/ which would also make any pointers to it invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159684,"byte_end":159737,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159742,"byte_end":159751,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160571,"byte_end":160583,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"as_ptr_range","qualname":"<UStr<C>>::as_ptr_range","value":"pub fn as_ptr_range(&Self) -> Range<*const C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the two raw pointers spanning the string slice.","sig":null,"attributes":[{"value":"/ Returns the two raw pointers spanning the string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159840,"byte_end":159899,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159904,"byte_end":159907,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The returned range is half-open, which means that the end pointer points one past the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":159912,"byte_end":160006,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ element of the slice. This way, an empty slice is represented by two equal pointers, and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160011,"byte_end":160107,"line_start":179,"line_end":179,"column_start":5,"column_end":101}},{"value":"/ difference between the two pointers represents the size of the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160112,"byte_end":160185,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160190,"byte_end":160193,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ See [`as_ptr`][Self::as_ptr] for warnings on using these pointers. The end pointer requires","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160198,"byte_end":160293,"line_start":182,"line_end":182,"column_start":5,"column_end":100}},{"value":"/ extra caution, as it does not point to a valid element in the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160298,"byte_end":160370,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160375,"byte_end":160378,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is useful for interacting with foreign interfaces which use two pointers to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160383,"byte_end":160476,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ refer to a range of elements in memory, as is common in C++.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160481,"byte_end":160545,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160550,"byte_end":160559,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161407,"byte_end":161423,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"as_mut_ptr_range","qualname":"<UStr<C>>::as_mut_ptr_range","value":"pub fn as_mut_ptr_range(&mut Self) -> Range<*mut C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the two unsafe mutable pointers spanning the string slice.","sig":null,"attributes":[{"value":"/ Returns the two unsafe mutable pointers spanning the string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160657,"byte_end":160727,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160732,"byte_end":160735,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The returned range is half-open, which means that the end pointer points one past the last","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160740,"byte_end":160834,"line_start":194,"line_end":194,"column_start":5,"column_end":99}},{"value":"/ element of the slice. This way, an empty slice is represented by two equal pointers, and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160839,"byte_end":160935,"line_start":195,"line_end":195,"column_start":5,"column_end":101}},{"value":"/ difference between the two pointers represents the size of the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":160940,"byte_end":161013,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161018,"byte_end":161021,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ See [`as_mut_ptr`][Self::as_mut_ptr] for warnings on using these pointers. The end pointer requires","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161026,"byte_end":161129,"line_start":198,"line_end":198,"column_start":5,"column_end":108}},{"value":"/ extra caution, as it does not point to a valid element in the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161134,"byte_end":161206,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161211,"byte_end":161214,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function is useful for interacting with foreign interfaces which use two pointers to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161219,"byte_end":161312,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ refer to a range of elements in memory, as is common in C++.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161317,"byte_end":161381,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161386,"byte_end":161395,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161614,"byte_end":161617,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"len","qualname":"<UStr<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the string as number of elements (**not** number of bytes).\n","sig":null,"attributes":[{"value":"/ Returns the length of the string as number of elements (**not** number of bytes).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161503,"byte_end":161588,"line_start":208,"line_end":208,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161593,"byte_end":161602,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161747,"byte_end":161755,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UStr<C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string contains no data.\n","sig":null,"attributes":[{"value":"/ Returns whether this string contains no data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161672,"byte_end":161721,"line_start":214,"line_end":214,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161726,"byte_end":161735,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162003,"byte_end":162015,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"into_ustring","qualname":"<UStr<C>>::into_ustring","value":"pub fn into_ustring(Box<Self>) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<UStr>`] into a [`UString`][crate::UString] without copying or allocating.\n","sig":null,"attributes":[{"value":"/ Converts a [`Box<UStr>`] into a [`UString`][crate::UString] without copying or allocating.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161814,"byte_end":161908,"line_start":220,"line_end":220,"column_start":5,"column_end":99}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":161913,"byte_end":161938,"line_start":221,"line_end":221,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163778,"byte_end":163785,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"display","qualname":"<UStr<C>>::display","value":"pub fn display(&Self) -> Display<, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`][std::fmt::Display] for printing strings that\n may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`][std::fmt::Display] for printing strings that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162218,"byte_end":162312,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ may contain non-Unicode data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162317,"byte_end":162350,"line_start":231,"line_end":231,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162355,"byte_end":162358,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A [`UStr`] might contain ill-formed UTF encoding. This struct implements the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162363,"byte_end":162443,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ [`Display`][std::fmt::Display] trait in a way that decoding the string is lossy but no heap","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162448,"byte_end":162543,"line_start":234,"line_end":234,"column_start":5,"column_end":100}},{"value":"/ allocations are performed, such as by [`to_string_lossy`][UStr::to_string_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162548,"byte_end":162633,"line_start":235,"line_end":235,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162638,"byte_end":162641,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ By default, invalid Unicode data is replaced with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162646,"byte_end":162699,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). If you wish to simply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162704,"byte_end":162803,"line_start":238,"line_end":238,"column_start":5,"column_end":102}},{"value":"/ skip any invalid Uncode data and forego the replacement, you may use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162808,"byte_end":162884,"line_start":239,"line_end":239,"column_start":5,"column_end":81}},{"value":"/ [alternate formatting][std::fmt#sign0] with `{:#}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162889,"byte_end":162944,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162949,"byte_end":162952,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162957,"byte_end":162971,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162976,"byte_end":162979,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":162984,"byte_end":163000,"line_start":244,"line_end":244,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163005,"byte_end":163008,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163013,"byte_end":163020,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16Str;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163025,"byte_end":163052,"line_start":247,"line_end":247,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163057,"byte_end":163060,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163065,"byte_end":163099,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/ let s = U16Str::from_slice(&[","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163104,"byte_end":163137,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/     0xD834, 0xDD1E, 0x006d, 0x0075, 0x0073, 0xDD1E, 0x0069, 0x0063, 0xD834,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163142,"byte_end":163221,"line_start":251,"line_end":251,"column_start":5,"column_end":84}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163226,"byte_end":163233,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163238,"byte_end":163241,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{}\", s.display()),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163246,"byte_end":163288,"line_start":254,"line_end":254,"column_start":5,"column_end":47}},{"value":"/ \"𝄞mus�ic�\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163293,"byte_end":163314,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163319,"byte_end":163325,"line_start":256,"line_end":256,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163330,"byte_end":163337,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163342,"byte_end":163345,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Using alternate formatting style to skip invalid values entirely:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163350,"byte_end":163419,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163424,"byte_end":163427,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163432,"byte_end":163439,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16Str;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163444,"byte_end":163471,"line_start":262,"line_end":262,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163476,"byte_end":163479,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163484,"byte_end":163518,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ let s = U16Str::from_slice(&[","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163523,"byte_end":163556,"line_start":265,"line_end":265,"column_start":5,"column_end":38}},{"value":"/     0xD834, 0xDD1E, 0x006d, 0x0075, 0x0073, 0xDD1E, 0x0069, 0x0063, 0xD834,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163561,"byte_end":163640,"line_start":266,"line_end":266,"column_start":5,"column_end":84}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163645,"byte_end":163652,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163657,"byte_end":163660,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{:#}\", s.display()),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163665,"byte_end":163709,"line_start":269,"line_end":269,"column_start":5,"column_end":49}},{"value":"/ \"𝄞music\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163714,"byte_end":163729,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163734,"byte_end":163740,"line_start":271,"line_end":271,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163745,"byte_end":163752,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163757,"byte_end":163766,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164072,"byte_end":164075,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"get","qualname":"<UStr<C>>::get","value":"pub fn get<I>(&Self, I) -> Option<&Self> where I: SliceIndex<[C], Output =\n[C]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a subslice of the string.","sig":null,"attributes":[{"value":"/ Returns a subslice of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163854,"byte_end":163891,"line_start":278,"line_end":278,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163896,"byte_end":163899,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This is the non-panicking alternative to indexing the string. Returns [`None`] whenever","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":163904,"byte_end":163995,"line_start":280,"line_end":280,"column_start":5,"column_end":96}},{"value":"/ equivalent indexing operation would panic.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164000,"byte_end":164046,"line_start":281,"line_end":281,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164051,"byte_end":164060,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164452,"byte_end":164459,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UStr<C>>::get_mut","value":"pub fn get_mut<I>(&mut Self, I) -> Option<&mut Self> where I: SliceIndex<[C],\nOutput = [C]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable subslice of the string.","sig":null,"attributes":[{"value":"/ Returns a mutable subslice of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164226,"byte_end":164271,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164276,"byte_end":164279,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This is the non-panicking alternative to indexing the string. Returns [`None`] whenever","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164284,"byte_end":164375,"line_start":292,"line_end":292,"column_start":5,"column_end":96}},{"value":"/ equivalent indexing operation would panic.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164380,"byte_end":164426,"line_start":293,"line_end":293,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164431,"byte_end":164440,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165123,"byte_end":165136,"line_start":315,"line_end":315,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<UStr<C>>::get_unchecked","value":"pub unsafe fn get_unchecked<I>(&Self, I) -> &Self where I: SliceIndex<[C],\nOutput = [C]>","parent":null,"children":[],"decl_id":null,"docs":" Returns an unchecked subslice of the string.","sig":null,"attributes":[{"value":"/ Returns an unchecked subslice of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164626,"byte_end":164674,"line_start":302,"line_end":302,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164679,"byte_end":164682,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This is the unchecked alternative to indexing the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164687,"byte_end":164748,"line_start":304,"line_end":304,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164753,"byte_end":164756,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164761,"byte_end":164773,"line_start":306,"line_end":306,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164778,"byte_end":164781,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Callers of this function are responsible that these preconditions are satisfied:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164786,"byte_end":164870,"line_start":308,"line_end":308,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164875,"byte_end":164878,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ - The starting index must not exceed the ending index;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164883,"byte_end":164941,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/ - Indexes must be within bounds of the original slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":164946,"byte_end":165004,"line_start":311,"line_end":311,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165009,"byte_end":165012,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Failing that, the returned string slice may reference invalid memory.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165017,"byte_end":165090,"line_start":313,"line_end":313,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165095,"byte_end":165104,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165791,"byte_end":165808,"line_start":335,"line_end":335,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<UStr<C>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut<I>(&mut Self, I) -> &mut Self where\nI: SliceIndex<[C], Output = [C]>","parent":null,"children":[],"decl_id":null,"docs":" Returns aa mutable, unchecked subslice of the string.","sig":null,"attributes":[{"value":"/ Returns aa mutable, unchecked subslice of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165285,"byte_end":165342,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165347,"byte_end":165350,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This is the unchecked alternative to indexing the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165355,"byte_end":165416,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165421,"byte_end":165424,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165429,"byte_end":165441,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165446,"byte_end":165449,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Callers of this function are responsible that these preconditions are satisfied:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165454,"byte_end":165538,"line_start":328,"line_end":328,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165543,"byte_end":165546,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ - The starting index must not exceed the ending index;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165551,"byte_end":165609,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/ - Indexes must be within bounds of the original slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165614,"byte_end":165672,"line_start":331,"line_end":331,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165677,"byte_end":165680,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Failing that, the returned string slice may reference invalid memory.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165685,"byte_end":165758,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165763,"byte_end":165772,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166385,"byte_end":166393,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"split_at","qualname":"<UStr<C>>::split_at","value":"pub fn split_at(&Self, usize) -> (&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Divide one string slice into two at an index.","sig":null,"attributes":[{"value":"/ Divide one string slice into two at an index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":165973,"byte_end":166022,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166027,"byte_end":166030,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The argument, `mid`, should be an offset from the start of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166035,"byte_end":166109,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166114,"byte_end":166117,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The two slices returned go from the start of the string slice to `mid`, and from `mid` to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166122,"byte_end":166215,"line_start":346,"line_end":346,"column_start":5,"column_end":98}},{"value":"/ the end of the string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166220,"byte_end":166252,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166257,"byte_end":166260,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ To get mutable string slices instead, see the [`split_at_mut`][Self::split_at_mut] method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166265,"byte_end":166359,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166364,"byte_end":166373,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166967,"byte_end":166979,"line_start":365,"line_end":365,"column_start":12,"column_end":24},"name":"split_at_mut","qualname":"<UStr<C>>::split_at_mut","value":"pub fn split_at_mut(&mut Self, usize) -> (&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Divide one mutable string slice into two at an index.","sig":null,"attributes":[{"value":"/ Divide one mutable string slice into two at an index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166553,"byte_end":166610,"line_start":356,"line_end":356,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166615,"byte_end":166618,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ The argument, `mid`, should be an offset from the start of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166623,"byte_end":166697,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166702,"byte_end":166705,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ The two slices returned go from the start of the string slice to `mid`, and from `mid` to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166710,"byte_end":166803,"line_start":360,"line_end":360,"column_start":5,"column_end":98}},{"value":"/ the end of the string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166808,"byte_end":166840,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166845,"byte_end":166848,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ To get immutable string slices instead, see the [`split_at`][Self::split_at] method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166853,"byte_end":166941,"line_start":363,"line_end":363,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":166946,"byte_end":166955,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168257,"byte_end":168269,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u16>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a string reference to an owned [`OsString`][std::ffi::OsString].","sig":null,"attributes":[{"value":"/ Decodes a string reference to an owned [`OsString`][std::ffi::OsString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167182,"byte_end":167258,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167263,"byte_end":167266,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`U16Str`]. Since [`U16Str`] makes no guarantees that it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167271,"byte_end":167366,"line_start":374,"line_end":374,"column_start":5,"column_end":100}},{"value":"/ valid UTF-16, there is no guarantee that the resulting [`OsString`][std::ffi::OsString] will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167371,"byte_end":167467,"line_start":375,"line_end":375,"column_start":5,"column_end":101}},{"value":"/ be valid encoding either.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167472,"byte_end":167501,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167506,"byte_end":167509,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsString`][std::ffi::OsString] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167514,"byte_end":167605,"line_start":378,"line_end":378,"column_start":5,"column_end":96}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167610,"byte_end":167701,"line_start":379,"line_end":379,"column_start":5,"column_end":96}},{"value":"/ windows) no changes to the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167706,"byte_end":167757,"line_start":380,"line_end":380,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167762,"byte_end":167765,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167770,"byte_end":167784,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167789,"byte_end":167792,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167797,"byte_end":167808,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167813,"byte_end":167843,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167848,"byte_end":167875,"line_start":386,"line_end":386,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167880,"byte_end":167903,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167908,"byte_end":167951,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167956,"byte_end":167994,"line_start":389,"line_end":389,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167999,"byte_end":168045,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168050,"byte_end":168086,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168091,"byte_end":168094,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168099,"byte_end":168140,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168145,"byte_end":168152,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168157,"byte_end":168180,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168236,"byte_end":168245,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169014,"byte_end":169023,"line_start":423,"line_end":423,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u16>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] if it contains valid UTF-16 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168363,"byte_end":168445,"line_start":402,"line_end":402,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168450,"byte_end":168453,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168458,"byte_end":168472,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168477,"byte_end":168480,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168485,"byte_end":168553,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168558,"byte_end":168561,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168566,"byte_end":168580,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168585,"byte_end":168588,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168593,"byte_end":168604,"line_start":410,"line_end":410,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168609,"byte_end":168639,"line_start":411,"line_end":411,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168644,"byte_end":168667,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168672,"byte_end":168715,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168720,"byte_end":168758,"line_start":414,"line_end":414,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168763,"byte_end":168814,"line_start":415,"line_end":415,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168819,"byte_end":168858,"line_start":416,"line_end":416,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168863,"byte_end":168866,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168871,"byte_end":168893,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168898,"byte_end":168905,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168910,"byte_end":168935,"line_start":420,"line_end":420,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":168993,"byte_end":169002,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169757,"byte_end":169772,"line_start":446,"line_end":446,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u16>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] even if it is invalid UTF-16 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] even if it is invalid UTF-16 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169118,"byte_end":169201,"line_start":427,"line_end":427,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169206,"byte_end":169209,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169214,"byte_end":169293,"line_start":429,"line_end":429,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169298,"byte_end":169301,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169306,"byte_end":169320,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169325,"byte_end":169328,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169333,"byte_end":169344,"line_start":433,"line_end":433,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169349,"byte_end":169379,"line_start":434,"line_end":434,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169384,"byte_end":169407,"line_start":435,"line_end":435,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169412,"byte_end":169455,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169460,"byte_end":169498,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169503,"byte_end":169554,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169559,"byte_end":169598,"line_start":439,"line_end":439,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169603,"byte_end":169606,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169611,"byte_end":169636,"line_start":441,"line_end":441,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169641,"byte_end":169648,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169653,"byte_end":169678,"line_start":443,"line_end":443,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169736,"byte_end":169745,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170581,"byte_end":170586,"line_start":461,"line_end":461,"column_start":12,"column_end":17},"name":"chars","qualname":"<UStr<u16>>::chars","value":"pub fn chars(&Self) -> Utf16Chars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169849,"byte_end":169921,"line_start":450,"line_end":450,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169926,"byte_end":169929,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":169934,"byte_end":170026,"line_start":452,"line_end":452,"column_start":5,"column_end":97}},{"value":"/ is an iterator over `Result<char, DecodeUtf16Error>` instead of [`char`][prim@char]s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170031,"byte_end":170119,"line_start":453,"line_end":453,"column_start":5,"column_end":93}},{"value":"/ directly. If you would like a lossy iterator over [`chars`][prim@char]s directly, instead","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170124,"byte_end":170217,"line_start":454,"line_end":454,"column_start":5,"column_end":98}},{"value":"/ use [`chars_lossy`][Self::chars_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170222,"byte_end":170265,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170270,"byte_end":170273,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170278,"byte_end":170372,"line_start":457,"line_end":457,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170377,"byte_end":170470,"line_start":458,"line_end":458,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170475,"byte_end":170555,"line_start":459,"line_end":459,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170560,"byte_end":170569,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171346,"byte_end":171357,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"chars_lossy","qualname":"<UStr<u16>>::chars_lossy","value":"pub fn chars_lossy(&Self) -> CharsLossy","parent":null,"children":[],"decl_id":null,"docs":" Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170661,"byte_end":170738,"line_start":465,"line_end":465,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170743,"byte_end":170746,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170751,"byte_end":170843,"line_start":467,"line_end":467,"column_start":5,"column_end":97}},{"value":"/ will replace unpaired surrogates with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170848,"byte_end":170889,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). This is a lossy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170894,"byte_end":170987,"line_start":469,"line_end":469,"column_start":5,"column_end":96}},{"value":"/ version of [`chars`][Self::chars].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":170992,"byte_end":171030,"line_start":470,"line_end":470,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171035,"byte_end":171038,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171043,"byte_end":171137,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171142,"byte_end":171235,"line_start":473,"line_end":473,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171240,"byte_end":171320,"line_start":474,"line_end":474,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171325,"byte_end":171334,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172042,"byte_end":172054,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"char_indices","qualname":"<UStr<u16>>::char_indices","value":"pub fn char_indices(&Self) -> Utf16CharIndices","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the chars of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ Returns an iterator over the chars of a string slice, and their positions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171434,"byte_end":171512,"line_start":480,"line_end":480,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171517,"byte_end":171520,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171525,"byte_end":171617,"line_start":482,"line_end":482,"column_start":5,"column_end":97}},{"value":"/ is an iterator over `Result<char, DecodeUtf16Error>` as well as their positions, instead of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171622,"byte_end":171717,"line_start":483,"line_end":483,"column_start":5,"column_end":100}},{"value":"/ [`char`][prim@char]s directly. If you would like a lossy indices iterator over","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171722,"byte_end":171804,"line_start":484,"line_end":484,"column_start":5,"column_end":87}},{"value":"/ [`chars`][prim@char]s directly, instead use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171809,"byte_end":171856,"line_start":485,"line_end":485,"column_start":5,"column_end":52}},{"value":"/ [`char_indices_lossy`][Self::char_indices_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171861,"byte_end":171914,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171919,"byte_end":171922,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ The iterator yields tuples. The position is first, the [`char`][prim@char] is second.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":171927,"byte_end":172016,"line_start":488,"line_end":488,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172021,"byte_end":172030,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172710,"byte_end":172728,"line_start":504,"line_end":504,"column_start":12,"column_end":30},"name":"char_indices_lossy","qualname":"<UStr<u16>>::char_indices_lossy","value":"pub fn char_indices_lossy(&Self) -> Utf16CharIndicesLossy","parent":null,"children":[],"decl_id":null,"docs":" Returns a lossy iterator over the chars of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ Returns a lossy iterator over the chars of a string slice, and their positions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172141,"byte_end":172224,"line_start":494,"line_end":494,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172229,"byte_end":172232,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-16, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172237,"byte_end":172329,"line_start":496,"line_end":496,"column_start":5,"column_end":97}},{"value":"/ will replace unpaired surrogates with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172334,"byte_end":172375,"line_start":497,"line_end":497,"column_start":5,"column_end":46}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�), as well as the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172380,"byte_end":172472,"line_start":498,"line_end":498,"column_start":5,"column_end":95}},{"value":"/ positions of all characters. This is a lossy version of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172477,"byte_end":172536,"line_start":499,"line_end":499,"column_start":5,"column_end":64}},{"value":"/ [`char_indices`][Self::char_indices].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172541,"byte_end":172582,"line_start":500,"line_end":500,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172587,"byte_end":172590,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ The iterator yields tuples. The position is first, the [`char`][prim@char] is second.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172595,"byte_end":172684,"line_start":502,"line_end":502,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172689,"byte_end":172698,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174033,"byte_end":174046,"line_start":535,"line_end":535,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UStr<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32Str`] from a [`char`][prim@char] pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a [`U32Str`] from a [`char`][prim@char] pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172844,"byte_end":172920,"line_start":510,"line_end":510,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172925,"byte_end":172928,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes. No copying","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172933,"byte_end":173029,"line_start":512,"line_end":512,"column_start":5,"column_end":101}},{"value":"/ or allocation is performed, the resulting value is a direct reference to the pointer bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173034,"byte_end":173129,"line_start":513,"line_end":513,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173134,"byte_end":173137,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173142,"byte_end":173154,"line_start":515,"line_end":515,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173159,"byte_end":173162,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173167,"byte_end":173261,"line_start":517,"line_end":517,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173266,"byte_end":173279,"line_start":518,"line_end":518,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173284,"byte_end":173287,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173292,"byte_end":173382,"line_start":520,"line_end":520,"column_start":5,"column_end":95}},{"value":"/ In particular, the returned string reference *must not be mutated* for the duration of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173387,"byte_end":173477,"line_start":521,"line_end":521,"column_start":5,"column_end":95}},{"value":"/ lifetime `'a`, except inside an [`UnsafeCell`][std::cell::UnsafeCell].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173482,"byte_end":173556,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173561,"byte_end":173564,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173569,"byte_end":173581,"line_start":524,"line_end":524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173586,"byte_end":173589,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173594,"byte_end":173634,"line_start":526,"line_end":526,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173639,"byte_end":173642,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173647,"byte_end":173659,"line_start":528,"line_end":528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173664,"byte_end":173667,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173672,"byte_end":173762,"line_start":530,"line_end":530,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173767,"byte_end":173857,"line_start":531,"line_end":531,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173862,"byte_end":173957,"line_start":532,"line_end":532,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":173962,"byte_end":174000,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174005,"byte_end":174014,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175184,"byte_end":175201,"line_start":562,"line_end":562,"column_start":19,"column_end":36},"name":"from_char_ptr_mut","qualname":"<UStr<u32>>::from_char_ptr_mut","value":"pub unsafe fn from_char_ptr_mut<'a>(*mut char, usize) -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`U32Str`] from a mutable [`char`][prim@char] pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`U32Str`] from a mutable [`char`][prim@char] pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174149,"byte_end":174241,"line_start":539,"line_end":539,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174246,"byte_end":174249,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes. No copying","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174254,"byte_end":174350,"line_start":541,"line_end":541,"column_start":5,"column_end":101}},{"value":"/ or allocation is performed, the resulting value is a direct reference to the pointer bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174355,"byte_end":174450,"line_start":542,"line_end":542,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174455,"byte_end":174458,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174463,"byte_end":174475,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174480,"byte_end":174483,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174488,"byte_end":174582,"line_start":546,"line_end":546,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174587,"byte_end":174600,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174605,"byte_end":174608,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts_mut].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174613,"byte_end":174707,"line_start":549,"line_end":549,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174712,"byte_end":174715,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174720,"byte_end":174732,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174737,"byte_end":174740,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174745,"byte_end":174785,"line_start":553,"line_end":553,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174790,"byte_end":174793,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174798,"byte_end":174810,"line_start":555,"line_end":555,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174815,"byte_end":174818,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174823,"byte_end":174913,"line_start":557,"line_end":557,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":174918,"byte_end":175008,"line_start":558,"line_end":558,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175013,"byte_end":175108,"line_start":559,"line_end":559,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175113,"byte_end":175151,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175156,"byte_end":175165,"line_start":561,"line_end":561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175449,"byte_end":175464,"line_start":570,"line_end":570,"column_start":12,"column_end":27},"name":"from_char_slice","qualname":"<UStr<u32>>::from_char_slice","value":"pub fn from_char_slice(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32Str`] from a [`char`][prim@char] slice.","sig":null,"attributes":[{"value":"/ Constructs a [`U32Str`] from a [`char`][prim@char] slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175308,"byte_end":175369,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175374,"byte_end":175377,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175382,"byte_end":175423,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175428,"byte_end":175437,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175742,"byte_end":175761,"line_start":579,"line_end":579,"column_start":12,"column_end":31},"name":"from_char_slice_mut","qualname":"<UStr<u32>>::from_char_slice_mut","value":"pub fn from_char_slice_mut(&mut [char]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable [`U32Str`] from a mutable [`char`][prim@char] slice.","sig":null,"attributes":[{"value":"/ Constructs a mutable [`U32Str`] from a mutable [`char`][prim@char] slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175585,"byte_end":175662,"line_start":575,"line_end":575,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175667,"byte_end":175670,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175675,"byte_end":175716,"line_start":577,"line_end":577,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175721,"byte_end":175730,"line_start":578,"line_end":578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176926,"byte_end":176938,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u32>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a string to an owned [`OsString`][std::ffi::OsString].","sig":null,"attributes":[{"value":"/ Decodes a string to an owned [`OsString`][std::ffi::OsString].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175890,"byte_end":175956,"line_start":584,"line_end":584,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175961,"byte_end":175964,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`U32Str`]. Since [`U32Str`] makes no guarantees that it is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":175969,"byte_end":176064,"line_start":586,"line_end":586,"column_start":5,"column_end":100}},{"value":"/ valid UTF-32, there is no guarantee that the resulting [`OsString`][std::ffi::OsString] will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176069,"byte_end":176165,"line_start":587,"line_end":587,"column_start":5,"column_end":101}},{"value":"/ be valid data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176170,"byte_end":176188,"line_start":588,"line_end":588,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176193,"byte_end":176196,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsString`][std::ffi::OsString] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176201,"byte_end":176292,"line_start":590,"line_end":590,"column_start":5,"column_end":96}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms no changes to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176297,"byte_end":176393,"line_start":591,"line_end":591,"column_start":5,"column_end":101}},{"value":"/ the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176398,"byte_end":176426,"line_start":592,"line_end":592,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176431,"byte_end":176434,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176439,"byte_end":176453,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176458,"byte_end":176461,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176466,"byte_end":176477,"line_start":596,"line_end":596,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176482,"byte_end":176512,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176517,"byte_end":176544,"line_start":598,"line_end":598,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176549,"byte_end":176572,"line_start":599,"line_end":599,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176577,"byte_end":176620,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176625,"byte_end":176663,"line_start":601,"line_end":601,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176668,"byte_end":176714,"line_start":602,"line_end":602,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176719,"byte_end":176755,"line_start":603,"line_end":603,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176760,"byte_end":176763,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176768,"byte_end":176809,"line_start":605,"line_end":605,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176814,"byte_end":176821,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176826,"byte_end":176849,"line_start":607,"line_end":607,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":176905,"byte_end":176914,"line_start":609,"line_end":609,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177646,"byte_end":177655,"line_start":634,"line_end":634,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u32>>::to_string","value":"pub fn to_string(&Self) -> Result<String, crate::error::FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string to a [`String`] if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Decodes the string to a [`String`] if it contains valid UTF-32 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177019,"byte_end":177091,"line_start":614,"line_end":614,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177096,"byte_end":177099,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177104,"byte_end":177118,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177123,"byte_end":177126,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177131,"byte_end":177199,"line_start":618,"line_end":618,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177204,"byte_end":177207,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177212,"byte_end":177226,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177231,"byte_end":177234,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177239,"byte_end":177250,"line_start":622,"line_end":622,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177255,"byte_end":177285,"line_start":623,"line_end":623,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177290,"byte_end":177313,"line_start":624,"line_end":624,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177318,"byte_end":177361,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177366,"byte_end":177404,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177409,"byte_end":177460,"line_start":627,"line_end":627,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177465,"byte_end":177504,"line_start":628,"line_end":628,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177509,"byte_end":177512,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177517,"byte_end":177539,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177544,"byte_end":177551,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":177556,"byte_end":177581,"line_start":632,"line_end":632,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178899,"byte_end":178914,"line_start":667,"line_end":667,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u32>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Decodes the string reference to a [`String`] even if it is invalid UTF-32 data.","sig":null,"attributes":[{"value":"/ Decodes the string reference to a [`String`] even if it is invalid UTF-32 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178274,"byte_end":178357,"line_start":649,"line_end":649,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178362,"byte_end":178365,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178370,"byte_end":178449,"line_start":651,"line_end":651,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178454,"byte_end":178457,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178462,"byte_end":178476,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178481,"byte_end":178484,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178489,"byte_end":178500,"line_start":655,"line_end":655,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178505,"byte_end":178535,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178540,"byte_end":178563,"line_start":657,"line_end":657,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178568,"byte_end":178611,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178616,"byte_end":178654,"line_start":659,"line_end":659,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178659,"byte_end":178710,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178715,"byte_end":178754,"line_start":661,"line_end":661,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178759,"byte_end":178762,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178767,"byte_end":178792,"line_start":663,"line_end":663,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178797,"byte_end":178804,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":178809,"byte_end":178834,"line_start":665,"line_end":665,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180144,"byte_end":180149,"line_start":694,"line_end":694,"column_start":12,"column_end":17},"name":"chars","qualname":"<UStr<u32>>::chars","value":"pub fn chars(&Self) -> Utf32Chars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179412,"byte_end":179484,"line_start":683,"line_end":683,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179489,"byte_end":179492,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-32, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179497,"byte_end":179589,"line_start":685,"line_end":685,"column_start":5,"column_end":97}},{"value":"/ is an iterator over `Result<char, DecodeUtf32Error>` instead of [`char`][prim@char]s","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179594,"byte_end":179682,"line_start":686,"line_end":686,"column_start":5,"column_end":93}},{"value":"/ directly. If you would like a lossy iterator over [`chars`][prim@char]s directly, instead","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179687,"byte_end":179780,"line_start":687,"line_end":687,"column_start":5,"column_end":98}},{"value":"/ use [`chars_lossy`][Self::chars_lossy].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179785,"byte_end":179828,"line_start":688,"line_end":688,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179833,"byte_end":179836,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179841,"byte_end":179935,"line_start":690,"line_end":690,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":179940,"byte_end":180033,"line_start":691,"line_end":691,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180038,"byte_end":180118,"line_start":692,"line_end":692,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180123,"byte_end":180132,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180929,"byte_end":180940,"line_start":709,"line_end":709,"column_start":12,"column_end":23},"name":"chars_lossy","qualname":"<UStr<u32>>::chars_lossy","value":"pub fn chars_lossy(&Self) -> CharsLossy","parent":null,"children":[],"decl_id":null,"docs":" Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","sig":null,"attributes":[{"value":"/ Returns a lossy iterator over the [`char`][prim@char]s of a string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180224,"byte_end":180301,"line_start":698,"line_end":698,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180306,"byte_end":180309,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ As this string slice may consist of invalid UTF-32, the iterator returned by this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180314,"byte_end":180406,"line_start":700,"line_end":700,"column_start":5,"column_end":97}},{"value":"/ will replace surrogate values or invalid code points with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180411,"byte_end":180472,"line_start":701,"line_end":701,"column_start":5,"column_end":66}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). This is a lossy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180477,"byte_end":180570,"line_start":702,"line_end":702,"column_start":5,"column_end":96}},{"value":"/ version of [`chars`][Self::chars].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180575,"byte_end":180613,"line_start":703,"line_end":703,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180618,"byte_end":180621,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ It's important to remember that [`char`][prim@char] represents a Unicode Scalar Value, and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180626,"byte_end":180720,"line_start":705,"line_end":705,"column_start":5,"column_end":99}},{"value":"/ may not match your idea of what a 'character' is. Iteration over grapheme clusters may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180725,"byte_end":180818,"line_start":706,"line_end":706,"column_start":5,"column_end":98}},{"value":"/ what you actually want. That functionality is not provided by by this crate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180823,"byte_end":180903,"line_start":707,"line_end":707,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":180908,"byte_end":180917,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184202,"byte_end":184208,"line_start":840,"line_end":840,"column_start":10,"column_end":16},"name":"U16Str","qualname":"::ustr::U16Str","value":"UStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for [`U16String`][crate::U16String].","sig":null,"attributes":[{"value":"/ String slice reference for [`U16String`][crate::U16String].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183399,"byte_end":183462,"line_start":827,"line_end":827,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183463,"byte_end":183466,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ [`U16Str`] is to [`U16String`][crate::U16String] as [`str`] is to [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183467,"byte_end":183548,"line_start":829,"line_end":829,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183549,"byte_end":183552,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ [`U16Str`] is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183553,"byte_end":183645,"line_start":831,"line_end":831,"column_start":1,"column_end":93}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183646,"byte_end":183736,"line_start":832,"line_end":832,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183737,"byte_end":183830,"line_start":833,"line_end":833,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183831,"byte_end":183930,"line_start":834,"line_end":834,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183931,"byte_end":183934,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ [`U16CStr`][crate::U16CStr] should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183935,"byte_end":184024,"line_start":836,"line_end":836,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184025,"byte_end":184028,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ [`U16Str`] can be converted to many other string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184029,"byte_end":184098,"line_start":838,"line_end":838,"column_start":1,"column_end":70}},{"value":"/ [`OsString`][std::ffi::OsString] and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184099,"byte_end":184192,"line_start":839,"line_end":839,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185026,"byte_end":185032,"line_start":855,"line_end":855,"column_start":10,"column_end":16},"name":"U32Str","qualname":"::ustr::U32Str","value":"UStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for [`U32String`][crate::U32String].","sig":null,"attributes":[{"value":"/ String slice reference for [`U32String`][crate::U32String].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184223,"byte_end":184286,"line_start":842,"line_end":842,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184287,"byte_end":184290,"line_start":843,"line_end":843,"column_start":1,"column_end":4}},{"value":"/ [`U32Str`] is to [`U32String`][crate::U32String] as [`str`] is to [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184291,"byte_end":184372,"line_start":844,"line_end":844,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184373,"byte_end":184376,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ [`U32Str`] is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184377,"byte_end":184469,"line_start":846,"line_end":846,"column_start":1,"column_end":93}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184470,"byte_end":184560,"line_start":847,"line_end":847,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184561,"byte_end":184654,"line_start":848,"line_end":848,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184655,"byte_end":184754,"line_start":849,"line_end":849,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184755,"byte_end":184758,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ [`U32CStr`][crate::U32CStr] should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184759,"byte_end":184848,"line_start":851,"line_end":851,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184849,"byte_end":184852,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ [`U32Str`] can be converted to many other string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184853,"byte_end":184922,"line_start":853,"line_end":853,"column_start":1,"column_end":70}},{"value":"/ [`OsString`][std::ffi::OsString] and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":184923,"byte_end":185016,"line_start":854,"line_end":854,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185178,"byte_end":185185,"line_start":859,"line_end":859,"column_start":10,"column_end":17},"name":"WideStr","qualname":"::ustr::WideStr","value":"UStr<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`U16Str`] or [`U32Str`] depending on platform. Intended to match typical C `wchar_t`\n size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for [`U16Str`] or [`U32Str`] depending on platform. Intended to match typical C `wchar_t`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185047,"byte_end":185146,"line_start":857,"line_end":857,"column_start":1,"column_end":100}},{"value":"/ size on platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185147,"byte_end":185168,"line_start":858,"line_end":858,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185920,"byte_end":185927,"line_start":872,"line_end":872,"column_start":12,"column_end":19},"name":"Display","qualname":"::ustr::Display","value":"Display {  }","parent":null,"children":[{"krate":0,"index":896}],"decl_id":null,"docs":" Helper struct for printing [`UStr`] values with [`format!`] and `{}`.","sig":null,"attributes":[{"value":"/ Helper struct for printing [`UStr`] values with [`format!`] and `{}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185205,"byte_end":185278,"line_start":861,"line_end":861,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185279,"byte_end":185282,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ A [`UStr`] might contain ill-formed UTF encoding. This struct implements the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185283,"byte_end":185363,"line_start":863,"line_end":863,"column_start":1,"column_end":81}},{"value":"/ [`Display`][std::fmt::Display] trait in a way that decoding the string is lossy but no heap","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185364,"byte_end":185459,"line_start":864,"line_end":864,"column_start":1,"column_end":96}},{"value":"/ allocations are performed, such as by [`to_string_lossy`][UStr::to_string_lossy]. It is created","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185460,"byte_end":185559,"line_start":865,"line_end":865,"column_start":1,"column_end":100}},{"value":"/ by the [`display`][UStr::display] method on [`UStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185560,"byte_end":185617,"line_start":866,"line_end":866,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185618,"byte_end":185621,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ By default, invalid Unicode data is replaced with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185622,"byte_end":185675,"line_start":868,"line_end":868,"column_start":1,"column_end":54}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][std::char::REPLACEMENT_CHARACTER] (�). If you wish to simply","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185676,"byte_end":185775,"line_start":869,"line_end":869,"column_start":1,"column_end":98}},{"value":"/ skip any invalid Uncode data and forego the replacement, you may use the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185776,"byte_end":185852,"line_start":870,"line_end":870,"column_start":1,"column_end":77}},{"value":"/ [alternate formatting][std::fmt#sign0] with `{:#}`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185853,"byte_end":185908,"line_start":871,"line_end":871,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ustring","qualname":"::ustring","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":998},{"krate":0,"index":1023},{"krate":0,"index":1041},{"krate":0,"index":1059},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1121},{"krate":0,"index":1127},{"krate":0,"index":1132},{"krate":0,"index":1137},{"krate":0,"index":1142},{"krate":0,"index":1147},{"krate":0,"index":1151},{"krate":0,"index":1155},{"krate":0,"index":1159},{"krate":0,"index":1163},{"krate":0,"index":1167},{"krate":0,"index":1171},{"krate":0,"index":1176},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1239},{"krate":0,"index":1244},{"krate":0,"index":1248},{"krate":0,"index":1252},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1276},{"krate":0,"index":1280},{"krate":0,"index":1284},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1300},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1317},{"krate":0,"index":1321},{"krate":0,"index":1325},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1339},{"krate":0,"index":1343},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363}],"decl_id":null,"docs":" Owned, growable wide strings.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11381,"byte_end":11406,"line_start":224,"line_end":224,"column_start":1,"column_end":26}},{"value":"/ Owned, growable wide strings.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187241,"byte_end":187274,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187275,"byte_end":187278,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the [`UString`] strings and related types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187279,"byte_end":187346,"line_start":3,"line_end":3,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189504,"byte_end":189511,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"UString","qualname":"::ustring::UString","value":"UString {  }","parent":null,"children":[{"krate":0,"index":1649}],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187743,"byte_end":187813,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187814,"byte_end":187817,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UString`] is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187818,"byte_end":187911,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":187912,"byte_end":188007,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188008,"byte_end":188106,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188107,"byte_end":188206,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188207,"byte_end":188210,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`UCString`][crate::UCString] should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188211,"byte_end":188302,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188303,"byte_end":188306,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`UString`] can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188307,"byte_end":188400,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ [`OsString`][std::ffi::OsString] and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188401,"byte_end":188494,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188495,"byte_end":188498,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases [`U16String`], [`U32String`], or [`WideString`] to using","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188499,"byte_end":188596,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ this type directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188597,"byte_end":188620,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188621,"byte_end":188624,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188625,"byte_end":188639,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188640,"byte_end":188643,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a [`U16String`] and shows how to convert a [`U16String`] to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188644,"byte_end":188742,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/ regular Rust [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188743,"byte_end":188771,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188772,"byte_end":188775,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188776,"byte_end":188787,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188788,"byte_end":188818,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188819,"byte_end":188838,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188839,"byte_end":188887,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188888,"byte_end":188926,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188927,"byte_end":188963,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":188964,"byte_end":189006,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189007,"byte_end":189040,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189041,"byte_end":189048,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189049,"byte_end":189052,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The same example using [`U32String`] instead:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189053,"byte_end":189102,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189103,"byte_end":189106,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189107,"byte_end":189118,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189119,"byte_end":189149,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189150,"byte_end":189169,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189170,"byte_end":189218,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189219,"byte_end":189257,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189258,"byte_end":189294,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189295,"byte_end":189337,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189338,"byte_end":189371,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189372,"byte_end":189379,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189654,"byte_end":189657,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<UString<C>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new empty [`UString`].\n","sig":null,"attributes":[{"value":"/ Constructs a new empty [`UString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189589,"byte_end":189628,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189633,"byte_end":189642,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190527,"byte_end":190535,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<UString<C>>::from_vec","value":"pub fn from_vec<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UString`] from a vector.","sig":null,"attributes":[{"value":"/ Constructs a [`UString`] from a vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189716,"byte_end":189759,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189764,"byte_end":189767,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector. It may or may not be valid character data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189772,"byte_end":189868,"line_start":80,"line_end":80,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189873,"byte_end":189876,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189881,"byte_end":189895,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189900,"byte_end":189903,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189908,"byte_end":189919,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189924,"byte_end":189954,"line_start":85,"line_end":85,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189959,"byte_end":190014,"line_start":86,"line_end":86,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190019,"byte_end":190048,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190053,"byte_end":190096,"line_start":88,"line_end":88,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_vec(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190101,"byte_end":190139,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190144,"byte_end":190186,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190191,"byte_end":190198,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190203,"byte_end":190206,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190211,"byte_end":190222,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190227,"byte_end":190257,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190262,"byte_end":190317,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190322,"byte_end":190351,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190356,"byte_end":190399,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_vec(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190404,"byte_end":190442,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190447,"byte_end":190489,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190494,"byte_end":190501,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190506,"byte_end":190515,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191143,"byte_end":191151,"line_start":120,"line_end":120,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UString<C>>::from_ptr","value":"pub unsafe fn from_ptr(*const C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UString`] copy from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a [`UString`] copy from a pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190616,"byte_end":190678,"line_start":106,"line_end":106,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190683,"byte_end":190686,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190691,"byte_end":190769,"line_start":108,"line_end":108,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190774,"byte_end":190777,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190782,"byte_end":190794,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190799,"byte_end":190802,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190807,"byte_end":190901,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190906,"byte_end":190919,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190924,"byte_end":190927,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":190932,"byte_end":191022,"line_start":115,"line_end":115,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191027,"byte_end":191030,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191035,"byte_end":191047,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191052,"byte_end":191055,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191060,"byte_end":191124,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191626,"byte_end":191639,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<UString<C>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`UString`] with the given capacity.","sig":null,"attributes":[{"value":"/ Constructs a [`UString`] with the given capacity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191374,"byte_end":191427,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191432,"byte_end":191435,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The string will be able to hold exactly `capacity` elements without reallocating.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191440,"byte_end":191525,"line_start":131,"line_end":131,"column_start":5,"column_end":90}},{"value":"/ If `capacity` is set to 0, the string will not initially allocate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191530,"byte_end":191600,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191605,"byte_end":191614,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191850,"byte_end":191858,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"capacity","qualname":"<UString<C>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity this [`UString`] can hold without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the capacity this [`UString`] can hold without reallocating.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191752,"byte_end":191824,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191829,"byte_end":191838,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191989,"byte_end":191994,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"clear","qualname":"<UString<C>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncates the [`UString`] to zero length.\n","sig":null,"attributes":[{"value":"/ Truncates the [`UString`] to zero length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191918,"byte_end":191963,"line_start":146,"line_end":146,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":191968,"byte_end":191977,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192260,"byte_end":192267,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"reserve","qualname":"<UString<C>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the capacity for at least `additional` more capacity to be inserted in the given\n [`UString`].","sig":null,"attributes":[{"value":"/ Reserves the capacity for at least `additional` more capacity to be inserted in the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192046,"byte_end":192139,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ [`UString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192144,"byte_end":192160,"line_start":153,"line_end":153,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192165,"byte_end":192168,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ More space may be reserved to avoid frequent allocations.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192173,"byte_end":192234,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192239,"byte_end":192248,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192780,"byte_end":192793,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<UString<C>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the\n given [`UString`]. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192350,"byte_end":192444,"line_start":161,"line_end":161,"column_start":5,"column_end":99}},{"value":"/ given [`UString`]. Does nothing if the capacity is already sufficient.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192449,"byte_end":192523,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192528,"byte_end":192531,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give more space than is requested. Therefore capacity can not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192536,"byte_end":192629,"line_start":164,"line_end":164,"column_start":5,"column_end":98}},{"value":"/ be relied upon to be precisely minimal. Prefer [`reserve`][Self::reserve] if future","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192634,"byte_end":192721,"line_start":165,"line_end":165,"column_start":5,"column_end":92}},{"value":"/ insertions are expected.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192726,"byte_end":192754,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192759,"byte_end":192768,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192984,"byte_end":192992,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UString<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the string into a [`Vec`], consuming the string in the process.\n","sig":null,"attributes":[{"value":"/ Converts the string into a [`Vec`], consuming the string in the process.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192882,"byte_end":192958,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":192963,"byte_end":192972,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193104,"byte_end":193111,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"as_ustr","qualname":"<UString<C>>::as_ustr","value":"pub fn as_ustr(&Self) -> &UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`UStr`] reference.\n","sig":null,"attributes":[{"value":"/ Converts to a [`UStr`] reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193041,"byte_end":193078,"line_start":178,"line_end":178,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193083,"byte_end":193092,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193253,"byte_end":193264,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"as_mut_ustr","qualname":"<UString<C>>::as_mut_ustr","value":"pub fn as_mut_ustr(&mut Self) -> &mut UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable [`UStr`] reference.\n","sig":null,"attributes":[{"value":"/ Converts to a mutable [`UStr`] reference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193182,"byte_end":193227,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193232,"byte_end":193241,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193440,"byte_end":193446,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<UString<C>>::as_vec","value":"pub fn as_vec(&Self) -> &Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Vec`] reference to the contents of this string.\n","sig":null,"attributes":[{"value":"/ Returns a [`Vec`] reference to the contents of this string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193351,"byte_end":193414,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193419,"byte_end":193428,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193587,"byte_end":193597,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"as_mut_vec","qualname":"<UString<C>>::as_mut_vec","value":"pub fn as_mut_vec(&mut Self) -> &mut Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contents of this string.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contents of this string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193498,"byte_end":193561,"line_start":196,"line_end":196,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193566,"byte_end":193575,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194645,"byte_end":194649,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"push","qualname":"<UString<C>>::push","value":"pub fn push<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(&mut Self,\nimpl AsRef<UStr<C>>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given string slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193661,"byte_end":193712,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193717,"byte_end":193720,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193725,"byte_end":193815,"line_start":204,"line_end":204,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193820,"byte_end":193894,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193899,"byte_end":193902,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193907,"byte_end":193921,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193926,"byte_end":193929,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193934,"byte_end":193945,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193950,"byte_end":193980,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":193985,"byte_end":194008,"line_start":211,"line_end":211,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194013,"byte_end":194055,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194060,"byte_end":194090,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194095,"byte_end":194156,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194161,"byte_end":194183,"line_start":215,"line_end":215,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194188,"byte_end":194191,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194196,"byte_end":194258,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194263,"byte_end":194270,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194275,"byte_end":194278,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194283,"byte_end":194294,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194299,"byte_end":194329,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194334,"byte_end":194357,"line_start":222,"line_end":222,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194362,"byte_end":194404,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194409,"byte_end":194439,"line_start":224,"line_end":224,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194444,"byte_end":194505,"line_start":225,"line_end":225,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194510,"byte_end":194532,"line_start":226,"line_end":226,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194537,"byte_end":194540,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194545,"byte_end":194607,"line_start":228,"line_end":228,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194612,"byte_end":194619,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194624,"byte_end":194633,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195743,"byte_end":195753,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"push_slice","qualname":"<UString<C>>::push_slice","value":"pub fn push_slice<impl AsRef<[C]>: AsRef<[C]>>(&mut Self, impl AsRef<[C]>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194754,"byte_end":194798,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194803,"byte_end":194806,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194811,"byte_end":194901,"line_start":237,"line_end":237,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194906,"byte_end":194980,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194985,"byte_end":194988,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":194993,"byte_end":195007,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195012,"byte_end":195015,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195020,"byte_end":195031,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195036,"byte_end":195066,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195071,"byte_end":195094,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195099,"byte_end":195141,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195146,"byte_end":195176,"line_start":246,"line_end":246,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195181,"byte_end":195242,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195247,"byte_end":195275,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195280,"byte_end":195283,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195288,"byte_end":195350,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195355,"byte_end":195362,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195367,"byte_end":195370,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195375,"byte_end":195386,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195391,"byte_end":195421,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195426,"byte_end":195449,"line_start":255,"line_end":255,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195454,"byte_end":195496,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195501,"byte_end":195531,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195536,"byte_end":195597,"line_start":258,"line_end":258,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195602,"byte_end":195630,"line_start":259,"line_end":259,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195635,"byte_end":195638,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195643,"byte_end":195705,"line_start":261,"line_end":261,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195710,"byte_end":195717,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195722,"byte_end":195731,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196502,"byte_end":196515,"line_start":296,"line_end":296,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<UString<C>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the [`UString`] to match its length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the [`UString`] to match its length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195847,"byte_end":195911,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195916,"byte_end":195919,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195924,"byte_end":195938,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195943,"byte_end":195946,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195951,"byte_end":195962,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":195967,"byte_end":195997,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196002,"byte_end":196005,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut s = U16String::from_str(\"foo\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196010,"byte_end":196053,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196058,"byte_end":196061,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196066,"byte_end":196085,"line_start":277,"line_end":277,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196090,"byte_end":196123,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196128,"byte_end":196131,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196136,"byte_end":196158,"line_start":280,"line_end":280,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196163,"byte_end":196195,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196200,"byte_end":196207,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196212,"byte_end":196215,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196220,"byte_end":196231,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196236,"byte_end":196266,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196271,"byte_end":196274,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let mut s = U32String::from_str(\"foo\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196279,"byte_end":196322,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196327,"byte_end":196330,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196335,"byte_end":196354,"line_start":289,"line_end":289,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196359,"byte_end":196392,"line_start":290,"line_end":290,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196397,"byte_end":196400,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196405,"byte_end":196427,"line_start":292,"line_end":292,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196432,"byte_end":196464,"line_start":293,"line_end":293,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196469,"byte_end":196476,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196481,"byte_end":196490,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197045,"byte_end":197060,"line_start":319,"line_end":319,"column_start":12,"column_end":27},"name":"into_boxed_ustr","qualname":"<UString<C>>::into_boxed_ustr","value":"pub fn into_boxed_ustr(Self) -> Box<UStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this [`UString`] into a boxed [`UStr`].","sig":null,"attributes":[{"value":"/ Converts this [`UString`] into a boxed [`UStr`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196576,"byte_end":196628,"line_start":300,"line_end":300,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196633,"byte_end":196636,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196641,"byte_end":196655,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196660,"byte_end":196663,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196668,"byte_end":196675,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16String, U16Str};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196680,"byte_end":196720,"line_start":305,"line_end":305,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196725,"byte_end":196728,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let s = U16String::from_str(\"hello\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196733,"byte_end":196774,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196779,"byte_end":196782,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U16Str> = s.into_boxed_ustr();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196787,"byte_end":196832,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196837,"byte_end":196844,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196849,"byte_end":196852,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196857,"byte_end":196864,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32String, U32Str};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196869,"byte_end":196909,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196914,"byte_end":196917,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let s = U32String::from_str(\"hello\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196922,"byte_end":196963,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196968,"byte_end":196971,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U32Str> = s.into_boxed_ustr();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":196976,"byte_end":197021,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197026,"byte_end":197033,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197476,"byte_end":197484,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"truncate","qualname":"<UString<C>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens this string to the specified length.","sig":null,"attributes":[{"value":"/ Shortens this string to the specified length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197212,"byte_end":197261,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197266,"byte_end":197269,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than the string’s current length, this has no effect.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197274,"byte_end":197357,"line_start":326,"line_end":326,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197362,"byte_end":197365,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197370,"byte_end":197450,"line_start":328,"line_end":328,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197455,"byte_end":197464,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197831,"byte_end":197842,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"insert_ustr","qualname":"<UString<C>>::insert_ustr","value":"pub fn insert_ustr(&mut Self, usize, &UStr<C>)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a string slice into this string at a specified position.","sig":null,"attributes":[{"value":"/ Inserts a string slice into this string at a specified position.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197562,"byte_end":197630,"line_start":334,"line_end":334,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197635,"byte_end":197638,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This is an _O(n)_ operation as it requires copying every element in the buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197643,"byte_end":197726,"line_start":336,"line_end":336,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197731,"byte_end":197734,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197739,"byte_end":197751,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197756,"byte_end":197759,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Panics if `idx` is larger than the string's length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":197764,"byte_end":197819,"line_start":340,"line_end":340,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198541,"byte_end":198550,"line_start":360,"line_end":360,"column_start":12,"column_end":21},"name":"split_off","qualname":"<UString<C>>::split_off","value":"pub fn split_off(&mut Self, usize) -> UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Splits the string into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the string into two at the given index.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198144,"byte_end":198194,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198199,"byte_end":198202,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated string. `self` contains values `[0, at)`, and the returned string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198207,"byte_end":198302,"line_start":351,"line_end":351,"column_start":5,"column_end":100}},{"value":"/ contains values `[at, len)`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198307,"byte_end":198339,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198344,"byte_end":198347,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Note that the capacity of `self` does not change.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198352,"byte_end":198405,"line_start":354,"line_end":354,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198410,"byte_end":198413,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198418,"byte_end":198430,"line_start":356,"line_end":356,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198435,"byte_end":198438,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Panics if `at` is equal to or greater than the length of the string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198443,"byte_end":198515,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198520,"byte_end":198529,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199227,"byte_end":199235,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u16>>::from_str","value":"pub fn from_str<S: AsRef<str> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16String`] copy from a [`str`].","sig":null,"attributes":[{"value":"/ Encodes a [`U16String`] copy from a [`str`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198671,"byte_end":198719,"line_start":366,"line_end":366,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198724,"byte_end":198727,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`str`]. Since [`str`] will always be valid UTF-8, the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198732,"byte_end":198822,"line_start":368,"line_end":368,"column_start":5,"column_end":95}},{"value":"/ resulting [`U16String`] will also be valid UTF-16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198827,"byte_end":198881,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198886,"byte_end":198889,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198894,"byte_end":198908,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198913,"byte_end":198916,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198921,"byte_end":198932,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198937,"byte_end":198967,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198972,"byte_end":198995,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199000,"byte_end":199043,"line_start":376,"line_end":376,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199048,"byte_end":199086,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199091,"byte_end":199094,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199099,"byte_end":199144,"line_start":379,"line_end":379,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199149,"byte_end":199156,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199161,"byte_end":199201,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199206,"byte_end":199215,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200316,"byte_end":200327,"line_start":412,"line_end":412,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u16>>::from_os_str","value":"pub fn from_os_str<S: AsRef<std::ffi::OsStr> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U16String`] copy from an [`OsStr`][std::ffi::OsStr].","sig":null,"attributes":[{"value":"/ Encodes a [`U16String`] copy from an [`OsStr`][std::ffi::OsStr].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199369,"byte_end":199437,"line_start":389,"line_end":389,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199442,"byte_end":199445,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`OsStr`][std::ffi::OsStr]. Since [`OsStr`][std::ffi::OsStr]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199450,"byte_end":199546,"line_start":391,"line_end":391,"column_start":5,"column_end":101}},{"value":"/ makes no  guarantees that it is valid data, there is no guarantee that the resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199551,"byte_end":199639,"line_start":392,"line_end":392,"column_start":5,"column_end":93}},{"value":"/ [`U16String`] will be valid UTF-16.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199644,"byte_end":199683,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199688,"byte_end":199691,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199696,"byte_end":199781,"line_start":395,"line_end":395,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms (such as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199786,"byte_end":199877,"line_start":396,"line_end":396,"column_start":5,"column_end":96}},{"value":"/ windows) no changes to the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199882,"byte_end":199933,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199938,"byte_end":199941,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199946,"byte_end":199960,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199965,"byte_end":199968,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199973,"byte_end":199984,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":199989,"byte_end":200019,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200024,"byte_end":200047,"line_start":403,"line_end":403,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200052,"byte_end":200095,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_os_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200100,"byte_end":200141,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200146,"byte_end":200149,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200154,"byte_end":200199,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200204,"byte_end":200211,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200216,"byte_end":200239,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200295,"byte_end":200304,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201079,"byte_end":201087,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u16>>::push_str","value":"pub fn push_str<impl AsRef<str>: AsRef<str>>(&mut Self, impl AsRef<str>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given string slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200477,"byte_end":200528,"line_start":418,"line_end":418,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200533,"byte_end":200536,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200541,"byte_end":200631,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200636,"byte_end":200710,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200715,"byte_end":200718,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200723,"byte_end":200737,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200742,"byte_end":200745,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200750,"byte_end":200761,"line_start":425,"line_end":425,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200766,"byte_end":200796,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200801,"byte_end":200824,"line_start":427,"line_end":427,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200829,"byte_end":200871,"line_start":428,"line_end":428,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200876,"byte_end":200940,"line_start":429,"line_end":429,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200945,"byte_end":200966,"line_start":430,"line_end":430,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200971,"byte_end":200974,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":200979,"byte_end":201041,"line_start":432,"line_end":432,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201046,"byte_end":201053,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201058,"byte_end":201067,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201869,"byte_end":201880,"line_start":458,"line_end":458,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u16>>::push_os_str","value":"pub fn push_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(&mut Self,\nimpl AsRef<std::ffi::OsStr>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given string slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201185,"byte_end":201236,"line_start":439,"line_end":439,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201241,"byte_end":201244,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201249,"byte_end":201339,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201344,"byte_end":201418,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201423,"byte_end":201426,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201431,"byte_end":201445,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201450,"byte_end":201453,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201458,"byte_end":201469,"line_start":446,"line_end":446,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201474,"byte_end":201504,"line_start":447,"line_end":447,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201509,"byte_end":201532,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201537,"byte_end":201579,"line_start":449,"line_end":449,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201584,"byte_end":201648,"line_start":450,"line_end":450,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201653,"byte_end":201677,"line_start":451,"line_end":451,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201682,"byte_end":201685,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201690,"byte_end":201752,"line_start":453,"line_end":453,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201757,"byte_end":201764,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201769,"byte_end":201792,"line_start":455,"line_end":455,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":201848,"byte_end":201857,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202098,"byte_end":202107,"line_start":464,"line_end":464,"column_start":12,"column_end":21},"name":"push_char","qualname":"<UString<u16>>::push_char","value":"pub fn push_char(&mut Self, char)","parent":null,"children":[],"decl_id":null,"docs":" Appends the given [`char`][prim@char] to the end of this string.\n","sig":null,"attributes":[{"value":"/ Appends the given [`char`][prim@char] to the end of this string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202004,"byte_end":202072,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202077,"byte_end":202086,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202531,"byte_end":202534,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"pop","qualname":"<UString<u16>>::pop","value":"pub fn pop(&mut Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character or unpaired surrogate from the string buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the last character or unpaired surrogate from the string buffer and returns it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202234,"byte_end":202325,"line_start":469,"line_end":469,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202330,"byte_end":202333,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this String is empty. Otherwise, returns the character cast to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202338,"byte_end":202424,"line_start":471,"line_end":471,"column_start":5,"column_end":91}},{"value":"/ [`u32`][prim@u32] or the value of the unpaired surrogate as a [`u32`][prim@u32] value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":202429,"byte_end":202519,"line_start":472,"line_end":472,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203820,"byte_end":203826,"line_start":507,"line_end":507,"column_start":12,"column_end":18},"name":"remove","qualname":"<UString<u16>>::remove","value":"pub fn remove(&mut Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Removes a [`char`][prim@char] or unpaired surrogate from this string at a position and\n returns it as a [`u32`][prim@u32].","sig":null,"attributes":[{"value":"/ Removes a [`char`][prim@char] or unpaired surrogate from this string at a position and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203473,"byte_end":203563,"line_start":499,"line_end":499,"column_start":5,"column_end":95}},{"value":"/ returns it as a [`u32`][prim@u32].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203568,"byte_end":203606,"line_start":500,"line_end":500,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203611,"byte_end":203614,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This is an _O(n)_ operation, as it requires copying every element in the buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203619,"byte_end":203703,"line_start":502,"line_end":502,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203708,"byte_end":203711,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203716,"byte_end":203728,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203733,"byte_end":203736,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Panics if `idx` is larger than or equal to the string's length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":203741,"byte_end":203808,"line_start":506,"line_end":506,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204477,"byte_end":204483,"line_start":525,"line_end":525,"column_start":12,"column_end":18},"name":"insert","qualname":"<UString<u16>>::insert","value":"pub fn insert(&mut Self, usize, char)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a character into this string at a specified position.","sig":null,"attributes":[{"value":"/ Inserts a character into this string at a specified position.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204211,"byte_end":204276,"line_start":518,"line_end":518,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204281,"byte_end":204284,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This is an _O(n)_ operation as it requires copying every element in the buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204289,"byte_end":204372,"line_start":520,"line_end":520,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204377,"byte_end":204380,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204385,"byte_end":204397,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204402,"byte_end":204405,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Panics if `idx` is larger than the string's length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204410,"byte_end":204465,"line_start":524,"line_end":524,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205333,"byte_end":205343,"line_start":550,"line_end":550,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UString<u32>>::from_chars","value":"pub fn from_chars<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32String`] from a [`char`][prim@char] vector.","sig":null,"attributes":[{"value":"/ Constructs a [`U32String`] from a [`char`][prim@char] vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204827,"byte_end":204892,"line_start":536,"line_end":536,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204897,"byte_end":204900,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204905,"byte_end":204958,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204963,"byte_end":204966,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204971,"byte_end":204985,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204990,"byte_end":204993,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204998,"byte_end":205009,"line_start":542,"line_end":542,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205014,"byte_end":205044,"line_start":543,"line_end":543,"column_start":5,"column_end":35}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205049,"byte_end":205097,"line_start":544,"line_end":544,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205102,"byte_end":205169,"line_start":545,"line_end":545,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205174,"byte_end":205217,"line_start":546,"line_end":546,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_chars(v);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205222,"byte_end":205262,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205267,"byte_end":205309,"line_start":548,"line_end":548,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205314,"byte_end":205321,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206280,"byte_end":206288,"line_start":580,"line_end":580,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u32>>::from_str","value":"pub fn from_str<S: AsRef<str> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32String`] copy from a [`str`].","sig":null,"attributes":[{"value":"/ Encodes a [`U32String`] copy from a [`str`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205724,"byte_end":205772,"line_start":563,"line_end":563,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205777,"byte_end":205780,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`str`]. Since [`str`] will always be valid UTF-8, the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205785,"byte_end":205875,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ resulting [`U32String`] will also be valid UTF-32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205880,"byte_end":205934,"line_start":566,"line_end":566,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205939,"byte_end":205942,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205947,"byte_end":205961,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205966,"byte_end":205969,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205974,"byte_end":205985,"line_start":570,"line_end":570,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":205990,"byte_end":206020,"line_start":571,"line_end":571,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206025,"byte_end":206048,"line_start":572,"line_end":572,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206053,"byte_end":206096,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206101,"byte_end":206139,"line_start":574,"line_end":574,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206144,"byte_end":206147,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206152,"byte_end":206197,"line_start":576,"line_end":576,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206202,"byte_end":206209,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206214,"byte_end":206254,"line_start":578,"line_end":578,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206259,"byte_end":206268,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207340,"byte_end":207351,"line_start":607,"line_end":607,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u32>>::from_os_str","value":"pub fn from_os_str<S: AsRef<std::ffi::OsStr> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a [`U32String`] copy from an [`OsStr`][std::ffi::OsStr].","sig":null,"attributes":[{"value":"/ Encodes a [`U32String`] copy from an [`OsStr`][std::ffi::OsStr].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206426,"byte_end":206494,"line_start":585,"line_end":585,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206499,"byte_end":206502,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the [`OsStr`][std::ffi::OsStr]. Since [`OsStr`][std::ffi::OsStr]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206507,"byte_end":206603,"line_start":587,"line_end":587,"column_start":5,"column_end":101}},{"value":"/ makes no guarantees that it is valid data, there is no guarantee that the resulting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206608,"byte_end":206695,"line_start":588,"line_end":588,"column_start":5,"column_end":92}},{"value":"/ [`U32String`] will be valid UTF-32.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206700,"byte_end":206739,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206744,"byte_end":206747,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Note that the encoding of [`OsStr`][std::ffi::OsStr] is platform-dependent, so on","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206752,"byte_end":206837,"line_start":591,"line_end":591,"column_start":5,"column_end":90}},{"value":"/ some platforms this may make an encoding conversions, while on other platforms no changes to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206842,"byte_end":206938,"line_start":592,"line_end":592,"column_start":5,"column_end":101}},{"value":"/ the string will be made.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206943,"byte_end":206971,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206976,"byte_end":206979,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":206984,"byte_end":206998,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207003,"byte_end":207006,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207011,"byte_end":207022,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207027,"byte_end":207057,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207062,"byte_end":207085,"line_start":599,"line_end":599,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207090,"byte_end":207133,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_os_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207138,"byte_end":207179,"line_start":601,"line_end":601,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207184,"byte_end":207187,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207192,"byte_end":207237,"line_start":603,"line_end":603,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207242,"byte_end":207249,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207254,"byte_end":207277,"line_start":605,"line_end":605,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208084,"byte_end":208097,"line_start":627,"line_end":627,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UString<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`U32String`] from a [`char`][prim@char] pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a [`U32String`] from a [`char`][prim@char] pointer and a length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207519,"byte_end":207598,"line_start":612,"line_end":612,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207603,"byte_end":207606,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207611,"byte_end":207696,"line_start":614,"line_end":614,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207701,"byte_end":207704,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207709,"byte_end":207721,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207726,"byte_end":207729,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207734,"byte_end":207828,"line_start":618,"line_end":618,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207833,"byte_end":207846,"line_start":619,"line_end":619,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207851,"byte_end":207854,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ In addition, the data must meet the safety conditions of [std::slice::from_raw_parts].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207859,"byte_end":207949,"line_start":621,"line_end":621,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207954,"byte_end":207957,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207962,"byte_end":207974,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207979,"byte_end":207982,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":207987,"byte_end":208051,"line_start":625,"line_end":625,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208056,"byte_end":208065,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208794,"byte_end":208802,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u32>>::push_str","value":"pub fn push_str<impl AsRef<str>: AsRef<str>>(&mut Self, impl AsRef<str>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given string slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208192,"byte_end":208243,"line_start":631,"line_end":631,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208248,"byte_end":208251,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208256,"byte_end":208346,"line_start":633,"line_end":633,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208351,"byte_end":208425,"line_start":634,"line_end":634,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208430,"byte_end":208433,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208438,"byte_end":208452,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208457,"byte_end":208460,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208465,"byte_end":208476,"line_start":638,"line_end":638,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208481,"byte_end":208511,"line_start":639,"line_end":639,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208516,"byte_end":208539,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208544,"byte_end":208586,"line_start":641,"line_end":641,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208591,"byte_end":208655,"line_start":642,"line_end":642,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208660,"byte_end":208681,"line_start":643,"line_end":643,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208686,"byte_end":208689,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208694,"byte_end":208756,"line_start":645,"line_end":645,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208761,"byte_end":208768,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208773,"byte_end":208782,"line_start":647,"line_end":647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209595,"byte_end":209606,"line_start":671,"line_end":671,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u32>>::push_os_str","value":"pub fn push_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(&mut Self,\nimpl AsRef<std::ffi::OsStr>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given string slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given string slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208911,"byte_end":208962,"line_start":652,"line_end":652,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208967,"byte_end":208970,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":208975,"byte_end":209065,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209070,"byte_end":209144,"line_start":655,"line_end":655,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209149,"byte_end":209152,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209157,"byte_end":209171,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209176,"byte_end":209179,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209184,"byte_end":209195,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209200,"byte_end":209230,"line_start":660,"line_end":660,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209235,"byte_end":209258,"line_start":661,"line_end":661,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209263,"byte_end":209305,"line_start":662,"line_end":662,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209310,"byte_end":209374,"line_start":663,"line_end":663,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209379,"byte_end":209403,"line_start":664,"line_end":664,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209408,"byte_end":209411,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209416,"byte_end":209478,"line_start":666,"line_end":666,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209483,"byte_end":209490,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209495,"byte_end":209518,"line_start":668,"line_end":668,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209574,"byte_end":209583,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209852,"byte_end":209861,"line_start":678,"line_end":678,"column_start":12,"column_end":21},"name":"push_char","qualname":"<UString<u32>>::push_char","value":"pub fn push_char(&mut Self, char)","parent":null,"children":[],"decl_id":null,"docs":" Appends the given [`char`][prim@char] to the end of this string.\n","sig":null,"attributes":[{"value":"/ Appends the given [`char`][prim@char] to the end of this string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209758,"byte_end":209826,"line_start":676,"line_end":676,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209831,"byte_end":209840,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210077,"byte_end":210080,"line_start":686,"line_end":686,"column_start":12,"column_end":15},"name":"pop","qualname":"<UString<u32>>::pop","value":"pub fn pop(&mut Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last value from the string buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the last value from the string buffer and returns it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":209930,"byte_end":209995,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210000,"byte_end":210003,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this String is empty.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210008,"byte_end":210051,"line_start":684,"line_end":684,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210056,"byte_end":210065,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210439,"byte_end":210445,"line_start":698,"line_end":698,"column_start":12,"column_end":18},"name":"remove","qualname":"<UString<u32>>::remove","value":"pub fn remove(&mut Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from this string at a position and returns it.","sig":null,"attributes":[{"value":"/ Removes a value from this string at a position and returns it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210145,"byte_end":210211,"line_start":690,"line_end":690,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210216,"byte_end":210219,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This is an _O(n)_ operation, as it requires copying every element in the buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210224,"byte_end":210308,"line_start":692,"line_end":692,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210313,"byte_end":210316,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210321,"byte_end":210333,"line_start":694,"line_end":694,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210338,"byte_end":210341,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ Panics if `idx` is larger than or equal to the string's length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210346,"byte_end":210413,"line_start":696,"line_end":696,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210418,"byte_end":210427,"line_start":697,"line_end":697,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210800,"byte_end":210806,"line_start":710,"line_end":710,"column_start":12,"column_end":18},"name":"insert","qualname":"<UString<u32>>::insert","value":"pub fn insert(&mut Self, usize, char)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a character into this string at a specified position.","sig":null,"attributes":[{"value":"/ Inserts a character into this string at a specified position.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210520,"byte_end":210585,"line_start":702,"line_end":702,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210590,"byte_end":210593,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This is an _O(n)_ operation as it requires copying every element in the buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210598,"byte_end":210681,"line_start":704,"line_end":704,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210686,"byte_end":210689,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210694,"byte_end":210706,"line_start":706,"line_end":706,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210711,"byte_end":210714,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Panics if `idx` is larger than the string's length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210719,"byte_end":210774,"line_start":708,"line_end":708,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210779,"byte_end":210788,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227838,"byte_end":227847,"line_start":1425,"line_end":1425,"column_start":10,"column_end":19},"name":"U16String","qualname":"::ustring::U16String","value":"UString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226651,"byte_end":226721,"line_start":1399,"line_end":1399,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226722,"byte_end":226725,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ [`U16String`] is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226726,"byte_end":226821,"line_start":1401,"line_end":1401,"column_start":1,"column_end":96}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226822,"byte_end":226912,"line_start":1402,"line_end":1402,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226913,"byte_end":227006,"line_start":1403,"line_end":1403,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227007,"byte_end":227106,"line_start":1404,"line_end":1404,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227107,"byte_end":227110,"line_start":1405,"line_end":1405,"column_start":1,"column_end":4}},{"value":"/ [`U16CString`][crate::U16CString] should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227111,"byte_end":227206,"line_start":1406,"line_end":1406,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227207,"byte_end":227210,"line_start":1407,"line_end":1407,"column_start":1,"column_end":4}},{"value":"/ [`U16String`] can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227211,"byte_end":227306,"line_start":1408,"line_end":1408,"column_start":1,"column_end":96}},{"value":"/ [`OsString`][std::ffi::OsString] and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227307,"byte_end":227400,"line_start":1409,"line_end":1409,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227401,"byte_end":227404,"line_start":1410,"line_end":1410,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227405,"byte_end":227419,"line_start":1411,"line_end":1411,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227420,"byte_end":227423,"line_start":1412,"line_end":1412,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a [`U16String`] and shows how to convert a [`U16String`] to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227424,"byte_end":227522,"line_start":1413,"line_end":1413,"column_start":1,"column_end":99}},{"value":"/ regular Rust [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227523,"byte_end":227551,"line_start":1414,"line_end":1414,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227552,"byte_end":227555,"line_start":1415,"line_end":1415,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227556,"byte_end":227567,"line_start":1416,"line_end":1416,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227568,"byte_end":227598,"line_start":1417,"line_end":1417,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227599,"byte_end":227618,"line_start":1418,"line_end":1418,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227619,"byte_end":227667,"line_start":1419,"line_end":1419,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227668,"byte_end":227706,"line_start":1420,"line_end":1420,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227707,"byte_end":227743,"line_start":1421,"line_end":1421,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227744,"byte_end":227786,"line_start":1422,"line_end":1422,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227787,"byte_end":227820,"line_start":1423,"line_end":1423,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227821,"byte_end":227828,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":229068,"byte_end":229077,"line_start":1454,"line_end":1454,"column_start":10,"column_end":19},"name":"U32String","qualname":"::ustring::U32String","value":"UString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227865,"byte_end":227940,"line_start":1427,"line_end":1427,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227941,"byte_end":227944,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ [`U32String`] is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":227945,"byte_end":228040,"line_start":1429,"line_end":1429,"column_start":1,"column_end":96}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228041,"byte_end":228131,"line_start":1430,"line_end":1430,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228132,"byte_end":228225,"line_start":1431,"line_end":1431,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228226,"byte_end":228325,"line_start":1432,"line_end":1432,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228326,"byte_end":228329,"line_start":1433,"line_end":1433,"column_start":1,"column_end":4}},{"value":"/ [`U32CString`][crate::U32CString] should be used instead if nul-aware 32-bit strings are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228330,"byte_end":228422,"line_start":1434,"line_end":1434,"column_start":1,"column_end":93}},{"value":"/ required.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228423,"byte_end":228436,"line_start":1435,"line_end":1435,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228437,"byte_end":228440,"line_start":1436,"line_end":1436,"column_start":1,"column_end":4}},{"value":"/ [`U32String`] can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228441,"byte_end":228536,"line_start":1437,"line_end":1437,"column_start":1,"column_end":96}},{"value":"/ [`OsString`][std::ffi::OsString] and [`String`], making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228537,"byte_end":228630,"line_start":1438,"line_end":1438,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228631,"byte_end":228634,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228635,"byte_end":228649,"line_start":1440,"line_end":1440,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228650,"byte_end":228653,"line_start":1441,"line_end":1441,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a [`U32String`] and shows how to convert a [`U32String`] to a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228654,"byte_end":228752,"line_start":1442,"line_end":1442,"column_start":1,"column_end":99}},{"value":"/ regular Rust [`String`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228753,"byte_end":228781,"line_start":1443,"line_end":1443,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228782,"byte_end":228785,"line_start":1444,"line_end":1444,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228786,"byte_end":228797,"line_start":1445,"line_end":1445,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228798,"byte_end":228828,"line_start":1446,"line_end":1446,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228829,"byte_end":228848,"line_start":1447,"line_end":1447,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228849,"byte_end":228897,"line_start":1448,"line_end":1448,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228898,"byte_end":228936,"line_start":1449,"line_end":1449,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228937,"byte_end":228973,"line_start":1450,"line_end":1450,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":228974,"byte_end":229016,"line_start":1451,"line_end":1451,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":229017,"byte_end":229050,"line_start":1452,"line_end":1452,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":229051,"byte_end":229058,"line_start":1453,"line_end":1453,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":229232,"byte_end":229242,"line_start":1458,"line_end":1458,"column_start":10,"column_end":20},"name":"WideString","qualname":"::ustring::WideString","value":"UString<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`U16String`] or [`U32String`] depending on platform. Intended to match typical C\n `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for [`U16String`] or [`U32String`] depending on platform. Intended to match typical C","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":229095,"byte_end":229190,"line_start":1456,"line_end":1456,"column_start":1,"column_end":96}},{"value":"/ `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":229191,"byte_end":229222,"line_start":1457,"line_end":1457,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12258,"byte_end":12263,"line_start":249,"line_end":249,"column_start":11,"column_end":16},"name":"UChar","qualname":"::UChar","value":"UChar: core::fmt::Debug + Sized + Copy + Default + Ord + Eq + private::Sealed","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" Marker trait for primitive types used to represent wide character data. Should not be used\n directly.\n","sig":null,"attributes":[{"value":"/ Marker trait for primitive types used to represent wide character data. Should not be used","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12139,"byte_end":12233,"line_start":247,"line_end":247,"column_start":1,"column_end":95}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12234,"byte_end":12247,"line_start":248,"line_end":248,"column_start":1,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12377,"byte_end":12380,"line_start":251,"line_end":251,"column_start":11,"column_end":14},"name":"NUL","qualname":"::UChar::NUL","value":"Self","parent":{"krate":0,"index":1425},"children":[],"decl_id":null,"docs":" NUL character value.\n","sig":null,"attributes":[{"value":"/ NUL character value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12342,"byte_end":12366,"line_start":250,"line_end":250,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12515,"byte_end":12521,"line_start":263,"line_end":263,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12887,"byte_end":12895,"line_start":277,"line_end":277,"column_start":10,"column_end":18},"name":"WideChar","qualname":"::WideChar","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`u16`] or [`u32`] depending on platform. Intended to match typical C `wchar_t` size\n on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12746,"byte_end":12761,"line_start":274,"line_end":274,"column_start":1,"column_end":16}},{"value":"/ Alias for [`u16`] or [`u32`] depending on platform. Intended to match typical C `wchar_t` size","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12762,"byte_end":12860,"line_start":275,"line_end":275,"column_start":1,"column_end":99}},{"value":"/ on platform.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12861,"byte_end":12877,"line_start":276,"line_end":276,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13672,"byte_end":13690,"line_start":306,"line_end":306,"column_start":8,"column_end":26},"name":"decode_utf16_lossy","qualname":"::decode_utf16_lossy","value":"pub fn decode_utf16_lossy<I>(I)\n-> iter::DecodeUtf16Lossy<<I as IntoIterator>::IntoIter> where\nI: IntoIterator<Item = u16>","parent":null,"children":[],"decl_id":null,"docs":" Creates a lossy decoder iterator over the possibly ill-formed UTF-16 encoded code points in\n `iter`.","sig":null,"attributes":[{"value":"/ Creates a lossy decoder iterator over the possibly ill-formed UTF-16 encoded code points in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12957,"byte_end":13052,"line_start":282,"line_end":282,"column_start":1,"column_end":96}},{"value":"/ `iter`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13053,"byte_end":13064,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13065,"byte_end":13068,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to [`char::decode_utf16`][core::char::decode_utf16] except that any unpaired","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13069,"byte_end":13168,"line_start":285,"line_end":285,"column_start":1,"column_end":100}},{"value":"/ UTF-16 surrogate values are replaced by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13169,"byte_end":13212,"line_start":286,"line_end":286,"column_start":1,"column_end":44}},{"value":"/ [`U+FFFD REPLACEMENT_CHARACTER`][core::char::REPLACEMENT_CHARACTER] (�) instead of returning","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13213,"byte_end":13311,"line_start":287,"line_end":287,"column_start":1,"column_end":97}},{"value":"/ errors.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13312,"byte_end":13323,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13324,"byte_end":13327,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13328,"byte_end":13342,"line_start":290,"line_end":290,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13343,"byte_end":13346,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13347,"byte_end":13354,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"/ use widestring::decode_utf16_lossy;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13355,"byte_end":13394,"line_start":293,"line_end":293,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13395,"byte_end":13398,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13399,"byte_end":13433,"line_start":295,"line_end":295,"column_start":1,"column_end":32}},{"value":"/ let v = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13434,"byte_end":13447,"line_start":296,"line_end":296,"column_start":1,"column_end":14}},{"value":"/     0xD834, 0xDD1E, 0x006d, 0x0075, 0x0073, 0xDD1E, 0x0069, 0x0063, 0xD834,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13448,"byte_end":13527,"line_start":297,"line_end":297,"column_start":1,"column_end":80}},{"value":"/ ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13528,"byte_end":13534,"line_start":298,"line_end":298,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13535,"byte_end":13538,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13539,"byte_end":13554,"line_start":300,"line_end":300,"column_start":1,"column_end":16}},{"value":"/ decode_utf16_lossy(v.iter().copied()).collect::<String>(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13555,"byte_end":13617,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"/ \"𝄞mus�ic�\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13618,"byte_end":13639,"line_start":302,"line_end":302,"column_start":1,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13640,"byte_end":13646,"line_start":303,"line_end":303,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13647,"byte_end":13654,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13655,"byte_end":13664,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14543,"byte_end":14555,"line_start":342,"line_end":342,"column_start":8,"column_end":20},"name":"decode_utf32","qualname":"::decode_utf32","value":"pub fn decode_utf32<I>(I) -> iter::DecodeUtf32<<I as IntoIterator>::IntoIter>\nwhere I: IntoIterator<Item = u32>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decoder iterator over UTF-32 encoded code points in `iter`, returning invalid values\n as `Err`s.","sig":null,"attributes":[{"value":"/ Creates a decoder iterator over UTF-32 encoded code points in `iter`, returning invalid values","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13885,"byte_end":13983,"line_start":315,"line_end":315,"column_start":1,"column_end":99}},{"value":"/ as `Err`s.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13984,"byte_end":13998,"line_start":316,"line_end":316,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":13999,"byte_end":14002,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14003,"byte_end":14017,"line_start":318,"line_end":318,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14018,"byte_end":14021,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14022,"byte_end":14029,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ use widestring::decode_utf32;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14030,"byte_end":14063,"line_start":321,"line_end":321,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14064,"byte_end":14067,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14068,"byte_end":14102,"line_start":323,"line_end":323,"column_start":1,"column_end":32}},{"value":"/ let v = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14103,"byte_end":14116,"line_start":324,"line_end":324,"column_start":1,"column_end":14}},{"value":"/     0x1D11E, 0x6d, 0x75, 0x73, 0xDD1E, 0x69, 0x63, 0x23FD5A,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14117,"byte_end":14181,"line_start":325,"line_end":325,"column_start":1,"column_end":65}},{"value":"/ ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14182,"byte_end":14188,"line_start":326,"line_end":326,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14189,"byte_end":14192,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14193,"byte_end":14208,"line_start":328,"line_end":328,"column_start":1,"column_end":16}},{"value":"/     decode_utf32(v.iter().copied())","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14209,"byte_end":14248,"line_start":329,"line_end":329,"column_start":1,"column_end":40}},{"value":"/         .map(|r| r.map_err(|e| e.invalid_code_point()))","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14249,"byte_end":14308,"line_start":330,"line_end":330,"column_start":1,"column_end":60}},{"value":"/         .collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14309,"byte_end":14342,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/     vec![","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14343,"byte_end":14356,"line_start":332,"line_end":332,"column_start":1,"column_end":14}},{"value":"/         Ok('𝄞'),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14357,"byte_end":14380,"line_start":333,"line_end":333,"column_start":1,"column_end":21}},{"value":"/         Ok('m'), Ok('u'), Ok('s'),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14381,"byte_end":14419,"line_start":334,"line_end":334,"column_start":1,"column_end":39}},{"value":"/         Err(0xDD1E),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14420,"byte_end":14444,"line_start":335,"line_end":335,"column_start":1,"column_end":25}},{"value":"/         Ok('i'), Ok('c'),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14445,"byte_end":14474,"line_start":336,"line_end":336,"column_start":1,"column_end":30}},{"value":"/         Err(0x23FD5A)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14475,"byte_end":14500,"line_start":337,"line_end":337,"column_start":1,"column_end":26}},{"value":"/     ]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14501,"byte_end":14510,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14511,"byte_end":14517,"line_start":339,"line_end":339,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14518,"byte_end":14525,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14526,"byte_end":14535,"line_start":341,"line_end":341,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15379,"byte_end":15397,"line_start":374,"line_end":374,"column_start":8,"column_end":26},"name":"decode_utf32_lossy","qualname":"::decode_utf32_lossy","value":"pub fn decode_utf32_lossy<I>(I)\n-> iter::DecodeUtf32Lossy<<I as IntoIterator>::IntoIter> where\nI: IntoIterator<Item = u32>","parent":null,"children":[],"decl_id":null,"docs":" Creates a lossy decoder iterator over the possibly ill-formed UTF-32 encoded code points in\n `iter`.","sig":null,"attributes":[{"value":"/ Creates a lossy decoder iterator over the possibly ill-formed UTF-32 encoded code points in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14726,"byte_end":14821,"line_start":351,"line_end":351,"column_start":1,"column_end":96}},{"value":"/ `iter`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14822,"byte_end":14833,"line_start":352,"line_end":352,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14834,"byte_end":14837,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to [`decode_utf32`] except that any invalid UTF-32 values are replaced by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14838,"byte_end":14934,"line_start":354,"line_end":354,"column_start":1,"column_end":97}},{"value":"/ [`U+FFFD REPLACEMENT_CHARACTER`][core::char::REPLACEMENT_CHARACTER] (�) instead of returning","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":14935,"byte_end":15033,"line_start":355,"line_end":355,"column_start":1,"column_end":97}},{"value":"/ errors.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15034,"byte_end":15045,"line_start":356,"line_end":356,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15046,"byte_end":15049,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15050,"byte_end":15064,"line_start":358,"line_end":358,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15065,"byte_end":15068,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15069,"byte_end":15076,"line_start":360,"line_end":360,"column_start":1,"column_end":8}},{"value":"/ use widestring::decode_utf32_lossy;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15077,"byte_end":15116,"line_start":361,"line_end":361,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15117,"byte_end":15120,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ // 𝄞mus<invalid>ic<invalid>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15121,"byte_end":15155,"line_start":363,"line_end":363,"column_start":1,"column_end":32}},{"value":"/ let v = [","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15156,"byte_end":15169,"line_start":364,"line_end":364,"column_start":1,"column_end":14}},{"value":"/     0x1D11E, 0x6d, 0x75, 0x73, 0xDD1E, 0x69, 0x63, 0x23FD5A,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15170,"byte_end":15234,"line_start":365,"line_end":365,"column_start":1,"column_end":65}},{"value":"/ ];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15235,"byte_end":15241,"line_start":366,"line_end":366,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15242,"byte_end":15245,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15246,"byte_end":15261,"line_start":368,"line_end":368,"column_start":1,"column_end":16}},{"value":"/ decode_utf32_lossy(v.iter().copied()).collect::<String>(),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15262,"byte_end":15324,"line_start":369,"line_end":369,"column_start":1,"column_end":63}},{"value":"/ \"𝄞mus�ic�\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15325,"byte_end":15346,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15347,"byte_end":15353,"line_start":371,"line_end":371,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15354,"byte_end":15361,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":15362,"byte_end":15371,"line_start":373,"line_end":373,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19266,"byte_end":19274,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19720,"byte_end":19728,"line_start":32,"line_end":32,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20038,"byte_end":20046,"line_start":43,"line_end":43,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20313,"byte_end":20321,"line_start":53,"line_end":53,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20476,"byte_end":20484,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20755,"byte_end":20775,"line_start":73,"line_end":73,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20878,"byte_end":20898,"line_start":79,"line_end":79,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21083,"byte_end":21103,"line_start":86,"line_end":86,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21610,"byte_end":21621,"line_start":102,"line_end":102,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22565,"byte_end":22576,"line_start":140,"line_end":140,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22802,"byte_end":22813,"line_start":147,"line_end":147,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23121,"byte_end":23135,"line_start":158,"line_end":158,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23262,"byte_end":23276,"line_start":165,"line_end":165,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23532,"byte_end":23546,"line_start":175,"line_end":175,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23840,"byte_end":23856,"line_start":186,"line_end":186,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24101,"byte_end":24117,"line_start":197,"line_end":197,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24319,"byte_end":24335,"line_start":204,"line_end":204,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25157,"byte_end":25173,"line_start":27,"line_end":27,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25547,"byte_end":25563,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25836,"byte_end":25847,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26260,"byte_end":26271,"line_start":76,"line_end":76,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26723,"byte_end":26739,"line_start":91,"line_end":91,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27113,"byte_end":27129,"line_start":110,"line_end":110,"column_start":27,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27503,"byte_end":27513,"line_start":121,"line_end":121,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27854,"byte_end":27864,"line_start":135,"line_end":135,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28147,"byte_end":28157,"line_start":149,"line_end":149,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28196,"byte_end":28206,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28670,"byte_end":28680,"line_start":166,"line_end":166,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29023,"byte_end":29033,"line_start":180,"line_end":180,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29316,"byte_end":29326,"line_start":194,"line_end":194,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29365,"byte_end":29375,"line_start":196,"line_end":196,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":30007,"byte_end":30017,"line_start":217,"line_end":217,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":30932,"byte_end":30942,"line_start":251,"line_end":251,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31468,"byte_end":31478,"line_start":271,"line_end":271,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31517,"byte_end":31527,"line_start":273,"line_end":273,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":32125,"byte_end":32141,"line_start":293,"line_end":293,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":32524,"byte_end":32540,"line_start":309,"line_end":309,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33172,"byte_end":33188,"line_start":334,"line_end":334,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33600,"byte_end":33621,"line_start":346,"line_end":346,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":34004,"byte_end":34025,"line_start":362,"line_end":362,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":34648,"byte_end":34669,"line_start":387,"line_end":387,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36472,"byte_end":36477,"line_start":37,"line_end":37,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65239,"byte_end":65244,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71015,"byte_end":71020,"line_start":885,"line_end":885,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92412,"byte_end":92417,"line_start":1374,"line_end":1374,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92538,"byte_end":92543,"line_start":1381,"line_end":1381,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92647,"byte_end":92652,"line_start":1388,"line_end":1388,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92770,"byte_end":92775,"line_start":1395,"line_end":1395,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92888,"byte_end":92895,"line_start":1402,"line_end":1402,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":93080,"byte_end":93087,"line_start":1409,"line_end":1409,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":93673,"byte_end":93676,"line_start":1433,"line_end":1433,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":93943,"byte_end":93946,"line_start":1442,"line_end":1442,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94211,"byte_end":94216,"line_start":1450,"line_end":1450,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94386,"byte_end":94391,"line_start":1457,"line_end":1457,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96917,"byte_end":96924,"line_start":1507,"line_end":1507,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":97108,"byte_end":97115,"line_start":1514,"line_end":1514,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":97301,"byte_end":97308,"line_start":1521,"line_end":1521,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":97746,"byte_end":97753,"line_start":1533,"line_end":1533,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100335,"byte_end":100343,"line_start":64,"line_end":64,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117580,"byte_end":117588,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125981,"byte_end":125989,"line_start":747,"line_end":747,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144211,"byte_end":144219,"line_start":1204,"line_end":1204,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144341,"byte_end":144349,"line_start":1210,"line_end":1210,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144468,"byte_end":144476,"line_start":1217,"line_end":1217,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144594,"byte_end":144602,"line_start":1224,"line_end":1224,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144725,"byte_end":144733,"line_start":1231,"line_end":1231,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144861,"byte_end":144869,"line_start":1238,"line_end":1238,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145000,"byte_end":145010,"line_start":1245,"line_end":1245,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145195,"byte_end":145205,"line_start":1252,"line_end":1252,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145391,"byte_end":145399,"line_start":1259,"line_end":1259,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145536,"byte_end":145544,"line_start":1266,"line_end":1266,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145689,"byte_end":145697,"line_start":1275,"line_end":1275,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146001,"byte_end":146009,"line_start":1285,"line_end":1285,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146186,"byte_end":146189,"line_start":1294,"line_end":1294,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146326,"byte_end":146329,"line_start":1301,"line_end":1301,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146505,"byte_end":146513,"line_start":1309,"line_end":1309,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146681,"byte_end":146689,"line_start":1317,"line_end":1317,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146831,"byte_end":146838,"line_start":1324,"line_end":1324,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146992,"byte_end":147000,"line_start":1331,"line_end":1331,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147128,"byte_end":147131,"line_start":1338,"line_end":1338,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147288,"byte_end":147291,"line_start":1345,"line_end":1345,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147453,"byte_end":147461,"line_start":1352,"line_end":1352,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147593,"byte_end":147596,"line_start":1359,"line_end":1359,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147744,"byte_end":147752,"line_start":1366,"line_end":1366,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147927,"byte_end":147935,"line_start":1375,"line_end":1375,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148100,"byte_end":148108,"line_start":1382,"line_end":1382,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148253,"byte_end":148261,"line_start":1389,"line_end":1389,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148414,"byte_end":148422,"line_start":1396,"line_end":1396,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148580,"byte_end":148588,"line_start":1403,"line_end":1403,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148751,"byte_end":148759,"line_start":1410,"line_end":1410,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148935,"byte_end":148943,"line_start":1417,"line_end":1417,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149109,"byte_end":149117,"line_start":1424,"line_end":1424,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149274,"byte_end":149282,"line_start":1431,"line_end":1431,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149464,"byte_end":149472,"line_start":1438,"line_end":1438,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149662,"byte_end":149670,"line_start":1445,"line_end":1445,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149865,"byte_end":149873,"line_start":1452,"line_end":1452,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150073,"byte_end":150081,"line_start":1459,"line_end":1459,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150294,"byte_end":150302,"line_start":1466,"line_end":1466,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150505,"byte_end":150513,"line_start":1473,"line_end":1473,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150694,"byte_end":150699,"line_start":1480,"line_end":1480,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154705,"byte_end":154709,"line_start":43,"line_end":43,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167166,"byte_end":167170,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172828,"byte_end":172832,"line_start":509,"line_end":509,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181049,"byte_end":181053,"line_start":714,"line_end":714,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181168,"byte_end":181172,"line_start":721,"line_end":721,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181302,"byte_end":181306,"line_start":728,"line_end":728,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181410,"byte_end":181414,"line_start":735,"line_end":735,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181524,"byte_end":181530,"line_start":742,"line_end":742,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181706,"byte_end":181712,"line_start":749,"line_end":749,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":182597,"byte_end":182601,"line_start":791,"line_end":791,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":182827,"byte_end":182831,"line_start":803,"line_end":803,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183064,"byte_end":183068,"line_start":813,"line_end":813,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183240,"byte_end":183244,"line_start":820,"line_end":820,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185999,"byte_end":186006,"line_start":876,"line_end":876,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":186190,"byte_end":186197,"line_start":883,"line_end":883,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":186383,"byte_end":186390,"line_start":890,"line_end":890,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":186828,"byte_end":186835,"line_start":902,"line_end":902,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189572,"byte_end":189579,"line_start":71,"line_end":71,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198652,"byte_end":198659,"line_start":365,"line_end":365,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204808,"byte_end":204815,"line_start":535,"line_end":535,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210924,"byte_end":210931,"line_start":715,"line_end":715,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211116,"byte_end":211123,"line_start":725,"line_end":725,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211294,"byte_end":211303,"line_start":735,"line_end":735,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211469,"byte_end":211478,"line_start":745,"line_end":745,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211664,"byte_end":211671,"line_start":755,"line_end":755,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211809,"byte_end":211816,"line_start":762,"line_end":762,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211940,"byte_end":211949,"line_start":769,"line_end":769,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212070,"byte_end":212079,"line_start":776,"line_end":776,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212209,"byte_end":212216,"line_start":783,"line_end":783,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212345,"byte_end":212352,"line_start":790,"line_end":790,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212482,"byte_end":212489,"line_start":797,"line_end":797,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212606,"byte_end":212613,"line_start":804,"line_end":804,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212732,"byte_end":212739,"line_start":811,"line_end":811,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212864,"byte_end":212871,"line_start":818,"line_end":818,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213000,"byte_end":213009,"line_start":825,"line_end":825,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213185,"byte_end":213194,"line_start":832,"line_end":832,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213371,"byte_end":213374,"line_start":839,"line_end":839,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213598,"byte_end":213605,"line_start":848,"line_end":848,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213747,"byte_end":213754,"line_start":857,"line_end":857,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213904,"byte_end":213911,"line_start":864,"line_end":864,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214109,"byte_end":214116,"line_start":871,"line_end":871,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214300,"byte_end":214309,"line_start":878,"line_end":878,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214489,"byte_end":214498,"line_start":885,"line_end":885,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214687,"byte_end":214694,"line_start":892,"line_end":892,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214886,"byte_end":214893,"line_start":899,"line_end":899,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215082,"byte_end":215091,"line_start":906,"line_end":906,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215265,"byte_end":215274,"line_start":913,"line_end":913,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215446,"byte_end":215455,"line_start":920,"line_end":920,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215736,"byte_end":215745,"line_start":930,"line_end":930,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216034,"byte_end":216043,"line_start":940,"line_end":940,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216216,"byte_end":216225,"line_start":947,"line_end":947,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216408,"byte_end":216415,"line_start":954,"line_end":954,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216618,"byte_end":216625,"line_start":961,"line_end":961,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216820,"byte_end":216823,"line_start":968,"line_end":968,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216950,"byte_end":216953,"line_start":975,"line_end":975,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217087,"byte_end":217090,"line_start":982,"line_end":982,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217216,"byte_end":217223,"line_start":989,"line_end":989,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217347,"byte_end":217354,"line_start":996,"line_end":996,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217479,"byte_end":217486,"line_start":1003,"line_end":1003,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217611,"byte_end":217618,"line_start":1010,"line_end":1010,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217731,"byte_end":217738,"line_start":1017,"line_end":1017,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217849,"byte_end":217856,"line_start":1024,"line_end":1024,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217964,"byte_end":217971,"line_start":1031,"line_end":1031,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218117,"byte_end":218124,"line_start":1039,"line_end":1039,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218288,"byte_end":218295,"line_start":1047,"line_end":1047,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218463,"byte_end":218471,"line_start":1055,"line_end":1055,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218623,"byte_end":218631,"line_start":1063,"line_end":1063,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218784,"byte_end":218791,"line_start":1070,"line_end":1070,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218917,"byte_end":218920,"line_start":1077,"line_end":1077,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219059,"byte_end":219062,"line_start":1084,"line_end":1084,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219209,"byte_end":219212,"line_start":1091,"line_end":1091,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219452,"byte_end":219459,"line_start":1099,"line_end":1099,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219596,"byte_end":219599,"line_start":1106,"line_end":1106,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219753,"byte_end":219760,"line_start":1113,"line_end":1113,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219999,"byte_end":220006,"line_start":1122,"line_end":1122,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220226,"byte_end":220235,"line_start":1131,"line_end":1131,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220447,"byte_end":220456,"line_start":1140,"line_end":1140,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220677,"byte_end":220684,"line_start":1149,"line_end":1149,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220912,"byte_end":220919,"line_start":1158,"line_end":1158,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221133,"byte_end":221142,"line_start":1167,"line_end":1167,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221348,"byte_end":221357,"line_start":1176,"line_end":1176,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221561,"byte_end":221570,"line_start":1185,"line_end":1185,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221772,"byte_end":221781,"line_start":1194,"line_end":1194,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221991,"byte_end":222000,"line_start":1203,"line_end":1203,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222214,"byte_end":222223,"line_start":1212,"line_end":1212,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222447,"byte_end":222454,"line_start":1221,"line_end":1221,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222698,"byte_end":222705,"line_start":1230,"line_end":1230,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222911,"byte_end":222920,"line_start":1239,"line_end":1239,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223075,"byte_end":223084,"line_start":1248,"line_end":1248,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223253,"byte_end":223260,"line_start":1257,"line_end":1257,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223470,"byte_end":223477,"line_start":1269,"line_end":1269,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223674,"byte_end":223681,"line_start":1278,"line_end":1278,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223825,"byte_end":223832,"line_start":1285,"line_end":1285,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223980,"byte_end":223987,"line_start":1292,"line_end":1292,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224153,"byte_end":224160,"line_start":1299,"line_end":1299,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224317,"byte_end":224324,"line_start":1306,"line_end":1306,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224486,"byte_end":224493,"line_start":1313,"line_end":1313,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224668,"byte_end":224675,"line_start":1320,"line_end":1320,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224838,"byte_end":224845,"line_start":1327,"line_end":1327,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225026,"byte_end":225033,"line_start":1334,"line_end":1334,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225222,"byte_end":225229,"line_start":1341,"line_end":1341,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225423,"byte_end":225430,"line_start":1348,"line_end":1348,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225629,"byte_end":225636,"line_start":1355,"line_end":1355,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225848,"byte_end":225855,"line_start":1362,"line_end":1362,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226058,"byte_end":226065,"line_start":1369,"line_end":1369,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226248,"byte_end":226252,"line_start":1376,"line_end":1376,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226391,"byte_end":226400,"line_start":1385,"line_end":1385,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11151,"byte_end":11156,"line_start":214,"line_end":214,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11166,"byte_end":11170,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":61}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11267,"byte_end":11272,"line_start":219,"line_end":219,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":212}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11357,"byte_end":11365,"line_start":222,"line_end":222,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":421}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11375,"byte_end":11379,"line_start":223,"line_end":223,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":721}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":11464,"byte_end":11471,"line_start":226,"line_end":226,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":909}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19266,"byte_end":19274,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":19720,"byte_end":19728,"line_start":32,"line_end":32,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1454},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20038,"byte_end":20046,"line_start":43,"line_end":43,"column_start":55,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1454},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20313,"byte_end":20321,"line_start":53,"line_end":53,"column_start":40,"column_end":48},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1454},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20476,"byte_end":20484,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1454},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20755,"byte_end":20775,"line_start":73,"line_end":73,"column_start":6,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":20878,"byte_end":20898,"line_start":79,"line_end":79,"column_start":29,"column_end":49},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1468},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21083,"byte_end":21103,"line_start":86,"line_end":86,"column_start":28,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1468},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":21610,"byte_end":21621,"line_start":102,"line_end":102,"column_start":9,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22565,"byte_end":22576,"line_start":140,"line_end":140,"column_start":32,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":22802,"byte_end":22813,"line_start":147,"line_end":147,"column_start":45,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1474},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23121,"byte_end":23135,"line_start":158,"line_end":158,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23262,"byte_end":23276,"line_start":165,"line_end":165,"column_start":29,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23532,"byte_end":23546,"line_start":175,"line_end":175,"column_start":28,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":23840,"byte_end":23856,"line_start":186,"line_end":186,"column_start":6,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24101,"byte_end":24117,"line_start":197,"line_end":197,"column_start":29,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1490},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\error.rs","byte_start":24319,"byte_end":24335,"line_start":204,"line_end":204,"column_start":28,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1490},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25157,"byte_end":25173,"line_start":27,"line_end":27,"column_start":22,"column_end":38},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25547,"byte_end":25563,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":25836,"byte_end":25847,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26260,"byte_end":26271,"line_start":76,"line_end":76,"column_start":27,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":26723,"byte_end":26739,"line_start":91,"line_end":91,"column_start":22,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1514},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27113,"byte_end":27129,"line_start":110,"line_end":110,"column_start":27,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1514},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27503,"byte_end":27513,"line_start":121,"line_end":121,"column_start":10,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":27854,"byte_end":27864,"line_start":135,"line_end":135,"column_start":23,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28147,"byte_end":28157,"line_start":149,"line_end":149,"column_start":28,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28196,"byte_end":28206,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":28670,"byte_end":28680,"line_start":166,"line_end":166,"column_start":10,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29023,"byte_end":29033,"line_start":180,"line_end":180,"column_start":23,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1529},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29316,"byte_end":29326,"line_start":194,"line_end":194,"column_start":28,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1529},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":29365,"byte_end":29375,"line_start":196,"line_end":196,"column_start":31,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1529},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":30007,"byte_end":30017,"line_start":217,"line_end":217,"column_start":10,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":30932,"byte_end":30942,"line_start":251,"line_end":251,"column_start":23,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1535},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31468,"byte_end":31478,"line_start":271,"line_end":271,"column_start":28,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1535},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":31517,"byte_end":31527,"line_start":273,"line_end":273,"column_start":31,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1535},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":32125,"byte_end":32141,"line_start":293,"line_end":293,"column_start":10,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":32524,"byte_end":32540,"line_start":309,"line_end":309,"column_start":23,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33172,"byte_end":33188,"line_start":334,"line_end":334,"column_start":28,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":33600,"byte_end":33621,"line_start":346,"line_end":346,"column_start":10,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":34004,"byte_end":34025,"line_start":362,"line_end":362,"column_start":23,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1562},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\iter.rs","byte_start":34648,"byte_end":34669,"line_start":387,"line_end":387,"column_start":28,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1562},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":36472,"byte_end":36477,"line_start":37,"line_end":37,"column_start":16,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":65239,"byte_end":65244,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":71015,"byte_end":71020,"line_start":885,"line_end":885,"column_start":6,"column_end":11},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92412,"byte_end":92417,"line_start":1374,"line_end":1374,"column_start":36,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92538,"byte_end":92543,"line_start":1381,"line_end":1381,"column_start":36,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92647,"byte_end":92652,"line_start":1388,"line_end":1388,"column_start":31,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92770,"byte_end":92775,"line_start":1395,"line_end":1395,"column_start":35,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":92888,"byte_end":92895,"line_start":1402,"line_end":1402,"column_start":27,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":93080,"byte_end":93087,"line_start":1409,"line_end":1409,"column_start":27,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":93673,"byte_end":93676,"line_start":1433,"line_end":1433,"column_start":28,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":93943,"byte_end":93946,"line_start":1442,"line_end":1442,"column_start":43,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94211,"byte_end":94216,"line_start":1450,"line_end":1450,"column_start":46,"column_end":51},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":94386,"byte_end":94391,"line_start":1457,"line_end":1457,"column_start":47,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":96917,"byte_end":96924,"line_start":1507,"line_end":1507,"column_start":31,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":97108,"byte_end":97115,"line_start":1514,"line_end":1514,"column_start":31,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":97301,"byte_end":97308,"line_start":1521,"line_end":1521,"column_start":33,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstr.rs","byte_start":97746,"byte_end":97753,"line_start":1533,"line_end":1533,"column_start":33,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":100335,"byte_end":100343,"line_start":64,"line_end":64,"column_start":16,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":117580,"byte_end":117588,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":125981,"byte_end":125989,"line_start":747,"line_end":747,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144211,"byte_end":144219,"line_start":1204,"line_end":1204,"column_start":36,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144341,"byte_end":144349,"line_start":1210,"line_end":1210,"column_start":36,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144468,"byte_end":144476,"line_start":1217,"line_end":1217,"column_start":31,"column_end":39},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144594,"byte_end":144602,"line_start":1224,"line_end":1224,"column_start":35,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144725,"byte_end":144733,"line_start":1231,"line_end":1231,"column_start":37,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":144861,"byte_end":144869,"line_start":1238,"line_end":1238,"column_start":40,"column_end":48},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145000,"byte_end":145010,"line_start":1245,"line_end":1245,"column_start":27,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145195,"byte_end":145205,"line_start":1252,"line_end":1252,"column_start":27,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145391,"byte_end":145399,"line_start":1259,"line_end":1259,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145536,"byte_end":145544,"line_start":1266,"line_end":1266,"column_start":26,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":145689,"byte_end":145697,"line_start":1275,"line_end":1275,"column_start":29,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146001,"byte_end":146009,"line_start":1285,"line_end":1285,"column_start":25,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146186,"byte_end":146189,"line_start":1294,"line_end":1294,"column_start":38,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146326,"byte_end":146329,"line_start":1301,"line_end":1301,"column_start":42,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146505,"byte_end":146513,"line_start":1309,"line_end":1309,"column_start":40,"column_end":48},"kind":{"Impl":{"id":75}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146681,"byte_end":146689,"line_start":1317,"line_end":1317,"column_start":40,"column_end":48},"kind":{"Impl":{"id":76}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146831,"byte_end":146838,"line_start":1324,"line_end":1324,"column_start":38,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":146992,"byte_end":147000,"line_start":1331,"line_end":1331,"column_start":65,"column_end":73},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147128,"byte_end":147131,"line_start":1338,"line_end":1338,"column_start":35,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147288,"byte_end":147291,"line_start":1345,"line_end":1345,"column_start":35,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147453,"byte_end":147461,"line_start":1352,"line_end":1352,"column_start":40,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147593,"byte_end":147596,"line_start":1359,"line_end":1359,"column_start":38,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147744,"byte_end":147752,"line_start":1366,"line_end":1366,"column_start":37,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":147927,"byte_end":147935,"line_start":1375,"line_end":1375,"column_start":40,"column_end":48},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":3365}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148100,"byte_end":148108,"line_start":1382,"line_end":1382,"column_start":39,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148253,"byte_end":148261,"line_start":1389,"line_end":1389,"column_start":40,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148414,"byte_end":148422,"line_start":1396,"line_end":1396,"column_start":47,"column_end":55},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148580,"byte_end":148588,"line_start":1403,"line_end":1403,"column_start":48,"column_end":56},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148751,"byte_end":148759,"line_start":1410,"line_end":1410,"column_start":52,"column_end":60},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":148935,"byte_end":148943,"line_start":1417,"line_end":1417,"column_start":53,"column_end":61},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149109,"byte_end":149117,"line_start":1424,"line_end":1424,"column_start":42,"column_end":50},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149274,"byte_end":149282,"line_start":1431,"line_end":1431,"column_start":40,"column_end":48},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149464,"byte_end":149472,"line_start":1438,"line_end":1438,"column_start":41,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149662,"byte_end":149670,"line_start":1445,"line_end":1445,"column_start":48,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":149865,"byte_end":149873,"line_start":1452,"line_end":1452,"column_start":49,"column_end":57},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150073,"byte_end":150081,"line_start":1459,"line_end":1459,"column_start":53,"column_end":61},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150294,"byte_end":150302,"line_start":1466,"line_end":1466,"column_start":54,"column_end":62},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150505,"byte_end":150513,"line_start":1473,"line_end":1473,"column_start":43,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ucstring.rs","byte_start":150694,"byte_end":150699,"line_start":1480,"line_end":1480,"column_start":28,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1572},"to":{"krate":5,"index":669}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":154705,"byte_end":154709,"line_start":43,"line_end":43,"column_start":16,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":167166,"byte_end":167170,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":172828,"byte_end":172832,"line_start":509,"line_end":509,"column_start":6,"column_end":10},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181049,"byte_end":181053,"line_start":714,"line_end":714,"column_start":35,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181168,"byte_end":181172,"line_start":721,"line_end":721,"column_start":31,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181302,"byte_end":181306,"line_start":728,"line_end":728,"column_start":35,"column_end":39},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181410,"byte_end":181414,"line_start":735,"line_end":735,"column_start":31,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181524,"byte_end":181530,"line_start":742,"line_end":742,"column_start":27,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":890},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":181706,"byte_end":181712,"line_start":749,"line_end":749,"column_start":27,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":891},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":182597,"byte_end":182601,"line_start":791,"line_end":791,"column_start":32,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":182827,"byte_end":182831,"line_start":803,"line_end":803,"column_start":35,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":3365}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183064,"byte_end":183068,"line_start":813,"line_end":813,"column_start":47,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":183240,"byte_end":183244,"line_start":820,"line_end":820,"column_start":48,"column_end":52},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1623},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":185999,"byte_end":186006,"line_start":876,"line_end":876,"column_start":31,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":186190,"byte_end":186197,"line_start":883,"line_end":883,"column_start":31,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":186383,"byte_end":186390,"line_start":890,"line_end":890,"column_start":33,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustr.rs","byte_start":186828,"byte_end":186835,"line_start":902,"line_end":902,"column_start":33,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":189572,"byte_end":189579,"line_start":71,"line_end":71,"column_start":16,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":198652,"byte_end":198659,"line_start":365,"line_end":365,"column_start":6,"column_end":13},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":204808,"byte_end":204815,"line_start":535,"line_end":535,"column_start":6,"column_end":13},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":210924,"byte_end":210931,"line_start":715,"line_end":715,"column_start":34,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211116,"byte_end":211123,"line_start":725,"line_end":725,"column_start":35,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211294,"byte_end":211303,"line_start":735,"line_end":735,"column_start":20,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211469,"byte_end":211478,"line_start":745,"line_end":745,"column_start":20,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211664,"byte_end":211671,"line_start":755,"line_end":755,"column_start":40,"column_end":47},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211809,"byte_end":211816,"line_start":762,"line_end":762,"column_start":41,"column_end":48},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":211940,"byte_end":211949,"line_start":769,"line_end":769,"column_start":26,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212070,"byte_end":212079,"line_start":776,"line_end":776,"column_start":26,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212209,"byte_end":212216,"line_start":783,"line_end":783,"column_start":35,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212345,"byte_end":212352,"line_start":790,"line_end":790,"column_start":31,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212482,"byte_end":212489,"line_start":797,"line_end":797,"column_start":35,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212606,"byte_end":212613,"line_start":804,"line_end":804,"column_start":31,"column_end":38},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212732,"byte_end":212739,"line_start":811,"line_end":811,"column_start":36,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":212864,"byte_end":212871,"line_start":818,"line_end":818,"column_start":39,"column_end":46},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213000,"byte_end":213009,"line_start":825,"line_end":825,"column_start":27,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213185,"byte_end":213194,"line_start":832,"line_end":832,"column_start":27,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213371,"byte_end":213374,"line_start":839,"line_end":839,"column_start":28,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213598,"byte_end":213605,"line_start":848,"line_end":848,"column_start":26,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213747,"byte_end":213754,"line_start":857,"line_end":857,"column_start":29,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":213904,"byte_end":213911,"line_start":864,"line_end":864,"column_start":44,"column_end":51},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214109,"byte_end":214116,"line_start":871,"line_end":871,"column_start":45,"column_end":52},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214300,"byte_end":214309,"line_start":878,"line_end":878,"column_start":30,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214489,"byte_end":214498,"line_start":885,"line_end":885,"column_start":30,"column_end":39},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214687,"byte_end":214694,"line_start":892,"line_end":892,"column_start":39,"column_end":46},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":214886,"byte_end":214893,"line_start":899,"line_end":899,"column_start":40,"column_end":47},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215082,"byte_end":215091,"line_start":906,"line_end":906,"column_start":25,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215265,"byte_end":215274,"line_start":913,"line_end":913,"column_start":25,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215446,"byte_end":215455,"line_start":920,"line_end":920,"column_start":23,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":215736,"byte_end":215745,"line_start":930,"line_end":930,"column_start":23,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216034,"byte_end":216043,"line_start":940,"line_end":940,"column_start":31,"column_end":40},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216216,"byte_end":216225,"line_start":947,"line_end":947,"column_start":31,"column_end":40},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216408,"byte_end":216415,"line_start":954,"line_end":954,"column_start":41,"column_end":48},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216618,"byte_end":216625,"line_start":961,"line_end":961,"column_start":49,"column_end":56},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216820,"byte_end":216823,"line_start":968,"line_end":968,"column_start":37,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":216950,"byte_end":216953,"line_start":975,"line_end":975,"column_start":33,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217087,"byte_end":217090,"line_start":982,"line_end":982,"column_start":33,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217216,"byte_end":217223,"line_start":989,"line_end":989,"column_start":25,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217347,"byte_end":217354,"line_start":996,"line_end":996,"column_start":25,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217479,"byte_end":217486,"line_start":1003,"line_end":1003,"column_start":26,"column_end":33},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217611,"byte_end":217618,"line_start":1010,"line_end":1010,"column_start":23,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217731,"byte_end":217738,"line_start":1017,"line_end":1017,"column_start":23,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217849,"byte_end":217856,"line_start":1024,"line_end":1024,"column_start":21,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":217964,"byte_end":217971,"line_start":1031,"line_end":1031,"column_start":21,"column_end":28},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218117,"byte_end":218124,"line_start":1039,"line_end":1039,"column_start":35,"column_end":42},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218288,"byte_end":218295,"line_start":1047,"line_end":1047,"column_start":35,"column_end":42},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218463,"byte_end":218471,"line_start":1055,"line_end":1055,"column_start":39,"column_end":47},"kind":{"Impl":{"id":165}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218623,"byte_end":218631,"line_start":1063,"line_end":1063,"column_start":39,"column_end":47},"kind":{"Impl":{"id":166}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218784,"byte_end":218791,"line_start":1070,"line_end":1070,"column_start":64,"column_end":71},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":218917,"byte_end":218920,"line_start":1077,"line_end":1077,"column_start":34,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219059,"byte_end":219062,"line_start":1084,"line_end":1084,"column_start":34,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219209,"byte_end":219212,"line_start":1091,"line_end":1091,"column_start":42,"column_end":45},"kind":{"Impl":{"id":170}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219452,"byte_end":219459,"line_start":1099,"line_end":1099,"column_start":39,"column_end":46},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219596,"byte_end":219599,"line_start":1106,"line_end":1106,"column_start":37,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219753,"byte_end":219760,"line_start":1113,"line_end":1113,"column_start":55,"column_end":62},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":219999,"byte_end":220006,"line_start":1122,"line_end":1122,"column_start":56,"column_end":63},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220226,"byte_end":220235,"line_start":1131,"line_end":1131,"column_start":36,"column_end":45},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220447,"byte_end":220456,"line_start":1140,"line_end":1140,"column_start":36,"column_end":45},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220677,"byte_end":220684,"line_start":1149,"line_end":1149,"column_start":45,"column_end":52},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":220912,"byte_end":220919,"line_start":1158,"line_end":1158,"column_start":46,"column_end":53},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221133,"byte_end":221142,"line_start":1167,"line_end":1167,"column_start":31,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221348,"byte_end":221357,"line_start":1176,"line_end":1176,"column_start":31,"column_end":40},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221561,"byte_end":221570,"line_start":1185,"line_end":1185,"column_start":29,"column_end":38},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221772,"byte_end":221781,"line_start":1194,"line_end":1194,"column_start":29,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":221991,"byte_end":222000,"line_start":1203,"line_end":1203,"column_start":37,"column_end":46},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222214,"byte_end":222223,"line_start":1212,"line_end":1212,"column_start":37,"column_end":46},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222447,"byte_end":222454,"line_start":1221,"line_end":1221,"column_start":47,"column_end":54},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222698,"byte_end":222705,"line_start":1230,"line_end":1230,"column_start":60,"column_end":67},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":222911,"byte_end":222920,"line_start":1239,"line_end":1239,"column_start":18,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223075,"byte_end":223084,"line_start":1248,"line_end":1248,"column_start":18,"column_end":27},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223253,"byte_end":223260,"line_start":1257,"line_end":1257,"column_start":32,"column_end":39},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223470,"byte_end":223477,"line_start":1269,"line_end":1269,"column_start":35,"column_end":42},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3365}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223674,"byte_end":223681,"line_start":1278,"line_end":1278,"column_start":39,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223825,"byte_end":223832,"line_start":1285,"line_end":1285,"column_start":40,"column_end":47},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":223980,"byte_end":223987,"line_start":1292,"line_end":1292,"column_start":43,"column_end":50},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224153,"byte_end":224160,"line_start":1299,"line_end":1299,"column_start":47,"column_end":54},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224317,"byte_end":224324,"line_start":1306,"line_end":1306,"column_start":48,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224486,"byte_end":224493,"line_start":1313,"line_end":1313,"column_start":52,"column_end":59},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224668,"byte_end":224675,"line_start":1320,"line_end":1320,"column_start":53,"column_end":60},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":224838,"byte_end":224845,"line_start":1327,"line_end":1327,"column_start":40,"column_end":47},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225026,"byte_end":225033,"line_start":1334,"line_end":1334,"column_start":41,"column_end":48},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225222,"byte_end":225229,"line_start":1341,"line_end":1341,"column_start":48,"column_end":55},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225423,"byte_end":225430,"line_start":1348,"line_end":1348,"column_start":49,"column_end":56},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225629,"byte_end":225636,"line_start":1355,"line_end":1355,"column_start":53,"column_end":60},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":225848,"byte_end":225855,"line_start":1362,"line_end":1362,"column_start":54,"column_end":61},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226058,"byte_end":226065,"line_start":1369,"line_end":1369,"column_start":44,"column_end":51},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226248,"byte_end":226252,"line_start":1376,"line_end":1376,"column_start":28,"column_end":32},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1623},"to":{"krate":5,"index":669}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\ustring.rs","byte_start":226391,"byte_end":226400,"line_start":1385,"line_end":1385,"column_start":16,"column_end":25},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":9635}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12276,"byte_end":12281,"line_start":249,"line_end":249,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":9685},"to":{"krate":0,"index":1425}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12284,"byte_end":12289,"line_start":249,"line_end":249,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1425}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12292,"byte_end":12296,"line_start":249,"line_end":249,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":1425}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12299,"byte_end":12306,"line_start":249,"line_end":249,"column_start":52,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":3035},"to":{"krate":0,"index":1425}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12309,"byte_end":12312,"line_start":249,"line_end":249,"column_start":62,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2745},"to":{"krate":0,"index":1425}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12315,"byte_end":12317,"line_start":249,"line_end":249,"column_start":68,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":1425}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.5.1\\src\\lib.rs","byte_start":12329,"byte_end":12335,"line_start":249,"line_end":249,"column_start":82,"column_end":88},"kind":"SuperTrait","from":{"krate":0,"index":1432},"to":{"krate":0,"index":1425}}]}