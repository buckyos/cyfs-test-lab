{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","lru_time_cache","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7333bb2fbd0cfafa","-C","extra-filename=-7333bb2fbd0cfafa","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\liblru_time_cache-7333bb2fbd0cfafa.rmeta"},"prelude":{"crate_id":{"name":"lru_time_cache","disambiguator":[10910651217816689586,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":507,"byte_end":31070,"line_start":10,"line_end":982,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":2977,"byte_end":2981,"line_start":95,"line_end":95,"column_start":23,"column_end":27},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":2983,"byte_end":2993,"line_start":95,"line_end":95,"column_start":29,"column_end":39},"alias_span":null,"name":"NotifyIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":2995,"byte_end":3003,"line_start":95,"line_end":95,"column_start":41,"column_end":49},"alias_span":null,"name":"PeekIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3005,"byte_end":3015,"line_start":95,"line_end":95,"column_start":51,"column_end":61},"alias_span":null,"name":"TimedEntry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":507,"byte_end":31070,"line_start":10,"line_end":982,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":130},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":147},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":213},{"krate":0,"index":217}],"decl_id":null,"docs":" # Least Recently Used (LRU) Cache","sig":null,"attributes":[{"value":"/ # Least Recently Used (LRU) Cache","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":507,"byte_end":544,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":545,"byte_end":548,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Implementation of a Least Recently Used","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":549,"byte_end":592,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/ [caching algorithm](http://en.wikipedia.org/wiki/Cache_algorithms) in a container which may be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":593,"byte_end":691,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ limited by size or time, ordered by most recently seen.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":692,"byte_end":751,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":752,"byte_end":755,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":756,"byte_end":770,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":771,"byte_end":774,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":775,"byte_end":782,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ extern crate lru_time_cache;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":783,"byte_end":815,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ use lru_time_cache::LruCache;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":816,"byte_end":849,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":850,"byte_end":853,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":854,"byte_end":871,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/ // Construct an `LruCache` of `<u8, String>`s, limited by key count","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":872,"byte_end":943,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ let max_count = 10;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":944,"byte_end":967,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ let _lru_cache = LruCache::<u8, String>::with_capacity(max_count);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":968,"byte_end":1038,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1039,"byte_end":1042,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Construct an `LruCache` of `<String, i64>`s, limited by expiry time","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1043,"byte_end":1117,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ let time_to_live = ::std::time::Duration::from_millis(100);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1118,"byte_end":1181,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ let _lru_cache = LruCache::<String, i64>::with_expiry_duration(time_to_live);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1182,"byte_end":1263,"line_start":29,"line_end":29,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1264,"byte_end":1267,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // Construct an `LruCache` of `<u64, Vec<u8>>`s, limited by key count and expiry time","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1268,"byte_end":1357,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ let _lru_cache = LruCache::<u64, Vec<u8>>::with_expiry_duration_and_capacity(time_to_live,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1358,"byte_end":1452,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/                                                                              max_count);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1453,"byte_end":1545,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ # }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1546,"byte_end":1553,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1554,"byte_end":1561,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"forbid(bad_style, arithmetic_overflow, mutable_transmutes,\nno_mangle_const_items, unknown_crate_types)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":1917,"byte_end":2045,"line_start":44,"line_end":50,"column_start":1,"column_end":3}},{"value":"deny(deprecated, improper_ctypes, missing_docs,\nnon_shorthand_field_patterns, overflowing_literals, stable_features,\nunconditional_recursion, unknown_lints, unsafe_code, unused,\nunused_allocation, unused_attributes, unused_comparisons, unused_features,\nunused_parens, while_true, warnings)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":2046,"byte_end":2409,"line_start":51,"line_end":69,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\nunused_import_braces, unused_qualifications, unused_results)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":2410,"byte_end":2565,"line_start":70,"line_end":77,"column_start":1,"column_end":3}},{"value":"allow(box_pointers, missing_copy_implementations,\nmissing_debug_implementations, variant_size_differences)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":2566,"byte_end":2694,"line_start":78,"line_end":83,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":31984,"byte_end":31988,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" An iterator over an `LruCache`'s entries that updates the timestamps as values are traversed.\n Values are produced in the most recently used order.\n","sig":null,"attributes":[{"value":"/ An iterator over an `LruCache`'s entries that updates the timestamps as values are traversed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":31818,"byte_end":31915,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ Values are produced in the most recently used order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":31916,"byte_end":31972,"line_start":20,"line_end":20,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":32421,"byte_end":32424,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(&'a mut BTreeMap<Key, (Value, Instant)>, &'a mut VecDeque<Key>,\nOption<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34349,"byte_end":34354,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Valid","qualname":"::iter::TimedEntry::Valid","value":"TimedEntry::Valid(&'a Key, &'a Value)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Entry has not yet expired.\n","sig":null,"attributes":[{"value":"/ Entry has not yet expired.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34314,"byte_end":34344,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34438,"byte_end":34445,"line_start":101,"line_end":101,"column_start":5,"column_end":12},"name":"Expired","qualname":"::iter::TimedEntry::Expired","value":"TimedEntry::Expired(Key, Value)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Entry got expired and was evicted from the cache.\n","sig":null,"attributes":[{"value":"/ Entry got expired and was evicted from the cache.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34380,"byte_end":34433,"line_start":100,"line_end":100,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34273,"byte_end":34283,"line_start":97,"line_end":97,"column_start":10,"column_end":20},"name":"TimedEntry","qualname":"::iter::TimedEntry","value":"pub enum TimedEntry<'a, Key: 'a, Value: 'a> {\n    Valid(&'a Key, &'a Value),\n    Expired(Key, Value),\n}","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":64}],"decl_id":null,"docs":" Entry produced by `NotifyIter` that might be still valid or expired.\n","sig":null,"attributes":[{"value":"/ Entry produced by `NotifyIter` that might be still valid or expired.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34191,"byte_end":34263,"line_start":96,"line_end":96,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34568,"byte_end":34578,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"NotifyIter","qualname":"::iter::NotifyIter","value":"NotifyIter {  }","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"decl_id":null,"docs":" Much like `Iter` except will produce expired entries too where `Iter` silently drops them.\n","sig":null,"attributes":[{"value":"/ Much like `Iter` except will produce expired entries too where `Iter` silently drops them.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34462,"byte_end":34556,"line_start":104,"line_end":104,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":35025,"byte_end":35028,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<NotifyIter>::new","value":"pub fn new(&'a mut BTreeMap<Key, (Value, Instant)>, &'a mut VecDeque<Key>,\nOption<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":36517,"byte_end":36525,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"PeekIter","qualname":"::iter::PeekIter","value":"PeekIter {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" An iterator over an `LruCache`'s entries that does not modify the timestamp.\n","sig":null,"attributes":[{"value":"/ An iterator over an `LruCache`'s entries that does not modify the timestamp.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":36425,"byte_end":36505,"line_start":168,"line_end":168,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":36954,"byte_end":36957,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<PeekIter>::new","value":"pub fn new(&'a BTreeMap<Key, (Value, Instant)>, &'a VecDeque<Key>,\nOption<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3175,"byte_end":3181,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[{"value":"/ A vacant Entry","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3152,"byte_end":3170,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3242,"byte_end":3250,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[{"value":"/ An occupied Entry","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3216,"byte_end":3237,"line_start":101,"line_end":101,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3116,"byte_end":3121,"line_start":98,"line_end":98,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, Key: 'a, Value: 'a> {\n    Vacant(VacantEntry),\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":127}],"decl_id":null,"docs":" A view into a single entry in an LRU cache, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in an LRU cache, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3019,"byte_end":3106,"line_start":97,"line_end":97,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3312,"byte_end":3323,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3281,"byte_end":3300,"line_start":105,"line_end":105,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3434,"byte_end":3447,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":139}],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3400,"byte_end":3422,"line_start":111,"line_end":111,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3572,"byte_end":3580,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"LruCache","qualname":"::LruCache","value":"LruCache {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" Implementation of [LRU cache](self#least-recently-used-lru-cache).\n","sig":null,"attributes":[{"value":"/ Implementation of [LRU cache](self#least-recently-used-lru-cache).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3490,"byte_end":3560,"line_start":116,"line_end":116,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3852,"byte_end":3865,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LruCache<Key, Value>>::with_capacity","value":"pub fn with_capacity(usize) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for capacity based `LruCache`.\n","sig":null,"attributes":[{"value":"/ Constructor for capacity based `LruCache`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3794,"byte_end":3840,"line_start":128,"line_end":128,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4144,"byte_end":4164,"line_start":139,"line_end":139,"column_start":12,"column_end":32},"name":"with_expiry_duration","qualname":"<LruCache<Key, Value>>::with_expiry_duration","value":"pub fn with_expiry_duration(Duration) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for time based `LruCache`.\n","sig":null,"attributes":[{"value":"/ Constructor for time based `LruCache`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4090,"byte_end":4132,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4484,"byte_end":4517,"line_start":149,"line_end":149,"column_start":12,"column_end":45},"name":"with_expiry_duration_and_capacity","qualname":"<LruCache<Key, Value>>::with_expiry_duration_and_capacity","value":"pub fn with_expiry_duration_and_capacity(Duration, usize)\n-> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for dual-feature capacity and time based `LruCache`.\n","sig":null,"attributes":[{"value":"/ Constructor for dual-feature capacity and time based `LruCache`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4404,"byte_end":4472,"line_start":148,"line_end":148,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5096,"byte_end":5109,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"notify_insert","qualname":"<LruCache<Key, Value>>::notify_insert","value":"pub fn notify_insert(&mut Self, Key, Value)\n-> (Option<Value>, Vec<(Key, Value)>)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the cache.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4803,"byte_end":4847,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4852,"byte_end":4855,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ If the key already existed in the cache, the existing value is returned and overwritten in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4860,"byte_end":4954,"line_start":163,"line_end":163,"column_start":5,"column_end":99}},{"value":"/ the cache.  Otherwise, the key-value pair is inserted and `None` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":4959,"byte_end":5040,"line_start":164,"line_end":164,"column_start":5,"column_end":86}},{"value":"/ Evicts and returns expired entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5045,"byte_end":5084,"line_start":165,"line_end":165,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5526,"byte_end":5532,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"insert","qualname":"<LruCache<Key, Value>>::insert","value":"pub fn insert(&mut Self, Key, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the cache.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5277,"byte_end":5321,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5326,"byte_end":5329,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If the key already existed in the cache, the existing value is returned and overwritten in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5334,"byte_end":5428,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/ the cache.  Otherwise, the key-value pair is inserted and `None` is returned.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5433,"byte_end":5514,"line_start":174,"line_end":174,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5695,"byte_end":5701,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"remove","qualname":"<LruCache<Key, Value>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Value> where Key: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Removes a key-value pair from the cache.\n","sig":null,"attributes":[{"value":"/ Removes a key-value pair from the cache.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":5639,"byte_end":5683,"line_start":179,"line_end":179,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6120,"byte_end":6125,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"clear","qualname":"<LruCache<Key, Value>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the `LruCache`, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the `LruCache`, removing all values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6061,"byte_end":6108,"line_start":195,"line_end":195,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6281,"byte_end":6291,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"notify_get","qualname":"<LruCache<Key, Value>>::notify_get","value":"pub fn notify_get<Q: ?Sized>(&mut Self, &Q)\n-> (Option<&Value>, Vec<(Key, Value)>) where Key: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Much like `get()`, except in addition returns expired entries.\n","sig":null,"attributes":[{"value":"/ Much like `get()`, except in addition returns expired entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6203,"byte_end":6269,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6690,"byte_end":6693,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"get","qualname":"<LruCache<Key, Value>>::get","value":"pub fn get<Q: ?Sized>(&mut Self, &Q) -> Option<&Value> where Key: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a reference to the value stored under `key`, or `None` if the key doesn't exist.\n Also removes expired elements and updates the time.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the value stored under `key`, or `None` if the key doesn't exist.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6524,"byte_end":6618,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ Also removes expired elements and updates the time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6623,"byte_end":6678,"line_start":212,"line_end":212,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6987,"byte_end":6991,"line_start":223,"line_end":223,"column_start":12,"column_end":16},"name":"peek","qualname":"<LruCache<Key, Value>>::peek","value":"pub fn peek<Q: ?Sized>(&Self, &Q) -> Option<&Value> where Key: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value with the given `key`, if present and not expired, without\n updating the timestamp.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value with the given `key`, if present and not expired, without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6849,"byte_end":6943,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ updating the timestamp.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":6948,"byte_end":6975,"line_start":222,"line_end":222,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7320,"byte_end":7334,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"notify_get_mut","qualname":"<LruCache<Key, Value>>::notify_get_mut","value":"pub fn notify_get_mut<Q: ?Sized>(&mut Self, &Q)\n-> (Option<&mut Value>, Vec<(Key, Value)>) where Key: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't\n exist. Also removes expired elements and updates the time.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7146,"byte_end":7241,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ exist. Also removes expired elements and updates the time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7246,"byte_end":7308,"line_start":232,"line_end":232,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7726,"byte_end":7733,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LruCache<Key, Value>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Value> where\nKey: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't\n exist.  Also removes expired elements and updates the time.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7551,"byte_end":7646,"line_start":242,"line_end":242,"column_start":5,"column_end":100}},{"value":"/ exist.  Also removes expired elements and updates the time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7651,"byte_end":7714,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7954,"byte_end":7966,"line_start":253,"line_end":253,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LruCache<Key, Value>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Key: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `key` exists in the cache or not.\n","sig":null,"attributes":[{"value":"/ Returns whether `key` exists in the cache or not.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":7889,"byte_end":7942,"line_start":252,"line_end":252,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":8203,"byte_end":8206,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"len","qualname":"<LruCache<Key, Value>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the cache, i.e. the number of cached non-expired key-value pairs.\n","sig":null,"attributes":[{"value":"/ Returns the size of the cache, i.e. the number of cached non-expired key-value pairs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":8102,"byte_end":8191,"line_start":261,"line_end":261,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":8902,"byte_end":8910,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LruCache<Key, Value>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no non-expired entries in the cache.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are no non-expired entries in the cache.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":8822,"byte_end":8890,"line_start":277,"line_end":277,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":9293,"byte_end":9298,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"entry","qualname":"<LruCache<Key, Value>>::entry","value":"pub fn entry(&mut Self, Key) -> Entry<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":9199,"byte_end":9281,"line_start":288,"line_end":288,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10284,"byte_end":10295,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"notify_iter","qualname":"<LruCache<Key, Value>>::notify_iter","value":"pub fn notify_iter(&mut Self) -> NotifyIter<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that updates the timestamps as values are\n traversed. Also removes expired elements before creating the iterator.\n Values are produced in the most recently used order.","sig":null,"attributes":[{"value":"/ Returns an iterator over all entries that updates the timestamps as values are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":9992,"byte_end":10074,"line_start":306,"line_end":306,"column_start":5,"column_end":87}},{"value":"/ traversed. Also removes expired elements before creating the iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10079,"byte_end":10153,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ Values are produced in the most recently used order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10158,"byte_end":10214,"line_start":308,"line_end":308,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10219,"byte_end":10222,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Also, evicts and returns expired entries.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10227,"byte_end":10272,"line_start":310,"line_end":310,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10658,"byte_end":10662,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"iter","qualname":"<LruCache<Key, Value>>::iter","value":"pub fn iter(&mut Self) -> Iter<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that updates the timestamps as values are\n traversed. Also removes expired elements before creating the iterator.\n Values are produced in the most recently used order.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all entries that updates the timestamps as values are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10424,"byte_end":10506,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ traversed. Also removes expired elements before creating the iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10511,"byte_end":10585,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ Values are produced in the most recently used order.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10590,"byte_end":10646,"line_start":317,"line_end":317,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10921,"byte_end":10930,"line_start":324,"line_end":324,"column_start":12,"column_end":21},"name":"peek_iter","qualname":"<LruCache<Key, Value>>::peek_iter","value":"pub fn peek_iter(&Self) -> PeekIter<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that does not modify the timestamps.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all entries that does not modify the timestamps.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":10832,"byte_end":10909,"line_start":323,"line_end":323,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14298,"byte_end":14304,"line_start":446,"line_end":446,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value\n","sig":null,"attributes":[{"value":"/ Inserts a value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14267,"byte_end":14286,"line_start":445,"line_end":445,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14700,"byte_end":14708,"line_start":458,"line_end":458,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14627,"byte_end":14688,"line_start":457,"line_end":457,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14973,"byte_end":14982,"line_start":466,"line_end":466,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14824,"byte_end":14906,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14911,"byte_end":14961,"line_start":465,"line_end":465,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":15353,"byte_end":15367,"line_start":475,"line_end":475,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> Value>(Self, F) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":15181,"byte_end":15274,"line_start":473,"line_end":473,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":15279,"byte_end":15341,"line_start":474,"line_end":474,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":32348,"byte_end":32352,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":33449,"byte_end":33453,"line_start":71,"line_end":71,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34938,"byte_end":34948,"line_start":115,"line_end":115,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":35369,"byte_end":35379,"line_start":135,"line_end":135,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":36877,"byte_end":36885,"line_start":179,"line_end":179,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":37810,"byte_end":37818,"line_start":215,"line_end":215,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3739,"byte_end":3747,"line_start":124,"line_end":124,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":13898,"byte_end":13906,"line_start":429,"line_end":429,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14233,"byte_end":14244,"line_start":444,"line_end":444,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14596,"byte_end":14609,"line_start":456,"line_end":456,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14796,"byte_end":14801,"line_start":463,"line_end":463,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":32348,"byte_end":32352,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":33449,"byte_end":33453,"line_start":71,"line_end":71,"column_start":35,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":34938,"byte_end":34948,"line_start":115,"line_end":115,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":35369,"byte_end":35379,"line_start":135,"line_end":135,"column_start":35,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":36877,"byte_end":36885,"line_start":179,"line_end":179,"column_start":22,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\iter.rs","byte_start":37810,"byte_end":37818,"line_start":215,"line_end":215,"column_start":35,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":3739,"byte_end":3747,"line_start":124,"line_end":124,"column_start":18,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":13898,"byte_end":13906,"line_start":429,"line_end":429,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14233,"byte_end":14244,"line_start":444,"line_end":444,"column_start":35,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14596,"byte_end":14609,"line_start":456,"line_end":456,"column_start":17,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.11.11\\src\\lib.rs","byte_start":14796,"byte_end":14801,"line_start":463,"line_end":463,"column_start":35,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}}]}