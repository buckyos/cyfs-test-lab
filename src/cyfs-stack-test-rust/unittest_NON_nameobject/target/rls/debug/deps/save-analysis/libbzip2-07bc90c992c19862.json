{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bzip2","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=07bc90c992c19862","-C","extra-filename=-07bc90c992c19862","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--extern","bzip2_sys=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libbzip2_sys-1838c5d54c3cdded.rmeta","--extern","libc=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\liblibc-adc0b250841731a7.rmeta","--cap-lints","allow","-L","native=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\build\\bzip2-sys-56ee9e9a930b47b8\\out\\lib","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libbzip2-07bc90c992c19862.rmeta"},"prelude":{"crate_id":{"name":"bzip2","disambiguator":[17605863686241651044,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":16,"id":{"name":"bzip2_sys","disambiguator":[2227894797347483687,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","num":17,"id":{"name":"libc","disambiguator":[4245277395814316444,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":0,"byte_end":3886,"line_start":1,"line_end":125,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2855,"byte_end":2861,"line_start":80,"line_end":80,"column_start":15,"column_end":21},"alias_span":null,"name":"Action","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2863,"byte_end":2871,"line_start":80,"line_end":80,"column_start":23,"column_end":31},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2873,"byte_end":2883,"line_start":80,"line_end":80,"column_start":33,"column_end":43},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2885,"byte_end":2890,"line_start":80,"line_end":80,"column_start":45,"column_end":50},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2892,"byte_end":2898,"line_start":80,"line_end":80,"column_start":52,"column_end":58},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":0,"byte_end":3886,"line_start":1,"line_end":125,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":95},{"krate":0,"index":182},{"krate":0,"index":251},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":325},{"krate":0,"index":331}],"decl_id":null,"docs":" Bzip compression for Rust","sig":null,"attributes":[{"value":"/ Bzip compression for Rust","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library contains bindings to libbz2 to support bzip compression and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":34,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ decompression for Rust. The streams offered in this library are primarily","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":111,"byte_end":188,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ found in the `reader` and `writer` modules. Both compressors and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":189,"byte_end":257,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ decompressors are available in each module depending on what operation you","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":258,"byte_end":336,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ need.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":337,"byte_end":346,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":347,"byte_end":350,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Access to the raw decompression/compression stream is also provided through","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":351,"byte_end":430,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the `raw` module which has a much closer interface to libbz2.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":431,"byte_end":496,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":497,"byte_end":500,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":501,"byte_end":514,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":515,"byte_end":518,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":519,"byte_end":526,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":527,"byte_end":555,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/ use bzip2::Compression;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":556,"byte_end":583,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ use bzip2::read::{BzEncoder, BzDecoder};","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":584,"byte_end":628,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":629,"byte_end":632,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Round trip some bytes from a byte source, into a compressor, into a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":633,"byte_end":707,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ // decompressor, and finally into a vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":708,"byte_end":755,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/ let data = \"Hello, World!\".as_bytes();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":756,"byte_end":798,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ let compressor = BzEncoder::new(data, Compression::best());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":799,"byte_end":862,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ let mut decompressor = BzDecoder::new(compressor);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":863,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":918,"byte_end":921,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut contents = String::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":922,"byte_end":959,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ decompressor.read_to_string(&mut contents).unwrap();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":960,"byte_end":1016,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(contents, \"Hello, World!\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1017,"byte_end":1059,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1060,"byte_end":1067,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1068,"byte_end":1071,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Multistreams (e.g. Wikipedia or pbzip2)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1072,"byte_end":1117,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1118,"byte_end":1121,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Some tools such as pbzip2 or data from sources such as Wikipedia","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1122,"byte_end":1190,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ are encoded as so called bzip2 \"multistreams,\" meaning they","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1191,"byte_end":1254,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ contain back to back chunks of bzip'd data. `BzDecoder` does not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1255,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ attempt to convert anything after the the first bzip chunk in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1324,"byte_end":1393,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ source stream. Thus, if you wish to decode all bzip chunks from","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1394,"byte_end":1461,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ the input until end of file, use `MultiBzDecoder`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1462,"byte_end":1516,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1517,"byte_end":1520,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ *Protip*: If you use `BzDecoder` to decode data and the output is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1521,"byte_end":1590,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ incomplete and exactly 900K bytes, you probably need a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1591,"byte_end":1649,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/ `MultiBzDecoder`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1650,"byte_end":1671,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1672,"byte_end":1675,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Async I/O","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1676,"byte_end":1691,"line_start":43,"line_end":43,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1692,"byte_end":1695,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This crate optionally can support async I/O streams with the Tokio stack via","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1696,"byte_end":1776,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ the `tokio` feature of this crate:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1777,"byte_end":1815,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1816,"byte_end":1819,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1820,"byte_end":1831,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ bzip2 = { version = \"0.4\", features = [\"tokio\"] }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1832,"byte_end":1885,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1886,"byte_end":1893,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1894,"byte_end":1897,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ All methods are internally capable of working with streams that may return","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1898,"byte_end":1976,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ `ErrorKind::WouldBlock` when they're not ready to perform the particular","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":1977,"byte_end":2053,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2054,"byte_end":2068,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2069,"byte_end":2072,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Note that care needs to be taken when using these objects, however. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2073,"byte_end":2148,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ Tokio runtime, in particular, requires that data is fully flushed before","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2149,"byte_end":2225,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ dropping streams. For compatibility with blocking streams all streams are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2226,"byte_end":2303,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ flushed/written when they are dropped, and this is not always a suitable","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2304,"byte_end":2380,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ time to perform I/O. If I/O streams are flushed before drop, however, then","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2381,"byte_end":2459,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ these operations will be a noop.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2460,"byte_end":2496,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2498,"byte_end":2520,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4213,"byte_end":4221,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Representation of an in-memory compression stream.","sig":null,"attributes":[{"value":"/ Representation of an in-memory compression stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4067,"byte_end":4121,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4122,"byte_end":4125,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ An instance of `Compress` can be used to compress a stream of bz2 data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4126,"byte_end":4201,"line_start":15,"line_end":15,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4420,"byte_end":4430,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":" Representation of an in-memory decompression stream.","sig":null,"attributes":[{"value":"/ Representation of an in-memory decompression stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4259,"byte_end":4315,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4316,"byte_end":4319,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ An instance of `Decompress` can be used to inflate a stream of bz2-encoded","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4320,"byte_end":4398,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4399,"byte_end":4408,"line_start":23,"line_end":23,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4989,"byte_end":4992,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Run","qualname":"::mem::Action::Run","value":"Action::Run","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Normal compression.\n","sig":null,"attributes":[{"value":"/ Normal compression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4961,"byte_end":4984,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5086,"byte_end":5091,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Flush","qualname":"::mem::Action::Flush","value":"Action::Flush","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Request that the current compression block is terminate.\n","sig":null,"attributes":[{"value":"/ Request that the current compression block is terminate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5021,"byte_end":5081,"line_start":49,"line_end":49,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5180,"byte_end":5186,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::Action::Finish","value":"Action::Finish","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Request that the compression stream be finalized.\n","sig":null,"attributes":[{"value":"/ Request that the compression stream be finalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5122,"byte_end":5175,"line_start":51,"line_end":51,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4948,"byte_end":4954,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Action","qualname":"::mem::Action","value":"pub enum Action { Run = , Flush = , Finish = , }","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340}],"decl_id":null,"docs":" Possible actions to take on compression.\n","sig":null,"attributes":[{"value":"/ Possible actions to take on compression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4849,"byte_end":4893,"line_start":44,"line_end":44,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5384,"byte_end":5386,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Decompression went fine, nothing much to report.\n","sig":null,"attributes":[{"value":"/ Decompression went fine, nothing much to report.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5327,"byte_end":5379,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5444,"byte_end":5451,"line_start":62,"line_end":62,"column_start":5,"column_end":12},"name":"FlushOk","qualname":"::mem::Status::FlushOk","value":"Status::FlushOk","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" The Flush action on a compression went ok.\n","sig":null,"attributes":[{"value":"/ The Flush action on a compression went ok.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5393,"byte_end":5439,"line_start":61,"line_end":61,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5505,"byte_end":5510,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"RunOk","qualname":"::mem::Status::RunOk","value":"Status::RunOk","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" THe Run action on compression went ok.\n","sig":null,"attributes":[{"value":"/ THe Run action on compression went ok.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5458,"byte_end":5500,"line_start":64,"line_end":64,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5567,"byte_end":5575,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"FinishOk","qualname":"::mem::Status::FinishOk","value":"Status::FinishOk","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" The Finish action on compression went ok.\n","sig":null,"attributes":[{"value":"/ The Finish action on compression went ok.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5517,"byte_end":5562,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5661,"byte_end":5670,"line_start":71,"line_end":71,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" The stream's end has been met, meaning that no more data can be input.\n","sig":null,"attributes":[{"value":"/ The stream's end has been met, meaning that no more data can be input.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5582,"byte_end":5656,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5818,"byte_end":5827,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"MemNeeded","qualname":"::mem::Status::MemNeeded","value":"Status::MemNeeded","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" There was insufficient memory in the input or output buffer to complete\n the request, but otherwise everything went normally.\n","sig":null,"attributes":[{"value":"/ There was insufficient memory in the input or output buffer to complete","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5677,"byte_end":5752,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ the request, but otherwise everything went normally.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5757,"byte_end":5813,"line_start":74,"line_end":74,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5314,"byte_end":5320,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"pub enum Status { Ok, FlushOk, RunOk, FinishOk, StreamEnd, MemNeeded, }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365}],"decl_id":null,"docs":" Result of compression or decompression\n","sig":null,"attributes":[{"value":"/ Result of compression or decompression","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5217,"byte_end":5259,"line_start":55,"line_end":55,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6205,"byte_end":6213,"line_start":86,"line_end":86,"column_start":5,"column_end":13},"name":"Sequence","qualname":"::mem::Error::Sequence","value":"Error::Sequence","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The sequence of operations called on a decompression/compression stream\n were invalid. See methods for details.\n","sig":null,"attributes":[{"value":"/ The sequence of operations called on a decompression/compression stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6078,"byte_end":6153,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ were invalid. See methods for details.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6158,"byte_end":6200,"line_start":85,"line_end":85,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6311,"byte_end":6315,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Data","qualname":"::mem::Error::Data","value":"Error::Data","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The data being decompressed was invalid, or it was not a valid bz2\n stream.\n","sig":null,"attributes":[{"value":"/ The data being decompressed was invalid, or it was not a valid bz2","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6220,"byte_end":6290,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6295,"byte_end":6306,"line_start":89,"line_end":89,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6386,"byte_end":6395,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"DataMagic","qualname":"::mem::Error::DataMagic","value":"Error::DataMagic","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The magic bz2 header wasn't present when decompressing.\n","sig":null,"attributes":[{"value":"/ The magic bz2 header wasn't present when decompressing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6322,"byte_end":6381,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6456,"byte_end":6461,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Param","qualname":"::mem::Error::Param","value":"Error::Param","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The parameters to this function were invalid.\n","sig":null,"attributes":[{"value":"/ The parameters to this function were invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6402,"byte_end":6451,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6066,"byte_end":6071,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"name":"Error","qualname":"::mem::Error","value":"pub enum Error { Sequence, Data, DataMagic, Param, }","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385}],"decl_id":null,"docs":" Fatal errors encountered when compressing/decompressing bytes.","sig":null,"attributes":[{"value":"/ Fatal errors encountered when compressing/decompressing bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5832,"byte_end":5898,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5899,"byte_end":5902,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ These errors indicate that progress could not be made in any form due to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5903,"byte_end":5979,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ input or output parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":5980,"byte_end":6011,"line_start":81,"line_end":81,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7671,"byte_end":7674,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"pub fn new(Compression, u32) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream prepared for compression.","sig":null,"attributes":[{"value":"/ Creates a new stream prepared for compression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6486,"byte_end":6536,"line_start":100,"line_end":100,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6541,"byte_end":6544,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `work_factor` parameter controls how the compression phase behaves","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6549,"byte_end":6623,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ when presented with worst case, highly repetitive, input data. If","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6628,"byte_end":6697,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ compression runs into difficulties caused by repetitive data, the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6702,"byte_end":6771,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ library switches from the standard sorting algorithm to a fallback","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6776,"byte_end":6846,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ algorithm. The fallback is slower than the standard algorithm by perhaps","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6851,"byte_end":6927,"line_start":106,"line_end":106,"column_start":5,"column_end":81}},{"value":"/ a factor of three, but always behaves reasonably, no matter how bad the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6932,"byte_end":7007,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ input.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7012,"byte_end":7022,"line_start":108,"line_end":108,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7027,"byte_end":7030,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Lower values of `work_factor` reduce the amount of effort the standard","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7035,"byte_end":7109,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ algorithm will expend before resorting to the fallback. You should set","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7114,"byte_end":7188,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ this parameter carefully; too low, and many inputs will be handled by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7193,"byte_end":7266,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ the fallback algorithm and so compress rather slowly, too high, and your","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7271,"byte_end":7347,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ average-to-worst case compression times can become very large. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7352,"byte_end":7422,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/ default value of 30 gives reasonable behaviour over a wide range of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7427,"byte_end":7498,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ circumstances.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7503,"byte_end":7521,"line_start":116,"line_end":116,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7526,"byte_end":7529,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Allowable values range from 0 to 250 inclusive. 0 is a special case,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7534,"byte_end":7606,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ equivalent to using the default value of 30.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":7611,"byte_end":7659,"line_start":119,"line_end":119,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":8338,"byte_end":8346,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8], Action) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compress a block of input into a block of output.","sig":null,"attributes":[{"value":"/ Compress a block of input into a block of output.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":8138,"byte_end":8191,"line_start":136,"line_end":136,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":8196,"byte_end":8199,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If anything other than BZ_OK is seen, `Err` is returned. The action","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":8204,"byte_end":8275,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ given must be one of Run, Flush or Finish.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":8280,"byte_end":8326,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":9768,"byte_end":9780,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8], &mut Vec<u8>, Action)\n-> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compress a block of input into an output vector.","sig":null,"attributes":[{"value":"/ Compress a block of input into an output vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":9505,"byte_end":9557,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":9562,"byte_end":9565,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not grow `output`, but it will fill the space after","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":9570,"byte_end":9644,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ its current length up to its capacity. The length of the vector will be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":9649,"byte_end":9724,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ adjusted appropriately.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":9729,"byte_end":9756,"line_start":172,"line_end":172,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10439,"byte_end":10447,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as input\n","sig":null,"attributes":[{"value":"/ Total number of bytes processed as input","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10383,"byte_end":10427,"line_start":194,"line_end":194,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10562,"byte_end":10571,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as output\n","sig":null,"attributes":[{"value":"/ Total number of bytes processed as output","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10505,"byte_end":10550,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":11005,"byte_end":11008,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"pub fn new(bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream prepared for decompression.","sig":null,"attributes":[{"value":"/ Creates a new stream prepared for decompression.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10650,"byte_end":10702,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10707,"byte_end":10710,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If `small` is true, then the library will use an alternative","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10715,"byte_end":10779,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ decompression algorithm which uses less memory but at the cost of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10784,"byte_end":10853,"line_start":209,"line_end":209,"column_start":5,"column_end":74}},{"value":"/ decompressing more slowly (roughly speaking, half the speed, but the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10858,"byte_end":10930,"line_start":210,"line_end":210,"column_start":5,"column_end":77}},{"value":"/ maximum memory requirement drops to around 2300k). See","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10935,"byte_end":10993,"line_start":211,"line_end":211,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":11448,"byte_end":11458,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8]) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decompress a block of input into a block of output.\n","sig":null,"attributes":[{"value":"/ Decompress a block of input into a block of output.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":11381,"byte_end":11436,"line_start":225,"line_end":225,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":12606,"byte_end":12620,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8], &mut Vec<u8>) -> Result<Status, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decompress a block of input into an output vector.","sig":null,"attributes":[{"value":"/ Decompress a block of input into an output vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":12341,"byte_end":12395,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":12400,"byte_end":12403,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This function will not grow `output`, but it will fill the space after","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":12408,"byte_end":12482,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ its current length up to its capacity. The length of the vector will be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":12487,"byte_end":12562,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ adjusted appropriately.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":12567,"byte_end":12594,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13218,"byte_end":13226,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as input\n","sig":null,"attributes":[{"value":"/ Total number of bytes processed as input","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13162,"byte_end":13206,"line_start":266,"line_end":266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13341,"byte_end":13350,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of bytes processed as output\n","sig":null,"attributes":[{"value":"/ Total number of bytes processed as output","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13284,"byte_end":13329,"line_start":271,"line_end":271,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bufread","qualname":"::bufread","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":178}],"decl_id":null,"docs":" I/O streams for wrapping `BufRead` types as encoders/decoders\n","sig":null,"attributes":[{"value":"/ I/O streams for wrapping `BufRead` types as encoders/decoders","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":14729,"byte_end":14794,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15205,"byte_end":15214,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"BzEncoder","qualname":"::bufread::BzEncoder","value":"BzEncoder {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":" A bz2 encoder, or compressor.","sig":null,"attributes":[{"value":"/ A bz2 encoder, or compressor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15004,"byte_end":15037,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15038,"byte_end":15041,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `BufRead` interface and will read uncompressed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15042,"byte_end":15120,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15121,"byte_end":15193,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15474,"byte_end":15483,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"BzDecoder","qualname":"::bufread::BzDecoder","value":"BzDecoder {  }","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" A bz2 decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A bz2 decoder, or decompressor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15271,"byte_end":15306,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15307,"byte_end":15310,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `BufRead` interface and takes a stream of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15311,"byte_end":15384,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15385,"byte_end":15462,"line_start":26,"line_end":26,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15728,"byte_end":15731,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<BzEncoder<R>>::new","value":"pub fn new(R, Compression) -> BzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15595,"byte_end":15669,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15674,"byte_end":15716,"line_start":36,"line_end":36,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15992,"byte_end":15999,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15931,"byte_end":15980,"line_start":47,"line_end":47,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16244,"byte_end":16251,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16044,"byte_end":16101,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16106,"byte_end":16109,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16114,"byte_end":16186,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16191,"byte_end":16232,"line_start":55,"line_end":55,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16379,"byte_end":16389,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16308,"byte_end":16367,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16945,"byte_end":16954,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the compressor\n (e.g. the number of bytes read from this stream)","sig":null,"attributes":[{"value":"/ Returns the number of bytes produced by the compressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16431,"byte_end":16489,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/ (e.g. the number of bytes read from this stream)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16494,"byte_end":16546,"line_start":66,"line_end":66,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16551,"byte_end":16554,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that, due to buffering, this only bears any relation to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16559,"byte_end":16623,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/ total_in() when the compressor chooses to flush its data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16628,"byte_end":16688,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/ (unfortunately, this won't happen in general","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16693,"byte_end":16741,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/ at the end of the stream, because the compressor doesn't know","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16746,"byte_end":16811,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/ if there's more data to come).  At that point,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16816,"byte_end":16866,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/ `total_out() / total_in()` would be the compression ratio.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":16871,"byte_end":16933,"line_start":73,"line_end":73,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":17149,"byte_end":17157,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the compressor\n (e.g. the number of bytes read from the underlying stream)\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by the compressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":17012,"byte_end":17070,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/ (e.g. the number of bytes read from the underlying stream)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":17075,"byte_end":17137,"line_start":79,"line_end":79,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19221,"byte_end":19224,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<BzDecoder<R>>::new","value":"pub fn new(R) -> BzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19121,"byte_end":19193,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19198,"byte_end":19209,"line_start":144,"line_end":144,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19589,"byte_end":19596,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19528,"byte_end":19577,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19841,"byte_end":19848,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19641,"byte_end":19698,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19703,"byte_end":19706,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19711,"byte_end":19783,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19788,"byte_end":19829,"line_start":169,"line_end":169,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19976,"byte_end":19986,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19905,"byte_end":19964,"line_start":174,"line_end":174,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20255,"byte_end":20263,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20028,"byte_end":20095,"line_start":179,"line_end":179,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20100,"byte_end":20103,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20108,"byte_end":20176,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20181,"byte_end":20243,"line_start":182,"line_end":182,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20399,"byte_end":20408,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20320,"byte_end":20387,"line_start":187,"line_end":187,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22911,"byte_end":22925,"line_start":263,"line_end":263,"column_start":12,"column_end":26},"name":"MultiBzDecoder","qualname":"::bufread::MultiBzDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bzip2 streaming decoder that decodes all members of a multistream.","sig":null,"attributes":[{"value":"/ A bzip2 streaming decoder that decodes all members of a multistream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22701,"byte_end":22773,"line_start":259,"line_end":259,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22774,"byte_end":22777,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Wikipedia, particularly, uses bzip2 multistream for their dumps, and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22778,"byte_end":22854,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/ `pbzip2` tool creates such data as well;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22855,"byte_end":22899,"line_start":262,"line_end":262,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23121,"byte_end":23124,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiBzDecoder<R>>::new","value":"pub fn new(R) -> MultiBzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader. If the bzip2 stream contains multiple members\n all will be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader. If the bzip2 stream contains multiple members","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22986,"byte_end":23080,"line_start":266,"line_end":266,"column_start":5,"column_end":99}},{"value":"/ all will be decoded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23085,"byte_end":23109,"line_start":267,"line_end":267,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23311,"byte_end":23318,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiBzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23249,"byte_end":23299,"line_start":274,"line_end":274,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23571,"byte_end":23578,"line_start":283,"line_end":283,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiBzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23370,"byte_end":23428,"line_start":279,"line_end":279,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23433,"byte_end":23436,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23441,"byte_end":23513,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23518,"byte_end":23559,"line_start":282,"line_end":282,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23709,"byte_end":23719,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiBzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23638,"byte_end":23697,"line_start":287,"line_end":287,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":244},{"krate":0,"index":247}],"decl_id":null,"docs":" Reader-based compression/decompression streams\n","sig":null,"attributes":[{"value":"/ Reader-based compression/decompression streams","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":24997,"byte_end":25047,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25379,"byte_end":25388,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"BzEncoder","qualname":"::read::BzEncoder","value":"BzEncoder {  }","parent":null,"children":[{"krate":0,"index":199}],"decl_id":null,"docs":" A compression stream which wraps an uncompressed stream of data. Compressed\n data will be read from the stream.\n","sig":null,"attributes":[{"value":"/ A compression stream which wraps an uncompressed stream of data. Compressed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25249,"byte_end":25328,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ data will be read from the stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25329,"byte_end":25367,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25573,"byte_end":25582,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"BzDecoder","qualname":"::read::BzDecoder","value":"BzDecoder {  }","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":" A decompression stream which wraps a compressed stream of data. Decompressed\n data will be read from the stream.\n","sig":null,"attributes":[{"value":"/ A decompression stream which wraps a compressed stream of data. Decompressed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25442,"byte_end":25522,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ data will be read from the stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25523,"byte_end":25561,"line_start":21,"line_end":21,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25814,"byte_end":25817,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BzEncoder<R>>::new","value":"pub fn new(R, Compression) -> BzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new compression stream which will compress at the given level\n to read compress output to the give output stream.\n","sig":null,"attributes":[{"value":"/ Create a new compression stream which will compress at the given level","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25669,"byte_end":25743,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ to read compress output to the give output stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25748,"byte_end":25802,"line_start":28,"line_end":28,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26034,"byte_end":26041,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25973,"byte_end":26022,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26307,"byte_end":26314,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26107,"byte_end":26164,"line_start":40,"line_end":40,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26169,"byte_end":26172,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26177,"byte_end":26249,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26254,"byte_end":26295,"line_start":43,"line_end":43,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26467,"byte_end":26477,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying writer, finishing the compression stream.\n","sig":null,"attributes":[{"value":"/ Unwrap the underlying writer, finishing the compression stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26388,"byte_end":26455,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27061,"byte_end":27070,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the compressor\n (e.g. the number of bytes read from this stream)","sig":null,"attributes":[{"value":"/ Returns the number of bytes produced by the compressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26547,"byte_end":26605,"line_start":53,"line_end":53,"column_start":5,"column_end":63}},{"value":"/ (e.g. the number of bytes read from this stream)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26610,"byte_end":26662,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26667,"byte_end":26670,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that, due to buffering, this only bears any relation to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26675,"byte_end":26739,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/ total_in() when the compressor chooses to flush its data","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26744,"byte_end":26804,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/ (unfortunately, this won't happen in general","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26809,"byte_end":26857,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ at the end of the stream, because the compressor doesn't know","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26862,"byte_end":26927,"line_start":59,"line_end":59,"column_start":5,"column_end":70}},{"value":"/ if there's more data to come).  At that point,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26932,"byte_end":26982,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ `total_out() / total_in()` would be the compression ratio.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":26987,"byte_end":27049,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27266,"byte_end":27274,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the compressor\n (e.g. the number of bytes read from the underlying stream)\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by the compressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27129,"byte_end":27187,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ (e.g. the number of bytes read from the underlying stream)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27192,"byte_end":27254,"line_start":67,"line_end":67,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28123,"byte_end":28126,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<BzDecoder<R>>::new","value":"pub fn new(R) -> BzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decompression stream, which will read compressed\n data from the given input stream and decompress it.\n","sig":null,"attributes":[{"value":"/ Create a new decompression stream, which will read compressed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27986,"byte_end":28051,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/ data from the given input stream and decompress it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28056,"byte_end":28111,"line_start":101,"line_end":101,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28316,"byte_end":28323,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28255,"byte_end":28304,"line_start":108,"line_end":108,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28589,"byte_end":28596,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28389,"byte_end":28446,"line_start":113,"line_end":113,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28451,"byte_end":28454,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28459,"byte_end":28531,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28536,"byte_end":28577,"line_start":116,"line_end":116,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28749,"byte_end":28759,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying writer, finishing the compression stream.\n","sig":null,"attributes":[{"value":"/ Unwrap the underlying writer, finishing the compression stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28670,"byte_end":28737,"line_start":121,"line_end":121,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29238,"byte_end":29247,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the decompressor\n (e.g. the number of bytes read from this stream)","sig":null,"attributes":[{"value":"/ Returns the number of bytes produced by the decompressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28829,"byte_end":28889,"line_start":126,"line_end":126,"column_start":5,"column_end":65}},{"value":"/ (e.g. the number of bytes read from this stream)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28894,"byte_end":28946,"line_start":127,"line_end":127,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28951,"byte_end":28954,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Note that, due to buffering, this only bears any relation to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":28959,"byte_end":29023,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ total_in() when the decompressor reaches a sync point","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29028,"byte_end":29085,"line_start":130,"line_end":130,"column_start":5,"column_end":62}},{"value":"/ (e.g. where the original compressed stream was flushed).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29090,"byte_end":29150,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ At that point, `total_in() / total_out()` is the compression ratio.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29155,"byte_end":29226,"line_start":132,"line_end":132,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29445,"byte_end":29453,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the decompressor\n (e.g. the number of bytes read from the underlying stream)\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by the decompressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29306,"byte_end":29366,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/ (e.g. the number of bytes read from the underlying stream)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29371,"byte_end":29433,"line_start":138,"line_end":138,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30297,"byte_end":30311,"line_start":173,"line_end":173,"column_start":12,"column_end":26},"name":"MultiBzDecoder","qualname":"::read::MultiBzDecoder","value":"MultiBzDecoder {  }","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" A bzip2 streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A bzip2 streaming decoder that decodes all members of a multistream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30141,"byte_end":30212,"line_start":170,"line_end":170,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30213,"byte_end":30216,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Wikipedia, particularly, uses bzip2 multistream for their dumps.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30217,"byte_end":30285,"line_start":172,"line_end":172,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30595,"byte_end":30598,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiBzDecoder<R>>::new","value":"pub fn new(R) -> MultiBzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30408,"byte_end":30480,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30485,"byte_end":30563,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30568,"byte_end":30583,"line_start":180,"line_end":180,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30834,"byte_end":30841,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiBzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30772,"byte_end":30822,"line_start":189,"line_end":189,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31108,"byte_end":31115,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiBzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30907,"byte_end":30965,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30970,"byte_end":30973,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30978,"byte_end":31050,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31055,"byte_end":31096,"line_start":197,"line_end":197,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31260,"byte_end":31270,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiBzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31189,"byte_end":31248,"line_start":202,"line_end":202,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":314},{"krate":0,"index":319},{"krate":0,"index":322}],"decl_id":null,"docs":" Writer-based compression/decompression streams\n","sig":null,"attributes":[{"value":"/ Writer-based compression/decompression streams","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":36401,"byte_end":36451,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":36801,"byte_end":36810,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"BzEncoder","qualname":"::write::BzEncoder","value":"BzEncoder {  }","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" A compression stream which will have uncompressed data written to it and\n will write compressed data to an output stream.\n","sig":null,"attributes":[{"value":"/ A compression stream which will have uncompressed data written to it and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":36661,"byte_end":36737,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ will write compressed data to an output stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":36738,"byte_end":36789,"line_start":14,"line_end":14,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37040,"byte_end":37049,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"BzDecoder","qualname":"::write::BzDecoder","value":"BzDecoder {  }","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" A compression stream which will have compressed data written to it and\n will write uncompressed data to an output stream.\n","sig":null,"attributes":[{"value":"/ A compression stream which will have compressed data written to it and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":36900,"byte_end":36974,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ will write uncompressed data to an output stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":36975,"byte_end":37028,"line_start":23,"line_end":23,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37321,"byte_end":37324,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<BzEncoder<W>>::new","value":"pub fn new(W, Compression) -> BzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new compression stream which will compress at the given level\n to write compress output to the give output stream.\n","sig":null,"attributes":[{"value":"/ Create a new compression stream which will compress at the given level","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37175,"byte_end":37249,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ to write compress output to the give output stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37254,"byte_end":37309,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38008,"byte_end":38015,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37946,"byte_end":37996,"line_start":55,"line_end":55,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38298,"byte_end":38305,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38077,"byte_end":38135,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38140,"byte_end":38143,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38148,"byte_end":38224,"line_start":62,"line_end":62,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38229,"byte_end":38286,"line_start":63,"line_end":63,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38817,"byte_end":38827,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<BzEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38375,"byte_end":38450,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38455,"byte_end":38458,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38463,"byte_end":38536,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38541,"byte_end":38617,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38622,"byte_end":38665,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38670,"byte_end":38673,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38678,"byte_end":38690,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38695,"byte_end":38698,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38703,"byte_end":38777,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":38782,"byte_end":38805,"line_start":77,"line_end":77,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39722,"byte_end":39728,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"finish","qualname":"<BzEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39152,"byte_end":39206,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39211,"byte_end":39214,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39219,"byte_end":39295,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39300,"byte_end":39334,"line_start":93,"line_end":93,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39339,"byte_end":39342,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39347,"byte_end":39423,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39428,"byte_end":39503,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39508,"byte_end":39578,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39583,"byte_end":39656,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39661,"byte_end":39710,"line_start":99,"line_end":99,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40106,"byte_end":40115,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the compressor","sig":null,"attributes":[{"value":"/ Returns the number of bytes produced by the compressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39834,"byte_end":39892,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39897,"byte_end":39900,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that, due to buffering, this only bears any relation to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39905,"byte_end":39969,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ `total_in()` after a call to `flush()`.  At that point,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":39974,"byte_end":40033,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/ `total_out() / total_in()` is the compression ratio.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40038,"byte_end":40094,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40302,"byte_end":40310,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the compressor\n (e.g. the number of bytes written to this stream.)\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by the compressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40173,"byte_end":40231,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ (e.g. the number of bytes written to this stream.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40236,"byte_end":40290,"line_start":115,"line_end":115,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41974,"byte_end":41977,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<BzDecoder<W>>::new","value":"pub fn new(W) -> BzDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoding stream which will decompress all data written\n to it into `obj`.\n","sig":null,"attributes":[{"value":"/ Create a new decoding stream which will decompress all data written","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41865,"byte_end":41936,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ to it into `obj`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41941,"byte_end":41962,"line_start":181,"line_end":181,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42250,"byte_end":42257,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BzDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42188,"byte_end":42238,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42540,"byte_end":42547,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BzDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42319,"byte_end":42377,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42382,"byte_end":42385,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42390,"byte_end":42466,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":42471,"byte_end":42528,"line_start":199,"line_end":199,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43448,"byte_end":43458,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<BzDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43006,"byte_end":43081,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43086,"byte_end":43089,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43094,"byte_end":43167,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43172,"byte_end":43248,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43253,"byte_end":43296,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43301,"byte_end":43304,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43309,"byte_end":43321,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43326,"byte_end":43329,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43334,"byte_end":43408,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43413,"byte_end":43436,"line_start":225,"line_end":225,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44043,"byte_end":44049,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"finish","qualname":"<BzDecoder<W>>::finish","value":"pub fn finish(&mut Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying writer, finishing the compression stream.","sig":null,"attributes":[{"value":"/ Unwrap the underlying writer, finishing the compression stream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43588,"byte_end":43655,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43660,"byte_end":43663,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43668,"byte_end":43744,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43749,"byte_end":43824,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43829,"byte_end":43899,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43904,"byte_end":43977,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":43982,"byte_end":44031,"line_start":239,"line_end":239,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44430,"byte_end":44439,"line_start":250,"line_end":250,"column_start":12,"column_end":21},"name":"total_out","qualname":"<BzDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes produced by the decompressor","sig":null,"attributes":[{"value":"/ Returns the number of bytes produced by the decompressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44156,"byte_end":44216,"line_start":245,"line_end":245,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44221,"byte_end":44224,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note that, due to buffering, this only bears any relation to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44229,"byte_end":44293,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ `total_in()` after a call to `flush()`.  At that point,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44298,"byte_end":44357,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ `total_in() / total_out()` is the compression ratio.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44362,"byte_end":44418,"line_start":249,"line_end":249,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44628,"byte_end":44636,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"total_in","qualname":"<BzDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by the decompressor\n (e.g. the number of bytes written to this stream.)\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by the decompressor","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44497,"byte_end":44557,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ (e.g. the number of bytes written to this stream.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44562,"byte_end":44616,"line_start":255,"line_end":255,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3095,"byte_end":3106,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"Compression","qualname":"::Compression","value":"","parent":null,"children":[],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"/ When compressing data, the compression level can be specified by a value in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2959,"byte_end":3038,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ this enum.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3039,"byte_end":3053,"line_start":89,"line_end":89,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3219,"byte_end":3222,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Compression>::new","value":"pub fn new(u32) -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Create a new compression spec with a specific numeric level (0-9).\n","sig":null,"attributes":[{"value":"/ Create a new compression spec with a specific numeric level (0-9).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3137,"byte_end":3207,"line_start":94,"line_end":94,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3322,"byte_end":3326,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"none","qualname":"<Compression>::none","value":"pub fn none() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Do not compress.\n","sig":null,"attributes":[{"value":"/ Do not compress.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3290,"byte_end":3310,"line_start":99,"line_end":99,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3436,"byte_end":3440,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"fast","qualname":"<Compression>::fast","value":"pub fn fast() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[{"value":"/ Optimize for the best speed of encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3380,"byte_end":3424,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3554,"byte_end":3558,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"best","qualname":"<Compression>::best","value":"pub fn best() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[{"value":"/ Optimize for the size of data being encoded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3494,"byte_end":3542,"line_start":109,"line_end":109,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3671,"byte_end":3676,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"level","qualname":"<Compression>::level","value":"pub fn level(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the compression level as an integer.\n","sig":null,"attributes":[{"value":"/ Return the compression level as an integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3612,"byte_end":3659,"line_start":114,"line_end":114,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4662,"byte_end":4668,"line_start":34,"line_end":34,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4710,"byte_end":4716,"line_start":35,"line_end":35,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6471,"byte_end":6479,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10633,"byte_end":10643,"line_start":205,"line_end":205,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13426,"byte_end":13432,"line_start":277,"line_end":277,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13707,"byte_end":13712,"line_start":287,"line_end":287,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13739,"byte_end":13744,"line_start":289,"line_end":289,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14168,"byte_end":14173,"line_start":301,"line_end":301,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14310,"byte_end":14321,"line_start":307,"line_end":307,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14452,"byte_end":14465,"line_start":312,"line_end":312,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14608,"byte_end":14614,"line_start":318,"line_end":318,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15576,"byte_end":15585,"line_start":34,"line_end":34,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15912,"byte_end":15921,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":17238,"byte_end":17247,"line_start":85,"line_end":85,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":18715,"byte_end":18724,"line_start":125,"line_end":125,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19102,"byte_end":19111,"line_start":142,"line_end":142,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19509,"byte_end":19518,"line_start":160,"line_end":160,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20490,"byte_end":20499,"line_start":193,"line_end":193,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22331,"byte_end":22340,"line_start":242,"line_end":242,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22962,"byte_end":22976,"line_start":265,"line_end":265,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23225,"byte_end":23239,"line_start":273,"line_end":273,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23796,"byte_end":23810,"line_start":293,"line_end":293,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":24040,"byte_end":24054,"line_start":302,"line_end":302,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25650,"byte_end":25659,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27353,"byte_end":27362,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27576,"byte_end":27585,"line_start":82,"line_end":82,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27967,"byte_end":27976,"line_start":99,"line_end":99,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29532,"byte_end":29541,"line_start":144,"line_end":144,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29764,"byte_end":29773,"line_start":153,"line_end":153,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30384,"byte_end":30398,"line_start":177,"line_end":177,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30748,"byte_end":30762,"line_start":188,"line_end":188,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31361,"byte_end":31375,"line_start":208,"line_end":208,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31596,"byte_end":31610,"line_start":217,"line_end":217,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37156,"byte_end":37165,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40390,"byte_end":40399,"line_start":121,"line_end":121,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41469,"byte_end":41478,"line_start":162,"line_end":162,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41701,"byte_end":41710,"line_start":171,"line_end":171,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41846,"byte_end":41855,"line_start":179,"line_end":179,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44716,"byte_end":44725,"line_start":261,"line_end":261,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":45730,"byte_end":45739,"line_start":298,"line_end":298,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":45962,"byte_end":45971,"line_start":307,"line_end":307,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3119,"byte_end":3130,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3734,"byte_end":3745,"line_start":120,"line_end":120,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2920,"byte_end":2927,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2937,"byte_end":2941,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":2951,"byte_end":2956,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":251}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4662,"byte_end":4668,"line_start":34,"line_end":34,"column_start":36,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":4710,"byte_end":4716,"line_start":35,"line_end":35,"column_start":36,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":6471,"byte_end":6479,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":10633,"byte_end":10643,"line_start":205,"line_end":205,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13426,"byte_end":13432,"line_start":277,"line_end":277,"column_start":20,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13707,"byte_end":13712,"line_start":287,"line_end":287,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":378},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":13739,"byte_end":13744,"line_start":289,"line_end":289,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14168,"byte_end":14173,"line_start":301,"line_end":301,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14310,"byte_end":14321,"line_start":307,"line_end":307,"column_start":20,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":63}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14452,"byte_end":14465,"line_start":312,"line_end":312,"column_start":20,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":63}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\mem.rs","byte_start":14608,"byte_end":14614,"line_start":318,"line_end":318,"column_start":29,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15576,"byte_end":15585,"line_start":34,"line_end":34,"column_start":18,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":15912,"byte_end":15921,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":17238,"byte_end":17247,"line_start":85,"line_end":85,"column_start":27,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":116},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":18715,"byte_end":18724,"line_start":125,"line_end":125,"column_start":26,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":116},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19102,"byte_end":19111,"line_start":142,"line_end":142,"column_start":18,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":19509,"byte_end":19518,"line_start":160,"line_end":160,"column_start":9,"column_end":18},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":20490,"byte_end":20499,"line_start":193,"line_end":193,"column_start":27,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":121},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22331,"byte_end":22340,"line_start":242,"line_end":242,"column_start":26,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":121},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":22962,"byte_end":22976,"line_start":265,"line_end":265,"column_start":18,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23225,"byte_end":23239,"line_start":273,"line_end":273,"column_start":9,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":23796,"byte_end":23810,"line_start":293,"line_end":293,"column_start":27,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\bufread.rs","byte_start":24040,"byte_end":24054,"line_start":302,"line_end":302,"column_start":36,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":25650,"byte_end":25659,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27353,"byte_end":27362,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27576,"byte_end":27585,"line_start":82,"line_end":82,"column_start":33,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":27967,"byte_end":27976,"line_start":99,"line_end":99,"column_start":15,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29532,"byte_end":29541,"line_start":144,"line_end":144,"column_start":24,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":29764,"byte_end":29773,"line_start":153,"line_end":153,"column_start":33,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30384,"byte_end":30398,"line_start":177,"line_end":177,"column_start":15,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":30748,"byte_end":30762,"line_start":188,"line_end":188,"column_start":9,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31361,"byte_end":31375,"line_start":208,"line_end":208,"column_start":24,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":233},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\read.rs","byte_start":31596,"byte_end":31610,"line_start":217,"line_end":217,"column_start":33,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":233},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":37156,"byte_end":37165,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":40390,"byte_end":40399,"line_start":121,"line_end":121,"column_start":26,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":272},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41469,"byte_end":41478,"line_start":162,"line_end":162,"column_start":32,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":272},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41701,"byte_end":41710,"line_start":171,"line_end":171,"column_start":25,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":41846,"byte_end":41855,"line_start":179,"line_end":179,"column_start":16,"column_end":25},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":44716,"byte_end":44725,"line_start":261,"line_end":261,"column_start":26,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":45730,"byte_end":45739,"line_start":298,"line_end":298,"column_start":32,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\write.rs","byte_start":45962,"byte_end":45971,"line_start":307,"line_end":307,"column_start":25,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3119,"byte_end":3130,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bzip2-0.4.3\\src\\lib.rs","byte_start":3734,"byte_end":3745,"line_start":120,"line_end":120,"column_start":18,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3035}}]}