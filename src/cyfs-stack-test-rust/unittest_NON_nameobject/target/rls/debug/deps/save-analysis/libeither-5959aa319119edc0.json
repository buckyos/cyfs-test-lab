{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","either","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5959aa319119edc0","-C","extra-filename=-5959aa319119edc0","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libeither-5959aa319119edc0.rmeta"},"prelude":{"crate_id":{"name":"either","disambiguator":[13606598859012983502,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":0,"byte_end":37079,"line_start":1,"line_end":1400,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":902,"byte_end":906,"line_start":38,"line_end":38,"column_start":25,"column_end":29},"alias_span":null,"name":"Left","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":902,"byte_end":906,"line_start":38,"line_end":38,"column_start":25,"column_end":29},"alias_span":null,"name":"Left","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":908,"byte_end":913,"line_start":38,"line_end":38,"column_start":31,"column_end":36},"alias_span":null,"name":"Right","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":908,"byte_end":913,"line_start":38,"line_end":38,"column_start":31,"column_end":36},"alias_span":null,"name":"Right","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":0,"byte_end":37079,"line_start":1,"line_end":1400,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":224},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":93},{"krate":0,"index":98},{"krate":0,"index":103},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":158},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":180},{"krate":0,"index":185},{"krate":0,"index":190},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":" The enum [`Either`] with variants `Left` and `Right` is a general purpose\n sum type with two cases.","sig":null,"attributes":[{"value":"/ The enum [`Either`] with variants `Left` and `Right` is a general purpose","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ sum type with two cases.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":78,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":107,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`Either`]: enum.Either.html","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":111,"byte_end":143,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":144,"byte_end":147,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ **Crate features:**","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":148,"byte_end":171,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":172,"byte_end":175,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ * `\"use_std\"`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":176,"byte_end":193,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/ Enabled by default. Disable to make the library `#![no_std]`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":194,"byte_end":259,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":260,"byte_end":263,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `\"serde\"`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":264,"byte_end":279,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ Disabled by default. Enable to `#[derive(Serialize, Deserialize)]` for `Either`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":280,"byte_end":363,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":364,"byte_end":367,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":422,"byte_end":432,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1398,"byte_end":1402,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Left","qualname":"::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" A value of type `L`.\n","sig":null,"attributes":[{"value":"/ A value of type `L`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1369,"byte_end":1393,"line_start":49,"line_end":49,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1440,"byte_end":1445,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Right","qualname":"::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" A value of type `R`.\n","sig":null,"attributes":[{"value":"/ A value of type `R`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1411,"byte_end":1435,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1350,"byte_end":1356,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Either","qualname":"::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":230}],"decl_id":null,"docs":" The enum `Either` with variants `Left` and `Right` is a general purpose\n sum type with two cases.","sig":null,"attributes":[{"value":"/ The enum `Either` with variants `Left` and `Right` is a general purpose","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":917,"byte_end":992,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ sum type with two cases.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":993,"byte_end":1021,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1022,"byte_end":1025,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The `Either` type is symmetric and treats its variants the same way, without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1026,"byte_end":1106,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ preference.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1107,"byte_end":1122,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/ (For representing success or error, use the regular `Result` enum instead.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":1123,"byte_end":1202,"line_start":45,"line_end":45,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4459,"byte_end":4466,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"is_left","qualname":"<Either<L, R>>::is_left","value":"pub fn is_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the value is the `Left` variant.","sig":null,"attributes":[{"value":"/ Return true if the value is the `Left` variant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4180,"byte_end":4231,"line_start":150,"line_end":150,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4236,"byte_end":4239,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4244,"byte_end":4251,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4256,"byte_end":4274,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4279,"byte_end":4282,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let values = [Left(1), Right(\"the right value\")];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4287,"byte_end":4340,"line_start":155,"line_end":155,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(values[0].is_left(), true);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4345,"byte_end":4387,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(values[1].is_left(), false);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4392,"byte_end":4435,"line_start":157,"line_end":157,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4440,"byte_end":4447,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4869,"byte_end":4877,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"is_right","qualname":"<Either<L, R>>::is_right","value":"pub fn is_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the value is the `Right` variant.","sig":null,"attributes":[{"value":"/ Return true if the value is the `Right` variant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4587,"byte_end":4639,"line_start":166,"line_end":166,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4644,"byte_end":4647,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4652,"byte_end":4659,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4664,"byte_end":4682,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4687,"byte_end":4690,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let values = [Left(1), Right(\"the right value\")];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4695,"byte_end":4748,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(values[0].is_right(), false);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4753,"byte_end":4797,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(values[1].is_right(), true);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4802,"byte_end":4845,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4850,"byte_end":4857,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5270,"byte_end":5274,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"left","qualname":"<Either<L, R>>::left","value":"pub fn left(Self) -> Option<L>","parent":null,"children":[],"decl_id":null,"docs":" Convert the left side of `Either<L, R>` to an `Option<L>`.","sig":null,"attributes":[{"value":"/ Convert the left side of `Either<L, R>` to an `Option<L>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4930,"byte_end":4992,"line_start":179,"line_end":179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4997,"byte_end":5000,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5005,"byte_end":5012,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5017,"byte_end":5035,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5040,"byte_end":5043,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(\"some value\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5048,"byte_end":5097,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(left.left(),  Some(\"some value\"));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5102,"byte_end":5151,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5156,"byte_end":5159,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(321);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5164,"byte_end":5206,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(right.left(), None);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5211,"byte_end":5246,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5251,"byte_end":5258,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5734,"byte_end":5739,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"right","qualname":"<Either<L, R>>::right","value":"pub fn right(Self) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Convert the right side of `Either<L, R>` to an `Option<R>`.","sig":null,"attributes":[{"value":"/ Convert the right side of `Either<L, R>` to an `Option<R>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5400,"byte_end":5463,"line_start":197,"line_end":197,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5468,"byte_end":5471,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5476,"byte_end":5483,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5488,"byte_end":5506,"line_start":200,"line_end":200,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5511,"byte_end":5514,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(\"some value\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5519,"byte_end":5568,"line_start":202,"line_end":202,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(left.right(),  None);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5573,"byte_end":5609,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5614,"byte_end":5617,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(321);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5622,"byte_end":5664,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(right.right(), Some(321));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5669,"byte_end":5710,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5715,"byte_end":5722,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6220,"byte_end":6226,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Either<L, R>>::as_ref","value":"pub fn as_ref(&Self) -> Either<&L, &R>","parent":null,"children":[],"decl_id":null,"docs":" Convert `&Either<L, R>` to `Either<&L, &R>`.","sig":null,"attributes":[{"value":"/ Convert `&Either<L, R>` to `Either<&L, &R>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5865,"byte_end":5913,"line_start":215,"line_end":215,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5918,"byte_end":5921,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5926,"byte_end":5933,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5938,"byte_end":5956,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5961,"byte_end":5964,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(\"some value\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":5969,"byte_end":6018,"line_start":220,"line_end":220,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(left.as_ref(), Left(&\"some value\"));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6023,"byte_end":6074,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6079,"byte_end":6082,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(\"some value\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6087,"byte_end":6138,"line_start":223,"line_end":223,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.as_ref(), Right(&\"some value\"));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6143,"byte_end":6196,"line_start":224,"line_end":224,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6201,"byte_end":6208,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6899,"byte_end":6905,"line_start":251,"line_end":251,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Either<L, R>>::as_mut","value":"pub fn as_mut(&mut Self) -> Either<&mut L, &mut R>","parent":null,"children":[],"decl_id":null,"docs":" Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","sig":null,"attributes":[{"value":"/ Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6387,"byte_end":6447,"line_start":233,"line_end":233,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6452,"byte_end":6455,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6460,"byte_end":6467,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6472,"byte_end":6490,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6495,"byte_end":6498,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ fn mutate_left(value: &mut Either<u32, u32>) {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6503,"byte_end":6553,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/     if let Some(l) = value.as_mut().left() {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6558,"byte_end":6606,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/         *l = 999;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6611,"byte_end":6632,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6637,"byte_end":6646,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6651,"byte_end":6656,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6661,"byte_end":6664,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut left = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6669,"byte_end":6698,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/ let mut right = Right(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6703,"byte_end":6734,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ mutate_left(&mut left);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6739,"byte_end":6766,"line_start":246,"line_end":246,"column_start":5,"column_end":32}},{"value":"/ mutate_left(&mut right);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6771,"byte_end":6799,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(left, Left(999));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6804,"byte_end":6836,"line_start":248,"line_end":248,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(right, Right(123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6841,"byte_end":6875,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":6880,"byte_end":6887,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7414,"byte_end":7418,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"flip","qualname":"<Either<L, R>>::flip","value":"pub fn flip(Self) -> Either<R, L>","parent":null,"children":[],"decl_id":null,"docs":" Convert `Either<L, R>` to `Either<R, L>`.","sig":null,"attributes":[{"value":"/ Convert `Either<L, R>` to `Either<R, L>`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7086,"byte_end":7131,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7136,"byte_end":7139,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7144,"byte_end":7151,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7156,"byte_end":7174,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7179,"byte_end":7182,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7187,"byte_end":7227,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(left.flip(), Right(123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7232,"byte_end":7272,"line_start":264,"line_end":264,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7277,"byte_end":7280,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(\"some value\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7285,"byte_end":7336,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.flip(), Left(\"some value\"));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7341,"byte_end":7390,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7395,"byte_end":7402,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7963,"byte_end":7971,"line_start":288,"line_end":288,"column_start":12,"column_end":20},"name":"map_left","qualname":"<Either<L, R>>::map_left","value":"pub fn map_left<F, M>(Self, F) -> Either<M, R> where F: FnOnce(L) -> M","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Left` variant if it is present rewrapping the\n result in `Left`.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Left` variant if it is present rewrapping the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7551,"byte_end":7644,"line_start":276,"line_end":276,"column_start":5,"column_end":98}},{"value":"/ result in `Left`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7649,"byte_end":7670,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7675,"byte_end":7678,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7683,"byte_end":7690,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7695,"byte_end":7713,"line_start":280,"line_end":280,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7718,"byte_end":7721,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7726,"byte_end":7767,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.map_left(|x| x * 2), Left(246));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7772,"byte_end":7824,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7829,"byte_end":7832,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7837,"byte_end":7880,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.map_left(|x| x * 2), Right(123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7885,"byte_end":7939,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":7944,"byte_end":7951,"line_start":287,"line_end":287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8576,"byte_end":8585,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"map_right","qualname":"<Either<L, R>>::map_right","value":"pub fn map_right<F, S>(Self, F) -> Either<L, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Right` variant if it is present rewrapping the\n result in `Right`.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Right` variant if it is present rewrapping the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8160,"byte_end":8254,"line_start":298,"line_end":298,"column_start":5,"column_end":99}},{"value":"/ result in `Right`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8259,"byte_end":8281,"line_start":299,"line_end":299,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8286,"byte_end":8289,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8294,"byte_end":8301,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8306,"byte_end":8324,"line_start":302,"line_end":302,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8329,"byte_end":8332,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8337,"byte_end":8378,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.map_right(|x| x * 2), Left(123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8383,"byte_end":8436,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8441,"byte_end":8444,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8449,"byte_end":8492,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.map_right(|x| x * 2), Right(246));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8497,"byte_end":8552,"line_start":308,"line_end":308,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8557,"byte_end":8564,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9377,"byte_end":9383,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"either","qualname":"<Either<L, R>>::either","value":"pub fn either<F, G, T>(Self, F, G) -> T where F: FnOnce(L) -> T, G: FnOnce(R)\n-> T","parent":null,"children":[],"decl_id":null,"docs":" Apply one of two functions depending on contents, unifying their result. If the value is\n `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\n function `g` is applied.","sig":null,"attributes":[{"value":"/ Apply one of two functions depending on contents, unifying their result. If the value is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8774,"byte_end":8866,"line_start":320,"line_end":320,"column_start":5,"column_end":97}},{"value":"/ `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8871,"byte_end":8960,"line_start":321,"line_end":321,"column_start":5,"column_end":94}},{"value":"/ function `g` is applied.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8965,"byte_end":8993,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":8998,"byte_end":9001,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9006,"byte_end":9013,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9018,"byte_end":9036,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9041,"byte_end":9044,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ fn square(n: u32) -> i32 { (n * n) as i32 }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9049,"byte_end":9096,"line_start":327,"line_end":327,"column_start":5,"column_end":52}},{"value":"/ fn negate(n: i32) -> i32 { -n }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9101,"byte_end":9136,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9141,"byte_end":9144,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let left: Either<u32, i32> = Left(4);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9149,"byte_end":9190,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.either(square, negate), 16);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9195,"byte_end":9243,"line_start":331,"line_end":331,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9248,"byte_end":9251,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, i32> = Right(-4);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9256,"byte_end":9300,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(right.either(square, negate), 4);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9305,"byte_end":9353,"line_start":334,"line_end":334,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9358,"byte_end":9365,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10202,"byte_end":10213,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"either_with","qualname":"<Either<L, R>>::either_with","value":"pub fn either_with<Ctx, F, G, T>(Self, Ctx, F, G) -> T where F: FnOnce(Ctx, L)\n-> T, G: FnOnce(Ctx, R) -> T","parent":null,"children":[],"decl_id":null,"docs":" Like `either`, but provide some context to whichever of the\n functions ends up being called.","sig":null,"attributes":[{"value":"/ Like `either`, but provide some context to whichever of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9587,"byte_end":9650,"line_start":347,"line_end":347,"column_start":5,"column_end":68}},{"value":"/ functions ends up being called.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9655,"byte_end":9690,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9695,"byte_end":9698,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9703,"byte_end":9710,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ // In this example, the context is a mutable reference","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9715,"byte_end":9773,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9778,"byte_end":9796,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9801,"byte_end":9804,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ let mut result = Vec::new();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9809,"byte_end":9841,"line_start":354,"line_end":354,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9846,"byte_end":9849,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let values = vec![Left(2), Right(2.7)];","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9854,"byte_end":9897,"line_start":356,"line_end":356,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9902,"byte_end":9905,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ for value in values {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9910,"byte_end":9935,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/     value.either_with(&mut result,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9940,"byte_end":9978,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/                       |ctx, integer| ctx.push(integer),","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":9983,"byte_end":10042,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/                       |ctx, real| ctx.push(f64::round(real) as i32));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10047,"byte_end":10120,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10125,"byte_end":10130,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10135,"byte_end":10138,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![2, 3]);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10143,"byte_end":10178,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10183,"byte_end":10190,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10866,"byte_end":10879,"line_start":388,"line_end":388,"column_start":12,"column_end":25},"name":"left_and_then","qualname":"<Either<L, R>>::left_and_then","value":"pub fn left_and_then<F, S>(Self, F) -> Either<S, R> where F: FnOnce(L) ->\nEither<S, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Left` variant if it is present.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Left` variant if it is present.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10452,"byte_end":10531,"line_start":377,"line_end":377,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10536,"byte_end":10539,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10544,"byte_end":10551,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10556,"byte_end":10574,"line_start":380,"line_end":380,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10579,"byte_end":10582,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10587,"byte_end":10628,"line_start":382,"line_end":382,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.left_and_then::<_,()>(|x| Right(x * 2)), Right(246));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10633,"byte_end":10706,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10711,"byte_end":10714,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10719,"byte_end":10762,"line_start":385,"line_end":385,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.left_and_then(|x| Right::<(), _>(x * 2)), Right(123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10767,"byte_end":10842,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":10847,"byte_end":10854,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11472,"byte_end":11486,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"right_and_then","qualname":"<Either<L, R>>::right_and_then","value":"pub fn right_and_then<F, S>(Self, F) -> Either<L, S> where F: FnOnce(R) ->\nEither<L, S>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Right` variant if it is present.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Right` variant if it is present.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11073,"byte_end":11153,"line_start":398,"line_end":398,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11158,"byte_end":11161,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11166,"byte_end":11173,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11178,"byte_end":11196,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11201,"byte_end":11204,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11209,"byte_end":11250,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.right_and_then(|x| Right(x * 2)), Left(123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11255,"byte_end":11320,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11325,"byte_end":11328,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11333,"byte_end":11376,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.right_and_then(|x| Right(x * 2)), Right(246));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11381,"byte_end":11448,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11453,"byte_end":11460,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12064,"byte_end":12073,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<Either<L, R>>::into_iter","value":"pub fn into_iter(Self) -> Either<L::IntoIter, R::IntoIter> where\nL: IntoIterator, R: IntoIterator<Item = L::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert the inner value to an iterator.","sig":null,"attributes":[{"value":"/ Convert the inner value to an iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11679,"byte_end":11722,"line_start":419,"line_end":419,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11727,"byte_end":11730,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11735,"byte_end":11742,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11747,"byte_end":11765,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11770,"byte_end":11773,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, Vec<u32>> = Left(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11778,"byte_end":11840,"line_start":424,"line_end":424,"column_start":5,"column_end":67}},{"value":"/ let mut right: Either<Vec<u32>, _> = Right(vec![]);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11845,"byte_end":11900,"line_start":425,"line_end":425,"column_start":5,"column_end":60}},{"value":"/ right.extend(left.into_iter());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11905,"byte_end":11940,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, Right(vec![1, 2, 3, 4, 5]));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":11945,"byte_end":11995,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12000,"byte_end":12007,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12012,"byte_end":12052,"line_start":429,"line_end":429,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12939,"byte_end":12946,"line_start":459,"line_end":459,"column_start":12,"column_end":19},"name":"left_or","qualname":"<Either<L, R>>::left_or","value":"pub fn left_or(Self, L) -> L","parent":null,"children":[],"decl_id":null,"docs":" Return left value or given value","sig":null,"attributes":[{"value":"/ Return left value or given value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12330,"byte_end":12366,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12371,"byte_end":12374,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Arguments passed to `left_or` are eagerly evaluated; if you are passing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12379,"byte_end":12454,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ the result of a function call, it is recommended to use [`left_or_else`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12459,"byte_end":12536,"line_start":444,"line_end":444,"column_start":5,"column_end":82}},{"value":"/ which is lazily evaluated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12541,"byte_end":12571,"line_start":445,"line_end":445,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12576,"byte_end":12579,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [`left_or_else`]: #method.left_or_else","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12584,"byte_end":12626,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12631,"byte_end":12634,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12639,"byte_end":12653,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12658,"byte_end":12661,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12666,"byte_end":12673,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12678,"byte_end":12698,"line_start":452,"line_end":452,"column_start":5,"column_end":25}},{"value":"/ let left: Either<&str, &str> = Left(\"left\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12703,"byte_end":12751,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(left.left_or(\"foo\"), \"left\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12756,"byte_end":12800,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12805,"byte_end":12808,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let right: Either<&str, &str> = Right(\"right\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12813,"byte_end":12864,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.left_or(\"left\"), \"left\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12869,"byte_end":12915,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":12920,"byte_end":12927,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13451,"byte_end":13466,"line_start":478,"line_end":478,"column_start":12,"column_end":27},"name":"left_or_default","qualname":"<Either<L, R>>::left_or_default","value":"pub fn left_or_default(Self) -> L where L: Default","parent":null,"children":[],"decl_id":null,"docs":" Return left or a default","sig":null,"attributes":[{"value":"/ Return left or a default","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13085,"byte_end":13113,"line_start":466,"line_end":466,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13118,"byte_end":13121,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13126,"byte_end":13140,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13145,"byte_end":13148,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13153,"byte_end":13160,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13165,"byte_end":13185,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"left\".to_string());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13190,"byte_end":13251,"line_start":472,"line_end":472,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(left.left_or_default(), \"left\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13256,"byte_end":13303,"line_start":473,"line_end":473,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13308,"byte_end":13311,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(42);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13316,"byte_end":13363,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(right.left_or_default(), String::default());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13368,"byte_end":13427,"line_start":476,"line_end":476,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13432,"byte_end":13439,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14034,"byte_end":14046,"line_start":500,"line_end":500,"column_start":12,"column_end":24},"name":"left_or_else","qualname":"<Either<L, R>>::left_or_else","value":"pub fn left_or_else<F>(Self, F) -> L where F: FnOnce(R) -> L","parent":null,"children":[],"decl_id":null,"docs":" Returns left value or computes it from a closure","sig":null,"attributes":[{"value":"/ Returns left value or computes it from a closure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13636,"byte_end":13688,"line_start":488,"line_end":488,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13693,"byte_end":13696,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13701,"byte_end":13715,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13720,"byte_end":13723,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13728,"byte_end":13735,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13740,"byte_end":13760,"line_start":493,"line_end":493,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"3\".to_string());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13765,"byte_end":13823,"line_start":494,"line_end":494,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(left.left_or_else(|_| unreachable!()), \"3\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13828,"byte_end":13887,"line_start":495,"line_end":495,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13892,"byte_end":13895,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13900,"byte_end":13946,"line_start":497,"line_end":497,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(right.left_or_else(|x| x.to_string()), \"3\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":13951,"byte_end":14010,"line_start":498,"line_end":498,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14015,"byte_end":14022,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14843,"byte_end":14851,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"right_or","qualname":"<Either<L, R>>::right_or","value":"pub fn right_or(Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Return right value or given value","sig":null,"attributes":[{"value":"/ Return right value or given value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14224,"byte_end":14261,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14266,"byte_end":14269,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Arguments passed to `right_or` are eagerly evaluated; if you are passing","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14274,"byte_end":14350,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ the result of a function call, it is recommended to use [`right_or_else`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14355,"byte_end":14433,"line_start":513,"line_end":513,"column_start":5,"column_end":83}},{"value":"/ which is lazily evaluated.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14438,"byte_end":14468,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14473,"byte_end":14476,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ [`right_or_else`]: #method.right_or_else","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14481,"byte_end":14525,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14530,"byte_end":14533,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14538,"byte_end":14552,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14557,"byte_end":14560,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14565,"byte_end":14572,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14577,"byte_end":14597,"line_start":521,"line_end":521,"column_start":5,"column_end":25}},{"value":"/ let right: Either<&str, &str> = Right(\"right\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14602,"byte_end":14653,"line_start":522,"line_end":522,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.right_or(\"foo\"), \"right\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14658,"byte_end":14705,"line_start":523,"line_end":523,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14710,"byte_end":14713,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let left: Either<&str, &str> = Left(\"left\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14718,"byte_end":14766,"line_start":525,"line_end":525,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(left.right_or(\"right\"), \"right\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14771,"byte_end":14819,"line_start":526,"line_end":526,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14824,"byte_end":14831,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15352,"byte_end":15368,"line_start":547,"line_end":547,"column_start":12,"column_end":28},"name":"right_or_default","qualname":"<Either<L, R>>::right_or_default","value":"pub fn right_or_default(Self) -> R where R: Default","parent":null,"children":[],"decl_id":null,"docs":" Return right or a default","sig":null,"attributes":[{"value":"/ Return right or a default","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":14990,"byte_end":15019,"line_start":535,"line_end":535,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15024,"byte_end":15027,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15032,"byte_end":15046,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15051,"byte_end":15054,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15059,"byte_end":15066,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15071,"byte_end":15091,"line_start":540,"line_end":540,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"left\".to_string());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15096,"byte_end":15157,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(left.right_or_default(), u32::default());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15162,"byte_end":15218,"line_start":542,"line_end":542,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15223,"byte_end":15226,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(42);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15231,"byte_end":15278,"line_start":544,"line_end":544,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(right.right_or_default(), 42);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15283,"byte_end":15328,"line_start":545,"line_end":545,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15333,"byte_end":15340,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15940,"byte_end":15953,"line_start":569,"line_end":569,"column_start":12,"column_end":25},"name":"right_or_else","qualname":"<Either<L, R>>::right_or_else","value":"pub fn right_or_else<F>(Self, F) -> R where F: FnOnce(L) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns right value or computes it from a closure","sig":null,"attributes":[{"value":"/ Returns right value or computes it from a closure","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15538,"byte_end":15591,"line_start":557,"line_end":557,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15596,"byte_end":15599,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15604,"byte_end":15618,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15623,"byte_end":15626,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15631,"byte_end":15638,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15643,"byte_end":15663,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"3\".to_string());","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15668,"byte_end":15726,"line_start":563,"line_end":563,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(left.right_or_else(|x| x.parse().unwrap()), 3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15731,"byte_end":15793,"line_start":564,"line_end":564,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15798,"byte_end":15801,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15806,"byte_end":15852,"line_start":566,"line_end":566,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(right.right_or_else(|_| unreachable!()), 3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15857,"byte_end":15916,"line_start":567,"line_end":567,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":15921,"byte_end":15928,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16556,"byte_end":16567,"line_start":598,"line_end":598,"column_start":12,"column_end":23},"name":"unwrap_left","qualname":"<Either<L, R>>::unwrap_left","value":"pub fn unwrap_left(Self) -> L where R: core::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the left value","sig":null,"attributes":[{"value":"/ Returns the left value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16131,"byte_end":16157,"line_start":579,"line_end":579,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16162,"byte_end":16165,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16170,"byte_end":16184,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16189,"byte_end":16192,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16197,"byte_end":16204,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16209,"byte_end":16229,"line_start":584,"line_end":584,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16234,"byte_end":16272,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(left.unwrap_left(), 3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16277,"byte_end":16315,"line_start":586,"line_end":586,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16320,"byte_end":16327,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16332,"byte_end":16335,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16340,"byte_end":16352,"line_start":589,"line_end":589,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16357,"byte_end":16360,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Right` value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16365,"byte_end":16401,"line_start":591,"line_end":591,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16406,"byte_end":16409,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16414,"byte_end":16433,"line_start":593,"line_end":593,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16438,"byte_end":16458,"line_start":594,"line_end":594,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16463,"byte_end":16503,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ right.unwrap_left();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16508,"byte_end":16532,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16537,"byte_end":16544,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17260,"byte_end":17272,"line_start":629,"line_end":629,"column_start":12,"column_end":24},"name":"unwrap_right","qualname":"<Either<L, R>>::unwrap_right","value":"pub fn unwrap_right(Self) -> R where L: core::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the right value","sig":null,"attributes":[{"value":"/ Returns the right value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16833,"byte_end":16860,"line_start":610,"line_end":610,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16865,"byte_end":16868,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16873,"byte_end":16887,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16892,"byte_end":16895,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16900,"byte_end":16907,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16912,"byte_end":16932,"line_start":615,"line_end":615,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16937,"byte_end":16977,"line_start":616,"line_end":616,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(right.unwrap_right(), 3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":16982,"byte_end":17022,"line_start":617,"line_end":617,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17027,"byte_end":17034,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17039,"byte_end":17042,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17047,"byte_end":17059,"line_start":620,"line_end":620,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17064,"byte_end":17067,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Left` value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17072,"byte_end":17107,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17112,"byte_end":17115,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17120,"byte_end":17139,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17144,"byte_end":17164,"line_start":625,"line_end":625,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17169,"byte_end":17207,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/ left.unwrap_right();","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17212,"byte_end":17236,"line_start":627,"line_end":627,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17241,"byte_end":17248,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17966,"byte_end":17977,"line_start":658,"line_end":658,"column_start":12,"column_end":23},"name":"expect_left","qualname":"<Either<L, R>>::expect_left","value":"pub fn expect_left(Self, &str) -> L where R: core::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the left value","sig":null,"attributes":[{"value":"/ Returns the left value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17507,"byte_end":17533,"line_start":639,"line_end":639,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17538,"byte_end":17541,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17546,"byte_end":17560,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17565,"byte_end":17568,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17573,"byte_end":17580,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17585,"byte_end":17605,"line_start":644,"line_end":644,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17610,"byte_end":17648,"line_start":645,"line_end":645,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(left.expect_left(\"value was Right\"), 3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17653,"byte_end":17708,"line_start":646,"line_end":646,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17713,"byte_end":17720,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17725,"byte_end":17728,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17733,"byte_end":17745,"line_start":649,"line_end":649,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17750,"byte_end":17753,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Right` value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17758,"byte_end":17794,"line_start":651,"line_end":651,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17799,"byte_end":17802,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17807,"byte_end":17826,"line_start":653,"line_end":653,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17831,"byte_end":17851,"line_start":654,"line_end":654,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17856,"byte_end":17896,"line_start":655,"line_end":655,"column_start":5,"column_end":45}},{"value":"/ right.expect_left(\"value was Right\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17901,"byte_end":17942,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":17947,"byte_end":17954,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18641,"byte_end":18653,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"expect_right","qualname":"<Either<L, R>>::expect_right","value":"pub fn expect_right(Self, &str) -> R where L: core::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the right value","sig":null,"attributes":[{"value":"/ Returns the right value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18181,"byte_end":18208,"line_start":668,"line_end":668,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18213,"byte_end":18216,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18221,"byte_end":18235,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18240,"byte_end":18243,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18248,"byte_end":18255,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18260,"byte_end":18280,"line_start":673,"line_end":673,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18285,"byte_end":18325,"line_start":674,"line_end":674,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(right.expect_right(\"value was Left\"), 3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18330,"byte_end":18386,"line_start":675,"line_end":675,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18391,"byte_end":18398,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18403,"byte_end":18406,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18411,"byte_end":18423,"line_start":678,"line_end":678,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18428,"byte_end":18431,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Left` value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18436,"byte_end":18471,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18476,"byte_end":18479,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18484,"byte_end":18503,"line_start":682,"line_end":682,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18508,"byte_end":18528,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18533,"byte_end":18571,"line_start":684,"line_end":684,"column_start":5,"column_end":43}},{"value":"/ left.expect_right(\"value was Right\");","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18576,"byte_end":18617,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18622,"byte_end":18629,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19253,"byte_end":19264,"line_start":709,"line_end":709,"column_start":12,"column_end":23},"name":"either_into","qualname":"<Either<L, R>>::either_into","value":"pub fn either_into<T>(Self) -> T where L: Into<T>, R: Into<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert the contained value into `T`","sig":null,"attributes":[{"value":"/ Convert the contained value into `T`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18857,"byte_end":18897,"line_start":697,"line_end":697,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18902,"byte_end":18905,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18910,"byte_end":18924,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18929,"byte_end":18932,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18937,"byte_end":18944,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18949,"byte_end":18969,"line_start":702,"line_end":702,"column_start":5,"column_end":25}},{"value":"/ // Both u16 and u32 can be converted to u64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":18974,"byte_end":19022,"line_start":703,"line_end":703,"column_start":5,"column_end":53}},{"value":"/ let left: Either<u16, u32> = Left(3u16);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19027,"byte_end":19071,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(left.either_into::<u64>(), 3u64);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19076,"byte_end":19124,"line_start":705,"line_end":705,"column_start":5,"column_end":53}},{"value":"/ let right: Either<u16, u32> = Right(7u32);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19129,"byte_end":19175,"line_start":706,"line_end":706,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(right.either_into::<u64>(), 7u64);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19180,"byte_end":19229,"line_start":707,"line_end":707,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19234,"byte_end":19241,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19999,"byte_end":20010,"line_start":734,"line_end":734,"column_start":12,"column_end":23},"name":"factor_none","qualname":"<Either<Option<L>, Option<R>>>::factor_none","value":"pub fn factor_none(Self) -> Option<Either<L, R>>","parent":null,"children":[],"decl_id":null,"docs":" Factors out `None` from an `Either` of [`Option`].","sig":null,"attributes":[{"value":"/ Factors out `None` from an `Either` of [`Option`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19504,"byte_end":19558,"line_start":722,"line_end":722,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19563,"byte_end":19566,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19571,"byte_end":19578,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19583,"byte_end":19601,"line_start":725,"line_end":725,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, Option<String>> = Left(Some(vec![0]));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19606,"byte_end":19668,"line_start":726,"line_end":726,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(left.factor_none(), Some(Left(vec![0])));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19673,"byte_end":19729,"line_start":727,"line_end":727,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19734,"byte_end":19737,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let right: Either<Option<Vec<u8>>, _> = Right(Some(String::new()));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19742,"byte_end":19813,"line_start":729,"line_end":729,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(right.factor_none(), Some(Right(String::new())));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19818,"byte_end":19882,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19887,"byte_end":19894,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20814,"byte_end":20824,"line_start":757,"line_end":757,"column_start":12,"column_end":22},"name":"factor_err","qualname":"<Either<Result<L, E>, Result<R, E>>>::factor_err","value":"pub fn factor_err(Self) -> Result<Either<L, R>, E>","parent":null,"children":[],"decl_id":null,"docs":" Factors out a homogenous type from an `Either` of [`Result`].","sig":null,"attributes":[{"value":"/ Factors out a homogenous type from an `Either` of [`Result`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20228,"byte_end":20293,"line_start":743,"line_end":743,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20298,"byte_end":20301,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the `Err` type of the [`Result`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20306,"byte_end":20373,"line_start":745,"line_end":745,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20378,"byte_end":20381,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20386,"byte_end":20393,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20398,"byte_end":20416,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, Result<String, u32>> = Left(Ok(vec![0]));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20421,"byte_end":20486,"line_start":749,"line_end":749,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(left.factor_err(), Ok(Left(vec![0])));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20491,"byte_end":20544,"line_start":750,"line_end":750,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20549,"byte_end":20552,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let right: Either<Result<Vec<u8>, u32>, _> = Right(Ok(String::new()));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20557,"byte_end":20631,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(right.factor_err(), Ok(Right(String::new())));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20636,"byte_end":20697,"line_start":753,"line_end":753,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20702,"byte_end":20709,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21632,"byte_end":21641,"line_start":780,"line_end":780,"column_start":12,"column_end":21},"name":"factor_ok","qualname":"<Either<Result<T, L>, Result<T, R>>>::factor_ok","value":"pub fn factor_ok(Self) -> Result<T, Either<L, R>>","parent":null,"children":[],"decl_id":null,"docs":" Factors out a homogenous type from an `Either` of [`Result`].","sig":null,"attributes":[{"value":"/ Factors out a homogenous type from an `Either` of [`Result`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21045,"byte_end":21110,"line_start":766,"line_end":766,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21115,"byte_end":21118,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the `Ok` type of the [`Result`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21123,"byte_end":21189,"line_start":768,"line_end":768,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21194,"byte_end":21197,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21202,"byte_end":21209,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21214,"byte_end":21232,"line_start":771,"line_end":771,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, Result<u32, String>> = Left(Err(vec![0]));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21237,"byte_end":21303,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(left.factor_ok(), Err(Left(vec![0])));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21308,"byte_end":21361,"line_start":773,"line_end":773,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21366,"byte_end":21369,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let right: Either<Result<u32, Vec<u8>>, _> = Right(Err(String::new()));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21374,"byte_end":21449,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(right.factor_ok(), Err(Right(String::new())));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21454,"byte_end":21515,"line_start":776,"line_end":776,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21520,"byte_end":21527,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22309,"byte_end":22321,"line_start":801,"line_end":801,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, L), (T, R)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<L, R>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21858,"byte_end":21916,"line_start":789,"line_end":789,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21921,"byte_end":21924,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21929,"byte_end":21994,"line_start":791,"line_end":791,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21999,"byte_end":22002,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22007,"byte_end":22014,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22019,"byte_end":22037,"line_start":794,"line_end":794,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, (u32, String)> = Left((123, vec![0]));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22042,"byte_end":22104,"line_start":795,"line_end":795,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(left.factor_first().0, 123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22109,"byte_end":22152,"line_start":796,"line_end":796,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22157,"byte_end":22160,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(u32, Vec<u8>), _> = Right((123, String::new()));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22165,"byte_end":22236,"line_start":798,"line_end":798,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(right.factor_first().0, 123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22241,"byte_end":22285,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22290,"byte_end":22297,"line_start":800,"line_end":800,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22974,"byte_end":22987,"line_start":822,"line_end":822,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(L, T), (R, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<L, R>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22520,"byte_end":22578,"line_start":810,"line_end":810,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22583,"byte_end":22586,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22591,"byte_end":22657,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22662,"byte_end":22665,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22670,"byte_end":22677,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22682,"byte_end":22700,"line_start":815,"line_end":815,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, (String, u32)> = Left((vec![0], 123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22705,"byte_end":22767,"line_start":816,"line_end":816,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(left.factor_second().1, 123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22772,"byte_end":22816,"line_start":817,"line_end":817,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22821,"byte_end":22824,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(Vec<u8>, u32), _> = Right((String::new(), 123));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22829,"byte_end":22900,"line_start":819,"line_end":819,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(right.factor_second().1, 123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22905,"byte_end":22950,"line_start":820,"line_end":820,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22955,"byte_end":22962,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23497,"byte_end":23507,"line_start":842,"line_end":842,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23170,"byte_end":23231,"line_start":831,"line_end":831,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23236,"byte_end":23239,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23244,"byte_end":23251,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23256,"byte_end":23274,"line_start":834,"line_end":834,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23279,"byte_end":23282,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23287,"byte_end":23328,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.into_inner(), 123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23333,"byte_end":23372,"line_start":837,"line_end":837,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23377,"byte_end":23380,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23385,"byte_end":23428,"line_start":839,"line_end":839,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.into_inner(), 123);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23433,"byte_end":23473,"line_start":840,"line_end":840,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23478,"byte_end":23485,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23878,"byte_end":23881,"line_start":857,"line_end":857,"column_start":12,"column_end":15},"name":"map","qualname":"<Either<T, T>>::map","value":"pub fn map<F, M>(Self, F) -> Either<M, M> where F: FnOnce(T) -> M","parent":null,"children":[],"decl_id":null,"docs":" Map `f` over the contained value and return the result in the\n corresponding variant.","sig":null,"attributes":[{"value":"/ Map `f` over the contained value and return the result in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23572,"byte_end":23637,"line_start":846,"line_end":846,"column_start":5,"column_end":70}},{"value":"/ corresponding variant.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23642,"byte_end":23668,"line_start":847,"line_end":847,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23673,"byte_end":23676,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23681,"byte_end":23688,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23693,"byte_end":23711,"line_start":850,"line_end":850,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23716,"byte_end":23719,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let value: Either<_, i32> = Right(42);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23724,"byte_end":23766,"line_start":852,"line_end":852,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23771,"byte_end":23774,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let other = value.map(|x| x * 2);","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23779,"byte_end":23816,"line_start":854,"line_end":854,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(other, Right(84));","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23821,"byte_end":23854,"line_start":855,"line_end":855,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23859,"byte_end":23866,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":3683,"byte_end":3689,"line_start":132,"line_end":132,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4161,"byte_end":4167,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19469,"byte_end":19475,"line_start":721,"line_end":721,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20187,"byte_end":20193,"line_start":742,"line_end":742,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21004,"byte_end":21010,"line_start":765,"line_end":765,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21829,"byte_end":21835,"line_start":788,"line_end":788,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22491,"byte_end":22497,"line_start":809,"line_end":809,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23151,"byte_end":23157,"line_start":830,"line_end":830,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":24181,"byte_end":24187,"line_start":869,"line_end":869,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":24514,"byte_end":24520,"line_start":880,"line_end":880,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":24695,"byte_end":24701,"line_start":889,"line_end":889,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":25004,"byte_end":25010,"line_start":903,"line_end":903,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":27186,"byte_end":27192,"line_start":995,"line_end":995,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":27986,"byte_end":27992,"line_start":1024,"line_end":1024,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":28199,"byte_end":28205,"line_start":1034,"line_end":1034,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":29996,"byte_end":30002,"line_start":1107,"line_end":1107,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31212,"byte_end":31218,"line_start":1156,"line_end":1156,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31417,"byte_end":31423,"line_start":1166,"line_end":1166,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31630,"byte_end":31636,"line_start":1176,"line_end":1176,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31831,"byte_end":31837,"line_start":1186,"line_end":1186,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":32050,"byte_end":32056,"line_start":1198,"line_end":1198,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":32821,"byte_end":32827,"line_start":1230,"line_end":1230,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":3683,"byte_end":3689,"line_start":132,"line_end":132,"column_start":36,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":4161,"byte_end":4167,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":19469,"byte_end":19475,"line_start":721,"line_end":721,"column_start":12,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":20187,"byte_end":20193,"line_start":742,"line_end":742,"column_start":15,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21004,"byte_end":21010,"line_start":765,"line_end":765,"column_start":15,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":21829,"byte_end":21835,"line_start":788,"line_end":788,"column_start":15,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":22491,"byte_end":22497,"line_start":809,"line_end":809,"column_start":15,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":23151,"byte_end":23157,"line_start":830,"line_end":830,"column_start":9,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":24181,"byte_end":24187,"line_start":869,"line_end":869,"column_start":35,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":24514,"byte_end":24520,"line_start":880,"line_end":880,"column_start":35,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":24695,"byte_end":24701,"line_start":889,"line_end":889,"column_start":29,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":25004,"byte_end":25010,"line_start":903,"line_end":903,"column_start":25,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":27186,"byte_end":27192,"line_start":995,"line_end":995,"column_start":36,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":7834}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":27986,"byte_end":27992,"line_start":1024,"line_end":1024,"column_start":34,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":28199,"byte_end":28205,"line_start":1034,"line_end":1034,"column_start":36,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":29996,"byte_end":30002,"line_start":1107,"line_end":1107,"column_start":38,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31212,"byte_end":31218,"line_start":1156,"line_end":1156,"column_start":40,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31417,"byte_end":31423,"line_start":1166,"line_end":1166,"column_start":38,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31630,"byte_end":31636,"line_start":1176,"line_end":1176,"column_start":40,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":31831,"byte_end":31837,"line_start":1186,"line_end":1186,"column_start":22,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":32050,"byte_end":32056,"line_start":1198,"line_end":1198,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":3289}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.7.0\\src\\lib.rs","byte_start":32821,"byte_end":32827,"line_start":1230,"line_end":1230,"column_start":29,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":9692}}]}