{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","secp256k1","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"hmac\"","--cfg","feature=\"hmac-drbg\"","--cfg","feature=\"sha2\"","--cfg","feature=\"std\"","--cfg","feature=\"typenum\"","-C","metadata=13803bbffe57df70","-C","extra-filename=-13803bbffe57df70","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--extern","arrayref=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libarrayref-30d6317433615190.rmeta","--extern","crunchy=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libcrunchy-5243598f645f9a39.rmeta","--extern","digest=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libdigest-7a70c396d4f4d797.rmeta","--extern","hmac_drbg=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libhmac_drbg-6e83e00892993284.rmeta","--extern","rand=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\librand-dac9e0d85ad2117c.rmeta","--extern","sha2=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libsha2-bd5eb87a41cbac18.rmeta","--extern","subtle=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libsubtle-e8b797d05e61e9d6.rmeta","--extern","typenum=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libtypenum-26681ebc81e6cc01.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libsecp256k1-13803bbffe57df70.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[3382714173987166372,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","num":16,"id":{"name":"subtle","disambiguator":[7465084063849418202,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","num":17,"id":{"name":"crunchy","disambiguator":[10316983888116336329,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","num":18,"id":{"name":"digest","disambiguator":[15398882686989201789,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","num":19,"id":{"name":"generic_array","disambiguator":[892344029420979162,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","num":20,"id":{"name":"serde","disambiguator":[4008723109700097164,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","num":21,"id":{"name":"serde_derive","disambiguator":[15088051977589274526,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":22,"id":{"name":"typenum","disambiguator":[5371539035448183228,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":23,"id":{"name":"hmac_drbg","disambiguator":[2074555091724508228,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":24,"id":{"name":"hmac","disambiguator":[3850420463798125450,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":25,"id":{"name":"crypto_mac","disambiguator":[12248090971923143851,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":26,"id":{"name":"subtle","disambiguator":[2961978547930065013,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":27,"id":{"name":"sha2","disambiguator":[6239346008795508909,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":28,"id":{"name":"block_buffer","disambiguator":[10907646623171097778,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":29,"id":{"name":"byteorder","disambiguator":[7485636545642705259,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":30,"id":{"name":"block_padding","disambiguator":[5614481761038721138,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":31,"id":{"name":"byte_tools","disambiguator":[259142096615137507,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":32,"id":{"name":"fake_simd","disambiguator":[13267237998350250813,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":33,"id":{"name":"opaque_debug","disambiguator":[8741766904379489802,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":34,"id":{"name":"arrayref","disambiguator":[11849128101975310268,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":35,"id":{"name":"rand","disambiguator":[15549105477294462196,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":36,"id":{"name":"rand_core","disambiguator":[4851264169953372294,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":37,"id":{"name":"getrandom","disambiguator":[13084467527955676976,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":38,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":39,"id":{"name":"rand_chacha","disambiguator":[14798128020435466818,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","num":40,"id":{"name":"ppv_lite86","disambiguator":[16661170325758883548,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":20237,"line_start":1,"line_end":682,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1010,"byte_end":1015,"line_start":43,"line_end":43,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1087,"byte_end":1092,"line_start":47,"line_end":47,"column_start":27,"column_end":32},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1121,"byte_end":1127,"line_start":48,"line_end":48,"column_start":28,"column_end":34},"alias_span":null,"name":"Affine","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1129,"byte_end":1137,"line_start":48,"line_end":48,"column_start":36,"column_end":44},"alias_span":null,"name":"Jacobian","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1139,"byte_end":1152,"line_start":48,"line_end":48,"column_start":46,"column_end":59},"alias_span":null,"name":"AffineStorage","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1154,"byte_end":1162,"line_start":48,"line_end":48,"column_start":61,"column_end":69},"alias_span":null,"name":"AFFINE_G","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1164,"byte_end":1171,"line_start":48,"line_end":48,"column_start":71,"column_end":78},"alias_span":null,"name":"CURVE_B","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1201,"byte_end":1207,"line_start":49,"line_end":49,"column_start":28,"column_end":34},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1201,"byte_end":1207,"line_start":49,"line_end":49,"column_start":28,"column_end":34},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1238,"byte_end":1251,"line_start":51,"line_end":51,"column_start":29,"column_end":42},"alias_span":null,"name":"ECMultContext","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1253,"byte_end":1269,"line_start":51,"line_end":51,"column_start":44,"column_end":60},"alias_span":null,"name":"ECMultGenContext","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1299,"byte_end":1313,"line_start":52,"line_end":52,"column_start":29,"column_end":43},"alias_span":null,"name":"ECMULT_CONTEXT","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1315,"byte_end":1333,"line_start":52,"line_end":52,"column_start":45,"column_end":63},"alias_span":null,"name":"ECMULT_GEN_CONTEXT","value":"","parent":{"krate":0,"index":514}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1989,"byte_end":2004,"line_start":71,"line_end":71,"column_start":28,"column_end":43},"alias_span":null,"name":"AFFINE_INFINITY","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2006,"byte_end":2023,"line_start":71,"line_end":71,"column_start":45,"column_end":62},"alias_span":null,"name":"JACOBIAN_INFINITY","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2052,"byte_end":2069,"line_start":72,"line_end":72,"column_start":28,"column_end":45},"alias_span":null,"name":"set_table_gej_var","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2071,"byte_end":2092,"line_start":72,"line_end":72,"column_start":47,"column_end":68},"alias_span":null,"name":"globalz_set_table_gej","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2123,"byte_end":2131,"line_start":73,"line_end":73,"column_start":29,"column_end":37},"alias_span":null,"name":"WINDOW_A","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2133,"byte_end":2141,"line_start":73,"line_end":73,"column_start":39,"column_end":47},"alias_span":null,"name":"WINDOW_G","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2143,"byte_end":2162,"line_start":73,"line_end":73,"column_start":49,"column_end":68},"alias_span":null,"name":"ECMULT_TABLE_SIZE_A","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2164,"byte_end":2183,"line_start":73,"line_end":73,"column_start":70,"column_end":89},"alias_span":null,"name":"ECMULT_TABLE_SIZE_G","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2213,"byte_end":2232,"line_start":74,"line_end":74,"column_start":29,"column_end":48},"alias_span":null,"name":"odd_multiples_table","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2260,"byte_end":2274,"line_start":76,"line_end":76,"column_start":25,"column_end":39},"alias_span":null,"name":"SignatureArray","value":"","parent":{"krate":0,"index":550}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":20237,"line_start":1,"line_end":682,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":111},{"krate":0,"index":176},{"krate":0,"index":293},{"krate":0,"index":353},{"krate":0,"index":384},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":550},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":595},{"krate":0,"index":602},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":694},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":721}],"decl_id":null,"docs":" Pure Rust implementation of the secp256k1 curve and fast ECDSA\n signatures. The secp256k1 curve is used excusively in Bitcoin and\n Ethereum alike cryptocurrencies.\n","sig":null,"attributes":[{"value":"/ Pure Rust implementation of the secp256k1 curve and fast ECDSA","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ signatures. The secp256k1 curve is used excusively in Bitcoin and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":67,"byte_end":136,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ Ethereum alike cryptocurrencies.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":137,"byte_end":173,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"deny(unused_import_braces, unused_imports, unused_comparisons,\nunused_must_use, unused_variables, non_shorthand_field_patterns,\nunreachable_code, unused_parens)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":175,"byte_end":363,"line_start":5,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":21778,"byte_end":21783,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" Field element for secp256k1.\n","sig":null,"attributes":[{"value":"/ Field element for secp256k1.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":21734,"byte_end":21766,"line_start":49,"line_end":49,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":21906,"byte_end":21909,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Field>::new","value":"pub fn new(u32, u32, u32, u32, u32, u32, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":22077,"byte_end":22085,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Field>::from_int","value":"pub fn from_int(u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":23283,"byte_end":23292,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Field>::normalize","value":"pub fn normalize(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element.\n","sig":null,"attributes":[{"value":"/ Normalize a field element.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":23241,"byte_end":23271,"line_start":95,"line_end":95,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":25142,"byte_end":25156,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<Field>::normalize_weak","value":"pub fn normalize_weak(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalize a field element: reduce it magnitude to 1,\n but don't fully normalize.\n","sig":null,"attributes":[{"value":"/ Weakly normalize a field element: reduce it magnitude to 1,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":25032,"byte_end":25095,"line_start":148,"line_end":148,"column_start":5,"column_end":68}},{"value":"/ but don't fully normalize.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":25100,"byte_end":25130,"line_start":149,"line_end":149,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":26194,"byte_end":26207,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"normalize_var","qualname":"<Field>::normalize_var","value":"pub fn normalize_var(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element, without constant-time guarantee.\n","sig":null,"attributes":[{"value":"/ Normalize a field element, without constant-time guarantee.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":26119,"byte_end":26182,"line_start":182,"line_end":182,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":28233,"byte_end":28251,"line_start":240,"line_end":240,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<Field>::normalizes_to_zero","value":"pub fn normalizes_to_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[{"value":"/ Verify whether a field element represents zero i.e. would","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":28012,"byte_end":28073,"line_start":236,"line_end":236,"column_start":5,"column_end":66}},{"value":"/ normalize to a zero value. The field implementation may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":28078,"byte_end":28137,"line_start":237,"line_end":237,"column_start":5,"column_end":64}},{"value":"/ optionally normalize the input, but this should not be relied","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":28142,"byte_end":28207,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/ upon.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":28212,"byte_end":28221,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":29635,"byte_end":29657,"line_start":277,"line_end":277,"column_start":12,"column_end":34},"name":"normalizes_to_zero_var","qualname":"<Field>::normalizes_to_zero_var","value":"pub fn normalizes_to_zero_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[{"value":"/ Verify whether a field element represents zero i.e. would","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":29414,"byte_end":29475,"line_start":273,"line_end":273,"column_start":5,"column_end":66}},{"value":"/ normalize to a zero value. The field implementation may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":29480,"byte_end":29539,"line_start":274,"line_end":274,"column_start":5,"column_end":64}},{"value":"/ optionally normalize the input, but this should not be relied","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":29544,"byte_end":29609,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/ upon.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":29614,"byte_end":29623,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31179,"byte_end":31186,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Field>::set_int","value":"pub fn set_int(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to a small integer. Resulting field\n element is normalized.\n","sig":null,"attributes":[{"value":"/ Set a field element equal to a small integer. Resulting field","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31071,"byte_end":31136,"line_start":327,"line_end":327,"column_start":5,"column_end":70}},{"value":"/ element is normalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31141,"byte_end":31167,"line_start":328,"line_end":328,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31466,"byte_end":31473,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Field>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element is zero. Requires the input to\n be normalized.\n","sig":null,"attributes":[{"value":"/ Verify whether a field element is zero. Requires the input to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31366,"byte_end":31431,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/ be normalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31436,"byte_end":31454,"line_start":337,"line_end":337,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31821,"byte_end":31827,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Field>::is_odd","value":"pub fn is_odd(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check the \"oddness\" of a field element. Requires the input to\n be normalized.\n","sig":null,"attributes":[{"value":"/ Check the \"oddness\" of a field element. Requires the input to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31721,"byte_end":31786,"line_start":344,"line_end":344,"column_start":5,"column_end":70}},{"value":"/ be normalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31791,"byte_end":31809,"line_start":345,"line_end":345,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":32045,"byte_end":32050,"line_start":353,"line_end":353,"column_start":12,"column_end":17},"name":"clear","qualname":"<Field>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element equal to zero, initializing all fields.\n","sig":null,"attributes":[{"value":"/ Sets a field element equal to zero, initializing all fields.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":31969,"byte_end":32033,"line_start":352,"line_end":352,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":32336,"byte_end":32343,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Field>::set_b32","value":"pub fn set_b32(&mut Self, &[u8; ]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to 32-byte big endian value. If\n successful, the resulting field element is normalized.\n","sig":null,"attributes":[{"value":"/ Set a field element equal to 32-byte big endian value. If","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":32184,"byte_end":32245,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/ successful, the resulting field element is normalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":32250,"byte_end":32308,"line_start":360,"line_end":360,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":32313,"byte_end":32324,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":33984,"byte_end":33992,"line_start":385,"line_end":385,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Field>::fill_b32","value":"pub fn fill_b32(&Self, &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":35982,"byte_end":35985,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"b32","qualname":"<Field>::b32","value":"pub fn b32(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert a field element to a 32-byte big endian\n value. Requires the input to be normalized.\n","sig":null,"attributes":[{"value":"/ Convert a field element to a 32-byte big endian","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":35867,"byte_end":35918,"line_start":423,"line_end":423,"column_start":5,"column_end":56}},{"value":"/ value. Requires the input to be normalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":35923,"byte_end":35970,"line_start":424,"line_end":424,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":36281,"byte_end":36293,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Field>::neg_in_place","value":"pub fn neg_in_place(&mut Self, &Field, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to the additive inverse of\n another. Takes a maximum magnitude of the input as an\n argument. The magnitude of the output is one higher.\n","sig":null,"attributes":[{"value":"/ Set a field element equal to the additive inverse of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":36090,"byte_end":36146,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ another. Takes a maximum magnitude of the input as an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":36151,"byte_end":36208,"line_start":432,"line_end":432,"column_start":5,"column_end":62}},{"value":"/ argument. The magnitude of the output is one higher.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":36213,"byte_end":36269,"line_start":433,"line_end":433,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37248,"byte_end":37251,"line_start":456,"line_end":456,"column_start":12,"column_end":15},"name":"neg","qualname":"<Field>::neg","value":"pub fn neg(&Self, u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Compute the additive inverse of this element. Takes the maximum\n expected magnitude of this element as an argument.\n","sig":null,"attributes":[{"value":"/ Compute the additive inverse of this element. Takes the maximum","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37110,"byte_end":37177,"line_start":454,"line_end":454,"column_start":5,"column_end":72}},{"value":"/ expected magnitude of this element as an argument.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37182,"byte_end":37236,"line_start":455,"line_end":455,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37514,"byte_end":37521,"line_start":464,"line_end":464,"column_start":12,"column_end":19},"name":"mul_int","qualname":"<Field>::mul_int","value":"pub fn mul_int(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the passed field element with a small integer\n constant. Multiplies the magnitude by that small integer.\n","sig":null,"attributes":[{"value":"/ Multiplies the passed field element with a small integer","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37376,"byte_end":37436,"line_start":462,"line_end":462,"column_start":5,"column_end":65}},{"value":"/ constant. Multiplies the magnitude by that small integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37441,"byte_end":37502,"line_start":463,"line_end":463,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37985,"byte_end":37992,"line_start":483,"line_end":483,"column_start":12,"column_end":19},"name":"cmp_var","qualname":"<Field>::cmp_var","value":"pub fn cmp_var(&Self, &Field) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two field elements. Requires both inputs to be\n normalized.\n","sig":null,"attributes":[{"value":"/ Compare two field elements. Requires both inputs to be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37895,"byte_end":37953,"line_start":481,"line_end":481,"column_start":5,"column_end":63}},{"value":"/ normalized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":37958,"byte_end":37973,"line_start":482,"line_end":482,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":38519,"byte_end":38525,"line_start":501,"line_end":501,"column_start":12,"column_end":18},"name":"eq_var","qualname":"<Field>::eq_var","value":"pub fn eq_var(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":74727,"byte_end":74739,"line_start":1153,"line_end":1153,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Field>::mul_in_place","value":"pub fn mul_in_place(&mut Self, &Field, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the product of two others. Requires\n the inputs' magnitudes to be at most 8. The output magnitude\n is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[{"value":"/ Sets a field element to be the product of two others. Requires","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":74528,"byte_end":74594,"line_start":1150,"line_end":1150,"column_start":5,"column_end":71}},{"value":"/ the inputs' magnitudes to be at most 8. The output magnitude","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":74599,"byte_end":74663,"line_start":1151,"line_end":1151,"column_start":5,"column_end":69}},{"value":"/ is 1 (but not guaranteed to be normalized).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":74668,"byte_end":74715,"line_start":1152,"line_end":1152,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75261,"byte_end":75273,"line_start":1167,"line_end":1167,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Field>::sqr_in_place","value":"pub fn sqr_in_place(&mut Self, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the square of another. Requires the\n input's magnitude to be at most 8. The output magnitude is 1\n (but not guaranteed to be normalized).\n","sig":null,"attributes":[{"value":"/ Sets a field element to be the square of another. Requires the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75067,"byte_end":75133,"line_start":1164,"line_end":1164,"column_start":5,"column_end":71}},{"value":"/ input's magnitude to be at most 8. The output magnitude is 1","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75138,"byte_end":75202,"line_start":1165,"line_end":1165,"column_start":5,"column_end":69}},{"value":"/ (but not guaranteed to be normalized).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75207,"byte_end":75249,"line_start":1166,"line_end":1166,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75515,"byte_end":75518,"line_start":1176,"line_end":1176,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Field>::sqr","value":"pub fn sqr(&Self) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75993,"byte_end":75997,"line_start":1188,"line_end":1188,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Field>::sqrt","value":"pub fn sqrt(&Self) -> (Field, bool)","parent":null,"children":[],"decl_id":null,"docs":" If a has a square root, it is computed in r and 1 is\n returned. If a does not have a square root, the root of its\n negation is computed and 0 is returned. The input's magnitude\n can be at most 8. The output magnitude is 1 (but not\n guaranteed to be normalized). The result in r will always be a\n square itself.\n","sig":null,"attributes":[{"value":"/ If a has a square root, it is computed in r and 1 is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75632,"byte_end":75688,"line_start":1182,"line_end":1182,"column_start":5,"column_end":61}},{"value":"/ returned. If a does not have a square root, the root of its","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75693,"byte_end":75756,"line_start":1183,"line_end":1183,"column_start":5,"column_end":68}},{"value":"/ negation is computed and 0 is returned. The input's magnitude","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75761,"byte_end":75826,"line_start":1184,"line_end":1184,"column_start":5,"column_end":70}},{"value":"/ can be at most 8. The output magnitude is 1 (but not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75831,"byte_end":75887,"line_start":1185,"line_end":1185,"column_start":5,"column_end":61}},{"value":"/ guaranteed to be normalized). The result in r will always be a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75892,"byte_end":75958,"line_start":1186,"line_end":1186,"column_start":5,"column_end":71}},{"value":"/ square itself.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":75963,"byte_end":75981,"line_start":1187,"line_end":1187,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":77716,"byte_end":77719,"line_start":1268,"line_end":1268,"column_start":12,"column_end":15},"name":"inv","qualname":"<Field>::inv","value":"pub fn inv(&Self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the (modular) inverse of\n another. Requires the input's magnitude to be at most 8. The\n output magnitude is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[{"value":"/ Sets a field element to be the (modular) inverse of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":77511,"byte_end":77566,"line_start":1265,"line_end":1265,"column_start":5,"column_end":60}},{"value":"/ another. Requires the input's magnitude to be at most 8. The","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":77571,"byte_end":77635,"line_start":1266,"line_end":1266,"column_start":5,"column_end":69}},{"value":"/ output magnitude is 1 (but not guaranteed to be normalized).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":77640,"byte_end":77704,"line_start":1267,"line_end":1267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79420,"byte_end":79427,"line_start":1351,"line_end":1351,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Field>::inv_var","value":"pub fn inv_var(&Self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Potentially faster version of secp256k1_fe_inv, without\n constant-time guarantee.\n","sig":null,"attributes":[{"value":"/ Potentially faster version of secp256k1_fe_inv, without","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79316,"byte_end":79375,"line_start":1349,"line_end":1349,"column_start":5,"column_end":64}},{"value":"/ constant-time guarantee.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79380,"byte_end":79408,"line_start":1350,"line_end":1350,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79546,"byte_end":79557,"line_start":1356,"line_end":1356,"column_start":12,"column_end":23},"name":"is_quad_var","qualname":"<Field>::is_quad_var","value":"pub fn is_quad_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a field element is a quadratic residue.\n","sig":null,"attributes":[{"value":"/ Checks whether a field element is a quadratic residue.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79476,"byte_end":79534,"line_start":1355,"line_end":1355,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79729,"byte_end":79733,"line_start":1363,"line_end":1363,"column_start":12,"column_end":16},"name":"cmov","qualname":"<Field>::cmov","value":"pub fn cmov(&mut Self, &Field, bool)","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[{"value":"/ If flag is true, set *r equal to *a; otherwise leave","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79634,"byte_end":79690,"line_start":1361,"line_end":1361,"column_start":5,"column_end":61}},{"value":"/ it. Constant-time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":79695,"byte_end":79717,"line_start":1362,"line_end":1362,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83055,"byte_end":83067,"line_start":1488,"line_end":1488,"column_start":12,"column_end":24},"name":"FieldStorage","qualname":"::field::FieldStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact field element storage.\n","sig":null,"attributes":[{"value":"/ Compact field element storage.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83009,"byte_end":83043,"line_start":1487,"line_end":1487,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83068,"byte_end":83080,"line_start":1488,"line_end":1488,"column_start":25,"column_end":37},"name":"0","qualname":"::field::FieldStorage::0","value":"[u32; 8]","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83220,"byte_end":83223,"line_start":1497,"line_end":1497,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldStorage>::new","value":"pub fn new(u32, u32, u32, u32, u32, u32, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83399,"byte_end":83403,"line_start":1503,"line_end":1503,"column_start":12,"column_end":16},"name":"cmov","qualname":"<FieldStorage>::cmov","value":"pub fn cmov(&mut Self, &FieldStorage, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86153,"byte_end":86159,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Affine","qualname":"::group::Affine","value":"Affine { x, y, infinity }","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in affine coordinates.\n","sig":null,"attributes":[{"value":"/ A group element of the secp256k1 curve, in affine coordinates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86075,"byte_end":86141,"line_start":35,"line_end":35,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86170,"byte_end":86171,"line_start":37,"line_end":37,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Affine::x","value":"field::Field","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86188,"byte_end":86189,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Affine::y","value":"field::Field","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86206,"byte_end":86214,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Affine::infinity","value":"bool","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86344,"byte_end":86352,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Jacobian","qualname":"::group::Jacobian","value":"Jacobian { x, y, z, infinity }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in jacobian coordinates.\n","sig":null,"attributes":[{"value":"/ A group element of the secp256k1 curve, in jacobian coordinates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86264,"byte_end":86332,"line_start":43,"line_end":43,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86363,"byte_end":86364,"line_start":45,"line_end":45,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Jacobian::x","value":"field::Field","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86381,"byte_end":86382,"line_start":46,"line_end":46,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Jacobian::y","value":"field::Field","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86399,"byte_end":86400,"line_start":47,"line_end":47,"column_start":9,"column_end":10},"name":"z","qualname":"::group::Jacobian::z","value":"field::Field","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86417,"byte_end":86425,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Jacobian::infinity","value":"bool","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86539,"byte_end":86552,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"AffineStorage","qualname":"::group::AffineStorage","value":"AffineStorage { x, y }","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"decl_id":null,"docs":" Affine coordinate group element compact storage.\n","sig":null,"attributes":[{"value":"/ Affine coordinate group element compact storage.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86475,"byte_end":86527,"line_start":52,"line_end":52,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86563,"byte_end":86564,"line_start":54,"line_end":54,"column_start":9,"column_end":10},"name":"x","qualname":"::group::AffineStorage::x","value":"field::FieldStorage","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86588,"byte_end":86589,"line_start":55,"line_end":55,"column_start":9,"column_end":10},"name":"y","qualname":"::group::AffineStorage::y","value":"field::FieldStorage","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87222,"byte_end":87237,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"AFFINE_INFINITY","qualname":"::group::AFFINE_INFINITY","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87382,"byte_end":87399,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"JACOBIAN_INFINITY","qualname":"::group::JACOBIAN_INFINITY","value":"Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87593,"byte_end":87601,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"AFFINE_G","qualname":"::group::AFFINE_G","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87912,"byte_end":87919,"line_start":112,"line_end":112,"column_start":11,"column_end":18},"name":"CURVE_B","qualname":"::group::CURVE_B","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88043,"byte_end":88049,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"set_xy","qualname":"<Affine>::set_xy","value":"pub fn set_xy(&mut Self, &Field, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to the point with given X and Y\n coordinates.\n","sig":null,"attributes":[{"value":"/ Set a group element equal to the point with given X and Y","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87949,"byte_end":88010,"line_start":115,"line_end":115,"column_start":5,"column_end":66}},{"value":"/ coordinates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88015,"byte_end":88031,"line_start":116,"line_end":116,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88433,"byte_end":88442,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_xquad","qualname":"<Affine>::set_xquad","value":"pub fn set_xquad(&mut Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate and a Y coordinate that is a quadratic residue\n modulo p. The return value is true iff a coordinate with the\n given X coordinate exists.\n","sig":null,"attributes":[{"value":"/ Set a group element (affine) equal to the point with the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88183,"byte_end":88249,"line_start":123,"line_end":123,"column_start":5,"column_end":71}},{"value":"/ X coordinate and a Y coordinate that is a quadratic residue","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88254,"byte_end":88317,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ modulo p. The return value is true iff a coordinate with the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88322,"byte_end":88386,"line_start":125,"line_end":125,"column_start":5,"column_end":69}},{"value":"/ given X coordinate exists.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88391,"byte_end":88421,"line_start":126,"line_end":126,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88931,"byte_end":88941,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"set_xo_var","qualname":"<Affine>::set_xo_var","value":"pub fn set_xo_var(&mut Self, &Field, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate, and given oddness for Y. Return value indicates\n whether the result is valid.\n","sig":null,"attributes":[{"value":"/ Set a group element (affine) equal to the point with the given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88746,"byte_end":88812,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/ X coordinate, and given oddness for Y. Return value indicates","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88817,"byte_end":88882,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/ whether the result is valid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":88887,"byte_end":88919,"line_start":142,"line_end":142,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":89270,"byte_end":89281,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Affine>::is_infinity","value":"pub fn is_infinity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[{"value":"/ Check whether a group element is the point at infinity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":89199,"byte_end":89258,"line_start":154,"line_end":154,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":89408,"byte_end":89420,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"is_valid_var","qualname":"<Affine>::is_valid_var","value":"pub fn is_valid_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is valid (i.e., on the curve).\n","sig":null,"attributes":[{"value":"/ Check whether a group element is valid (i.e., on the curve).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":89332,"byte_end":89396,"line_start":159,"line_end":159,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":89749,"byte_end":89761,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Affine>::neg_in_place","value":"pub fn neg_in_place(&mut Self, &Affine)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":89905,"byte_end":89908,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"neg","qualname":"<Affine>::neg","value":"pub fn neg(&Self) -> Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":90124,"byte_end":90131,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"set_gej","qualname":"<Affine>::set_gej","value":"pub fn set_gej(&mut Self, &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to another which is given in\n jacobian coordinates.\n","sig":null,"attributes":[{"value":"/ Set a group element equal to another which is given in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":90024,"byte_end":90082,"line_start":186,"line_end":186,"column_start":5,"column_end":63}},{"value":"/ jacobian coordinates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":90087,"byte_end":90112,"line_start":187,"line_end":187,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":90434,"byte_end":90442,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"from_gej","qualname":"<Affine>::from_gej","value":"pub fn from_gej(&Jacobian) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":90557,"byte_end":90568,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"set_gej_var","qualname":"<Affine>::set_gej_var","value":"pub fn set_gej_var(&mut Self, &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":90934,"byte_end":90946,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"set_gej_zinv","qualname":"<Affine>::set_gej_zinv","value":"pub fn set_gej_zinv(&mut Self, &Jacobian, &Field)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":91229,"byte_end":91234,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"clear","qualname":"<Affine>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_ge to prevent leaking sensitive information.\n","sig":null,"attributes":[{"value":"/ Clear a secp256k1_ge to prevent leaking sensitive information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":91151,"byte_end":91217,"line_start":231,"line_end":231,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":91343,"byte_end":91360,"line_start":239,"line_end":239,"column_start":8,"column_end":25},"name":"set_table_gej_var","qualname":"::group::set_table_gej_var","value":"pub fn set_table_gej_var(&mut [Affine], &[Jacobian], &[Field])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":91729,"byte_end":91750,"line_start":257,"line_end":257,"column_start":8,"column_end":29},"name":"globalz_set_table_gej","qualname":"::group::globalz_set_table_gej","value":"pub fn globalz_set_table_gej(&mut [Affine], &mut Field, &[Jacobian], &[Field])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92406,"byte_end":92418,"line_start":284,"line_end":284,"column_start":12,"column_end":24},"name":"set_infinity","qualname":"<Jacobian>::set_infinity","value":"pub fn set_infinity(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to the point at infinity.\n","sig":null,"attributes":[{"value":"/ Set a group element (jacobian) equal to the point at infinity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92328,"byte_end":92394,"line_start":283,"line_end":283,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92654,"byte_end":92660,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"set_ge","qualname":"<Jacobian>::set_ge","value":"pub fn set_ge(&mut Self, &Affine)","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to another which is given\n in affine coordinates.\n","sig":null,"attributes":[{"value":"/ Set a group element (jacobian) equal to another which is given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92545,"byte_end":92611,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"/ in affine coordinates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92616,"byte_end":92642,"line_start":292,"line_end":292,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92827,"byte_end":92834,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"from_ge","qualname":"<Jacobian>::from_ge","value":"pub fn from_ge(&Affine) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93013,"byte_end":93021,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"eq_x_var","qualname":"<Jacobian>::eq_x_var","value":"pub fn eq_x_var(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare the X coordinate of a group element (jacobian).\n","sig":null,"attributes":[{"value":"/ Compare the X coordinate of a group element (jacobian).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92942,"byte_end":93001,"line_start":306,"line_end":306,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93342,"byte_end":93354,"line_start":318,"line_end":318,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Jacobian>::neg_in_place","value":"pub fn neg_in_place(&mut Self, &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the inverse of a (i.e., mirrored around the X\n axis).\n","sig":null,"attributes":[{"value":"/ Set r equal to the inverse of a (i.e., mirrored around the X","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93251,"byte_end":93315,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ axis).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93320,"byte_end":93330,"line_start":317,"line_end":317,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93591,"byte_end":93594,"line_start":327,"line_end":327,"column_start":12,"column_end":15},"name":"neg","qualname":"<Jacobian>::neg","value":"pub fn neg(&Self) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93785,"byte_end":93796,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Jacobian>::is_infinity","value":"pub fn is_infinity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[{"value":"/ Check whether a group element is the point at infinity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93714,"byte_end":93773,"line_start":333,"line_end":333,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93931,"byte_end":93945,"line_start":339,"line_end":339,"column_start":12,"column_end":26},"name":"has_quad_y_var","qualname":"<Jacobian>::has_quad_y_var","value":"pub fn has_quad_y_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element's y coordinate is a quadratic residue.\n","sig":null,"attributes":[{"value":"/ Check whether a group element's y coordinate is a quadratic residue.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":93847,"byte_end":93919,"line_start":338,"line_end":338,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94285,"byte_end":94308,"line_start":351,"line_end":351,"column_start":12,"column_end":35},"name":"double_nonzero_in_place","qualname":"<Jacobian>::double_nonzero_in_place","value":"pub fn double_nonzero_in_place(&mut Self, &Jacobian, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0). a may\n not be zero. Constant time.\n","sig":null,"attributes":[{"value":"/ Set r equal to the double of a. If rzr is not-NULL, r->z =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94107,"byte_end":94169,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/ a->z * *rzr (where infinity means an implicit z = 0). a may","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94174,"byte_end":94237,"line_start":349,"line_end":349,"column_start":5,"column_end":68}},{"value":"/ not be zero. Constant time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94242,"byte_end":94273,"line_start":350,"line_end":350,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94594,"byte_end":94613,"line_start":358,"line_end":358,"column_start":12,"column_end":31},"name":"double_var_in_place","qualname":"<Jacobian>::double_var_in_place","value":"pub fn double_var_in_place(&mut Self, &Jacobian, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0).\n","sig":null,"attributes":[{"value":"/ Set r equal to the double of a. If rzr is not-NULL, r->z =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94458,"byte_end":94520,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ a->z * *rzr (where infinity means an implicit z = 0).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":94525,"byte_end":94582,"line_start":357,"line_end":357,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":95523,"byte_end":95533,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"double_var","qualname":"<Jacobian>::double_var","value":"pub fn double_var(&Self, Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":95825,"byte_end":95841,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"add_var_in_place","qualname":"<Jacobian>::add_var_in_place","value":"pub fn add_var_in_place(&mut Self, &Jacobian, &Jacobian, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b. If rzr is non-NULL, r->z =\n a->z * *rzr (a cannot be infinity in that case).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b. If rzr is non-NULL, r->z =","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":95691,"byte_end":95756,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ a->z * *rzr (a cannot be infinity in that case).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":95761,"byte_end":95813,"line_start":402,"line_end":402,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":97344,"byte_end":97351,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"add_var","qualname":"<Jacobian>::add_var","value":"pub fn add_var(&Self, &Jacobian, Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":97635,"byte_end":97650,"line_start":461,"line_end":461,"column_start":12,"column_end":27},"name":"add_ge_in_place","qualname":"<Jacobian>::add_ge_in_place","value":"pub fn add_ge_in_place(&mut Self, &Jacobian, &Affine)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates, and not infinity).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b (with b given in affine","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":97522,"byte_end":97583,"line_start":459,"line_end":459,"column_start":5,"column_end":66}},{"value":"/ coordinates, and not infinity).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":97588,"byte_end":97623,"line_start":460,"line_end":460,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99428,"byte_end":99434,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"add_ge","qualname":"<Jacobian>::add_ge","value":"pub fn add_ge(&Self, &Affine) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99936,"byte_end":99955,"line_start":536,"line_end":536,"column_start":12,"column_end":31},"name":"add_ge_var_in_place","qualname":"<Jacobian>::add_ge_var_in_place","value":"pub fn add_ge_var_in_place(&mut Self, &Jacobian, &Affine, Option<&mut Field>)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates). This is more efficient than\n secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge\n but without constant-time guarantee, and b is allowed to be\n infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be\n infinity in that case).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b (with b given in affine","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99572,"byte_end":99633,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/ coordinates). This is more efficient than","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99638,"byte_end":99683,"line_start":531,"line_end":531,"column_start":5,"column_end":50}},{"value":"/ secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99688,"byte_end":99754,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/ but without constant-time guarantee, and b is allowed to be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99759,"byte_end":99822,"line_start":533,"line_end":533,"column_start":5,"column_end":68}},{"value":"/ infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99827,"byte_end":99892,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ infinity in that case).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":99897,"byte_end":99924,"line_start":535,"line_end":535,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":101439,"byte_end":101449,"line_start":584,"line_end":584,"column_start":12,"column_end":22},"name":"add_ge_var","qualname":"<Jacobian>::add_ge_var","value":"pub fn add_ge_var(&Self, &Affine, Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":101735,"byte_end":101756,"line_start":592,"line_end":592,"column_start":12,"column_end":33},"name":"add_zinv_var_in_place","qualname":"<Jacobian>::add_zinv_var_in_place","value":"pub fn add_zinv_var_in_place(&mut Self, &Jacobian, &Affine, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with the inverse of b's Z\n coordinate passed as bzinv).\n","sig":null,"attributes":[{"value":"/ Set r equal to the sum of a and b (with the inverse of b's Z","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":101622,"byte_end":101686,"line_start":590,"line_end":590,"column_start":5,"column_end":69}},{"value":"/ coordinate passed as bzinv).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":101691,"byte_end":101723,"line_start":591,"line_end":591,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103181,"byte_end":103193,"line_start":636,"line_end":636,"column_start":12,"column_end":24},"name":"add_zinv_var","qualname":"<Jacobian>::add_zinv_var","value":"pub fn add_zinv_var(&mut Self, &Affine, &Field) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103451,"byte_end":103456,"line_start":644,"line_end":644,"column_start":12,"column_end":17},"name":"clear","qualname":"<Jacobian>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_gej to prevent leaking sensitive\n information.\n","sig":null,"attributes":[{"value":"/ Clear a secp256k1_gej to prevent leaking sensitive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103364,"byte_end":103418,"line_start":642,"line_end":642,"column_start":5,"column_end":59}},{"value":"/ information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103423,"byte_end":103439,"line_start":643,"line_end":643,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103676,"byte_end":103683,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Jacobian>::rescale","value":"pub fn rescale(&mut Self, &Field)","parent":null,"children":[],"decl_id":null,"docs":" Rescale a jacobian point by b which must be\n non-zero. Constant-time.\n","sig":null,"attributes":[{"value":"/ Rescale a jacobian point by b which must be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103584,"byte_end":103631,"line_start":651,"line_end":651,"column_start":5,"column_end":52}},{"value":"/ non-zero. Constant-time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103636,"byte_end":103664,"line_start":652,"line_end":652,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104439,"byte_end":104443,"line_start":687,"line_end":687,"column_start":12,"column_end":16},"name":"cmov","qualname":"<AffineStorage>::cmov","value":"pub fn cmov(&mut Self, &AffineStorage, bool)","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[{"value":"/ If flag is true, set *r equal to *a; otherwise leave","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104344,"byte_end":104400,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"/ it. Constant-time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104405,"byte_end":104427,"line_start":686,"line_end":686,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105426,"byte_end":105432,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 256-bit scalar value.\n","sig":null,"attributes":[{"value":"/ A 256-bit scalar value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105387,"byte_end":105414,"line_start":26,"line_end":26,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105433,"byte_end":105445,"line_start":27,"line_end":27,"column_start":19,"column_end":31},"name":"0","qualname":"::scalar::Scalar::0","value":"[u32; 8]","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105615,"byte_end":105620,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"clear","qualname":"<Scalar>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a scalar to prevent the leak of sensitive data.\n","sig":null,"attributes":[{"value":"/ Clear a scalar to prevent the leak of sensitive data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105546,"byte_end":105603,"line_start":36,"line_end":36,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105787,"byte_end":105794,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Scalar>::set_int","value":"pub fn set_int(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Set a scalar to an unsigned integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105735,"byte_end":105775,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105927,"byte_end":105935,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Scalar>::from_int","value":"pub fn from_int(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a scalar from an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Create a scalar from an unsigned integer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105870,"byte_end":105915,"line_start":48,"line_end":48,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":106155,"byte_end":106159,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"bits","qualname":"<Scalar>::bits","value":"pub fn bits(&Self, usize, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. All requested bits must belong to\n the same 32-bit limb.\n","sig":null,"attributes":[{"value":"/ Access bits from a scalar. All requested bits must belong to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":106049,"byte_end":106113,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/ the same 32-bit limb.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":106118,"byte_end":106143,"line_start":56,"line_end":56,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":106412,"byte_end":106420,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"bits_var","qualname":"<Scalar>::bits_var","value":"pub fn bits_var(&Self, usize, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. Not constant time.\n","sig":null,"attributes":[{"value":"/ Access bits from a scalar. Not constant time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":106351,"byte_end":106400,"line_start":62,"line_end":62,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":109077,"byte_end":109085,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"cadd_bit","qualname":"<Scalar>::cadd_bit","value":"pub fn cadd_bit(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Conditionally add a power of two to a scalar. The result is\n not allowed to overflow.\n","sig":null,"attributes":[{"value":"/ Conditionally add a power of two to a scalar. The result is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":108969,"byte_end":109032,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ not allowed to overflow.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":109037,"byte_end":109065,"line_start":131,"line_end":131,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":110621,"byte_end":110628,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Scalar>::set_b32","value":"pub fn set_b32(&mut Self, &[u8; ]) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar from a big endian byte array, return whether it overflowed.\n","sig":null,"attributes":[{"value":"/ Set a scalar from a big endian byte array, return whether it overflowed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":110517,"byte_end":110593,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":110598,"byte_end":110609,"line_start":157,"line_end":157,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":111854,"byte_end":111857,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"b32","qualname":"<Scalar>::b32","value":"pub fn b32(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[{"value":"/ Convert a scalar to a byte array.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":111805,"byte_end":111842,"line_start":182,"line_end":182,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":112017,"byte_end":112025,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Scalar>::fill_b32","value":"pub fn fill_b32(&Self, &mut [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[{"value":"/ Convert a scalar to a byte array.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":111968,"byte_end":112005,"line_start":189,"line_end":189,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113235,"byte_end":113242,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals zero.\n","sig":null,"attributes":[{"value":"/ Check whether a scalar equals zero.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113184,"byte_end":113223,"line_start":201,"line_end":201,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113430,"byte_end":113436,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"is_one","qualname":"<Scalar>::is_one","value":"pub fn is_one(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals one.\n","sig":null,"attributes":[{"value":"/ Check whether a scalar equals one.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113380,"byte_end":113418,"line_start":206,"line_end":206,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113672,"byte_end":113679,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar is higher than the group order divided\n by 2.\n","sig":null,"attributes":[{"value":"/ Check whether a scalar is higher than the group order divided","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113581,"byte_end":113646,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"/ by 2.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":113651,"byte_end":113660,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":114823,"byte_end":114838,"line_start":232,"line_end":232,"column_start":12,"column_end":27},"name":"cond_neg_assign","qualname":"<Scalar>::cond_neg_assign","value":"pub fn cond_neg_assign(&mut Self, Choice)","parent":null,"children":[],"decl_id":null,"docs":" Conditionally negate a number, in constant time.\n","sig":null,"attributes":[{"value":"/ Conditionally negate a number, in constant time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":114759,"byte_end":114811,"line_start":231,"line_end":231,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":129015,"byte_end":129027,"line_start":648,"line_end":648,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Scalar>::mul_in_place","value":"pub fn mul_in_place(&mut Self, &Scalar, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":129299,"byte_end":129306,"line_start":656,"line_end":656,"column_start":12,"column_end":19},"name":"shr_int","qualname":"<Scalar>::shr_int","value":"pub fn shr_int(&mut Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Shift a scalar right by some amount strictly between 0 and 16,\n returning the low bits that were shifted off.\n","sig":null,"attributes":[{"value":"/ Shift a scalar right by some amount strictly between 0 and 16,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":129167,"byte_end":129233,"line_start":654,"line_end":654,"column_start":5,"column_end":71}},{"value":"/ returning the low bits that were shifted off.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":129238,"byte_end":129287,"line_start":655,"line_end":655,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":129984,"byte_end":129996,"line_start":672,"line_end":672,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Scalar>::sqr_in_place","value":"pub fn sqr_in_place(&mut Self, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":130128,"byte_end":130131,"line_start":678,"line_end":678,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Scalar>::sqr","value":"pub fn sqr(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":130254,"byte_end":130266,"line_start":684,"line_end":684,"column_start":12,"column_end":24},"name":"inv_in_place","qualname":"<Scalar>::inv_in_place","value":"pub fn inv_in_place(&mut Self, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133146,"byte_end":133149,"line_start":830,"line_end":830,"column_start":12,"column_end":15},"name":"inv","qualname":"<Scalar>::inv","value":"pub fn inv(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133272,"byte_end":133279,"line_start":836,"line_end":836,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Scalar>::inv_var","value":"pub fn inv_var(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133336,"byte_end":133343,"line_start":840,"line_end":840,"column_start":12,"column_end":19},"name":"is_even","qualname":"<Scalar>::is_even","value":"pub fn is_even(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":135916,"byte_end":135924,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"WINDOW_A","qualname":"::ecmult::WINDOW_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":135947,"byte_end":135955,"line_start":7,"line_end":7,"column_start":11,"column_end":19},"name":"WINDOW_G","qualname":"::ecmult::WINDOW_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":135979,"byte_end":135998,"line_start":8,"line_end":8,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_A","qualname":"::ecmult::ECMULT_TABLE_SIZE_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136039,"byte_end":136058,"line_start":9,"line_end":9,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_G","qualname":"::ecmult::ECMULT_TABLE_SIZE_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136194,"byte_end":136207,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"ECMultContext","qualname":"::ecmult::ECMultContext","value":"ECMultContext {  }","parent":null,"children":[{"krate":0,"index":322}],"decl_id":null,"docs":" Context for accelerating the computation of a*P + b*G.\n","sig":null,"attributes":[{"value":"/ Context for accelerating the computation of a*P + b*G.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136124,"byte_end":136182,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136326,"byte_end":136342,"line_start":18,"line_end":18,"column_start":12,"column_end":28},"name":"ECMultGenContext","qualname":"::ecmult::ECMultGenContext","value":"ECMultGenContext {  }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329}],"decl_id":null,"docs":" Context for accelerating the computation of a*G.\n","sig":null,"attributes":[{"value":"/ Context for accelerating the computation of a*G.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136262,"byte_end":136314,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Static","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136467,"byte_end":136481,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"ECMULT_CONTEXT","qualname":"::ecmult::ECMULT_CONTEXT","value":"ECMultContext","parent":null,"children":[],"decl_id":null,"docs":" A static ECMult context.\n","sig":null,"attributes":[{"value":"/ A static ECMult context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136427,"byte_end":136455,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Static","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136595,"byte_end":136613,"line_start":30,"line_end":30,"column_start":12,"column_end":30},"name":"ECMULT_GEN_CONTEXT","qualname":"::ecmult::ECMULT_GEN_CONTEXT","value":"ECMultGenContext","parent":null,"children":[],"decl_id":null,"docs":" A static ECMultGen context.\n","sig":null,"attributes":[{"value":"/ A static ECMultGen context.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":136552,"byte_end":136583,"line_start":29,"line_end":29,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":137288,"byte_end":137307,"line_start":42,"line_end":42,"column_start":8,"column_end":27},"name":"odd_multiples_table","qualname":"::ecmult::odd_multiples_table","value":"pub fn odd_multiples_table(&mut [Jacobian], &mut [Field], &Jacobian)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":143230,"byte_end":143236,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"ecmult","qualname":"<ECMultContext>::ecmult","value":"pub fn ecmult(&Self, &mut Jacobian, &Jacobian, &Scalar, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":144473,"byte_end":144485,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"ecmult_const","qualname":"<ECMultContext>::ecmult_const","value":"pub fn ecmult_const(&Self, &mut Jacobian, &Affine, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":147009,"byte_end":147019,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"ecmult_gen","qualname":"<ECMultGenContext>::ecmult_gen","value":"pub fn ecmult_gen(&Self, &mut Jacobian, &Scalar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":148130,"byte_end":148140,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"verify_raw","qualname":"<ECMultContext>::verify_raw","value":"pub fn verify_raw(&Self, &Scalar, &Scalar, &Affine, &Scalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":149099,"byte_end":149110,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"recover_raw","qualname":"<ECMultContext>::recover_raw","value":"pub fn recover_raw(&Self, &Scalar, &Scalar, u8, &Scalar)\n-> Result<Affine, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":150352,"byte_end":150360,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"sign_raw","qualname":"<ECMultGenContext>::sign_raw","value":"pub fn sign_raw(&Self, &Scalar, &Scalar, &Scalar)\n-> Result<(Scalar, Scalar, u8), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","byte_start":151540,"byte_end":151548,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"ecdh_raw","qualname":"<ECMultContext>::ecdh_raw","value":"pub fn ecdh_raw<D: Digest + Default>(&Self, &Affine, &Scalar)\n-> Option<GenericArray<u8, D::OutputSize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152257,"byte_end":152273,"line_start":3,"line_end":3,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::error::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152279,"byte_end":152295,"line_start":4,"line_end":4,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::error::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152301,"byte_end":152317,"line_start":5,"line_end":5,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::error::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152323,"byte_end":152340,"line_start":6,"line_end":6,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::error::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152346,"byte_end":152360,"line_start":7,"line_end":7,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::error::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152366,"byte_end":152384,"line_start":8,"line_end":8,"column_start":5,"column_end":23},"name":"InvalidInputLength","qualname":"::error::Error::InvalidInputLength","value":"Error::InvalidInputLength","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152390,"byte_end":152405,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"TweakOutOfRange","qualname":"::error::Error::TweakOutOfRange","value":"Error::TweakOutOfRange","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152245,"byte_end":152250,"line_start":2,"line_end":2,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    InvalidSignature,\n    InvalidPublicKey,\n    InvalidSecretKey,\n    InvalidRecoveryId,\n    InvalidMessage,\n    InvalidInputLength,\n    TweakOutOfRange,\n}","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153240,"byte_end":153254,"line_start":7,"line_end":7,"column_start":12,"column_end":26},"name":"SignatureArray","qualname":"::der::SignatureArray","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153316,"byte_end":153319,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<SignatureArray>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153410,"byte_end":153413,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"len","qualname":"<SignatureArray>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1053,"byte_end":1058,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"curve","qualname":"::curve","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547}],"decl_id":null,"docs":" Curve related structs.\n","sig":null,"attributes":[{"value":"/ Curve related structs.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1018,"byte_end":1044,"line_start":45,"line_end":45,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1407,"byte_end":1411,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"util","qualname":"::util","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592}],"decl_id":null,"docs":" Utilities to manipulate the secp256k1 curve parameters.\n","sig":null,"attributes":[{"value":"/ Utilities to manipulate the secp256k1 curve parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1339,"byte_end":1398,"line_start":55,"line_end":55,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1428,"byte_end":1443,"line_start":57,"line_end":57,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_EVEN","qualname":"::util::TAG_PUBKEY_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1470,"byte_end":1484,"line_start":58,"line_end":58,"column_start":15,"column_end":29},"name":"TAG_PUBKEY_ODD","qualname":"::util::TAG_PUBKEY_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1511,"byte_end":1526,"line_start":59,"line_end":59,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_FULL","qualname":"::util::TAG_PUBKEY_FULL","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1553,"byte_end":1575,"line_start":60,"line_end":60,"column_start":15,"column_end":37},"name":"TAG_PUBKEY_HYBRID_EVEN","qualname":"::util::TAG_PUBKEY_HYBRID_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1602,"byte_end":1623,"line_start":61,"line_end":61,"column_start":15,"column_end":36},"name":"TAG_PUBKEY_HYBRID_ODD","qualname":"::util::TAG_PUBKEY_HYBRID_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1651,"byte_end":1663,"line_start":63,"line_end":63,"column_start":15,"column_end":27},"name":"MESSAGE_SIZE","qualname":"::util::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1691,"byte_end":1706,"line_start":64,"line_end":64,"column_start":15,"column_end":30},"name":"SECRET_KEY_SIZE","qualname":"::util::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1734,"byte_end":1753,"line_start":65,"line_end":65,"column_start":15,"column_end":34},"name":"RAW_PUBLIC_KEY_SIZE","qualname":"::util::RAW_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1781,"byte_end":1801,"line_start":66,"line_end":66,"column_start":15,"column_end":35},"name":"FULL_PUBLIC_KEY_SIZE","qualname":"::util::FULL_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1829,"byte_end":1855,"line_start":67,"line_end":67,"column_start":15,"column_end":41},"name":"COMPRESSED_PUBLIC_KEY_SIZE","qualname":"::util::COMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1883,"byte_end":1897,"line_start":68,"line_end":68,"column_start":15,"column_end":29},"name":"SIGNATURE_SIZE","qualname":"::util::SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":1925,"byte_end":1947,"line_start":69,"line_end":69,"column_start":15,"column_end":37},"name":"DER_MAX_SIGNATURE_SIZE","qualname":"::util::DER_MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2366,"byte_end":2375,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Public key on a secp256k1 curve.\n","sig":null,"attributes":[{"value":"/ Public key on a secp256k1 curve.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2318,"byte_end":2354,"line_start":80,"line_end":80,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2482,"byte_end":2491,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret key (256-bit) on a secp256k1 curve.\n","sig":null,"attributes":[{"value":"/ Secret key (256-bit) on a secp256k1 curve.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2424,"byte_end":2470,"line_start":83,"line_end":83,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2575,"byte_end":2584,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature { r, s }","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"decl_id":null,"docs":" An ECDSA signature.\n","sig":null,"attributes":[{"value":"/ An ECDSA signature.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2540,"byte_end":2563,"line_start":86,"line_end":86,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2595,"byte_end":2596,"line_start":88,"line_end":88,"column_start":9,"column_end":10},"name":"r","qualname":"::Signature::r","value":"scalar::Scalar","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2614,"byte_end":2615,"line_start":89,"line_end":89,"column_start":9,"column_end":10},"name":"s","qualname":"::Signature::s","value":"scalar::Scalar","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2736,"byte_end":2746,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Tag used for public key recovery from signatures.\n","sig":null,"attributes":[{"value":"/ Tag used for public key recovery from signatures.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2671,"byte_end":2724,"line_start":92,"line_end":92,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2850,"byte_end":2857,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hashed message input to an ECDSA signature.\n","sig":null,"attributes":[{"value":"/ Hashed message input to an ECDSA signature.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2791,"byte_end":2838,"line_start":95,"line_end":95,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2858,"byte_end":2868,"line_start":96,"line_end":96,"column_start":20,"column_end":30},"name":"0","qualname":"::Message::0","value":"scalar::Scalar","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2951,"byte_end":2963,"line_start":99,"line_end":99,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shared secret using ECDH.\n","sig":null,"attributes":[{"value":"/ Shared secret using ECDH.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":2910,"byte_end":2939,"line_start":98,"line_end":98,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3117,"byte_end":3127,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"name":"Compressed","qualname":"::PublicKeyFormat::Compressed","value":"PublicKeyFormat::Compressed","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Compressed public key, 33 bytes.\n","sig":null,"attributes":[{"value":"/ Compressed public key, 33 bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3076,"byte_end":3112,"line_start":103,"line_end":103,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3175,"byte_end":3179,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Full","qualname":"::PublicKeyFormat::Full","value":"PublicKeyFormat::Full","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Full length public key, 65 bytes.\n","sig":null,"attributes":[{"value":"/ Full length public key, 65 bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3133,"byte_end":3170,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3219,"byte_end":3222,"line_start":108,"line_end":108,"column_start":5,"column_end":8},"name":"Raw","qualname":"::PublicKeyFormat::Raw","value":"PublicKeyFormat::Raw","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Raw public key, 64 bytes.\n","sig":null,"attributes":[{"value":"/ Raw public key, 64 bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3185,"byte_end":3214,"line_start":107,"line_end":107,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3054,"byte_end":3069,"line_start":102,"line_end":102,"column_start":10,"column_end":25},"name":"PublicKeyFormat","qualname":"::PublicKeyFormat","value":"pub enum PublicKeyFormat { Compressed, Full, Raw, }","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600}],"decl_id":null,"docs":" Format for public key parsing.\n","sig":null,"attributes":[{"value":"/ Format for public key parsing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3010,"byte_end":3044,"line_start":101,"line_end":101,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3255,"byte_end":3270,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"pub fn from_secret_key(&SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3509,"byte_end":3520,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<PublicKey>::parse_slice","value":"pub fn parse_slice(&[u8], Option<PublicKeyFormat>) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":4929,"byte_end":4934,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"parse","qualname":"<PublicKey>::parse","value":"pub fn parse(&[u8; ]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":6079,"byte_end":6095,"line_start":187,"line_end":187,"column_start":12,"column_end":28},"name":"parse_compressed","qualname":"<PublicKey>::parse_compressed","value":"pub fn parse_compressed(&[u8; ]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":6845,"byte_end":6854,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":7292,"byte_end":7312,"line_start":226,"line_end":226,"column_start":12,"column_end":32},"name":"serialize_compressed","qualname":"<PublicKey>::serialize_compressed","value":"pub fn serialize_compressed(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":7807,"byte_end":7823,"line_start":246,"line_end":246,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<PublicKey>::tweak_add_assign","value":"pub fn tweak_add_assign(&mut Self, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":8210,"byte_end":8226,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"tweak_mul_assign","qualname":"<PublicKey>::tweak_mul_assign","value":"pub fn tweak_mul_assign(&mut Self, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":8619,"byte_end":8626,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"pub fn combine(&[PublicKey]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9094,"byte_end":9099,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"parse","qualname":"<SecretKey>::parse","value":"pub fn parse(&[u8; ]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9366,"byte_end":9377,"line_start":307,"line_end":307,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<SecretKey>::parse_slice","value":"pub fn parse_slice(&[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9627,"byte_end":9633,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey>::random","value":"pub fn random<R: Rng>(&mut R) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9929,"byte_end":9938,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"serialize","qualname":"<SecretKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":10018,"byte_end":10034,"line_start":333,"line_end":333,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<SecretKey>::tweak_add_assign","value":"pub fn tweak_add_assign(&mut Self, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":10260,"byte_end":10276,"line_start":342,"line_end":342,"column_start":12,"column_end":28},"name":"tweak_mul_assign","qualname":"<SecretKey>::tweak_mul_assign","value":"pub fn tweak_mul_assign(&mut Self, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":10481,"byte_end":10484,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"inv","qualname":"<SecretKey>::inv","value":"pub fn inv(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11689,"byte_end":11694,"line_start":403,"line_end":403,"column_start":12,"column_end":17},"name":"parse","qualname":"<Signature>::parse","value":"pub fn parse(&[u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":12008,"byte_end":12019,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<Signature>::parse_slice","value":"pub fn parse_slice(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":12290,"byte_end":12299,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"name":"parse_der","qualname":"<Signature>::parse_der","value":"pub fn parse_der(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13107,"byte_end":13120,"line_start":448,"line_end":448,"column_start":12,"column_end":25},"name":"parse_der_lax","qualname":"<Signature>::parse_der_lax","value":"pub fn parse_der_lax(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":12808,"byte_end":12885,"line_start":444,"line_end":444,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":12890,"byte_end":12969,"line_start":445,"line_end":445,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":12974,"byte_end":13050,"line_start":446,"line_end":446,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13055,"byte_end":13095,"line_start":447,"line_end":447,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14612,"byte_end":14623,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"pub fn normalize_s(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13427,"byte_end":13497,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13502,"byte_end":13571,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13576,"byte_end":13647,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13652,"byte_end":13722,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13727,"byte_end":13798,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13803,"byte_end":13877,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13882,"byte_end":13956,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":13961,"byte_end":14032,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accommodate","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14037,"byte_end":14112,"line_start":468,"line_end":468,"column_start":5,"column_end":80}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14117,"byte_end":14190,"line_start":469,"line_end":469,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14195,"byte_end":14261,"line_start":470,"line_end":470,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14266,"byte_end":14280,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14285,"byte_end":14288,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14293,"byte_end":14368,"line_start":473,"line_end":473,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14373,"byte_end":14446,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14451,"byte_end":14524,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14529,"byte_end":14600,"line_start":476,"line_end":476,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14734,"byte_end":14743,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Signature>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":14953,"byte_end":14966,"line_start":491,"line_end":491,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"pub fn serialize_der(&Self) -> der::SignatureArray","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16226,"byte_end":16231,"line_start":533,"line_end":533,"column_start":12,"column_end":17},"name":"parse","qualname":"<Message>::parse","value":"pub fn parse(&[u8; ]) -> Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16424,"byte_end":16435,"line_start":542,"line_end":542,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<Message>::parse_slice","value":"pub fn parse_slice(&[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16700,"byte_end":16709,"line_start":552,"line_end":552,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Message>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16849,"byte_end":16854,"line_start":559,"line_end":559,"column_start":12,"column_end":17},"name":"parse","qualname":"<RecoveryId>::parse","value":"pub fn parse(u8) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse recovery ID starting with 0.\n","sig":null,"attributes":[{"value":"/ Parse recovery ID starting with 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16799,"byte_end":16837,"line_start":558,"line_end":558,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17097,"byte_end":17106,"line_start":568,"line_end":568,"column_start":12,"column_end":21},"name":"parse_rpc","qualname":"<RecoveryId>::parse_rpc","value":"pub fn parse_rpc(u8) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse recovery ID as Ethereum RPC format, starting with 27.\n","sig":null,"attributes":[{"value":"/ Parse recovery ID as Ethereum RPC format, starting with 27.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17022,"byte_end":17085,"line_start":567,"line_end":567,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17305,"byte_end":17314,"line_start":576,"line_end":576,"column_start":12,"column_end":21},"name":"serialize","qualname":"<RecoveryId>::serialize","value":"pub fn serialize(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17580,"byte_end":17583,"line_start":594,"line_end":594,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret<D>>::new","value":"pub fn new(&PublicKey, &SecretKey) -> Result<SharedSecret<D>, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18317,"byte_end":18323,"line_start":621,"line_end":621,"column_start":8,"column_end":14},"name":"verify","qualname":"::verify","value":"pub fn verify(&Message, &Signature, &PublicKey) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check signature is a valid message signed by public key.\n","sig":null,"attributes":[{"value":"/ Check signature is a valid message signed by public key.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18249,"byte_end":18309,"line_start":620,"line_end":620,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18533,"byte_end":18540,"line_start":626,"line_end":626,"column_start":8,"column_end":15},"name":"recover","qualname":"::recover","value":"pub fn recover(&Message, &Signature, &RecoveryId) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Recover public key from a signed message.\n","sig":null,"attributes":[{"value":"/ Recover public key from a signed message.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18480,"byte_end":18525,"line_start":625,"line_end":625,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18823,"byte_end":18827,"line_start":632,"line_end":632,"column_start":8,"column_end":12},"name":"sign","qualname":"::sign","value":"pub fn sign(&Message, &SecretKey) -> (Signature, RecoveryId)","parent":null,"children":[],"decl_id":null,"docs":" Sign a message using the secret key.\n","sig":null,"attributes":[{"value":"/ Sign a message using the secret key.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18750,"byte_end":18790,"line_start":630,"line_end":630,"column_start":1,"column_end":41}},{"value":"cfg(feature = \"hmac\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18791,"byte_end":18815,"line_start":631,"line_end":631,"column_start":1,"column_end":25}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":21887,"byte_end":21892,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":80589,"byte_end":80594,"line_start":1379,"line_end":1379,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":80762,"byte_end":80767,"line_start":1389,"line_end":1389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":81163,"byte_end":81168,"line_start":1407,"line_end":1407,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":81700,"byte_end":81705,"line_start":1426,"line_end":1426,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":81814,"byte_end":81819,"line_start":1432,"line_end":1432,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82240,"byte_end":82245,"line_start":1450,"line_end":1450,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82432,"byte_end":82437,"line_start":1458,"line_end":1458,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82545,"byte_end":82550,"line_start":1464,"line_end":1464,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82724,"byte_end":82729,"line_start":1472,"line_end":1472,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82748,"byte_end":82753,"line_start":1474,"line_end":1474,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82860,"byte_end":82865,"line_start":1480,"line_end":1480,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83101,"byte_end":83113,"line_start":1490,"line_end":1490,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83194,"byte_end":83206,"line_start":1496,"line_end":1496,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83992,"byte_end":83997,"line_start":1515,"line_end":1515,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":84725,"byte_end":84730,"line_start":1537,"line_end":1537,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86625,"byte_end":86631,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86811,"byte_end":86819,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87036,"byte_end":87049,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87936,"byte_end":87942,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92313,"byte_end":92321,"line_start":282,"line_end":282,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103897,"byte_end":103903,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104066,"byte_end":104072,"line_start":672,"line_end":672,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104324,"byte_end":104337,"line_start":684,"line_end":684,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105463,"byte_end":105469,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105533,"byte_end":105539,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":119022,"byte_end":119028,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133422,"byte_end":133428,"line_start":845,"line_end":845,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133516,"byte_end":133522,"line_start":851,"line_end":851,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133897,"byte_end":133903,"line_start":868,"line_end":868,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":134333,"byte_end":134339,"line_start":885,"line_end":885,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":134450,"byte_end":134456,"line_start":891,"line_end":891,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":134888,"byte_end":134894,"line_start":909,"line_end":909,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":135084,"byte_end":135090,"line_start":917,"line_end":917,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":135193,"byte_end":135199,"line_start":923,"line_end":923,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":135495,"byte_end":135501,"line_start":939,"line_end":939,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":143203,"byte_end":143216,"line_start":233,"line_end":233,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":146979,"byte_end":146995,"line_start":343,"line_end":343,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":148103,"byte_end":148116,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":150322,"byte_end":150338,"line_start":99,"line_end":99,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","byte_start":151513,"byte_end":151526,"line_start":7,"line_end":7,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152461,"byte_end":152466,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152499,"byte_end":152504,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153288,"byte_end":153302,"line_start":9,"line_end":9,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153477,"byte_end":153491,"line_start":19,"line_end":19,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153582,"byte_end":153596,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153729,"byte_end":153736,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3232,"byte_end":3241,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":611},{"krate":0,"index":623},{"krate":0,"index":632},{"krate":0,"index":638},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9000,"byte_end":9009,"line_start":291,"line_end":291,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9071,"byte_end":9080,"line_start":297,"line_end":297,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":10560,"byte_end":10569,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11038,"byte_end":11047,"line_start":370,"line_end":370,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11137,"byte_end":11146,"line_start":376,"line_end":376,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11381,"byte_end":11390,"line_start":388,"line_end":388,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11480,"byte_end":11489,"line_start":394,"line_end":394,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11666,"byte_end":11675,"line_start":402,"line_end":402,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16205,"byte_end":16212,"line_start":532,"line_end":532,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16782,"byte_end":16792,"line_start":557,"line_end":557,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17372,"byte_end":17382,"line_start":581,"line_end":581,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17454,"byte_end":17464,"line_start":587,"line_end":587,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17551,"byte_end":17563,"line_start":593,"line_end":593,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17912,"byte_end":17924,"line_start":605,"line_end":605,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18021,"byte_end":18033,"line_start":611,"line_end":611,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":21887,"byte_end":21892,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":80589,"byte_end":80594,"line_start":1379,"line_end":1379,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":80762,"byte_end":80767,"line_start":1389,"line_end":1389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":81163,"byte_end":81168,"line_start":1407,"line_end":1407,"column_start":35,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":81700,"byte_end":81705,"line_start":1426,"line_end":1426,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":81814,"byte_end":81819,"line_start":1432,"line_end":1432,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82240,"byte_end":82245,"line_start":1450,"line_end":1450,"column_start":35,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3164}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82432,"byte_end":82437,"line_start":1458,"line_end":1458,"column_start":27,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":3164}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82545,"byte_end":82550,"line_start":1464,"line_end":1464,"column_start":20,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82724,"byte_end":82729,"line_start":1472,"line_end":1472,"column_start":13,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82748,"byte_end":82753,"line_start":1474,"line_end":1474,"column_start":14,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":82860,"byte_end":82865,"line_start":1480,"line_end":1480,"column_start":21,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83101,"byte_end":83113,"line_start":1490,"line_end":1490,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83194,"byte_end":83206,"line_start":1496,"line_end":1496,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":83992,"byte_end":83997,"line_start":1515,"line_end":1515,"column_start":29,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\field.rs","byte_start":84725,"byte_end":84730,"line_start":1537,"line_end":1537,"column_start":29,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86625,"byte_end":86631,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":86811,"byte_end":86819,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87036,"byte_end":87049,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":87936,"byte_end":87942,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":92313,"byte_end":92321,"line_start":282,"line_end":282,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":103897,"byte_end":103903,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104066,"byte_end":104072,"line_start":672,"line_end":672,"column_start":30,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\group.rs","byte_start":104324,"byte_end":104337,"line_start":684,"line_end":684,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105463,"byte_end":105469,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":105533,"byte_end":105539,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":119022,"byte_end":119028,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133422,"byte_end":133428,"line_start":845,"line_end":845,"column_start":18,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133516,"byte_end":133522,"line_start":851,"line_end":851,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":133897,"byte_end":133903,"line_start":868,"line_end":868,"column_start":36,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":134333,"byte_end":134339,"line_start":885,"line_end":885,"column_start":28,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":134450,"byte_end":134456,"line_start":891,"line_end":891,"column_start":22,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":134888,"byte_end":134894,"line_start":909,"line_end":909,"column_start":36,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3164}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":135084,"byte_end":135090,"line_start":917,"line_end":917,"column_start":28,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3164}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":135193,"byte_end":135199,"line_start":923,"line_end":923,"column_start":14,"column_end":20},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3152}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\scalar.rs","byte_start":135495,"byte_end":135501,"line_start":939,"line_end":939,"column_start":30,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":9698}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":143203,"byte_end":143216,"line_start":233,"line_end":233,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecmult\\mod.rs","byte_start":146979,"byte_end":146995,"line_start":343,"line_end":343,"column_start":6,"column_end":22},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":148103,"byte_end":148116,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdsa.rs","byte_start":150322,"byte_end":150338,"line_start":99,"line_end":99,"column_start":6,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\ecdh.rs","byte_start":151513,"byte_end":151526,"line_start":7,"line_end":7,"column_start":6,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152461,"byte_end":152466,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":845},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\error.rs","byte_start":152499,"byte_end":152504,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153288,"byte_end":153302,"line_start":9,"line_end":9,"column_start":6,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153477,"byte_end":153491,"line_start":19,"line_end":19,"column_start":22,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153582,"byte_end":153596,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2957}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\der.rs","byte_start":153729,"byte_end":153736,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":3232,"byte_end":3241,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9000,"byte_end":9009,"line_start":291,"line_end":291,"column_start":23,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":9071,"byte_end":9080,"line_start":297,"line_end":297,"column_start":6,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":10560,"byte_end":10569,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11038,"byte_end":11047,"line_start":370,"line_end":370,"column_start":23,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11137,"byte_end":11146,"line_start":376,"line_end":376,"column_start":26,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11381,"byte_end":11390,"line_start":388,"line_end":388,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11480,"byte_end":11489,"line_start":394,"line_end":394,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9698}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":11666,"byte_end":11675,"line_start":402,"line_end":402,"column_start":6,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16205,"byte_end":16212,"line_start":532,"line_end":532,"column_start":6,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":16782,"byte_end":16792,"line_start":557,"line_end":557,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17372,"byte_end":17382,"line_start":581,"line_end":581,"column_start":19,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17454,"byte_end":17464,"line_start":587,"line_end":587,"column_start":20,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17551,"byte_end":17563,"line_start":593,"line_end":593,"column_start":27,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":17912,"byte_end":17924,"line_start":605,"line_end":605,"column_start":33,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libsecp256k1-0.3.5\\src\\lib.rs","byte_start":18021,"byte_end":18033,"line_start":611,"line_end":611,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":3300}}]}