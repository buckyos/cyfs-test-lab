{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","base58","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=49ababb984988fde","-C","extra-filename=-49ababb984988fde","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libbase58-49ababb984988fde.rmeta"},"prelude":{"crate_id":{"name":"base58","disambiguator":[6638002467159002905,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":6569,"line_start":1,"line_end":232,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":6569,"line_start":1,"line_end":232,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":27},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":21}],"decl_id":null,"docs":" Base58-to-text encoding","sig":null,"attributes":[{"value":"/ Base58-to-text encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":28,"byte_end":31,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Based on https://github.com/trezor/trezor-crypto/blob/master/base58.c","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":32,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ commit hash: c6e7d37","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":106,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/ works only up to 128 bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":131,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":162,"byte_end":172,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":996,"byte_end":1018,"line_start":31,"line_end":31,"column_start":2,"column_end":24},"name":"InvalidBase58Character","qualname":"::FromBase58Error::InvalidBase58Character","value":"FromBase58Error::InvalidBase58Character(char, usize)","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" The input contained a character which is not a part of the base58 format.\n","sig":null,"attributes":[{"value":"/ The input contained a character which is not a part of the base58 format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":917,"byte_end":994,"line_start":30,"line_end":30,"column_start":2,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1069,"byte_end":1088,"line_start":33,"line_end":33,"column_start":2,"column_end":21},"name":"InvalidBase58Length","qualname":"::FromBase58Error::InvalidBase58Length","value":"FromBase58Error::InvalidBase58Length","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" The input had invalid length.\n","sig":null,"attributes":[{"value":"/ The input had invalid length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1034,"byte_end":1067,"line_start":32,"line_end":32,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":898,"byte_end":913,"line_start":29,"line_end":29,"column_start":10,"column_end":25},"name":"FromBase58Error","qualname":"::FromBase58Error","value":"pub enum FromBase58Error {\n    InvalidBase58Character(char, usize),\n    InvalidBase58Length,\n}","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":32}],"decl_id":null,"docs":" Errors that can occur when decoding base58 encoded string.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when decoding base58 encoded string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":798,"byte_end":860,"line_start":27,"line_end":27,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1164,"byte_end":1172,"line_start":37,"line_end":37,"column_start":11,"column_end":19},"name":"ToBase58","qualname":"::ToBase58","value":"ToBase58","parent":null,"children":[{"krate":0,"index":14}],"decl_id":null,"docs":" A trait for converting a value to base58 encoded string.\n","sig":null,"attributes":[{"value":"/ A trait for converting a value to base58 encoded string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1093,"byte_end":1153,"line_start":36,"line_end":36,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1258,"byte_end":1267,"line_start":39,"line_end":39,"column_start":5,"column_end":14},"name":"to_base58","qualname":"::ToBase58::to_base58","value":"pub fn to_base58(&Self) -> String","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Converts a value of `self` to a base58 value, returning the owned string.\n","sig":null,"attributes":[{"value":"/ Converts a value of `self` to a base58 value, returning the owned string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1176,"byte_end":1253,"line_start":38,"line_end":38,"column_start":2,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1349,"byte_end":1359,"line_start":43,"line_end":43,"column_start":11,"column_end":21},"name":"FromBase58","qualname":"::FromBase58","value":"FromBase58","parent":null,"children":[{"krate":0,"index":16}],"decl_id":null,"docs":" A trait for converting base58 encoded values.\n","sig":null,"attributes":[{"value":"/ A trait for converting base58 encoded values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1289,"byte_end":1338,"line_start":42,"line_end":42,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1485,"byte_end":1496,"line_start":45,"line_end":45,"column_start":5,"column_end":16},"name":"from_base58","qualname":"::FromBase58::from_base58","value":"pub fn from_base58(&Self) -> Result<Vec<u8>, FromBase58Error>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Convert a value of `self`, interpreted as base58 encoded data, into an owned vector of bytes, returning a vector.\n","sig":null,"attributes":[{"value":"/ Convert a value of `self`, interpreted as base58 encoded data, into an owned vector of bytes, returning a vector.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base58-0.2.0\\src\\lib.rs","byte_start":1363,"byte_end":1480,"line_start":44,"line_end":44,"column_start":2,"column_end":119}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}