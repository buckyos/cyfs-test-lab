{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cipher","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1073da9f42659b5c","-C","extra-filename=-1073da9f42659b5c","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--extern","generic_array=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libgeneric_array-15e005804be76612.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libcipher-1073da9f42659b5c.rmeta"},"prelude":{"crate_id":{"name":"cipher","disambiguator":[12022568792049864184,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","num":4,"id":{"name":"generic_array","disambiguator":[12382488001316959323,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","num":5,"id":{"name":"typenum","disambiguator":[5371539035448183228,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":805,"line_start":1,"line_end":30,"column_start":1,"column_end":48}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":732,"byte_end":733,"line_start":29,"line_end":29,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"BlockCipher, NewBlockCipher","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":743,"byte_end":744,"line_start":29,"line_end":29,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":754,"byte_end":755,"line_start":29,"line_end":29,"column_start":46,"column_end":47},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":766,"byte_end":779,"line_start":30,"line_end":30,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":2827},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":797,"byte_end":803,"line_start":30,"line_end":30,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":805,"line_start":1,"line_end":30,"column_start":1,"column_end":48},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":66},{"krate":0,"index":108},{"krate":0,"index":120},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":163}],"decl_id":null,"docs":" This crate defines a set of traits which describe the functionality of\n [block ciphers][1] and [stream ciphers][2].","sig":null,"attributes":[{"value":"/ This crate defines a set of traits which describe the functionality of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ [block ciphers][1] and [stream ciphers][2].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":75,"byte_end":122,"line_start":2,"line_end":2,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":123,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":127,"byte_end":178,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/ [2]: https://en.wikipedia.org/wiki/Stream_cipher","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":179,"byte_end":231,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":233,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":474,"byte_end":497,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":498,"byte_end":538,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1472,"byte_end":1486,"line_start":17,"line_end":17,"column_start":10,"column_end":24},"name":"BlockCipherKey","qualname":"::block::BlockCipherKey","value":"GenericArray<u8, <B as NewBlockCipher>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key for an algorithm that implements [`NewBlockCipher`].\n","sig":null,"attributes":[{"value":"/ Key for an algorithm that implements [`NewBlockCipher`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1402,"byte_end":1462,"line_start":16,"line_end":16,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1599,"byte_end":1604,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Block","qualname":"::block::Block","value":"GenericArray<u8, <B as BlockCipher>::BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Block on which a [`BlockCipher`] operates.\n","sig":null,"attributes":[{"value":"/ Block on which a [`BlockCipher`] operates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1543,"byte_end":1589,"line_start":19,"line_end":19,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1728,"byte_end":1737,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"ParBlocks","qualname":"::block::ParBlocks","value":"GenericArray<Block<B>, <B as BlockCipher>::ParBlocks>","parent":null,"children":[],"decl_id":null,"docs":" Block on which a [`BlockCipher`] operates in parallel.\n","sig":null,"attributes":[{"value":"/ Block on which a [`BlockCipher`] operates in parallel.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1660,"byte_end":1718,"line_start":22,"line_end":22,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1854,"byte_end":1868,"line_start":26,"line_end":26,"column_start":11,"column_end":25},"name":"NewBlockCipher","qualname":"::block::NewBlockCipher","value":"NewBlockCipher: Sized","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Instantiate a [`BlockCipher`] algorithm.\n","sig":null,"attributes":[{"value":"/ Instantiate a [`BlockCipher`] algorithm.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1799,"byte_end":1843,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1961,"byte_end":1968,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::block::NewBlockCipher::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Key size in bytes with which cipher guaranteed to be initialized.\n","sig":null,"attributes":[{"value":"/ Key size in bytes with which cipher guaranteed to be initialized.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1882,"byte_end":1951,"line_start":27,"line_end":27,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2062,"byte_end":2065,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"new","qualname":"::block::NewBlockCipher::new","value":"pub fn new(&BlockCipherKey<Self>) -> Self","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Create new block cipher instance from key with fixed size.\n","sig":null,"attributes":[{"value":"/ Create new block cipher instance from key with fixed size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1992,"byte_end":2054,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2332,"byte_end":2346,"line_start":37,"line_end":37,"column_start":8,"column_end":22},"name":"new_from_slice","qualname":"::block::NewBlockCipher::new_from_slice","value":"pub fn new_from_slice(&[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Create new block cipher instance from key with variable size.","sig":null,"attributes":[{"value":"/ Create new block cipher instance from key with variable size.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2108,"byte_end":2173,"line_start":33,"line_end":33,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2178,"byte_end":2181,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Default implementation will accept only keys with length equal to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2186,"byte_end":2255,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ `KeySize`, but some ciphers can accept range of key lengths.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2260,"byte_end":2324,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2632,"byte_end":2643,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"BlockCipher","qualname":"::block::BlockCipher","value":"BlockCipher","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" Trait which marks a type as being a block cipher.\n","sig":null,"attributes":[{"value":"/ Trait which marks a type as being a block cipher.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2568,"byte_end":2621,"line_start":46,"line_end":46,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2690,"byte_end":2699,"line_start":49,"line_end":49,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::block::BlockCipher::BlockSize","value":"type BlockSize: ArrayLength<u8>;","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Size of the block in bytes\n","sig":null,"attributes":[{"value":"/ Size of the block in bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2650,"byte_end":2680,"line_start":48,"line_end":48,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2821,"byte_end":2830,"line_start":53,"line_end":53,"column_start":10,"column_end":19},"name":"ParBlocks","qualname":"::block::BlockCipher::ParBlocks","value":"type ParBlocks: ArrayLength<Block<Self>>;","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Number of blocks which can be processed in parallel by\n cipher implementation\n","sig":null,"attributes":[{"value":"/ Number of blocks which can be processed in parallel by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2723,"byte_end":2781,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ cipher implementation","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2786,"byte_end":2811,"line_start":52,"line_end":52,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2921,"byte_end":2933,"line_start":57,"line_end":57,"column_start":11,"column_end":23},"name":"BlockEncrypt","qualname":"::block::BlockEncrypt","value":"BlockEncrypt: BlockCipher","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" Encrypt-only functionality for block ciphers.\n","sig":null,"attributes":[{"value":"/ Encrypt-only functionality for block ciphers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2861,"byte_end":2910,"line_start":56,"line_end":56,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2987,"byte_end":3000,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"encrypt_block","qualname":"::block::BlockEncrypt::encrypt_block","value":"pub fn encrypt_block(&Self, &mut Block<Self>)","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Encrypt block in-place\n","sig":null,"attributes":[{"value":"/ Encrypt block in-place","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2953,"byte_end":2979,"line_start":58,"line_end":58,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3235,"byte_end":3253,"line_start":66,"line_end":66,"column_start":8,"column_end":26},"name":"encrypt_par_blocks","qualname":"::block::BlockEncrypt::encrypt_par_blocks","value":"pub fn encrypt_par_blocks(&Self, &mut ParBlocks<Self>)","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Encrypt several blocks in parallel using instruction level parallelism\n if possible.","sig":null,"attributes":[{"value":"/ Encrypt several blocks in parallel using instruction level parallelism","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3039,"byte_end":3113,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ if possible.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3118,"byte_end":3134,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3139,"byte_end":3142,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If `ParBlocks` equals to 1 it's equivalent to `encrypt_block`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3147,"byte_end":3213,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3218,"byte_end":3227,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3485,"byte_end":3499,"line_start":74,"line_end":74,"column_start":8,"column_end":22},"name":"encrypt_blocks","qualname":"::block::BlockEncrypt::encrypt_blocks","value":"pub fn encrypt_blocks(&Self, &mut [Block<Self>])","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Encrypt a slice of blocks, leveraging parallelism when available.\n","sig":null,"attributes":[{"value":"/ Encrypt a slice of blocks, leveraging parallelism when available.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3394,"byte_end":3463,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3468,"byte_end":3477,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3987,"byte_end":3999,"line_start":94,"line_end":94,"column_start":11,"column_end":23},"name":"BlockDecrypt","qualname":"::block::BlockDecrypt","value":"BlockDecrypt: BlockCipher","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Decrypt-only functionality for block ciphers.\n","sig":null,"attributes":[{"value":"/ Decrypt-only functionality for block ciphers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":3927,"byte_end":3976,"line_start":93,"line_end":93,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4053,"byte_end":4066,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"decrypt_block","qualname":"::block::BlockDecrypt::decrypt_block","value":"pub fn decrypt_block(&Self, &mut Block<Self>)","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decrypt block in-place\n","sig":null,"attributes":[{"value":"/ Decrypt block in-place","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4019,"byte_end":4045,"line_start":95,"line_end":95,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4301,"byte_end":4319,"line_start":103,"line_end":103,"column_start":8,"column_end":26},"name":"decrypt_par_blocks","qualname":"::block::BlockDecrypt::decrypt_par_blocks","value":"pub fn decrypt_par_blocks(&Self, &mut ParBlocks<Self>)","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decrypt several blocks in parallel using instruction level parallelism\n if possible.","sig":null,"attributes":[{"value":"/ Decrypt several blocks in parallel using instruction level parallelism","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4105,"byte_end":4179,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ if possible.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4184,"byte_end":4200,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4205,"byte_end":4208,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If `ParBlocks` equals to 1 it's equivalent to `decrypt_block`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4213,"byte_end":4279,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4284,"byte_end":4293,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4551,"byte_end":4565,"line_start":111,"line_end":111,"column_start":8,"column_end":22},"name":"decrypt_blocks","qualname":"::block::BlockDecrypt::decrypt_blocks","value":"pub fn decrypt_blocks(&Self, &mut [Block<Self>])","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decrypt a slice of blocks, leveraging parallelism when available.\n","sig":null,"attributes":[{"value":"/ Decrypt a slice of blocks, leveraging parallelism when available.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4460,"byte_end":4529,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4534,"byte_end":4543,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5230,"byte_end":5245,"line_start":134,"line_end":134,"column_start":11,"column_end":26},"name":"BlockEncryptMut","qualname":"::block::BlockEncryptMut","value":"BlockEncryptMut: BlockCipher","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Encrypt-only functionality for block ciphers with mutable access to `self`.","sig":null,"attributes":[{"value":"/ Encrypt-only functionality for block ciphers with mutable access to `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4993,"byte_end":5072,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5073,"byte_end":5076,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The main use case for this trait is hardware encryption engines which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5077,"byte_end":5150,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ require `&mut self` access to an underlying hardware peripheral.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5151,"byte_end":5219,"line_start":133,"line_end":133,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5299,"byte_end":5316,"line_start":136,"line_end":136,"column_start":8,"column_end":25},"name":"encrypt_block_mut","qualname":"::block::BlockEncryptMut::encrypt_block_mut","value":"pub fn encrypt_block_mut(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Encrypt block in-place\n","sig":null,"attributes":[{"value":"/ Encrypt block in-place","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5265,"byte_end":5291,"line_start":135,"line_end":135,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5594,"byte_end":5609,"line_start":143,"line_end":143,"column_start":11,"column_end":26},"name":"BlockDecryptMut","qualname":"::block::BlockDecryptMut","value":"BlockDecryptMut: BlockCipher","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" Decrypt-only functionality for block ciphers with mutable access to `self`.","sig":null,"attributes":[{"value":"/ Decrypt-only functionality for block ciphers with mutable access to `self`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5357,"byte_end":5436,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5437,"byte_end":5440,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The main use case for this trait is hardware encryption engines which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5441,"byte_end":5514,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ require `&mut self` access to an underlying hardware peripheral.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5515,"byte_end":5583,"line_start":142,"line_end":142,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5663,"byte_end":5680,"line_start":145,"line_end":145,"column_start":8,"column_end":25},"name":"decrypt_block_mut","qualname":"::block::BlockDecryptMut::decrypt_block_mut","value":"pub fn decrypt_block_mut(&mut Self, &mut Block<Self>)","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Decrypt block in-place\n","sig":null,"attributes":[{"value":"/ Decrypt block in-place","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5629,"byte_end":5655,"line_start":144,"line_end":144,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7255,"byte_end":7264,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"CipherKey","qualname":"::common::CipherKey","value":"GenericArray<u8, <C as NewCipher>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key for an algorithm that implements [`NewCipher`].\n","sig":null,"attributes":[{"value":"/ Key for an algorithm that implements [`NewCipher`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7190,"byte_end":7245,"line_start":4,"line_end":4,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7383,"byte_end":7388,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Nonce","qualname":"::common::Nonce","value":"GenericArray<u8, <C as NewCipher>::NonceSize>","parent":null,"children":[],"decl_id":null,"docs":" Nonce for an algorithm that implements [`NewCipher`].\n","sig":null,"attributes":[{"value":"/ Nonce for an algorithm that implements [`NewCipher`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7316,"byte_end":7373,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7576,"byte_end":7585,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"NewCipher","qualname":"::common::NewCipher","value":"NewCipher: Sized","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Cipher creation trait.","sig":null,"attributes":[{"value":"/ Cipher creation trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7442,"byte_end":7468,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7469,"byte_end":7472,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ It can be used for creation of block modes, synchronous and asynchronous stream ciphers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7473,"byte_end":7565,"line_start":12,"line_end":12,"column_start":1,"column_end":93}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7630,"byte_end":7637,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::common::NewCipher::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Key size in bytes\n","sig":null,"attributes":[{"value":"/ Key size in bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7599,"byte_end":7620,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7694,"byte_end":7703,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"NonceSize","qualname":"::common::NewCipher::NonceSize","value":"type NonceSize: ArrayLength<u8>;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Nonce size in bytes\n","sig":null,"attributes":[{"value":"/ Nonce size in bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7661,"byte_end":7684,"line_start":17,"line_end":17,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7799,"byte_end":7802,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"new","qualname":"::common::NewCipher::new","value":"pub fn new(&CipherKey<Self>, &Nonce<Self>) -> Self","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from key and nonce arrays.\n","sig":null,"attributes":[{"value":"/ Create new stream cipher instance from key and nonce arrays.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7727,"byte_end":7791,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7985,"byte_end":8000,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"new_from_slices","qualname":"::common::NewCipher::new_from_slices","value":"pub fn new_from_slices(&[u8], &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce\n given as byte slices.\n","sig":null,"attributes":[{"value":"/ Create new stream cipher instance from variable length key and nonce","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7861,"byte_end":7933,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ given as byte slices.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7938,"byte_end":7963,"line_start":24,"line_end":24,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7968,"byte_end":7977,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8501,"byte_end":8516,"line_start":40,"line_end":40,"column_start":11,"column_end":26},"name":"FromBlockCipher","qualname":"::common::FromBlockCipher","value":"FromBlockCipher","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" Trait for types which can be initialized from a block cipher and nonce.\n","sig":null,"attributes":[{"value":"/ Trait for types which can be initialized from a block cipher and nonce.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8415,"byte_end":8490,"line_start":39,"line_end":39,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8549,"byte_end":8560,"line_start":42,"line_end":42,"column_start":10,"column_end":21},"name":"BlockCipher","qualname":"::common::FromBlockCipher::BlockCipher","value":"type BlockCipher: BlockCipher;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Block cipher\n","sig":null,"attributes":[{"value":"/ Block cipher","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8523,"byte_end":8539,"line_start":41,"line_end":41,"column_start":5,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8612,"byte_end":8621,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"NonceSize","qualname":"::common::FromBlockCipher::NonceSize","value":"type NonceSize: ArrayLength<u8>;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Nonce size in bytes\n","sig":null,"attributes":[{"value":"/ Nonce size in bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8579,"byte_end":8602,"line_start":43,"line_end":43,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8704,"byte_end":8721,"line_start":47,"line_end":47,"column_start":8,"column_end":25},"name":"from_block_cipher","qualname":"::common::FromBlockCipher::from_block_cipher","value":"pub fn from_block_cipher(Self::BlockCipher,\n&GenericArray<u8, Self::NonceSize>) -> Self","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Instantiate a stream cipher from a block cipher\n","sig":null,"attributes":[{"value":"/ Instantiate a stream cipher from a block cipher","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8645,"byte_end":8696,"line_start":46,"line_end":46,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::errors","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":112},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":114},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":116},{"krate":0,"index":118}],"decl_id":null,"docs":" Error types.\n","sig":null,"attributes":[{"value":"/ Error types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":9744,"byte_end":9760,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":9902,"byte_end":9911,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"LoopError","qualname":"::errors::LoopError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when stream cipher has reached the end of a keystream.\n","sig":null,"attributes":[{"value":"/ The error type returned when stream cipher has reached the end of a keystream.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":9778,"byte_end":9860,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10285,"byte_end":10298,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"InvalidLength","qualname":"::errors::InvalidLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when key and/or nonce used in stream cipher\n initialization had an invalid length.\n","sig":null,"attributes":[{"value":"/ The error type returned when key and/or nonce used in stream cipher","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10130,"byte_end":10201,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ initialization had an invalid length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10202,"byte_end":10243,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10667,"byte_end":10680,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"OverflowError","qualname":"::errors::OverflowError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when a cipher position can not be represented\n by the requested type.\n","sig":null,"attributes":[{"value":"/ The error type returned when a cipher position can not be represented","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10525,"byte_end":10598,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ by the requested type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10599,"byte_end":10625,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11339,"byte_end":11351,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"StreamCipher","qualname":"::stream::StreamCipher","value":"StreamCipher","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":" Synchronous stream cipher core trait.\n","sig":null,"attributes":[{"value":"/ Synchronous stream cipher core trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11287,"byte_end":11328,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11694,"byte_end":11709,"line_start":20,"line_end":20,"column_start":8,"column_end":23},"name":"apply_keystream","qualname":"::stream::StreamCipher::apply_keystream","value":"pub fn apply_keystream(&mut Self, &mut [u8])","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Apply keystream to the data.","sig":null,"attributes":[{"value":"/ Apply keystream to the data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11358,"byte_end":11390,"line_start":11,"line_end":11,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11395,"byte_end":11398,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ It will XOR generated keystream with the data, which can be both","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11403,"byte_end":11471,"line_start":13,"line_end":13,"column_start":5,"column_end":73}},{"value":"/ encryption and decryption.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11476,"byte_end":11506,"line_start":14,"line_end":14,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11511,"byte_end":11514,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11519,"byte_end":11531,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ If end of the keystream will be reached with the given data length,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11536,"byte_end":11607,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/ method will panic without modifying the provided `data`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11612,"byte_end":11672,"line_start":18,"line_end":18,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11677,"byte_end":11686,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12071,"byte_end":12090,"line_start":29,"line_end":29,"column_start":8,"column_end":27},"name":"try_apply_keystream","qualname":"::stream::StreamCipher::try_apply_keystream","value":"pub fn try_apply_keystream(&mut Self, &mut [u8]) -> Result<(), LoopError>","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Apply keystream to the data, but return an error if end of a keystream\n will be reached.","sig":null,"attributes":[{"value":"/ Apply keystream to the data, but return an error if end of a keystream","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11800,"byte_end":11874,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ will be reached.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11879,"byte_end":11899,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11904,"byte_end":11907,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If end of the keystream will be achieved with the given data length,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11912,"byte_end":11984,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/ method will return `Err(LoopError)` without modifying provided `data`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":11989,"byte_end":12063,"line_start":28,"line_end":28,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12391,"byte_end":12407,"line_start":37,"line_end":37,"column_start":11,"column_end":27},"name":"StreamCipherSeek","qualname":"::stream::StreamCipherSeek","value":"StreamCipherSeek","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"decl_id":null,"docs":" Trait for seekable stream ciphers.","sig":null,"attributes":[{"value":"/ Trait for seekable stream ciphers.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12148,"byte_end":12186,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12187,"byte_end":12190,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Methods of this trait are generic over the [`SeekNum`] trait, which is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12191,"byte_end":12265,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ implemented for primitive numeric types, i.e.: `i/u8`, `i/u16`, `i/u32`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12266,"byte_end":12342,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `i/u64`, `i/u128`, and `i/usize`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12343,"byte_end":12380,"line_start":36,"line_end":36,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12548,"byte_end":12563,"line_start":41,"line_end":41,"column_start":8,"column_end":23},"name":"try_current_pos","qualname":"::stream::StreamCipherSeek::try_current_pos","value":"pub fn try_current_pos<T: SeekNum>(&Self) -> Result<T, OverflowError>","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Try to get current keystream position","sig":null,"attributes":[{"value":"/ Try to get current keystream position","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12414,"byte_end":12455,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12460,"byte_end":12463,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Returns [`LoopError`] if position can not be represented by type `T`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12468,"byte_end":12540,"line_start":40,"line_end":40,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12768,"byte_end":12776,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"try_seek","qualname":"::stream::StreamCipherSeek::try_seek","value":"pub fn try_seek<T: SeekNum>(&mut Self, T) -> Result<(), LoopError>","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Try to seek to the given position","sig":null,"attributes":[{"value":"/ Try to seek to the given position","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12617,"byte_end":12654,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12659,"byte_end":12662,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns [`LoopError`] if provided position value is bigger than","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12667,"byte_end":12734,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ keystream length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12739,"byte_end":12760,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12961,"byte_end":12972,"line_start":53,"line_end":53,"column_start":8,"column_end":19},"name":"current_pos","qualname":"::stream::StreamCipherSeek::current_pos","value":"pub fn current_pos<T: SeekNum>(&Self) -> T","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Get current keystream position","sig":null,"attributes":[{"value":"/ Get current keystream position","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12839,"byte_end":12873,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12878,"byte_end":12881,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12886,"byte_end":12898,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/ If position can not be represented by type `T`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":12903,"byte_end":12953,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13181,"byte_end":13185,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"seek","qualname":"::stream::StreamCipherSeek::seek","value":"pub fn seek<T: SeekNum>(&mut Self, T)","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Seek to the given position","sig":null,"attributes":[{"value":"/ Seek to the given position","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13050,"byte_end":13080,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13085,"byte_end":13088,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13093,"byte_end":13105,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/ If provided position value is bigger than keystream leangth","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13110,"byte_end":13173,"line_start":60,"line_end":60,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13317,"byte_end":13334,"line_start":67,"line_end":67,"column_start":11,"column_end":28},"name":"AsyncStreamCipher","qualname":"::stream::AsyncStreamCipher","value":"AsyncStreamCipher","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Asynchronous stream cipher core trait.\n","sig":null,"attributes":[{"value":"/ Asynchronous stream cipher core trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13264,"byte_end":13306,"line_start":66,"line_end":66,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13375,"byte_end":13382,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::stream::AsyncStreamCipher::encrypt","value":"pub fn encrypt(&mut Self, &mut [u8])","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Encrypt data in place.\n","sig":null,"attributes":[{"value":"/ Encrypt data in place.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13341,"byte_end":13367,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13451,"byte_end":13458,"line_start":72,"line_end":72,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::stream::AsyncStreamCipher::decrypt","value":"pub fn decrypt(&mut Self, &mut [u8])","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Decrypt data in place.\n","sig":null,"attributes":[{"value":"/ Decrypt data in place.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13417,"byte_end":13443,"line_start":71,"line_end":71,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14120,"byte_end":14127,"line_start":94,"line_end":94,"column_start":11,"column_end":18},"name":"SeekNum","qualname":"::stream::SeekNum","value":"SeekNum: Sized + TryInto<u8> + TryFrom<u8> + TryInto<i8> + TryFrom<i8> + TryInto<u16> +\nTryFrom<u16> + TryInto<i16> + TryFrom<i16> + TryInto<u32> + TryFrom<u32> +\nTryInto<i32> + TryFrom<i32> + TryInto<u64> + TryFrom<u64> + TryInto<i64> +\nTryFrom<i64> + TryInto<u128> + TryFrom<u128> + TryInto<i128> + TryFrom<i128> +\nTryInto<usize> + TryFrom<usize> + TryInto<isize> + TryFrom<isize>","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":190}],"decl_id":null,"docs":" Trait implemented for numeric types which can be used with the\n [`StreamCipherSeek`] trait.","sig":null,"attributes":[{"value":"/ Trait implemented for numeric types which can be used with the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13801,"byte_end":13867,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ [`StreamCipherSeek`] trait.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13868,"byte_end":13899,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13900,"byte_end":13903,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for primitive numeric types, i.e. `i/u8`,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13904,"byte_end":13975,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ `u16`, `u32`, `u64`, `u128`, `usize`, and `i32`. It is not intended","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":13976,"byte_end":14047,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/ to be implemented in third-party crates.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14048,"byte_end":14092,"line_start":92,"line_end":92,"column_start":1,"column_end":45}},{"value":"rustfmt::skip","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14093,"byte_end":14109,"line_start":93,"line_end":93,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14658,"byte_end":14673,"line_start":105,"line_end":105,"column_start":8,"column_end":23},"name":"from_block_byte","qualname":"::stream::SeekNum::from_block_byte","value":"pub fn from_block_byte<T: SeekNum>(T, u8, u8) -> Result<Self, OverflowError>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Try to get position for block number `block`, byte position inside\n block `byte`, and block size `bs`.\n","sig":null,"attributes":[{"value":"/ Try to get position for block number `block`, byte position inside","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14537,"byte_end":14607,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ block `byte`, and block size `bs`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14612,"byte_end":14650,"line_start":104,"line_end":104,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14832,"byte_end":14845,"line_start":108,"line_end":108,"column_start":8,"column_end":21},"name":"to_block_byte","qualname":"::stream::SeekNum::to_block_byte","value":"pub fn to_block_byte<T: SeekNum>(Self, u8) -> Result<(T, u8), OverflowError>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Try to get block number and bytes position for given block size `bs`.\n","sig":null,"attributes":[{"value":"/ Try to get block number and bytes position for given block size `bs`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14751,"byte_end":14824,"line_start":107,"line_end":107,"column_start":5,"column_end":78}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5765,"byte_end":5768,"line_start":148,"line_end":148,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5922,"byte_end":5925,"line_start":154,"line_end":154,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8849,"byte_end":8850,"line_start":53,"line_end":53,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":9936,"byte_end":9945,"line_start":9,"line_end":9,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10323,"byte_end":10336,"line_start":23,"line_end":23,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10705,"byte_end":10718,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10871,"byte_end":10880,"line_start":43,"line_end":43,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\lib.rs","byte_start":688,"byte_end":694,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":108}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":1870,"byte_end":1875,"line_start":26,"line_end":26,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":2935,"byte_end":2946,"line_start":57,"line_end":57,"column_start":25,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":34}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":4001,"byte_end":4012,"line_start":94,"line_end":94,"column_start":25,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":38}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5247,"byte_end":5258,"line_start":134,"line_end":134,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5611,"byte_end":5622,"line_start":143,"line_end":143,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5765,"byte_end":5768,"line_start":148,"line_end":148,"column_start":45,"column_end":48},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":47},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\block.rs","byte_start":5922,"byte_end":5925,"line_start":154,"line_end":154,"column_start":45,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":50},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":7587,"byte_end":7592,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":91}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\common.rs","byte_start":8849,"byte_end":8850,"line_start":53,"line_end":53,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":101},"to":{"krate":0,"index":91}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":9936,"byte_end":9945,"line_start":9,"line_end":9,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10323,"byte_end":10336,"line_start":23,"line_end":23,"column_start":23,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":173},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10705,"byte_end":10718,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\errors.rs","byte_start":10871,"byte_end":10880,"line_start":43,"line_end":43,"column_start":30,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14133,"byte_end":14138,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14145,"byte_end":14152,"line_start":96,"line_end":96,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14159,"byte_end":14166,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14173,"byte_end":14180,"line_start":96,"line_end":96,"column_start":35,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14187,"byte_end":14194,"line_start":96,"line_end":96,"column_start":49,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14205,"byte_end":14212,"line_start":97,"line_end":97,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14220,"byte_end":14227,"line_start":97,"line_end":97,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14235,"byte_end":14242,"line_start":97,"line_end":97,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14250,"byte_end":14257,"line_start":97,"line_end":97,"column_start":52,"column_end":59},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14269,"byte_end":14276,"line_start":98,"line_end":98,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14284,"byte_end":14291,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14299,"byte_end":14306,"line_start":98,"line_end":98,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14314,"byte_end":14321,"line_start":98,"line_end":98,"column_start":52,"column_end":59},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14333,"byte_end":14340,"line_start":99,"line_end":99,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14348,"byte_end":14355,"line_start":99,"line_end":99,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14363,"byte_end":14370,"line_start":99,"line_end":99,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14378,"byte_end":14385,"line_start":99,"line_end":99,"column_start":52,"column_end":59},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14397,"byte_end":14404,"line_start":100,"line_end":100,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14413,"byte_end":14420,"line_start":100,"line_end":100,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14429,"byte_end":14436,"line_start":100,"line_end":100,"column_start":39,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14445,"byte_end":14452,"line_start":100,"line_end":100,"column_start":55,"column_end":62},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14465,"byte_end":14472,"line_start":101,"line_end":101,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14482,"byte_end":14489,"line_start":101,"line_end":101,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14499,"byte_end":14506,"line_start":101,"line_end":101,"column_start":41,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cipher-0.3.0\\src\\stream.rs","byte_start":14516,"byte_end":14523,"line_start":101,"line_end":101,"column_start":58,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":2970},"to":{"krate":0,"index":187}}]}