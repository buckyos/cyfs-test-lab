{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","password_hash","--edition=2018","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"rand_core\"","-C","metadata=2e2a3375433db9d3","-C","extra-filename=-2e2a3375433db9d3","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--extern","base64ct=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libbase64ct-efecb80091f78d4a.rmeta","--extern","rand_core=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\librand_core-04325921d55eaf9a.rmeta","--extern","subtle=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libsubtle-e8b797d05e61e9d6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libpassword_hash-2e2a3375433db9d3.rmeta"},"prelude":{"crate_id":{"name":"password_hash","disambiguator":[634257703245439695,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","num":4,"id":{"name":"rand_core","disambiguator":[12911872508530873215,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":5,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":6,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":7,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":8,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":9,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":12,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":13,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":14,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","num":17,"id":{"name":"getrandom","disambiguator":[5717737880744688327,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","num":18,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","num":19,"id":{"name":"base64ct","disambiguator":[9168889256605439453,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","num":20,"id":{"name":"subtle","disambiguator":[7465084063849418202,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":12318,"line_start":1,"line_end":419,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2101,"byte_end":2110,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":236},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12356,"byte_end":12361,"line_start":3,"line_end":3,"column_start":19,"column_end":24},"alias_span":null,"name":"B64Error","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2244,"byte_end":2252,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2267,"byte_end":2272,"line_start":68,"line_end":68,"column_start":14,"column_end":19},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2274,"byte_end":2280,"line_start":68,"line_end":68,"column_start":21,"column_end":27},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2294,"byte_end":2299,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2313,"byte_end":2319,"line_start":70,"line_end":70,"column_start":13,"column_end":19},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2333,"byte_end":2345,"line_start":71,"line_end":71,"column_start":13,"column_end":25},"alias_span":null,"name":"ParamsString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2358,"byte_end":2362,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"alias_span":null,"name":"Salt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2364,"byte_end":2374,"line_start":72,"line_end":72,"column_start":18,"column_end":28},"alias_span":null,"name":"SaltString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2390,"byte_end":2399,"line_start":73,"line_end":73,"column_start":14,"column_end":23},"alias_span":null,"name":"McfHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2401,"byte_end":2415,"line_start":73,"line_end":73,"column_start":25,"column_end":39},"alias_span":null,"name":"PasswordHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2417,"byte_end":2433,"line_start":73,"line_end":73,"column_start":41,"column_end":57},"alias_span":null,"name":"PasswordVerifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2448,"byte_end":2455,"line_start":74,"line_end":74,"column_start":13,"column_end":20},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2457,"byte_end":2462,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":12318,"line_start":1,"line_end":419,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":27},{"krate":0,"index":52},{"krate":0,"index":98},{"krate":0,"index":170},{"krate":0,"index":296},{"krate":0,"index":381},{"krate":0,"index":433},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":796},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":551},{"krate":0,"index":563},{"krate":0,"index":567}],"decl_id":null,"docs":" This crate defines a set of traits which describe the functionality of\n [password hashing algorithms].","sig":null,"attributes":[{"value":"/ This crate defines a set of traits which describe the functionality of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ [password hashing algorithms].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":75,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":110,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Provides a `no_std`-friendly implementation of the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":114,"byte_end":168,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/ [Password Hashing Competition (PHC) string format specification][PHC]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":169,"byte_end":242,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ (a well-defined subset of the [Modular Crypt Format a.k.a. MCF][MCF]) which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":243,"byte_end":322,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ works in conjunction with the traits this crate defines.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":323,"byte_end":383,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":384,"byte_end":387,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Supported Crates","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":388,"byte_end":410,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":411,"byte_end":414,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [RustCrypto/password-hashes] for algorithm implementations which use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":415,"byte_end":491,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ this crate for interoperability:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":492,"byte_end":528,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":529,"byte_end":532,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - [`argon2`] - Argon2 memory hard key derivation function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":533,"byte_end":594,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ - [`pbkdf2`] - Password-Based Key Derivation Function v2","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":595,"byte_end":655,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ - [`scrypt`] - scrypt key derivation function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":656,"byte_end":705,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":706,"byte_end":709,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":710,"byte_end":721,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":722,"byte_end":725,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate represents password hashes using the [`PasswordHash`] type, which","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":726,"byte_end":806,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ represents a parsed \"PHC string\" with the following format:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":807,"byte_end":870,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":871,"byte_end":874,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":875,"byte_end":886,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":887,"byte_end":965,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":966,"byte_end":973,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":974,"byte_end":977,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ For more information, please see the documentation for [`PasswordHash`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":978,"byte_end":1054,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1055,"byte_end":1058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [password hashing algorithms]: https://en.wikipedia.org/wiki/Cryptographic_hash_function#Password_verification","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1059,"byte_end":1173,"line_start":29,"line_end":29,"column_start":1,"column_end":115}},{"value":"/ [PHC]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1174,"byte_end":1254,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1255,"byte_end":1332,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ [RustCrypto/password-hashes]: https://github.com/RustCrypto/password-hashes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1333,"byte_end":1412,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ [`argon2`]: https://docs.rs/argon2","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1413,"byte_end":1451,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ [`pbkdf2`]: https://docs.rs/pbkdf2","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1452,"byte_end":1490,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ [`scrypt`]: https://docs.rs/scrypt","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1491,"byte_end":1529,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1531,"byte_end":1541,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1837,"byte_end":1860,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_lifetimes)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":1861,"byte_end":1919,"line_start":45,"line_end":45,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::errors","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":570},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":616},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":22},{"krate":0,"index":25}],"decl_id":null,"docs":" Error types.\n","sig":null,"attributes":[{"value":"/ Error types.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12320,"byte_end":12336,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12418,"byte_end":12424,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12392,"byte_end":12408,"line_start":7,"line_end":7,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12607,"byte_end":12616,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"Algorithm","qualname":"::errors::Error::Algorithm","value":"Error::Algorithm","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Unsupported algorithm.\n","sig":null,"attributes":[{"value":"/ Unsupported algorithm.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12576,"byte_end":12602,"line_start":14,"line_end":14,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12653,"byte_end":12664,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"B64Encoding","qualname":"::errors::Error::B64Encoding","value":"Error::B64Encoding(B64Error)","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" \"B64\" encoding error.\n","sig":null,"attributes":[{"value":"/ \"B64\" encoding error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12623,"byte_end":12648,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12710,"byte_end":12716,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::errors::Error::Crypto","value":"Error::Crypto","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Cryptographic error.\n","sig":null,"attributes":[{"value":"/ Cryptographic error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12681,"byte_end":12705,"line_start":20,"line_end":20,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12764,"byte_end":12778,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"OutputTooShort","qualname":"::errors::Error::OutputTooShort","value":"Error::OutputTooShort","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Output too short (min 10-bytes).\n","sig":null,"attributes":[{"value":"/ Output too short (min 10-bytes).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12723,"byte_end":12759,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12825,"byte_end":12838,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"OutputTooLong","qualname":"::errors::Error::OutputTooLong","value":"Error::OutputTooLong","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Output too long (max 64-bytes).\n","sig":null,"attributes":[{"value":"/ Output too long (max 64-bytes).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12785,"byte_end":12820,"line_start":26,"line_end":26,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12891,"byte_end":12910,"line_start":30,"line_end":30,"column_start":5,"column_end":24},"name":"ParamNameDuplicated","qualname":"::errors::Error::ParamNameDuplicated","value":"Error::ParamNameDuplicated","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Duplicate parameter name encountered.\n","sig":null,"attributes":[{"value":"/ Duplicate parameter name encountered.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12845,"byte_end":12886,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12949,"byte_end":12965,"line_start":33,"line_end":33,"column_start":5,"column_end":21},"name":"ParamNameInvalid","qualname":"::errors::Error::ParamNameInvalid","value":"Error::ParamNameInvalid","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Invalid parameter name.\n","sig":null,"attributes":[{"value":"/ Invalid parameter name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12917,"byte_end":12944,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13005,"byte_end":13022,"line_start":36,"line_end":36,"column_start":5,"column_end":22},"name":"ParamValueInvalid","qualname":"::errors::Error::ParamValueInvalid","value":"Error::ParamValueInvalid(InvalidValue)","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Invalid parameter value.\n","sig":null,"attributes":[{"value":"/ Invalid parameter value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12972,"byte_end":13000,"line_start":35,"line_end":35,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13090,"byte_end":13107,"line_start":39,"line_end":39,"column_start":5,"column_end":22},"name":"ParamsMaxExceeded","qualname":"::errors::Error::ParamsMaxExceeded","value":"Error::ParamsMaxExceeded","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Maximum number of parameters exceeded.\n","sig":null,"attributes":[{"value":"/ Maximum number of parameters exceeded.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13043,"byte_end":13085,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13140,"byte_end":13148,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Password","qualname":"::errors::Error::Password","value":"Error::Password","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Invalid password.\n","sig":null,"attributes":[{"value":"/ Invalid password.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13114,"byte_end":13135,"line_start":41,"line_end":41,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13213,"byte_end":13229,"line_start":45,"line_end":45,"column_start":5,"column_end":21},"name":"PhcStringInvalid","qualname":"::errors::Error::PhcStringInvalid","value":"Error::PhcStringInvalid","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Password hash string contains invalid characters.\n","sig":null,"attributes":[{"value":"/ Password hash string contains invalid characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13155,"byte_end":13208,"line_start":44,"line_end":44,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13276,"byte_end":13293,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"name":"PhcStringTooShort","qualname":"::errors::Error::PhcStringTooShort","value":"Error::PhcStringTooShort","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Password hash string too short.\n","sig":null,"attributes":[{"value":"/ Password hash string too short.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13236,"byte_end":13271,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13339,"byte_end":13355,"line_start":51,"line_end":51,"column_start":5,"column_end":21},"name":"PhcStringTooLong","qualname":"::errors::Error::PhcStringTooLong","value":"Error::PhcStringTooLong","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Password hash string too long.\n","sig":null,"attributes":[{"value":"/ Password hash string too long.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13300,"byte_end":13334,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13384,"byte_end":13395,"line_start":54,"line_end":54,"column_start":5,"column_end":16},"name":"SaltInvalid","qualname":"::errors::Error::SaltInvalid","value":"Error::SaltInvalid(InvalidValue)","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Salt invalid.\n","sig":null,"attributes":[{"value":"/ Salt invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13362,"byte_end":13379,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13451,"byte_end":13458,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Version","qualname":"::errors::Error::Version","value":"Error::Version","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Invalid algorithm version.\n","sig":null,"attributes":[{"value":"/ Invalid algorithm version.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13416,"byte_end":13446,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12564,"byte_end":12569,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    Algorithm,\n    B64Encoding(B64Error),\n    Crypto,\n    OutputTooShort,\n    OutputTooLong,\n    ParamNameDuplicated,\n    ParamNameInvalid,\n    ParamValueInvalid(InvalidValue),\n    ParamsMaxExceeded,\n    Password,\n    PhcStringInvalid,\n    PhcStringTooShort,\n    PhcStringTooLong,\n    SaltInvalid(InvalidValue),\n    Version,\n}","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":602}],"decl_id":null,"docs":" Password hashing errors.\n","sig":null,"attributes":[{"value":"/ Password hashing errors.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12463,"byte_end":12491,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":12537,"byte_end":12554,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15329,"byte_end":15340,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"InvalidChar","qualname":"::errors::InvalidValue::InvalidChar","value":"InvalidValue::InvalidChar(char)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Character is not in the allowed set.\n","sig":null,"attributes":[{"value":"/ Character is not in the allowed set.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15284,"byte_end":15324,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15380,"byte_end":15393,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"InvalidFormat","qualname":"::errors::InvalidValue::InvalidFormat","value":"InvalidValue::InvalidFormat","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Format is invalid.\n","sig":null,"attributes":[{"value":"/ Format is invalid.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15353,"byte_end":15375,"line_start":104,"line_end":104,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15428,"byte_end":15437,"line_start":108,"line_end":108,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::errors::InvalidValue::Malformed","value":"InvalidValue::Malformed","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Value is malformed.\n","sig":null,"attributes":[{"value":"/ Value is malformed.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15400,"byte_end":15423,"line_start":107,"line_end":107,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15494,"byte_end":15501,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::errors::InvalidValue::TooLong","value":"InvalidValue::TooLong","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Value exceeds the maximum allowed length.\n","sig":null,"attributes":[{"value":"/ Value exceeds the maximum allowed length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15444,"byte_end":15489,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15559,"byte_end":15567,"line_start":114,"line_end":114,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::errors::InvalidValue::TooShort","value":"InvalidValue::TooShort","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Value does not satisfy the minimum length.\n","sig":null,"attributes":[{"value":"/ Value does not satisfy the minimum length.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15508,"byte_end":15554,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15265,"byte_end":15277,"line_start":100,"line_end":100,"column_start":10,"column_end":22},"name":"InvalidValue","qualname":"::errors::InvalidValue","value":"pub enum InvalidValue {\n    InvalidChar(char),\n    InvalidFormat,\n    Malformed,\n    TooLong,\n    TooShort,\n}","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626}],"decl_id":null,"docs":" Parse errors relating to invalid parameter values or salts.\n","sig":null,"attributes":[{"value":"/ Parse errors relating to invalid parameter values or salts.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15129,"byte_end":15192,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15238,"byte_end":15255,"line_start":99,"line_end":99,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15674,"byte_end":15685,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"param_error","qualname":"<InvalidValue>::param_error","value":"pub fn param_error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Error::ParamValueInvalid`] which warps this error.\n","sig":null,"attributes":[{"value":"/ Create an [`Error::ParamValueInvalid`] which warps this error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15596,"byte_end":15662,"line_start":118,"line_end":118,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15825,"byte_end":15835,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"salt_error","qualname":"<InvalidValue>::salt_error","value":"pub fn salt_error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Error::SaltInvalid`] which wraps this error.\n","sig":null,"attributes":[{"value":"/ Create an [`Error::SaltInvalid`] which wraps this error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15753,"byte_end":15813,"line_start":123,"line_end":123,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16937,"byte_end":16940,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"B64","qualname":"::encoding::Encoding::B64","value":"Encoding::B64","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":" \"B64\" encoding: standard Base64 without padding.","sig":null,"attributes":[{"value":"/ \"B64\" encoding: standard Base64 without padding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16659,"byte_end":16711,"line_start":10,"line_end":10,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16716,"byte_end":16719,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16724,"byte_end":16735,"line_start":12,"line_end":12,"column_start":5,"column_end":16}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16740,"byte_end":16784,"line_start":13,"line_end":13,"column_start":5,"column_end":49}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16789,"byte_end":16836,"line_start":14,"line_end":14,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16841,"byte_end":16848,"line_start":15,"line_end":15,"column_start":5,"column_end":12}},{"value":"/ <https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#b64>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16853,"byte_end":16932,"line_start":16,"line_end":16,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17105,"byte_end":17111,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Bcrypt","qualname":"::encoding::Encoding::Bcrypt","value":"Encoding::Bcrypt","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":" bcrypt encoding.","sig":null,"attributes":[{"value":"/ bcrypt encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16947,"byte_end":16967,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16972,"byte_end":16975,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16980,"byte_end":16991,"line_start":21,"line_end":21,"column_start":5,"column_end":16}},{"value":"/ ./         [A-Z]      [a-z]     [0-9]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16996,"byte_end":17037,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/ 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17042,"byte_end":17088,"line_start":23,"line_end":23,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17093,"byte_end":17100,"line_start":24,"line_end":24,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17259,"byte_end":17264,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::encoding::Encoding::Crypt","value":"Encoding::Crypt","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":" `crypt(3)` encoding.","sig":null,"attributes":[{"value":"/ `crypt(3)` encoding.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17118,"byte_end":17142,"line_start":27,"line_end":27,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17147,"byte_end":17150,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17155,"byte_end":17166,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/ [.-9]      [A-Z]      [a-z]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17171,"byte_end":17202,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/ 0x2e-0x39, 0x41-0x5a, 0x61-0x7a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17207,"byte_end":17242,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17247,"byte_end":17254,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16644,"byte_end":16652,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::encoding::Encoding","value":"pub enum Encoding { B64, Bcrypt, Crypt, }","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645}],"decl_id":null,"docs":" Base64 encoding variants.\n","sig":null,"attributes":[{"value":"/ Base64 encoding variants.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":16543,"byte_end":16572,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17447,"byte_end":17453,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"pub fn decode<impl AsRef<[u8]>: AsRef<[u8]>>(Self, impl AsRef<[u8]>,\n&mut [u8]) -> Result<&[u8], B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64 string into the provided destination buffer.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into the provided destination buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17371,"byte_end":17435,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17917,"byte_end":17923,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"pub fn encode<'a>(Self, &[u8], &'a mut [u8]) -> Result<&'a str, B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode the input byte slice as Base64.","sig":null,"attributes":[{"value":"/ Encode the input byte slice as Base64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17736,"byte_end":17778,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17783,"byte_end":17786,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Writes the result into the provided destination slice, returning an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17791,"byte_end":17862,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ ASCII-encoded Base64 string value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17867,"byte_end":17905,"line_start":55,"line_end":55,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":18311,"byte_end":18322,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"<Encoding>::encoded_len","value":"pub fn encoded_len(Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of Base64 produced by encoding the given bytes.\n","sig":null,"attributes":[{"value":"/ Get the length of Base64 produced by encoding the given bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":18233,"byte_end":18299,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20203,"byte_end":20208,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm or parameter identifier.","sig":null,"attributes":[{"value":"/ Algorithm or parameter identifier.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19596,"byte_end":19634,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19635,"byte_end":19638,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type encompasses both the \"function symbolic name\" and \"parameter name\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19639,"byte_end":19719,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ use cases as described in the [PHC string format specification][1].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19720,"byte_end":19791,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19792,"byte_end":19795,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19796,"byte_end":19813,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-z0-9-]`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19814,"byte_end":19881,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19882,"byte_end":19935,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 1 ASCII character (i.e. 1-byte)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19936,"byte_end":19989,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ - Maximum length: 32 ASCII characters (i.e. 32-bytes)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":19990,"byte_end":20047,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20048,"byte_end":20051,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20052,"byte_end":20130,"line_start":33,"line_end":33,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":21199,"byte_end":21202,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<Ident>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse an [`Ident`] from a string.","sig":null,"attributes":[{"value":"/ Parse an [`Ident`] from a string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20744,"byte_end":20781,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20786,"byte_end":20789,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20794,"byte_end":20806,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20811,"byte_end":20814,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Must conform to the contraints given in the type-level documentation,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20819,"byte_end":20892,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ or else it will panic.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20897,"byte_end":20923,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20928,"byte_end":20931,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use in a `const` context where instead of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20936,"byte_end":21009,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ panicking it will cause a compile error.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":21014,"byte_end":21058,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":21063,"byte_end":21066,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ For fallible non-panicking parsing of an [`Ident`], use the [`TryFrom`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":21071,"byte_end":21146,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ impl on this type instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":21151,"byte_end":21181,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22368,"byte_end":22374,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Ident>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this ident as a `str`\n","sig":null,"attributes":[{"value":"/ Borrow this ident as a `str`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22324,"byte_end":22356,"line_start":96,"line_end":96,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30499,"byte_end":30505,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Output","qualname":"::output::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":" Output from password hashing functions, i.e. the \"hash\" or \"digest\"\n as raw bytes.","sig":null,"attributes":[{"value":"/ Output from password hashing functions, i.e. the \"hash\" or \"digest\"","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":25882,"byte_end":25953,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ as raw bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":25954,"byte_end":25971,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":25972,"byte_end":25975,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Output`] type implements the RECOMMENDED best practices described in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":25976,"byte_end":26054,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ the [PHC string format specification][1], namely:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26055,"byte_end":26108,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26109,"byte_end":26112,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ > The hash output, for a verification, must be long enough to make preimage","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26113,"byte_end":26192,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ > attacks at least as hard as password guessing. To promote wide acceptance,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26193,"byte_end":26273,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ > a default output size of 256 bits (32 bytes, encoded as 43 characters) is","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26274,"byte_end":26353,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ > recommended. Function implementations SHOULD NOT allow outputs of less","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26354,"byte_end":26430,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ > than 80 bits to be used for password verification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26431,"byte_end":26487,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26488,"byte_end":26491,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26492,"byte_end":26516,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ Per the description above, the recommended default length for an [`Output`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26517,"byte_end":26596,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of a password hashing function is **32-bytes** (256-bits).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26597,"byte_end":26659,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26660,"byte_end":26663,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26664,"byte_end":26681,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ The above guidelines are interpreted into the following constraints:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26682,"byte_end":26754,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26755,"byte_end":26758,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **10**-bytes (80-bits)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26759,"byte_end":26803,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ - Maximum length: **64**-bytes (512-bits)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26804,"byte_end":26849,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26850,"byte_end":26853,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The specific recommendation of a 64-byte maximum length is taken as a best","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26854,"byte_end":26932,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ practice from the hash output guidelines for [Argon2 Encoding][2] given in","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":26933,"byte_end":27011,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ the same document:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27012,"byte_end":27034,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27035,"byte_end":27038,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ > The hash output...length shall be between 12 and 64 bytes (16 and 86","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27039,"byte_end":27113,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ > characters, respectively). The default output length is 32 bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27114,"byte_end":27184,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ > (43 characters).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27185,"byte_end":27207,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27208,"byte_end":27211,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27212,"byte_end":27285,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 32-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27286,"byte_end":27345,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27346,"byte_end":27349,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Constant-time comparisons","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27350,"byte_end":27381,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ The [`Output`] type impls the [`ConstantTimeEq`] trait from the [`subtle`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27382,"byte_end":27460,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ crate and uses it to perform constant-time comparisons.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27461,"byte_end":27520,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27521,"byte_end":27524,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Additionally the [`PartialEq`] and [`Eq`] trait impls for [`Output`] use","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27525,"byte_end":27601,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ [`ConstantTimeEq`] when performing comparisons.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27602,"byte_end":27653,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27654,"byte_end":27657,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Attacks on non-constant-time password hash comparisons","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27658,"byte_end":27719,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ Comparing password hashes in constant-time is known to mitigate at least","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27720,"byte_end":27796,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ one [poorly understood attack][3] involving an adversary with the following","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27797,"byte_end":27876,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ knowledge/capabilities:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27877,"byte_end":27904,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27905,"byte_end":27908,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - full knowledge of what password hashing algorithm is being used","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27909,"byte_end":27978,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/   including any relevant configurable parameters","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":27979,"byte_end":28031,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ - knowledge of the salt for a particular victim","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28032,"byte_end":28083,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ - ability to accurately measure a timing side-channel on comparisons","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28084,"byte_end":28156,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/   of the password hash over the network","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28157,"byte_end":28200,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28201,"byte_end":28204,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ An attacker with the above is able to perform an offline computation of","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28205,"byte_end":28280,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ the hash for any chosen password in such a way that it will match the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28281,"byte_end":28354,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ hash computed by the server.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28355,"byte_end":28387,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28388,"byte_end":28391,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As noted above, they also measure timing variability in the server's","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28392,"byte_end":28464,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ comparison of the hash it computes for a given password and a target hash","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28465,"byte_end":28542,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ the attacker is trying to learn.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28543,"byte_end":28579,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28580,"byte_end":28583,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ When the attacker observes a hash comparison that takes longer than their","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28584,"byte_end":28661,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ previous attempts, they learn that they guessed another byte in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28662,"byte_end":28733,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/ password hash correctly. They can leverage repeated measurements and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28734,"byte_end":28806,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ observations with different candidate passwords to learn the password","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28807,"byte_end":28880,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ hash a byte-at-a-time in a manner similar to other such timing side-channel","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28881,"byte_end":28960,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ attacks.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28961,"byte_end":28973,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28974,"byte_end":28977,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The attack may seem somewhat counterintuitive since learning prefixes of a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":28978,"byte_end":29056,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ password hash does not reveal any additional information about the password","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29057,"byte_end":29136,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ itself. However, the above can be combined with an offline dictionary","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29137,"byte_end":29210,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ attack where the attacker is able to determine candidate passwords to send","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29211,"byte_end":29289,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ to the server by performing a brute force search offline and selecting","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29290,"byte_end":29364,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ candidate passwords whose hashes match the portion of the prefix they have","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29365,"byte_end":29443,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ learned so far.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29444,"byte_end":29463,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29464,"byte_end":29467,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ As the attacker learns a longer and longer prefix of the password hash,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29468,"byte_end":29543,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ they are able to more effectively eliminate candidate passwords offline as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29544,"byte_end":29622,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ part of a dictionary attack, until they eventually guess the correct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29623,"byte_end":29695,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ password or exhaust their set of candidate passwords.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29696,"byte_end":29753,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29754,"byte_end":29757,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Mitigations","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29758,"byte_end":29776,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ While we have taken care to ensure password hashes are compared in constant","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29777,"byte_end":29856,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ time, we would also suggest preventing such attacks by using randomly","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29857,"byte_end":29930,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ generated salts and keeping those salts secret.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29931,"byte_end":29982,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29983,"byte_end":29986,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`SaltString::generate`][`crate::SaltString::generate`] function can be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":29987,"byte_end":30066,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ used to generate random high-entropy salt values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30067,"byte_end":30120,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30121,"byte_end":30124,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30125,"byte_end":30219,"line_start":94,"line_end":94,"column_start":1,"column_end":95}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30220,"byte_end":30314,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ [3]: https://web.archive.org/web/20130208100210/http://security-assessment.com/files/documents/presentations/TimingAttackPresentation2012.pdf","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30315,"byte_end":30460,"line_start":96,"line_end":96,"column_start":1,"column_end":146}}]},{"kind":"Const","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30900,"byte_end":30910,"line_start":112,"line_end":112,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::output::Output::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Minimum length of a [`Output`] string: 10-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Output`] string: 10-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30833,"byte_end":30885,"line_start":111,"line_end":111,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31078,"byte_end":31088,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::output::Output::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] string: 64-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30929,"byte_end":30979,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30984,"byte_end":30987,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Output`] for more information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30992,"byte_end":31063,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31226,"byte_end":31240,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"name":"B64_MAX_LENGTH","qualname":"::output::Output::B64_MAX_LENGTH","value":"usize","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] when encoded as B64 string: 86-bytes\n (i.e. 86 ASCII characters)\n","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] when encoded as B64 string: 86-bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31107,"byte_end":31176,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ (i.e. 86 ASCII characters)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31181,"byte_end":31211,"line_start":120,"line_end":120,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31450,"byte_end":31453,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Output>::new","value":"pub fn new(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice, validating it according\n to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice, validating it according","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31289,"byte_end":31363,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31368,"byte_end":31438,"line_start":124,"line_end":124,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31802,"byte_end":31819,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"new_with_encoding","qualname":"<Output>::new_with_encoding","value":"pub fn new_with_encoding(&[u8], Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice and [`Encoding`],\n validating it according to [`Output::MIN_LENGTH`] and\n [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice and [`Encoding`],","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31616,"byte_end":31683,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/ validating it according to [`Output::MIN_LENGTH`] and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31688,"byte_end":31745,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31750,"byte_end":31790,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32310,"byte_end":32319,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"init_with","qualname":"<Output>::init_with","value":"pub fn init_with<F>(usize, F) -> Result<Self> where F: FnOnce(&mut [u8]) ->\nResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an [`Output`] using the provided method, which is given\n a mutable byte slice into which it should write the output.","sig":null,"attributes":[{"value":"/ Initialize an [`Output`] using the provided method, which is given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":31982,"byte_end":32052,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ a mutable byte slice into which it should write the output.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32057,"byte_end":32120,"line_start":142,"line_end":142,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32125,"byte_end":32128,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The `output_size` (in bytes) must be known in advance, as well as at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32133,"byte_end":32205,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ least [`Output::MIN_LENGTH`] bytes and at most [`Output::MAX_LENGTH`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32210,"byte_end":32283,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32288,"byte_end":32298,"line_start":146,"line_end":146,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32914,"byte_end":32922,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Output>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the output value as a byte slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32858,"byte_end":32902,"line_start":169,"line_end":169,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33063,"byte_end":33071,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Output>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`Output`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`Output`] is serialized with.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":32986,"byte_end":33051,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33193,"byte_end":33196,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"len","qualname":"<Output>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the length of the output value as a byte slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33126,"byte_end":33181,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33391,"byte_end":33401,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Output>::b64_decode","value":"pub fn b64_decode(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse B64-encoded [`Output`], i.e. using the PHC string\n specification's restricted interpretation of Base64.\n","sig":null,"attributes":[{"value":"/ Parse B64-encoded [`Output`], i.e. using the PHC string","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33259,"byte_end":33318,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/ specification's restricted interpretation of Base64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33323,"byte_end":33379,"line_start":185,"line_end":185,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33697,"byte_end":33707,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<Output>::b64_encode","value":"pub fn b64_encode<'a>(&Self, &'a mut [u8]) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Write B64-encoded [`Output`] to the provided buffer, returning\n a sub-slice containing the encoded data.","sig":null,"attributes":[{"value":"/ Write B64-encoded [`Output`] to the provided buffer, returning","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33487,"byte_end":33553,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ a sub-slice containing the encoded data.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33558,"byte_end":33602,"line_start":191,"line_end":191,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33607,"byte_end":33610,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the buffer is too short to contain the output.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33615,"byte_end":33685,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33889,"byte_end":33895,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"decode","qualname":"<Output>::decode","value":"pub fn decode(&str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given input string using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Decode the given input string using the specified [`Encoding`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":33810,"byte_end":33877,"line_start":198,"line_end":198,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34244,"byte_end":34250,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"encode","qualname":"<Output>::encode","value":"pub fn encode<'a>(&Self, &'a mut [u8], Encoding) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Encode this [`Output`] using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Encode this [`Output`] using the specified [`Encoding`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34172,"byte_end":34232,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34452,"byte_end":34459,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"b64_len","qualname":"<Output>::b64_len","value":"pub fn b64_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this [`Output`] when encoded as B64.\n","sig":null,"attributes":[{"value":"/ Get the length of this [`Output`] when encoded as B64.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34382,"byte_end":34440,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38062,"byte_end":38074,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"ParamsString","qualname":"::params::ParamsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter string.","sig":null,"attributes":[{"value":"/ Algorithm parameter string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37574,"byte_end":37605,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37606,"byte_end":37609,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The [PHC string format specification][1] defines a set of optional","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37610,"byte_end":37680,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ algorithm-specific name/value pairs which can be encoded into a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37681,"byte_end":37748,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ PHC-formatted parameter string as follows:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37749,"byte_end":37795,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37796,"byte_end":37799,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37800,"byte_end":37811,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ $<param>=<value>(,<param>=<value>)*","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37812,"byte_end":37851,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37852,"byte_end":37859,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37860,"byte_end":37863,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type represents that set of parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37864,"byte_end":37912,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37913,"byte_end":37916,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":37917,"byte_end":38009,"line_start":43,"line_end":43,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38159,"byte_end":38162,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<ParamsString>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new empty [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Create new empty [`ParamsString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38109,"byte_end":38147,"line_start":48,"line_end":48,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38297,"byte_end":38310,"line_start":54,"line_end":54,"column_start":12,"column_end":25},"name":"add_b64_bytes","qualname":"<ParamsString>::add_b64_bytes","value":"pub fn add_b64_bytes<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&mut Self, impl TryInto<Ident<'a>>,\n&[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add the given byte value to the [`ParamsString`], encoding it as \"B64\".\n","sig":null,"attributes":[{"value":"/ Add the given byte value to the [`ParamsString`], encoding it as \"B64\".","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38210,"byte_end":38285,"line_start":53,"line_end":53,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39168,"byte_end":39179,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"add_decimal","qualname":"<ParamsString>::add_decimal","value":"pub fn add_decimal<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&mut Self, impl TryInto<Ident<'a>>,\nDecimal) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a decimal value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a decimal value to the [`ParamsString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39086,"byte_end":39156,"line_start":80,"line_end":80,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39454,"byte_end":39461,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"add_str","qualname":"<ParamsString>::add_str","value":"pub fn add_str<'a, impl TryInto<Ident<'a>>: TryInto<Ident>,\nimpl TryInto<Value<'a>>: TryInto<Value>>(&mut Self, impl TryInto<Ident<'a>>,\nimpl TryInto<Value<'a>>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a string value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a string value to the [`ParamsString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39373,"byte_end":39442,"line_start":86,"line_end":86,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39913,"byte_end":39921,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ParamsString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a byte slice.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39836,"byte_end":39901,"line_start":101,"line_end":101,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40056,"byte_end":40062,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ParamsString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a `str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":39984,"byte_end":40044,"line_start":106,"line_end":106,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40201,"byte_end":40204,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"len","qualname":"<ParamsString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the count of the number ASCII characters in this [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Get the count of the number ASCII characters in this [`ParamsString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40115,"byte_end":40189,"line_start":111,"line_end":111,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40310,"byte_end":40318,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParamsString>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this set of parameters empty?\n","sig":null,"attributes":[{"value":"/ Is this set of parameters empty?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40262,"byte_end":40298,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40415,"byte_end":40419,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"iter","qualname":"<ParamsString>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the parameters.\n","sig":null,"attributes":[{"value":"/ Iterate over the parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40371,"byte_end":40403,"line_start":121,"line_end":121,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40535,"byte_end":40538,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"get","qualname":"<ParamsString>::get","value":"pub fn get<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&Self, impl TryInto<Ident<'a>>)\n-> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter [`Value`] by name.\n","sig":null,"attributes":[{"value":"/ Get a parameter [`Value`] by name.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40485,"byte_end":40523,"line_start":126,"line_end":126,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40834,"byte_end":40841,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_str","qualname":"<ParamsString>::get_str","value":"pub fn get_str<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&Self, impl TryInto<Ident<'a>>)\n-> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a `str`.\n","sig":null,"attributes":[{"value":"/ Get a parameter as a `str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40791,"byte_end":40822,"line_start":139,"line_end":139,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":41076,"byte_end":41087,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"get_decimal","qualname":"<ParamsString>::get_decimal","value":"pub fn get_decimal<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&Self, impl TryInto<Ident<'a>>)\n-> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a [`Decimal`].","sig":null,"attributes":[{"value":"/ Get a parameter as a [`Decimal`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":40964,"byte_end":41001,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":41006,"byte_end":41009,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ See [`Value::decimal`] for format information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":41014,"byte_end":41064,"line_start":146,"line_end":146,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43715,"byte_end":43719,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"Iter","qualname":"::params::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":279}],"decl_id":null,"docs":" Iterator over algorithm parameters stored in a [`ParamsString`] struct.\n","sig":null,"attributes":[{"value":"/ Iterator over algorithm parameters stored in a [`ParamsString`] struct.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43628,"byte_end":43703,"line_start":242,"line_end":242,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52971,"byte_end":52975,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"Salt","qualname":"::salt::Salt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Salt string.","sig":null,"attributes":[{"value":"/ Salt string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49766,"byte_end":49782,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49783,"byte_end":49786,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ In password hashing, a \"salt\" is an additional value used to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49787,"byte_end":49851,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ personalize/tweak the output of a password hashing function for a given","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49852,"byte_end":49927,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ input password.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49928,"byte_end":49947,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49948,"byte_end":49951,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Salts help defend against attacks based on precomputed tables of hashed","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":49952,"byte_end":50027,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ passwords, i.e. \"[rainbow tables][1]\".","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50028,"byte_end":50070,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50071,"byte_end":50074,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Salt`] type implements the RECOMMENDED best practices for salts","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50075,"byte_end":50148,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][2], namely:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50149,"byte_end":50215,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50216,"byte_end":50219,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ > - Maximum lengths for salt, output and parameter values are meant to help","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50220,"byte_end":50299,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ >   consumer implementations, in particular written in C and using","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50300,"byte_end":50370,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ >   stack-allocated buffers. These buffers must account for the worst case,","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50371,"byte_end":50450,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ >   i.e. the maximum defined length. Therefore, keep these lengths low.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50451,"byte_end":50526,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ > - The role of salts is to achieve uniqueness. A random salt is fine for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50527,"byte_end":50604,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ >   that as long as its length is sufficient; a 16-byte salt would work well","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50605,"byte_end":50685,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ >   (by definition, UUID are very good salts, and they encode over exactly","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50686,"byte_end":50764,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ >   16 bytes). 16 bytes encode as 22 characters in B64. Functions should","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50765,"byte_end":50841,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ >   disallow salt values that are too small for security (4 bytes should be","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50842,"byte_end":50921,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ >   viewed as an absolute minimum).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50922,"byte_end":50961,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50962,"byte_end":50965,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50966,"byte_end":50990,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ The recommended default length for a salt string is **16-bytes** (128-bits).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":50991,"byte_end":51071,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51072,"byte_end":51075,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ See below for rationale.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51076,"byte_end":51104,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51105,"byte_end":51108,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51109,"byte_end":51126,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ Salt strings are constrained to the following set of characters per the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51127,"byte_end":51202,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ PHC spec:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51203,"byte_end":51216,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51217,"byte_end":51220,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ > The salt consists in a sequence of characters in: `[a-zA-Z0-9/+.-]`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51221,"byte_end":51294,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ > (lowercase letters, uppercase letters, digits, /, +, . and -).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51295,"byte_end":51363,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51364,"byte_end":51367,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Additionally the following length restrictions are enforced based on the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51368,"byte_end":51444,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ guidelines from the spec:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51445,"byte_end":51474,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51475,"byte_end":51478,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **4**-bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51479,"byte_end":51512,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ - Maximum length: **64**-bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51513,"byte_end":51547,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51548,"byte_end":51551,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A maximum length is enforced based on the above recommendation for","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51552,"byte_end":51622,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ supporting stack-allocated buffers (which this library uses), and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51623,"byte_end":51696,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ specific determination of 64-bytes is taken as a best practice from the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51697,"byte_end":51772,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ [Argon2 Encoding][3] specification in the same document:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51773,"byte_end":51833,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51834,"byte_end":51837,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ > The length in bytes of the salt is between 8 and 64 bytes<sup>†</sup>, thus","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51838,"byte_end":51921,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/ > yielding a length in characters between 11 and 64 characters (and that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51922,"byte_end":51998,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ > length is never equal to 1 modulo 4). The default byte length of the salt","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":51999,"byte_end":52078,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ > is 16 bytes (22 characters in B64 encoding). An encoded UUID, or a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52079,"byte_end":52151,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/ > sequence of 16 bytes produced with a cryptographically strong PRNG, are","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52152,"byte_end":52229,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ > appropriate salt values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52230,"byte_end":52260,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52261,"byte_end":52266,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ > <sup>†</sup>The Argon2 specification states that the salt can be much longer, up","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52267,"byte_end":52355,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ > to 2^32-1 bytes, but this makes little sense for password hashing.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52356,"byte_end":52428,"line_start":71,"line_end":71,"column_start":1,"column_end":73}},{"value":"/ > Specifying a relatively small maximum length allows for parsing with a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52429,"byte_end":52505,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ > stack allocated buffer.)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52506,"byte_end":52536,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52537,"byte_end":52540,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52541,"byte_end":52614,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 16-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52615,"byte_end":52674,"line_start":76,"line_end":76,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52675,"byte_end":52678,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Rainbow_table","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52679,"byte_end":52731,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52732,"byte_end":52826,"line_start":79,"line_end":79,"column_start":1,"column_end":95}},{"value":"/ [3]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":52827,"byte_end":52921,"line_start":80,"line_end":80,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53120,"byte_end":53130,"line_start":87,"line_end":87,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::salt::Salt::<'a>::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":" Minimum length of a [`Salt`] string: 4-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Salt`] string: 4-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53056,"byte_end":53105,"line_start":86,"line_end":86,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53295,"byte_end":53305,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::salt::Salt::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":" Maximum length of a [`Salt`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of a [`Salt`] string: 64-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53148,"byte_end":53198,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53203,"byte_end":53206,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Salt`] for more information.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53211,"byte_end":53280,"line_start":91,"line_end":91,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53382,"byte_end":53400,"line_start":95,"line_end":95,"column_start":15,"column_end":33},"name":"RECOMMENDED_LENGTH","qualname":"::salt::Salt::<'a>::RECOMMENDED_LENGTH","value":"usize","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":" Recommended length of a salt: 16-bytes.\n","sig":null,"attributes":[{"value":"/ Recommended length of a salt: 16-bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53324,"byte_end":53367,"line_start":94,"line_end":94,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53576,"byte_end":53579,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Salt>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Salt`] from the given `str`, validating it according to\n [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Salt`] from the given `str`, validating it according to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53419,"byte_end":53489,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53494,"byte_end":53564,"line_start":98,"line_end":98,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54391,"byte_end":54401,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Salt>::b64_decode","value":"pub fn b64_decode<'b>(&Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Salt`], writing the decoded result\n into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Salt`], writing the decoded result","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54080,"byte_end":54152,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ into the provided buffer, and returning a slice of the buffer","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54157,"byte_end":54222,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/ containing the decoded result on success.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54227,"byte_end":54272,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54277,"byte_end":54280,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54285,"byte_end":54379,"line_start":120,"line_end":120,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54541,"byte_end":54547,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Salt>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54496,"byte_end":54529,"line_start":125,"line_end":125,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54646,"byte_end":54654,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Salt>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54603,"byte_end":54634,"line_start":130,"line_end":130,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54785,"byte_end":54788,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"len","qualname":"<Salt>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54720,"byte_end":54773,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55478,"byte_end":55488,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"SaltString","qualname":"::salt::SaltString","value":"SaltString {  }","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":754}],"decl_id":null,"docs":" Owned stack-allocated equivalent of [`Salt`].\n","sig":null,"attributes":[{"value":"/ Owned stack-allocated equivalent of [`Salt`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55389,"byte_end":55438,"line_start":167,"line_end":167,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55877,"byte_end":55885,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"generate","qualname":"<SaltString>::generate","value":"pub fn generate<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random B64-encoded [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Generate a random B64-encoded [`SaltString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55725,"byte_end":55774,"line_start":179,"line_end":179,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"rand_core\")","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55779,"byte_end":55808,"line_start":180,"line_end":180,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56143,"byte_end":56146,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<SaltString>::new","value":"pub fn new(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Create a new [`SaltString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56099,"byte_end":56131,"line_start":188,"line_end":188,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56780,"byte_end":56790,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<SaltString>::b64_encode","value":"pub fn b64_encode(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given byte slice as B64 into a new [`SaltString`].","sig":null,"attributes":[{"value":"/ Encode the given byte slice as B64 into a new [`SaltString`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56646,"byte_end":56711,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56716,"byte_end":56719,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the slice is too long.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56724,"byte_end":56768,"line_start":209,"line_end":209,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57077,"byte_end":57087,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<SaltString>::b64_decode","value":"pub fn b64_decode<'a>(&Self, &'a mut [u8]) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Decode this [`SaltString`] from B64 into the provided output buffer.\n","sig":null,"attributes":[{"value":"/ Decode this [`SaltString`] from B64 into the provided output buffer.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":56993,"byte_end":57065,"line_start":216,"line_end":216,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57260,"byte_end":57267,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"as_salt","qualname":"<SaltString>::as_salt","value":"pub fn as_salt(&Self) -> Salt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a [`Salt`].\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a [`Salt`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57190,"byte_end":57248,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57431,"byte_end":57437,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SaltString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a `str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57364,"byte_end":57419,"line_start":226,"line_end":226,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57602,"byte_end":57610,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SaltString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57559,"byte_end":57590,"line_start":231,"line_end":231,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57738,"byte_end":57741,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"len","qualname":"<SaltString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57673,"byte_end":57726,"line_start":236,"line_end":236,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":59628,"byte_end":59642,"line_start":10,"line_end":10,"column_start":11,"column_end":25},"name":"PasswordHasher","qualname":"::traits::PasswordHasher","value":"PasswordHasher","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":421}],"decl_id":null,"docs":" Trait for password hashing functions.\n","sig":null,"attributes":[{"value":"/ Trait for password hashing functions.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":59576,"byte_end":59617,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":59693,"byte_end":59699,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Params","qualname":"::traits::PasswordHasher::Params","value":"type Params: Clone\n        + Debug\n        + Default\n        + for<'a> TryFrom<&'a PasswordHash<'a>, Error = Error>\n        + TryInto<ParamsString, Error = Error>;","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.\n","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":59649,"byte_end":59683,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60101,"byte_end":60125,"line_start":23,"line_end":23,"column_start":8,"column_end":32},"name":"hash_password_customized","qualname":"::traits::PasswordHasher::hash_password_customized","value":"pub fn hash_password_customized<'a,\nimpl Into<Salt<'a>>: Into<Salt>>(&Self, &[u8], Option<Ident>, Option<Decimal>,\nSelf::Params, impl Into<Salt<'a>>) -> Result<PasswordHash>","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Compute a [`PasswordHash`] from the provided password using an\n explicit set of customized algorithm parameters as opposed to the\n defaults.","sig":null,"attributes":[{"value":"/ Compute a [`PasswordHash`] from the provided password using an","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":59857,"byte_end":59923,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ explicit set of customized algorithm parameters as opposed to the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":59928,"byte_end":59997,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ defaults.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60002,"byte_end":60015,"line_start":20,"line_end":20,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60020,"byte_end":60023,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ When in doubt, use [`PasswordHasher::hash_password`] instead.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60028,"byte_end":60093,"line_start":22,"line_end":22,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60522,"byte_end":60535,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"hash_password","qualname":"::traits::PasswordHasher::hash_password","value":"pub fn hash_password<'a, S>(&Self, &[u8], &'a S) -> Result<PasswordHash> where\nS: AsRef<str> + ?Sized","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Simple API for computing a [`PasswordHash`] from a password and\n salt value.","sig":null,"attributes":[{"value":"/ Simple API for computing a [`PasswordHash`] from a password and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60348,"byte_end":60415,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ salt value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60420,"byte_end":60435,"line_start":33,"line_end":33,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60440,"byte_end":60443,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Uses the default recommended parameters for a given algorithm.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60448,"byte_end":60514,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61182,"byte_end":61198,"line_start":57,"line_end":57,"column_start":11,"column_end":27},"name":"PasswordVerifier","qualname":"::traits::PasswordVerifier","value":"PasswordVerifier","parent":null,"children":[{"krate":0,"index":425}],"decl_id":null,"docs":" Trait for password verification.","sig":null,"attributes":[{"value":"/ Trait for password verification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60853,"byte_end":60889,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60890,"byte_end":60893,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Automatically impl'd for any type that impls [`PasswordHasher`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60894,"byte_end":60962,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60963,"byte_end":60966,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This trait is object safe and can be used to implement abstractions over","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":60967,"byte_end":61043,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ multiple password hashing algorithms. One such abstraction is provided by","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61044,"byte_end":61121,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ the [`PasswordHash::verify_password`] method.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61122,"byte_end":61171,"line_start":56,"line_end":56,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61394,"byte_end":61409,"line_start":61,"line_end":61,"column_start":8,"column_end":23},"name":"verify_password","qualname":"::traits::PasswordVerifier::verify_password","value":"pub fn verify_password(&Self, &[u8], &PasswordHash) -> Result<()>","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Compute this password hashing function against the provided password\n using the parameters from the provided password hash and see if the\n computed output matches.\n","sig":null,"attributes":[{"value":"/ Compute this password hashing function against the provided password","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61205,"byte_end":61277,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ using the parameters from the provided password hash and see if the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61282,"byte_end":61353,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ computed output matches.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61358,"byte_end":61386,"line_start":60,"line_end":60,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62456,"byte_end":62465,"line_start":91,"line_end":91,"column_start":11,"column_end":20},"name":"McfHasher","qualname":"::traits::McfHasher","value":"McfHasher","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432}],"decl_id":null,"docs":" Trait for password hashing algorithms which support the legacy\n [Modular Crypt Format (MCF)][MCF].","sig":null,"attributes":[{"value":"/ Trait for password hashing algorithms which support the legacy","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62258,"byte_end":62324,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ [Modular Crypt Format (MCF)][MCF].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62325,"byte_end":62363,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62364,"byte_end":62367,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62368,"byte_end":62445,"line_start":90,"line_end":90,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62774,"byte_end":62790,"line_start":100,"line_end":100,"column_start":8,"column_end":24},"name":"upgrade_mcf_hash","qualname":"::traits::McfHasher::upgrade_mcf_hash","value":"pub fn upgrade_mcf_hash<'a>(&Self, &'a str) -> Result<PasswordHash>","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","sig":null,"attributes":[{"value":"/ Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62472,"byte_end":62540,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62545,"byte_end":62548,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62553,"byte_end":62564,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/ $<id>$<content>","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62569,"byte_end":62588,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62593,"byte_end":62600,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62605,"byte_end":62608,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ MCF hashes are otherwise largely unstructured and parsed according to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62613,"byte_end":62686,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ algorithm-specific rules so hashers must parse a raw string themselves.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62691,"byte_end":62766,"line_start":99,"line_end":99,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62930,"byte_end":62945,"line_start":103,"line_end":103,"column_start":8,"column_end":23},"name":"verify_mcf_hash","qualname":"::traits::McfHasher::verify_mcf_hash","value":"pub fn verify_mcf_hash(&Self, &[u8], &str) -> Result<()> where\nSelf: PasswordVerifier","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" Verify a password hash in MCF format against the provided password.\n","sig":null,"attributes":[{"value":"/ Verify a password hash in MCF format against the provided password.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":62851,"byte_end":62922,"line_start":102,"line_end":102,"column_start":5,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64133,"byte_end":64140,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"name":"Decimal","qualname":"::value::Decimal","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Type used to represent decimal (i.e. integer) values.\n","sig":null,"attributes":[{"value":"/ Type used to represent decimal (i.e. integer) values.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64066,"byte_end":64123,"line_start":20,"line_end":20,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64986,"byte_end":64991,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"Value","qualname":"::value::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter value string.","sig":null,"attributes":[{"value":"/ Algorithm parameter value string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64149,"byte_end":64186,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64187,"byte_end":64190,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Parameter values are defined in the [PHC string format specification][1].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64191,"byte_end":64268,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64269,"byte_end":64272,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64273,"byte_end":64290,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-zA-Z0-9/+.-]`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64291,"byte_end":64364,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64365,"byte_end":64418,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 0 (i.e. empty values are allowed)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64419,"byte_end":64474,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ - Maximum length: 64 ASCII characters (i.e. 64-bytes)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64475,"byte_end":64532,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64533,"byte_end":64536,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Additional Notes","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64537,"byte_end":64559,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/ The PHC spec allows for algorithm-defined maximum lengths for parameter","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64560,"byte_end":64635,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ values, however this library defines a [`Value::MAX_LENGTH`] of 64 ASCII","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64636,"byte_end":64712,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64713,"byte_end":64728,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64729,"byte_end":64732,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64733,"byte_end":64811,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":64812,"byte_end":64906,"line_start":39,"line_end":39,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65286,"byte_end":65296,"line_start":48,"line_end":48,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::value::Value::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Maximum length of an [`Value`] - 64 ASCII characters (i.e. 64-bytes).","sig":null,"attributes":[{"value":"/ Maximum length of an [`Value`] - 64 ASCII characters (i.e. 64-bytes).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65032,"byte_end":65105,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65110,"byte_end":65113,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This value is selected to match the maximum length of a [`Salt`][`crate::Salt`]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65118,"byte_end":65201,"line_start":46,"line_end":46,"column_start":5,"column_end":88}},{"value":"/ as this library internally uses this type to represent salts.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65206,"byte_end":65271,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65439,"byte_end":65442,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Value>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a [`Value`] from the provided `str`, validating it according to\n the PHC string format's rules.\n","sig":null,"attributes":[{"value":"/ Parse a [`Value`] from the provided `str`, validating it according to","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65315,"byte_end":65388,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ the PHC string format's rules.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65393,"byte_end":65427,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66281,"byte_end":66291,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Value>::b64_decode","value":"pub fn b64_decode<'b>(&Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Value`], writing the decoded\n result into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Value`], writing the decoded","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65764,"byte_end":65830,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ result into the provided buffer, and returning a slice of the buffer","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65835,"byte_end":65907,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ containing the decoded result on success.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65912,"byte_end":65957,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65962,"byte_end":65965,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Examples of \"B64\"-encoded parameters in practice are the `keyid` and","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65970,"byte_end":66042,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `data` parameters used by the [Argon2 Encoding][1] as described in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66047,"byte_end":66121,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ PHC string format specification.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66126,"byte_end":66162,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66167,"byte_end":66170,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66175,"byte_end":66269,"line_start":70,"line_end":70,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66454,"byte_end":66460,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66409,"byte_end":66442,"line_start":75,"line_end":75,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66550,"byte_end":66558,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Value>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66507,"byte_end":66538,"line_start":80,"line_end":80,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66689,"byte_end":66692,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"len","qualname":"<Value>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66624,"byte_end":66677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66786,"byte_end":66794,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Value>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this value empty?\n","sig":null,"attributes":[{"value":"/ Is this value empty?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66750,"byte_end":66774,"line_start":90,"line_end":90,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68493,"byte_end":68500,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"decimal","qualname":"<Value>::decimal","value":"pub fn decimal(&Self) -> Result<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","sig":null,"attributes":[{"value":"/ Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66856,"byte_end":66932,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66937,"byte_end":66940,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Decimal values are integers which follow the rules given in the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":66945,"byte_end":67012,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"/ [\"Decimal Encoding\" section of the PHC string format specification][1].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67017,"byte_end":67092,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67097,"byte_end":67100,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The decimal encoding rules are as follows:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67105,"byte_end":67151,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ > For an integer value x, its decimal encoding consist in the following:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67156,"byte_end":67232,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67237,"byte_end":67242,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ > - If x < 0, then its decimal encoding is the minus sign - followed by the decimal","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67247,"byte_end":67334,"line_start":103,"line_end":103,"column_start":5,"column_end":92}},{"value":"/ >   encoding of -x.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67339,"byte_end":67362,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ > - If x = 0, then its decimal encoding is the single character 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67367,"byte_end":67437,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ > - If x > 0, then its decimal encoding is the smallest sequence of ASCII digits that","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67442,"byte_end":67531,"line_start":106,"line_end":106,"column_start":5,"column_end":94}},{"value":"/ >   matches its value (i.e. there is no leading zero).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67536,"byte_end":67594,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67599,"byte_end":67604,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ > Thus, a value is a valid decimal for an integer x if and only if all of the following hold true:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67609,"byte_end":67711,"line_start":109,"line_end":109,"column_start":5,"column_end":107}},{"value":"/ >","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67716,"byte_end":67721,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ > - The first character is either a - sign, or an ASCII digit.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67726,"byte_end":67792,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ > - All characters other than the first are ASCII digits.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67797,"byte_end":67858,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ > - If the first character is - sign, then there is at least another character, and the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67863,"byte_end":67954,"line_start":113,"line_end":113,"column_start":5,"column_end":96}},{"value":"/ >   second character is not a 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":67959,"byte_end":67995,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/ > - If the string consists in more than one character, then the first one cannot be a 0.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68000,"byte_end":68092,"line_start":115,"line_end":115,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68097,"byte_end":68100,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note: this implementation does not support negative decimals despite","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68105,"byte_end":68177,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ them being allowed per the spec above. If you need to parse a negative","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68182,"byte_end":68256,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ number, please parse it from the string representation directly e.g.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68261,"byte_end":68333,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ `value.as_str().parse::<i32>()`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68338,"byte_end":68373,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68378,"byte_end":68381,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#decimal-encoding","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":68386,"byte_end":68481,"line_start":122,"line_end":122,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69550,"byte_end":69560,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"is_decimal","qualname":"<Value>::is_decimal","value":"pub fn is_decimal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this value parse successfully as a decimal?\n","sig":null,"attributes":[{"value":"/ Does this value parse successfully as a decimal?","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69486,"byte_end":69538,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4034,"byte_end":4046,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"PasswordHash","qualname":"::PasswordHash","value":"PasswordHash { algorithm, version, params, salt, hash }","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"decl_id":null,"docs":" Password hash.","sig":null,"attributes":[{"value":"/ Password hash.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2744,"byte_end":2762,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2763,"byte_end":2766,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This type corresponds to the parsed representation of a PHC string as","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2767,"byte_end":2840,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][1].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2841,"byte_end":2899,"line_start":94,"line_end":94,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2900,"byte_end":2903,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ PHC strings have the following format:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2904,"byte_end":2946,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2947,"byte_end":2950,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2951,"byte_end":2962,"line_start":98,"line_end":98,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2963,"byte_end":3041,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3042,"byte_end":3049,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3050,"byte_end":3053,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ where:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3054,"byte_end":3064,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3065,"byte_end":3068,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - `<id>` is the symbolic name for the function","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3069,"byte_end":3119,"line_start":104,"line_end":104,"column_start":1,"column_end":51}},{"value":"/ - `<version>` is the algorithm version","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3120,"byte_end":3162,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/ - `<param>` is a parameter name","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3163,"byte_end":3198,"line_start":106,"line_end":106,"column_start":1,"column_end":36}},{"value":"/ - `<value>` is a parameter value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3199,"byte_end":3235,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ - `<salt>` is an encoding of the salt","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3236,"byte_end":3277,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ - `<hash>` is an encoding of the hash output","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3278,"byte_end":3326,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3327,"byte_end":3330,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The string is then the concatenation, in that order, of:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3331,"byte_end":3391,"line_start":111,"line_end":111,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3392,"byte_end":3395,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ - a `$` sign;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3396,"byte_end":3413,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/ - the function symbolic name;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3414,"byte_end":3447,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/ - optionally, a `$` sign followed by the algorithm version with a `v=version` format;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3448,"byte_end":3537,"line_start":115,"line_end":115,"column_start":1,"column_end":90}},{"value":"/ - optionally, a `$` sign followed by one or several parameters, each with a `name=value` format;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3538,"byte_end":3638,"line_start":116,"line_end":116,"column_start":1,"column_end":101}},{"value":"/   the parameters are separated by commas;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3639,"byte_end":3684,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ - optionally, a `$` sign followed by the (encoded) salt value;","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3685,"byte_end":3751,"line_start":118,"line_end":118,"column_start":1,"column_end":67}},{"value":"/ - optionally, a `$` sign followed by the (encoded) hash output (the hash output may be present","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3752,"byte_end":3850,"line_start":119,"line_end":119,"column_start":1,"column_end":99}},{"value":"/   only if the salt is present).","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3851,"byte_end":3886,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3887,"byte_end":3890,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":3891,"byte_end":3983,"line_start":122,"line_end":122,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4229,"byte_end":4238,"line_start":129,"line_end":129,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::PasswordHash::algorithm","value":"ident::Ident<'a>","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Password hashing algorithm identifier.","sig":null,"attributes":[{"value":"/ Password hashing algorithm identifier.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4057,"byte_end":4099,"line_start":125,"line_end":125,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4104,"byte_end":4107,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<id>` field in a PHC string, a.k.a. the","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4112,"byte_end":4180,"line_start":127,"line_end":127,"column_start":5,"column_end":73}},{"value":"/ symbolic name for the function.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4185,"byte_end":4220,"line_start":128,"line_end":128,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4367,"byte_end":4374,"line_start":134,"line_end":134,"column_start":9,"column_end":16},"name":"version","qualname":"::PasswordHash::version","value":"core::option::Option<u32>","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Optional version field.","sig":null,"attributes":[{"value":"/ Optional version field.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4256,"byte_end":4283,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4288,"byte_end":4291,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<version>` field in a PHC string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4296,"byte_end":4358,"line_start":133,"line_end":133,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4568,"byte_end":4574,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"name":"params","qualname":"::PasswordHash::params","value":"params::ParamsString","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4398,"byte_end":4432,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4437,"byte_end":4440,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the set of `$<param>=<value>(,<param>=<value>)*`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4445,"byte_end":4517,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ name/value pairs in a PHC string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4522,"byte_end":4559,"line_start":139,"line_end":139,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4737,"byte_end":4741,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"salt","qualname":"::PasswordHash::salt","value":"core::option::Option<salt::Salt<'a>>","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" [`Salt`] string for personalizing a password hash output.","sig":null,"attributes":[{"value":"/ [`Salt`] string for personalizing a password hash output.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4595,"byte_end":4656,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4661,"byte_end":4664,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<salt>` value in a PHC string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4669,"byte_end":4728,"line_start":144,"line_end":144,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4909,"byte_end":4913,"line_start":150,"line_end":150,"column_start":9,"column_end":13},"name":"hash","qualname":"::PasswordHash::hash","value":"core::option::Option<output::Output>","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Password hashing function [`Output`], a.k.a. hash/digest.","sig":null,"attributes":[{"value":"/ Password hashing function [`Output`], a.k.a. hash/digest.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4766,"byte_end":4827,"line_start":147,"line_end":147,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4832,"byte_end":4835,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<hash>` output in a PHC string.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4840,"byte_end":4900,"line_start":149,"line_end":149,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":5043,"byte_end":5046,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"new","qualname":"<PasswordHash>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from a string in the PHC string format.\n","sig":null,"attributes":[{"value":"/ Parse a password hash from a string in the PHC string format.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4966,"byte_end":5031,"line_start":154,"line_end":154,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":5198,"byte_end":5203,"line_start":160,"line_end":160,"column_start":12,"column_end":17},"name":"parse","qualname":"<PasswordHash>::parse","value":"pub fn parse(&'a str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from the given [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Parse a password hash from the given [`Encoding`].","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":5132,"byte_end":5186,"line_start":159,"line_end":159,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7111,"byte_end":7119,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"generate","qualname":"<PasswordHash>::generate","value":"pub fn generate<impl PasswordHasher: PasswordHasher,\nimpl AsRef<[u8]>: AsRef<[u8]>>(impl PasswordHasher, impl AsRef<[u8]>, &'a str)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Generate a password hash using the supplied algorithm.\n","sig":null,"attributes":[{"value":"/ Generate a password hash using the supplied algorithm.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7041,"byte_end":7099,"line_start":229,"line_end":229,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7420,"byte_end":7435,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"verify_password","qualname":"<PasswordHash>::verify_password","value":"pub fn verify_password<impl AsRef<[u8]>: AsRef<[u8]>>(&Self,\n&[&dyn PasswordVerifier], impl AsRef<[u8]>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify this password hash using the specified set of supported\n [`PasswordHasher`] trait objects.\n","sig":null,"attributes":[{"value":"/ Verify this password hash using the specified set of supported","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7300,"byte_end":7366,"line_start":238,"line_end":238,"column_start":5,"column_end":71}},{"value":"/ [`PasswordHasher`] trait objects.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7371,"byte_end":7408,"line_start":239,"line_end":239,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7826,"byte_end":7834,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"encoding","qualname":"<PasswordHash>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`PasswordHash`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`PasswordHash`] is serialized with.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":7743,"byte_end":7814,"line_start":254,"line_end":254,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13485,"byte_end":13490,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":14873,"byte_end":14878,"line_start":85,"line_end":85,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15004,"byte_end":15009,"line_start":91,"line_end":91,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15577,"byte_end":15589,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15917,"byte_end":15929,"line_start":129,"line_end":129,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17286,"byte_end":17294,"line_start":36,"line_end":36,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17356,"byte_end":17364,"line_start":42,"line_end":42,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20233,"byte_end":20238,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22443,"byte_end":22448,"line_start":102,"line_end":102,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22536,"byte_end":22541,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22783,"byte_end":22788,"line_start":118,"line_end":118,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":23323,"byte_end":23328,"line_start":143,"line_end":143,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":23459,"byte_end":23464,"line_start":149,"line_end":149,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30820,"byte_end":30826,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34557,"byte_end":34563,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34655,"byte_end":34661,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34780,"byte_end":34786,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34911,"byte_end":34917,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":35027,"byte_end":35033,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":35167,"byte_end":35173,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":35461,"byte_end":35467,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38090,"byte_end":38102,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":41876,"byte_end":41888,"line_start":174,"line_end":174,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43035,"byte_end":43047,"line_start":215,"line_end":215,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43347,"byte_end":43359,"line_start":230,"line_end":230,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43489,"byte_end":43501,"line_start":236,"line_end":236,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43779,"byte_end":43783,"line_start":247,"line_end":247,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":44060,"byte_end":44064,"line_start":260,"line_end":260,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":44758,"byte_end":44764,"line_start":284,"line_end":284,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":44917,"byte_end":44923,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":45071,"byte_end":45077,"line_start":299,"line_end":299,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":45267,"byte_end":45273,"line_start":306,"line_end":306,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53041,"byte_end":53045,"line_start":85,"line_end":85,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54868,"byte_end":54872,"line_start":141,"line_end":141,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54971,"byte_end":54975,"line_start":147,"line_end":147,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55117,"byte_end":55121,"line_start":155,"line_end":155,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55259,"byte_end":55263,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55708,"byte_end":55718,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57817,"byte_end":57827,"line_start":242,"line_end":242,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57911,"byte_end":57921,"line_start":248,"line_end":248,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":58130,"byte_end":58134,"line_start":255,"line_end":255,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61522,"byte_end":61523,"line_start":64,"line_end":64,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65016,"byte_end":65021,"line_start":43,"line_end":43,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69642,"byte_end":69647,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69746,"byte_end":69751,"line_start":163,"line_end":163,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69899,"byte_end":69906,"line_start":171,"line_end":171,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":70065,"byte_end":70072,"line_start":179,"line_end":179,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":70215,"byte_end":70220,"line_start":187,"line_end":187,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4943,"byte_end":4955,"line_start":153,"line_end":153,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":8306,"byte_end":8318,"line_start":269,"line_end":269,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":8452,"byte_end":8464,"line_start":277,"line_end":277,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":2121,"byte_end":2127,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":13485,"byte_end":13490,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":14873,"byte_end":14878,"line_start":85,"line_end":85,"column_start":25,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15004,"byte_end":15009,"line_start":91,"line_end":91,"column_start":45,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15577,"byte_end":15589,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\errors.rs","byte_start":15917,"byte_end":15929,"line_start":129,"line_end":129,"column_start":23,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17286,"byte_end":17294,"line_start":36,"line_end":36,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\encoding.rs","byte_start":17356,"byte_end":17364,"line_start":42,"line_end":42,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":20233,"byte_end":20238,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22443,"byte_end":22448,"line_start":102,"line_end":102,"column_start":25,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22536,"byte_end":22541,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":22783,"byte_end":22788,"line_start":118,"line_end":118,"column_start":31,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":23323,"byte_end":23328,"line_start":143,"line_end":143,"column_start":27,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\ident.rs","byte_start":23459,"byte_end":23464,"line_start":149,"line_end":149,"column_start":25,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":30820,"byte_end":30826,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34557,"byte_end":34563,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":692},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34655,"byte_end":34661,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":692},"to":{"krate":20,"index":58}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34780,"byte_end":34786,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":692},"to":{"krate":1,"index":12324}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":34911,"byte_end":34917,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":692},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":35027,"byte_end":35033,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":692},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":35167,"byte_end":35173,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":692},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\output.rs","byte_start":35461,"byte_end":35467,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":692},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":38090,"byte_end":38102,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":41876,"byte_end":41888,"line_start":174,"line_end":174,"column_start":18,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":705},"to":{"krate":1,"index":12324}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43035,"byte_end":43047,"line_start":215,"line_end":215,"column_start":37,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":705},"to":{"krate":1,"index":7786}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43347,"byte_end":43359,"line_start":230,"line_end":230,"column_start":23,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":705},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43489,"byte_end":43501,"line_start":236,"line_end":236,"column_start":21,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":705},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":43779,"byte_end":43783,"line_start":247,"line_end":247,"column_start":10,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":44060,"byte_end":44064,"line_start":260,"line_end":260,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":44758,"byte_end":44764,"line_start":284,"line_end":284,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":44917,"byte_end":44923,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":45071,"byte_end":45077,"line_start":299,"line_end":299,"column_start":20,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\params.rs","byte_start":45267,"byte_end":45273,"line_start":306,"line_end":306,"column_start":16,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":9635}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":53041,"byte_end":53045,"line_start":85,"line_end":85,"column_start":10,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54868,"byte_end":54872,"line_start":141,"line_end":141,"column_start":25,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":54971,"byte_end":54975,"line_start":147,"line_end":147,"column_start":31,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55117,"byte_end":55121,"line_start":155,"line_end":155,"column_start":27,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55259,"byte_end":55263,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":55708,"byte_end":55718,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57817,"byte_end":57827,"line_start":242,"line_end":242,"column_start":21,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":57911,"byte_end":57921,"line_start":248,"line_end":248,"column_start":20,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":751},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\salt.rs","byte_start":58130,"byte_end":58134,"line_start":255,"line_end":255,"column_start":35,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\traits.rs","byte_start":61522,"byte_end":61523,"line_start":64,"line_end":64,"column_start":46,"column_end":47},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":427},"to":{"krate":0,"index":424}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":65016,"byte_end":65021,"line_start":43,"line_end":43,"column_start":10,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69642,"byte_end":69647,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":763},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69746,"byte_end":69751,"line_start":163,"line_end":163,"column_start":31,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":763},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":69899,"byte_end":69906,"line_start":171,"line_end":171,"column_start":33,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":457},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":70065,"byte_end":70072,"line_start":179,"line_end":179,"column_start":34,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":457},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\value.rs","byte_start":70215,"byte_end":70220,"line_start":187,"line_end":187,"column_start":27,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":763},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":4943,"byte_end":4955,"line_start":153,"line_end":153,"column_start":10,"column_end":22},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":8306,"byte_end":8318,"line_start":269,"line_end":269,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":796},"to":{"krate":1,"index":2970}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\password-hash-0.3.2\\src\\lib.rs","byte_start":8452,"byte_end":8464,"line_start":277,"line_end":277,"column_start":27,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":796},"to":{"krate":1,"index":9692}}]}