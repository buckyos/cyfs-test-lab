{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9","program":"C:\\Users\\bucky\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","fallible_streaming_iterator","C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6a8d6e62c6c7e8b0","-C","extra-filename=-6a8d6e62c6c7e8b0","--out-dir","e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","-L","dependency=e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\bucky\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\git_test\\cyfs-test-lab\\src\\cyfs-stack-test-rust\\unittest_NON_nameobject\\target\\rls\\debug\\deps\\libfallible_streaming_iterator-6a8d6e62c6c7e8b0.rmeta"},"prelude":{"crate_id":{"name":"fallible_streaming_iterator","disambiguator":[4314539045709424627,0]},"crate_root":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src","external_crates":[{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":0,"byte_end":21145,"line_start":1,"line_end":899,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":0,"byte_end":21145,"line_start":1,"line_end":899,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":62},{"krate":0,"index":67},{"krate":0,"index":73},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":97},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":114},{"krate":0,"index":249},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":134},{"krate":0,"index":141},{"krate":0,"index":150},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":207},{"krate":0,"index":213},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":235},{"krate":0,"index":241}],"decl_id":null,"docs":" Fallible, streaming iteration.","sig":null,"attributes":[{"value":"/ Fallible, streaming iteration.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `FallibleStreamingIterator` differs from the standard library's `Iterator` trait in two ways:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":39,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ iteration can fail, resulting in an error, and only one element of the iteration is available at","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":137,"byte_end":237,"line_start":4,"line_end":4,"column_start":1,"column_end":101}},{"value":"/ any time.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":238,"byte_end":251,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":252,"byte_end":255,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ While these iterators cannot be used with Rust `for` loops, `while let` loops offer a similar","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":256,"byte_end":353,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ level of ergonomics:","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":354,"byte_end":378,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":379,"byte_end":382,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":383,"byte_end":396,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ while let Some(value) = it.next()? {","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":397,"byte_end":437,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/     // use value","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":438,"byte_end":458,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":459,"byte_end":464,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":465,"byte_end":472,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":548,"byte_end":570,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":605,"byte_end":611,"line_start":17,"line_end":17,"column_start":35,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":752,"byte_end":777,"line_start":26,"line_end":26,"column_start":11,"column_end":36},"name":"FallibleStreamingIterator","qualname":"::FallibleStreamingIterator","value":"FallibleStreamingIterator","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" A fallible, streaming iterator.\n","sig":null,"attributes":[{"value":"/ A fallible, streaming iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":706,"byte_end":741,"line_start":25,"line_end":25,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":827,"byte_end":831,"line_start":28,"line_end":28,"column_start":10,"column_end":14},"name":"Item","qualname":"::FallibleStreamingIterator::Item","value":"type Item: ?Sized;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The type being iterated over.\n","sig":null,"attributes":[{"value":"/ The type being iterated over.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":784,"byte_end":817,"line_start":27,"line_end":27,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":888,"byte_end":893,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Error","qualname":"::FallibleStreamingIterator::Error","value":"type Error;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The error type of iteration.\n","sig":null,"attributes":[{"value":"/ The error type of iteration.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":846,"byte_end":878,"line_start":30,"line_end":30,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1236,"byte_end":1243,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"advance","qualname":"::FallibleStreamingIterator::advance","value":"pub fn advance(&mut Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Advances the iterator to the next position.","sig":null,"attributes":[{"value":"/ Advances the iterator to the next position.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":900,"byte_end":947,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":952,"byte_end":955,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Iterators start just before the first item, so this method should be called before `get`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":960,"byte_end":1052,"line_start":35,"line_end":35,"column_start":5,"column_end":97}},{"value":"/ when iterating.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1057,"byte_end":1076,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1081,"byte_end":1084,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The behavior of calling this method after `get` has returned `None`, or after this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1089,"byte_end":1182,"line_start":38,"line_end":38,"column_start":5,"column_end":98}},{"value":"/ has returned an error is unspecified.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1187,"byte_end":1228,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1426,"byte_end":1429,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"get","qualname":"::FallibleStreamingIterator::get","value":"pub fn get(&Self) -> Option<&Self::Item>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns the current element.","sig":null,"attributes":[{"value":"/ Returns the current element.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1288,"byte_end":1320,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1325,"byte_end":1328,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The behavior of calling this method before any calls to `advance` is unspecified.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1333,"byte_end":1418,"line_start":44,"line_end":44,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1627,"byte_end":1631,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"next","qualname":"::FallibleStreamingIterator::next","value":"pub fn next(&mut Self) -> Result<Option<&Self::Item>, Self::Error>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Advances the iterator, returning the next element.","sig":null,"attributes":[{"value":"/ Advances the iterator, returning the next element.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1466,"byte_end":1520,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1525,"byte_end":1528,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The default implementation simply calls `advance` followed by `get`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1533,"byte_end":1605,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1610,"byte_end":1619,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1844,"byte_end":1853,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::FallibleStreamingIterator::size_hint","value":"pub fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns bounds on the number of remaining elements in the iterator.\n","sig":null,"attributes":[{"value":"/ Returns bounds on the number of remaining elements in the iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1751,"byte_end":1822,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1827,"byte_end":1836,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2007,"byte_end":2010,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"all","qualname":"::FallibleStreamingIterator::all","value":"pub fn all<F>(&mut Self, F) -> Result<bool, Self::Error> where Self: Sized,\nF: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Determines if all elements of the iterator satisfy a predicate.\n","sig":null,"attributes":[{"value":"/ Determines if all elements of the iterator satisfy a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1918,"byte_end":1985,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":1990,"byte_end":1999,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2381,"byte_end":2384,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"any","qualname":"::FallibleStreamingIterator::any","value":"pub fn any<F>(&mut Self, F) -> Result<bool, Self::Error> where Self: Sized,\nF: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Determines if any elements of the iterator satisfy a predicate.\n","sig":null,"attributes":[{"value":"/ Determines if any elements of the iterator satisfy a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2292,"byte_end":2359,"line_start":77,"line_end":77,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2364,"byte_end":2373,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2779,"byte_end":2785,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::FallibleStreamingIterator::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Borrows an iterator, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows an iterator, rather than consuming it.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2565,"byte_end":2615,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2620,"byte_end":2623,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow the application of iterator adaptors while still retaining ownership","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2628,"byte_end":2724,"line_start":89,"line_end":89,"column_start":5,"column_end":101}},{"value":"/ of the original adaptor.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2729,"byte_end":2757,"line_start":90,"line_end":90,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2762,"byte_end":2771,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2954,"byte_end":2959,"line_start":101,"line_end":101,"column_start":8,"column_end":13},"name":"count","qualname":"::FallibleStreamingIterator::count","value":"pub fn count(Self) -> Result<usize, Self::Error> where Self: Sized","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns the number of remaining elements in the iterator.\n","sig":null,"attributes":[{"value":"/ Returns the number of remaining elements in the iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2871,"byte_end":2932,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":2937,"byte_end":2946,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3254,"byte_end":3260,"line_start":114,"line_end":114,"column_start":8,"column_end":14},"name":"filter","qualname":"::FallibleStreamingIterator::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which filters elements by a predicate.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which filters elements by a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3170,"byte_end":3232,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3237,"byte_end":3246,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3512,"byte_end":3516,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"find","qualname":"::FallibleStreamingIterator::find","value":"pub fn find<F>(&mut Self, F) -> Result<Option<&Self::Item>, Self::Error> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns the first element of the iterator which satisfies a predicate.\n","sig":null,"attributes":[{"value":"/ Returns the first element of the iterator which satisfies a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3416,"byte_end":3490,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3495,"byte_end":3504,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4031,"byte_end":4039,"line_start":145,"line_end":145,"column_start":8,"column_end":16},"name":"for_each","qualname":"::FallibleStreamingIterator::for_each","value":"pub fn for_each<F>(Self, F) -> Result<(), Self::Error> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Calls a closure on each element of an iterator.\n","sig":null,"attributes":[{"value":"/ Calls a closure on each element of an iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":3958,"byte_end":4009,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4014,"byte_end":4023,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4369,"byte_end":4373,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"fuse","qualname":"::FallibleStreamingIterator::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which is well-behaved at the beginning and end of iteration.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which is well-behaved at the beginning and end of iteration.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4263,"byte_end":4347,"line_start":156,"line_end":156,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4352,"byte_end":4361,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4610,"byte_end":4613,"line_start":170,"line_end":170,"column_start":8,"column_end":11},"name":"map","qualname":"::FallibleStreamingIterator::map","value":"pub fn map<F, B>(Self, F) -> Map<Self, F, B> where Self: Sized,\nF: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which applies a transform to elements.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which applies a transform to elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4526,"byte_end":4588,"line_start":168,"line_end":168,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4593,"byte_end":4602,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5031,"byte_end":5038,"line_start":187,"line_end":187,"column_start":8,"column_end":15},"name":"map_ref","qualname":"::FallibleStreamingIterator::map_ref","value":"pub fn map_ref<F, B: ?Sized>(Self, F) -> MapRef<Self, F> where Self: Sized,\nF: Fn(&Self::Item) -> &B","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which applies a transform to elements.","sig":null,"attributes":[{"value":"/ Returns an iterator which applies a transform to elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4824,"byte_end":4886,"line_start":182,"line_end":182,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4891,"byte_end":4894,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Unlike `map`, the the closure provided to this method returns a reference into the original","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4899,"byte_end":4994,"line_start":184,"line_end":184,"column_start":5,"column_end":100}},{"value":"/ value.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":4999,"byte_end":5009,"line_start":185,"line_end":185,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5014,"byte_end":5023,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5281,"byte_end":5288,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"map_err","qualname":"::FallibleStreamingIterator::map_err","value":"pub fn map_err<F, B>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: Fn(Self::Error) -> B","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator that applies a transform to errors.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that applies a transform to errors.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5200,"byte_end":5259,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5264,"byte_end":5273,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5509,"byte_end":5512,"line_start":207,"line_end":207,"column_start":8,"column_end":11},"name":"nth","qualname":"::FallibleStreamingIterator::nth","value":"pub fn nth(&mut Self, usize) -> Result<Option<&Self::Item>, Self::Error>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns the `nth` element of the iterator.\n","sig":null,"attributes":[{"value":"/ Returns the `nth` element of the iterator.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5441,"byte_end":5487,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5492,"byte_end":5501,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5849,"byte_end":5857,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"position","qualname":"::FallibleStreamingIterator::position","value":"pub fn position<F>(&mut Self, F) -> Result<Option<usize>, Self::Error> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns the position of the first element matching a predicate.\n","sig":null,"attributes":[{"value":"/ Returns the position of the first element matching a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5760,"byte_end":5827,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":5832,"byte_end":5841,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6279,"byte_end":6283,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"skip","qualname":"::FallibleStreamingIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which skips the first `n` elements.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which skips the first `n` elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6198,"byte_end":6257,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6262,"byte_end":6271,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6504,"byte_end":6514,"line_start":245,"line_end":245,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::FallibleStreamingIterator::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which skips the first sequence of elements matching a predicate.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which skips the first sequence of elements matching a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6394,"byte_end":6482,"line_start":243,"line_end":243,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6487,"byte_end":6496,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6822,"byte_end":6826,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"take","qualname":"::FallibleStreamingIterator::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which only returns the first `n` elements.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which only returns the first `n` elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6734,"byte_end":6800,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6805,"byte_end":6814,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7112,"byte_end":7122,"line_start":272,"line_end":272,"column_start":8,"column_end":18},"name":"take_while","qualname":"::FallibleStreamingIterator::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Returns an iterator which only returns the first sequence of elements matching a predicate.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which only returns the first sequence of elements matching a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":6995,"byte_end":7090,"line_start":270,"line_end":270,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7095,"byte_end":7104,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7424,"byte_end":7460,"line_start":286,"line_end":286,"column_start":11,"column_end":47},"name":"DoubleEndedFallibleStreamingIterator","qualname":"::DoubleEndedFallibleStreamingIterator","value":"DoubleEndedFallibleStreamingIterator: FallibleStreamingIterator","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" A fallible, streaming iterator which can be advanced from either end.\n","sig":null,"attributes":[{"value":"/ A fallible, streaming iterator which can be advanced from either end.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7340,"byte_end":7413,"line_start":285,"line_end":285,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7863,"byte_end":7875,"line_start":294,"line_end":294,"column_start":8,"column_end":20},"name":"advance_back","qualname":"::DoubleEndedFallibleStreamingIterator::advance_back","value":"pub fn advance_back(&mut Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Advances the state of the iterator to the next item from the end.","sig":null,"attributes":[{"value":"/ Advances the state of the iterator to the next item from the end.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7494,"byte_end":7563,"line_start":287,"line_end":287,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7568,"byte_end":7571,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Iterators start just after the last item, so this method should be called before `get`","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7576,"byte_end":7666,"line_start":289,"line_end":289,"column_start":5,"column_end":95}},{"value":"/ when iterating.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7671,"byte_end":7690,"line_start":290,"line_end":290,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7695,"byte_end":7698,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The behavior of calling this method after `get` has returned `None`, or after this method","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7703,"byte_end":7796,"line_start":292,"line_end":292,"column_start":5,"column_end":98}},{"value":"/ or `advance` has returned an error is unspecified.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7801,"byte_end":7855,"line_start":293,"line_end":293,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":8098,"byte_end":8107,"line_start":300,"line_end":300,"column_start":8,"column_end":17},"name":"next_back","qualname":"::DoubleEndedFallibleStreamingIterator::next_back","value":"pub fn next_back(&mut Self) -> Result<Option<&Self::Item>, Self::Error>","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Advances the back of the iterator, returning the last element.","sig":null,"attributes":[{"value":"/ Advances the back of the iterator, returning the last element.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7920,"byte_end":7986,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7991,"byte_end":7994,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The default implementation simply calls `advance_back` followed by `get`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7999,"byte_end":8076,"line_start":298,"line_end":298,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":8081,"byte_end":8090,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9458,"byte_end":9465,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"pub fn convert<'a, I, T, E>(I) -> Convert where I: Iterator<Item =\nResult<&'a T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Converts a normal `Iterator` over `Results` of references into a\n `FallibleStreamingIterator`.\n","sig":null,"attributes":[{"value":"/ Converts a normal `Iterator` over `Results` of references into a","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9349,"byte_end":9417,"line_start":363,"line_end":363,"column_start":1,"column_end":69}},{"value":"/ `FallibleStreamingIterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9418,"byte_end":9450,"line_start":364,"line_end":364,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9655,"byte_end":9662,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"Convert","qualname":"::Convert","value":"Convert {  }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" An iterator which wraps a normal `Iterator`.\n","sig":null,"attributes":[{"value":"/ An iterator which wraps a normal `Iterator`.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9595,"byte_end":9643,"line_start":372,"line_end":372,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10726,"byte_end":10731,"line_start":422,"line_end":422,"column_start":8,"column_end":13},"name":"empty","qualname":"::empty","value":"pub fn empty<T, E>() -> Empty<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over no items.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over no items.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10680,"byte_end":10718,"line_start":421,"line_end":421,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10825,"byte_end":10830,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"Empty","qualname":"::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over no items.\n","sig":null,"attributes":[{"value":"/ An iterator over no items.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10783,"byte_end":10813,"line_start":426,"line_end":426,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":11422,"byte_end":11428,"line_start":457,"line_end":457,"column_start":12,"column_end":18},"name":"Filter","qualname":"::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" An iterator which filters elements with a predicate.\n","sig":null,"attributes":[{"value":"/ An iterator which filters elements with a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":11354,"byte_end":11410,"line_start":456,"line_end":456,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":12208,"byte_end":12212,"line_start":499,"line_end":499,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" An iterator which is well-behaved at the beginning and end of iteration.\n","sig":null,"attributes":[{"value":"/ An iterator which is well-behaved at the beginning and end of iteration.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":12120,"byte_end":12196,"line_start":498,"line_end":498,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":14572,"byte_end":14575,"line_start":584,"line_end":584,"column_start":12,"column_end":15},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" An iterator which applies a transform to elements.\n","sig":null,"attributes":[{"value":"/ An iterator which applies a transform to elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":14506,"byte_end":14560,"line_start":583,"line_end":583,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":15508,"byte_end":15514,"line_start":628,"line_end":628,"column_start":12,"column_end":18},"name":"MapRef","qualname":"::MapRef","value":"MapRef {  }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" An iterator which applies a transform to elements.\n","sig":null,"attributes":[{"value":"/ An iterator which applies a transform to elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":15442,"byte_end":15496,"line_start":627,"line_end":627,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":16351,"byte_end":16357,"line_start":669,"line_end":669,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":" An iterator which applies a transform to errors.\n","sig":null,"attributes":[{"value":"/ An iterator which applies a transform to errors.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":16287,"byte_end":16339,"line_start":668,"line_end":668,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":17453,"byte_end":17457,"line_start":720,"line_end":720,"column_start":12,"column_end":16},"name":"Skip","qualname":"::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" An iterator which skips a number of initial elements.\n","sig":null,"attributes":[{"value":"/ An iterator which skips a number of initial elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":17384,"byte_end":17441,"line_start":719,"line_end":719,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":18269,"byte_end":18278,"line_start":759,"line_end":759,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" An iterator which skips initial elements matching a predicate.\n","sig":null,"attributes":[{"value":"/ An iterator which skips initial elements matching a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":18191,"byte_end":18257,"line_start":758,"line_end":758,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":19141,"byte_end":19145,"line_start":801,"line_end":801,"column_start":12,"column_end":16},"name":"Take","qualname":"::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" An iterator which only returns a number of initial elements.\n","sig":null,"attributes":[{"value":"/ An iterator which only returns a number of initial elements.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":19065,"byte_end":19129,"line_start":800,"line_end":800,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":20119,"byte_end":20128,"line_start":850,"line_end":850,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"decl_id":null,"docs":" An iterator which only returns initial elements matching a predicate.\n","sig":null,"attributes":[{"value":"/ An iterator which only returns initial elements matching a predicate.","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":20034,"byte_end":20107,"line_start":849,"line_end":849,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9766,"byte_end":9773,"line_start":378,"line_end":378,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10349,"byte_end":10356,"line_start":406,"line_end":406,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10901,"byte_end":10906,"line_start":429,"line_end":429,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":11252,"byte_end":11257,"line_start":449,"line_end":449,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":11502,"byte_end":11508,"line_start":462,"line_end":462,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":12292,"byte_end":12296,"line_start":504,"line_end":504,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":14677,"byte_end":14680,"line_start":590,"line_end":590,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":15192,"byte_end":15195,"line_start":615,"line_end":615,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":15599,"byte_end":15605,"line_start":633,"line_end":633,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":16083,"byte_end":16089,"line_start":657,"line_end":657,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":16434,"byte_end":16440,"line_start":674,"line_end":674,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":17036,"byte_end":17042,"line_start":703,"line_end":703,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":17529,"byte_end":17533,"line_start":725,"line_end":725,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":18368,"byte_end":18377,"line_start":765,"line_end":765,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":19233,"byte_end":19237,"line_start":807,"line_end":807,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":20218,"byte_end":20227,"line_start":856,"line_end":856,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":7462,"byte_end":7487,"line_start":286,"line_end":286,"column_start":49,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":10},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":9766,"byte_end":9773,"line_start":378,"line_end":378,"column_start":49,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10349,"byte_end":10356,"line_start":406,"line_end":406,"column_start":60,"column_end":67},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":10901,"byte_end":10906,"line_start":429,"line_end":429,"column_start":42,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":11252,"byte_end":11257,"line_start":449,"line_end":449,"column_start":53,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":11502,"byte_end":11508,"line_start":462,"line_end":462,"column_start":42,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":12292,"byte_end":12296,"line_start":504,"line_end":504,"column_start":39,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":122},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":14677,"byte_end":14680,"line_start":590,"line_end":590,"column_start":45,"column_end":48},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":134},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":15192,"byte_end":15195,"line_start":615,"line_end":615,"column_start":56,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":134},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":15599,"byte_end":15605,"line_start":633,"line_end":633,"column_start":53,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":155},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":16083,"byte_end":16089,"line_start":657,"line_end":657,"column_start":64,"column_end":70},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":155},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":16434,"byte_end":16440,"line_start":674,"line_end":674,"column_start":45,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":174},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":17036,"byte_end":17042,"line_start":703,"line_end":703,"column_start":56,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":174},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":17529,"byte_end":17533,"line_start":725,"line_end":725,"column_start":39,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":18368,"byte_end":18377,"line_start":765,"line_end":765,"column_start":42,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":207},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":19233,"byte_end":19237,"line_start":807,"line_end":807,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":223},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\bucky\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fallible-streaming-iterator-0.1.9\\src\\lib.rs","byte_start":20218,"byte_end":20227,"line_start":856,"line_end":856,"column_start":42,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":235},"to":{"krate":0,"index":10}}]}